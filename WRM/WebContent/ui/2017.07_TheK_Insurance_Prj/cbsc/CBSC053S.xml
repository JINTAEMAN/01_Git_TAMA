<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<!-- 
	       ###################################################
	        파일명 : BM001M03.xml
	        프로그램명 : 메뉴 관리
	        설 명 :  메뉴를 관리하는 화면
	        작성자 : Inswave Systems
	        작성일 : 2016.10.25
	
	        수정일자            수정자                  수정내용
	       ==================================================
	       2016.10.25       Inswave Systems       최초작성
	       ###################################################
	    -->
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
            <w2:dataCollection>
                <w2:dataList baseNode="list" id="Ds_LTIFA03__" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCrNo" name="sCrNo"/>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"/>
                        <w2:column dataType="text" id="sAcctFlag" name="sAcctFlag"/>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"/>
                        <w2:column dataType="text" id="sPayrNo" name="sPayrNo"/>
                        <w2:column dataType="text" id="sTrnfAsmtDate" name="sTrnfAsmtDate"/>
                        <w2:column dataType="text" id="sBankCd" name="sBankCd"/>
                        <w2:column dataType="text" id="sAcctNo" name="sAcctNo"/>
                        <w2:column dataType="text" id="sCardValdYearMnth" name="sCardValdYearMnth"/>
                        <w2:column dataType="text" id="sDpsrName" name="sDpsrName"/>
                        <w2:column dataType="text" id="sDpsrCd" name="sDpsrCd"/>
                        <w2:column dataType="text" id="sCrtorRelnFlag" name="sCrtorRelnFlag"/>
                        <w2:column dataType="text" id="sOpnApplDate" name="sOpnApplDate"/>
                        <w2:column dataType="text" id="sRecpDate" name="sRecpDate"/>
                        <w2:column dataType="text" id="sAcctRgstStatCd" name="sAcctRgstStatCd"/>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"/>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"/>
                        <w2:column dataType="text" id="sInptDate" name="sInptDate"/>
                        <w2:column dataType="text" id="sInptHms" name="sInptHms"/>
                        <w2:column dataType="text" id="sMdfcDler" name="sMdfcDler"/>
                        <w2:column dataType="text" id="sMdfcDlerIP" name="sMdfcDlerIP"/>
                        <w2:column dataType="text" id="sMdfcDate" name="sMdfcDate"/>
                        <w2:column dataType="text" id="sMdfcHms" name="sMdfcHms"/>
                        <w2:column dataType="text" id="sRecvCrtorRelFlag" name="sRecvCrtorRelFlag"/>
                        <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"/>
                        <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"/>
                        <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"/>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CardTrnfDate" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCd" name="sCd"/>
                        <w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"/>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <sCd/>
                            <sHnglCdName><![CDATA[-선택-]]></sHnglCdName>
                        </w2:row>
                        <w2:row>
                            <sCd><![CDATA[13]]></sCd>
                            <sHnglCdName><![CDATA[13일]]></sHnglCdName>
                        </w2:row>
                        <w2:row>
                            <sCd><![CDATA[23]]></sCd>
                            <sHnglCdName><![CDATA[23일]]></sHnglCdName>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CrtorRelnList" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCrtorRelnFlag" name="sCrtorRelnFlag"/>
                        <w2:column dataType="text" id="sPartyCd" name="sPartyCd"/>
                        <w2:column dataType="text" id="sPartyName" name="sPartyName"/>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CrtorDpsrReln" repeatNode="map"/>
                <w2:dataList baseNode="list" id="Ds_LTIFA03" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCrNo" name="sCrNo"/>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"/>
                        <w2:column dataType="text" id="sAcctFlag" name="sAcctFlag"/>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"/>
                        <w2:column dataType="text" id="sAcctKind" name="sAcctKind"/>
                        <w2:column dataType="text" id="sPayrNo" name="sPayrNo"/>
                        <w2:column dataType="text" id="sTrnfAsmtDate" name="sTrnfAsmtDate"/>
                        <w2:column dataType="text" id="sBankCd" name="sBankCd"/>
                        <w2:column dataType="text" id="sAcctNo" name="sAcctNo"/>
                        <w2:column dataType="text" id="sCardValdYearMnth" name="sCardValdYearMnth"/>
                        <w2:column dataType="text" id="sDpsrName" name="sDpsrName"/>
                        <w2:column dataType="text" id="sDpsrCd" name="sDpsrCd"/>
                        <w2:column dataType="text" id="sCrtorRelnFlag" name="sCrtorRelnFlag"/>
                        <w2:column dataType="text" id="sOpnApplDate" name="sOpnApplDate"/>
                        <w2:column dataType="text" id="sRecpDate" name="sRecpDate"/>
                        <w2:column dataType="text" id="sAcctRgstStatCd" name="sAcctRgstStatCd"/>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"/>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"/>
                        <w2:column dataType="text" id="sInptDate" name="sInptDate"/>
                        <w2:column dataType="text" id="sInptHms" name="sInptHms"/>
                        <w2:column dataType="text" id="sMdfcDler" name="sMdfcDler"/>
                        <w2:column dataType="text" id="sMdfcDlerIP" name="sMdfcDlerIP"/>
                        <w2:column dataType="text" id="sMdfcDate" name="sMdfcDate"/>
                        <w2:column dataType="text" id="sMdfcHms" name="sMdfcHms"/>
                        <w2:column dataType="text" id="sCmMetd" name="sCmMetd"/>
                        <w2:column dataType="text" id="sCardValdYear" name="sCardValdYear"/>
                        <w2:column dataType="text" id="sCardValdMnth" name="sCardValdMnth"/>
                        <w2:column dataType="text" id="sRecvCrtorRelCd" name="sRecvCrtorRelCd"/>
                        <w2:column dataType="text" id="sRecvCrtorTelNo" name="sRecvCrtorTelNo"/>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Args" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPrcCat" name="sPrcCat"/>
                        <w2:column dataType="text" id="sApplCat" name="sApplCat"/>
                        <w2:column dataType="text" id="sCrNo" name="sCrNo"/>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"/>
                        <w2:column dataType="text" id="sAcctFlag" name="sAcctFlag"/>
                        <w2:column dataType="number" id="nCrChngNo" name="nCrChngNo"/>
                        <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"/>
                        <w2:column dataType="text" id="sCrtorName" name="sCrtorName"/>
                        <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"/>
                        <w2:column dataType="text" id="sInrpsName" name="sInrpsName"/>
                        <w2:column dataType="text" id="sUserID" name="sUserID"/>
                        <w2:column dataType="text" id="sUserIP" name="sUserIP"/>
                        <w2:column dataType="text" id="sInptDate" name="sInptDate"/>
                        <w2:column dataType="text" id="sInptHms" name="sInptHms"/>
                        <w2:column dataType="text" id="sCmMetdBefo" name="sCmMetdBefo"/>
                        <w2:column dataType="text" id="nInspCnt" name="nInspCnt"/>
                        <w2:column dataType="text" id="sDpsrCd" name="sDpsrCd"/>
                        <w2:column dataType="text" id="sDpsrName" name="sDpsrName"/>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <nCrChngNo/>
                            <nInspCnt/>
                            <sAcctFlag/>
                            <sApplCat/>
                            <sCmMetdBefo/>
                            <sCrNo/>
                            <sCrtorCd/>
                            <sCrtorName/>
                            <sDpsrCd/>
                            <sDpsrName/>
                            <sInptDate/>
                            <sInptHms/>
                            <sInrpsCd/>
                            <sInrpsName/>
                            <sPlanNo/>
                            <sPrcCat/>
                            <sUserID/>
                            <sUserIP/>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Month" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="CODE" name="CODE"/>
                        <w2:column dataType="text" id="TEXT" name="TEXT"/>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <CODE/>
                            <TEXT><![CDATA[==]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[01]]></CODE>
                            <TEXT><![CDATA[01]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[02]]></CODE>
                            <TEXT><![CDATA[02]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[03]]></CODE>
                            <TEXT><![CDATA[03]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[04]]></CODE>
                            <TEXT><![CDATA[04]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[05]]></CODE>
                            <TEXT><![CDATA[05]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[06]]></CODE>
                            <TEXT><![CDATA[06]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[07]]></CODE>
                            <TEXT><![CDATA[07]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[08]]></CODE>
                            <TEXT><![CDATA[08]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[09]]></CODE>
                            <TEXT><![CDATA[09]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[10]]></CODE>
                            <TEXT><![CDATA[10]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[11]]></CODE>
                            <TEXT><![CDATA[11]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[12]]></CODE>
                            <TEXT><![CDATA[12]]></TEXT>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Year" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="CODE" name="CODE"/>
                        <w2:column dataType="text" id="TEXT" name="TEXT"/>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <CODE/>
                            <TEXT><![CDATA[====]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2011]]></CODE>
                            <TEXT><![CDATA[2011]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2012]]></CODE>
                            <TEXT><![CDATA[2012]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2013]]></CODE>
                            <TEXT><![CDATA[2013]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2014]]></CODE>
                            <TEXT><![CDATA[2014]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2015]]></CODE>
                            <TEXT><![CDATA[2015]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2016]]></CODE>
                            <TEXT><![CDATA[2016]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2017]]></CODE>
                            <TEXT><![CDATA[2017]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2018]]></CODE>
                            <TEXT><![CDATA[2018]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2019]]></CODE>
                            <TEXT><![CDATA[2019]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2020]]></CODE>
                            <TEXT><![CDATA[2020]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2021]]></CODE>
                            <TEXT><![CDATA[2021]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2022]]></CODE>
                            <TEXT><![CDATA[2022]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2023]]></CODE>
                            <TEXT><![CDATA[2023]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2024]]></CODE>
                            <TEXT><![CDATA[2024]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2025]]></CODE>
                            <TEXT><![CDATA[2025]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2026]]></CODE>
                            <TEXT><![CDATA[2026]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2027]]></CODE>
                            <TEXT><![CDATA[2027]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2028]]></CODE>
                            <TEXT><![CDATA[2028]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2029]]></CODE>
                            <TEXT><![CDATA[2029]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[2030]]></CODE>
                            <TEXT><![CDATA[2030]]></TEXT>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CrtRel" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="CODE" name="CODE"/>
                        <w2:column dataType="text" id="TEXT" name="TEXT"/>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <CODE/>
                            <TEXT><![CDATA[- 선 택 -]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[10]]></CODE>
                            <TEXT><![CDATA[부모]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[20]]></CODE>
                            <TEXT><![CDATA[배우자]]></TEXT>
                        </w2:row>
                        <w2:row>
                            <CODE><![CDATA[30]]></CODE>
                            <TEXT><![CDATA[자녀]]></TEXT>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_CrtorDpsrReln" repeatNode="map"/>
                <w2:dataList baseNode="list" id="DsWs_CrcoCd" repeatNode="map"/>
                <w2:dataList baseNode="list" id="warning" repeatNode="map" userData2="//*/WARNING"/>
                <w2:dataList baseNode="list" id="warning0" repeatNode="map" userData2="//*/WARNING"/>
                <w2:dataList baseNode="list" id="DsWs_CardBinCode" repeatNode="map" userData2="//*/ACCAB10"/>
                <w2:dataList baseNode="list" id="DsWs_CrntAcct" repeatNode="map" userData2="//*/LTIEA00"/>
                <w2:dataList baseNode="list" id="DsWs_requestCardCert" repeatNode="map" userData2="//*/ACCAB02"/>
                <w2:dataList baseNode="list" id="DsWs_sApplDate" repeatNode="map" userData2="//*/DATE"/>
                <w2:dataList baseNode="list" id="DsWs_ACCAB02" repeatNode="map" userData2="//*/ACCAB02"/>
                <w2:dataList baseNode="list" id="Ds_CrntAcct" repeatNode="map" userData2="//*/LTIEA00"/>
                <w2:dataList baseNode="list" id="DsWs_RecvCrtorRel" repeatNode="map"/>
                <w2:dataList baseNode="list" id="DsWs_CardRecvYn" repeatNode="map" userData2="//*/LTIFA01"/>
            </w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>
			
		</xf:model>
 <script src="/cm/js/convertJs/Global_Script.js"/>
 <script src="/cm/js/convertJs/Cust_Script.js"/>
 <script src="/cm/js/convertJs/comm_Webservice.js"/>
 <script src="/cm/js/convertJs/LongTerm_Script.js"/>
 <script src="/cm/js/convertJs/GrdPassword_Script.js"/>
		<script type="javascript"><![CDATA[
/****************************************************************************
 * 프로그램번호   : CBSC053S
 * 프로그램명      : 변경카드정보
 * 파일명            : F170_Div1.xml
 * 프로그램 내용  : 신용카드정보 등록/변경
 * 관련 프로그램  : 
 * 작성자            : 구종식
 * 작성일            : 2010-10-15
 * 저작권            : Copyright ⓒ 2004. the K 손해보험㈜. All Right Reserved.
 * 변경내역         : 
 ****************************************************************************/

var crntYMD;//현재일
var crntTime;//현재시간
var sDefValue = "";//콤보 기본값
var isDpsrCnfm = 0;//카드정보확인 : -1(불일치) 0(확인전) 1(일치)
var sAgncYn = "N";

//---------------------------------------------------------------------------
// function 명 : F150_Div1_OnLoadCompleted
// 내용        : OnLoadCompleted  발생시
//---------------------------------------------------------------------------
scwin.init = function() {
    //현재일
    scwin.lfn_crntDate();

    //허용값 조회(계약자와관계) 
    scwin.lfn_getCommonCodes();

    //대리점인지 여부(30:대리점,33:사용인,35:TM사용인)
    if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
        //sAgncYn = "Y";
        btn_IvrInput.setDisabled(true);
        btn_IvrInput2.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
    }
    if (sAgncYn == "Y") {
        var obj_list = ["msk_sAcctNo","msk_sDpsrCd"]; //maskEdit 오브젝트 리스트
        var ds_list = ["Ds_LTIFA03","Ds_LTIFA03"]; //데이터셋 리스트
        var column_list = ["sAcctNo","sDpsrCd"]; //실제값이 보관될 데이터셋의 컬럼
        var mask_list = ["####-####-####-****","######-#******"];
        //cbs 임시 - gfn_mkEditPassWord(obj_list, ds_list, column_list, mask_list);
    }


    //Ds_Year setting
    wconv.clear(Ds_Year);
    var sYear = wconv.substr(gfn_GetSysTime(), 0, 4);
    util.appendRow(Ds_Year);
    Ds_Year.setCellData(0, "CODE", "");
    Ds_Year.setCellData(0, "TEXT", "====");
    for (var i = 1; i < 10; i++) {
        util.appendRow(Ds_Year);
        Ds_Year.setCellData(i, "CODE", wconv.toNumber(sYear) + i - 1);
        Ds_Year.setCellData(i, "TEXT", wconv.toNumber(sYear) + i - 1);
    }
    msk_sCardValdYear.setSelectedIndex(0);
};

//---------------------------------------------------------------------------
// function 명 : lfn_getCommonCodes
// 내용        : 허용값 조회
//---------------------------------------------------------------------------
scwin.lfn_getCommonCodes = function() {
    wconv.clear(warning);
    //warning.DataObject = DOBJ_Rule1.ID;
    gfn_getCommonCodes("Ds_CrtorDpsrReln DsWs_RecvCrtorRel"
                     , "CrPrtrRole RecvCrtorRelCd CrPrtrRole"
                     , "cmb_sCrtorRelnFlag cmb_sRecvCrtorRelFlag "
                     , "N S ");

    // 오류처리
    if (warning.getRowCount() != 0) {
        wprom.alert(warning.getCellData(0, "msg"));
        return;
    }
    //wconv.copy(Ds_CrtorDpsrReln, "DsWs_CrtorDpsrReln");
    util.jSonDsCreate(Ds_CrtorDpsrReln, DsWs_CrtorDpsrReln.getID());
    wconv.filter(Ds_CrtorDpsrReln, "sCd==10||sCd==20||sCd==40", true);
};

//---------------------------------------------------------------------------
// function 명 : lfn_initF170_Div1
// 내용        : 모듈(화면) 초기화
//---------------------------------------------------------------------------
scwin.lfn_initF170_Div1 = function() {
    var promise = Promise.resolve();
    //20120423 R20120423000002__보험료 제3자 납입 개발 의뢰 start
//    Shape1.hide();
//    Static1.show();
//    Static2.hide();
//    cmb_sRecvCrtorRelFlag.hide();
//    Static3.hide();
//    edt_sHomeTel.hide();
//    btn_PerAgree.hide();
    
    //cbs 변경
    Shape1.setStyle("display", "none");

    // arg 체크
    scwin.lfn_argsChk();
    promise = promise.then(function(rtnVal) {
        // 현재 계좌정보 조회
        return scwin.lfn_selCard();
    });
    promise = promise.then(function(rtnVal) {
        if (Ds_Args.getCellData(0, "sPrcCat") == "1") {
            // 처리구분 : 1(청약),2(기타),3(변경) 
            //2014.09.16 By SDJ (N1408-00240)
            if (parent.parent.sScanObjtYn == "Y") {
                //Ds_CrtorDpsrReln.Filter("sCd=10||sCd=20");
                //btn_PerAgree.hide();
                btn_PerAgree.setStyle("visibility", "hidden");
                //wconv.trace("sScanObjtYn=========" + parent.parent.sScanObjtYn);
            }
        }
        return scwin.lfn_cmb_sCrtorRelnFlag_OnChanged(cmb_sCrtorRelnFlag, cmb_sCrtorRelnFlag.getValue(), cmb_sCrtorRelnFlag.getValue(), 0, 0);
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : btn_sDpsrCdSerch_OnClick
// 내용        : 고객찾기
//---------------------------------------------------------------------------
scwin.btn_sDpsrCdSerch_OnClick = function(obj) {
    var promise = Promise.resolve();
    var sArg = "";
    promise = promise.then(function(rtnVal) {
    	var popInfo = {
       			title : "고객검색(대면)",
				width : 662,
				height : 532,
				indata:indata    	
    	};
        return wprom.popupOpen("/ui/cbso/CBSO041P.xml", popInfo);
    });
    promise = promise.then(function(rst) {
        /*wprom.popupOpen(가이드참조)*/
        if (wconv.length(rst) != 0) {
            var cusInfo = rst.split( "^");
            msk_sDpsrCd.setValue(cusInfo[0]);
            edt_sDpsrName.setValue(cusInfo[1]);
        }
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_initF150_Div1
// 내용        : 모화면의로부터의 param체크
//---------------------------------------------------------------------------
scwin.lfn_argsChk = function() {
    var sCrNo = Ds_Args.getCellData(0, "sCrNo"); // 계약번호
    var sPlanNo = Ds_Args.getCellData(0, "sPlanNo"); // 계약번호
    //var sAcctFlag = Ds_Args.GetColumn(0,'sAcctFlag'); // 계좌구분
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
    //var applCat = Ds_Args.GetColumn(0,'applCat'); // 신청구분 : 1(신규),3(계좌변경),5(해지)
    var nCrChngNo = Ds_Args.getCellData(0, "nCrChngNo"); // 계좌변경변호
    var sInrpsCd = Ds_Args.getCellData(0, "sInrpsCd"); // 피보험자코드
    var sInrpsName = Ds_Args.getCellData(0, "sInrpsName"); // 피보험자명
    if (sPrcCat == null || sPrcCat == "") {
        wprom.alert("처리구분 미입력");
        return false;
    } else if (sPrcCat == "1") {
        if (sPlanNo == null || sPlanNo == "") {
            wprom.alert("설계번호 미입력");
            return false;
        }
    } else {
        if (sCrNo == null || sCrNo == "") {
            wprom.alert("계약번호 미입력");
            return false;
        }
    }
    if (nCrChngNo == null || nCrChngNo == "") {
        wprom.alert("계약변경번호 미입력");
        return false;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_selCard
// 내용        : 카드정보 조회
//---------------------------------------------------------------------------
scwin.lfn_selCard = function() {
    var promise = Promise.resolve();
    wconv.clear(Ds_LTIFA03);
    util.appendRow(Ds_LTIFA03);
    Ds_LTIFA03.setRowPosition(0, false);
    
    wconv.clear(warning);
    wconv.clear(DsWs_CrntAcct);
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    warning.DataObject = DOBJ_search.ID;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData", "", "");
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
    if (sPrcCat == "1") {
        gfn_SetParam(MethodObj, "sBizCat", "1");
        gfn_SetParam(MethodObj, "sCrNo", Ds_Args.getCellData(0, "sPlanNo"));
    } else if (sPrcCat == "3") {
        gfn_SetParam(MethodObj, "sBizCat", "2");
        gfn_SetParam(MethodObj, "sCrNo", Ds_Args.getCellData(0, "sCrNo"));
    } else {
        gfn_SetParam(MethodObj, "sBizCat", "2");
        gfn_SetParam(MethodObj, "sCrNo", Ds_Args.getCellData(0, "sCrNo"));
    }
    var result = gfn_CallService(SOBJ_Search, DOBJ_search, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData");
	MethodObj.setId("getDptCrData");

	//MethodObj.setParam("sAgentCode", gUserID);
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
    if (sPrcCat == "1") {
        MethodObj.setParam( "sBizCat", "1");
        MethodObj.setParam( "sCrNo", Ds_Args.getCellData(0, "sPlanNo"));
    } else if (sPrcCat == "3") {
        MethodObj.setParam( "sBizCat", "2");
        MethodObj.setParam( "sCrNo", Ds_Args.getCellData(0, "sCrNo"));
    } else {
        MethodObj.setParam( "sBizCat", "2");
        MethodObj.setParam( "sCrNo", Ds_Args.getCellData(0, "sCrNo"));
    }
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/LTIEA00");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);

	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_CrntAcct");
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "Ds_CrntAcct");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning");
	util.setCompBindRefresh("DsWs_CrntAcct");
	util.setRowPosition(DsWs_CrntAcct, 0);
    
    //trace(replace(gfn_XmlEncoder(DOBJ_search.Value), "><", ">\n<"));	
    if (warning.getRowCount() != 0) {
        wprom.alert(warning.getCellData(0, "msg"));
        return;
    }
    //wconv.copy(Ds_CrntAcct, DsWs_CrntAcct);
    //trace("============================card============== sun==>DsWs_CrntAcct : " + DsWs_CrntAcct.SaveXML());		
    //trace(replace(gfn_XmlEncoder(DOBJ_search.Value), "><", ">\n<"));	
    //trace(DsWs_CrntAcct.SaveXML());	
    //var sCrtorCd = Ds_Args.GetColumn(0,'sCrtorCd'); 	// 계약자코드
    //var sCrtorName = Ds_Args.GetColumn(0,'sCrtorName'); // 계약자명
    //var sInrpsCd = Ds_Args.GetColumn(0,'sInrpsCd'); 	// 피보험자코드
    //var sInrpsName = Ds_Args.GetColumn(0,'sInrpsName'); // 피보험자명
    //var strFilter = "(sCrtorRelnFlag='10'&&sDpsrCd='" + sCrtorCd    +"')" ;
    //strFilter += "|| (sCrtorRelnFlag='20'&&sDpsrCd='" + sInrpsCd    +"')" ;
    //Ds_CrntAcct.Filter(strFilter);
    //Ds_LTIFA03 기본값 셋팅
    Ds_LTIFA03.setCellData(0, "sCrNo", Ds_Args.getCellData(0, "sCrNo")); // 계약번호 (필수)
    Ds_LTIFA03.setCellData(0, "sPlanNo", Ds_Args.getCellData(0, "sPlanNo")); // 설계번호 (필수)
    Ds_LTIFA03.setCellData(0, "nCrChngNo", Ds_Args.getCellData(0, "nCrChngNo")); // 변경번호 (필수, 청약: 0 )
    Ds_LTIFA03.setCellData(0, "sAcctFlag", "1"); // 계좌구분 (보험료)
    Ds_LTIFA03.setCellData(0, "sAcctKind", "02"); // 계좌종류 (신용카드)
    Ds_LTIFA03.setCellData(0, "sCmMetd", "03"); // 카드수납
    Ds_LTIFA03.setCellData(0, "sRecpDate", crntYMD);
    if (Ds_CrntAcct.getRowCount() > 0) {
        // 처리구분 : 1(청약),2(기타),3(변경) 
        if (Ds_CrntAcct.getCellData(0, "sAcctKind") == "02") {
            var sDpsrCd;
            var sDpsrName;
            var sCrtorRelnFlag = Ds_CrntAcct.getCellData(0, "sCrtorRelnFlag");
            if (sCrtorRelnFlag == "10") {
                sDpsrCd = Ds_Args.getCellData(0, "sCrtorCd");
                sDpsrName = Ds_Args.getCellData(0, "sCrtorName");
            } else if (sCrtorRelnFlag == "20") {
                sDpsrCd = Ds_Args.getCellData(0, "sInrpsCd");
                sDpsrName = Ds_Args.getCellData(0, "sInrpsName");
            } else if (sCrtorRelnFlag == "40") {
                sDpsrCd = Ds_Args.getCellData(0, "sDpsrCd");
                sDpsrName = Ds_Args.getCellData(0, "sDpsrName");
            }
            if (sDpsrCd == Ds_CrntAcct.getCellData(0, "sDpsrCd")) {
                Ds_LTIFA03.setCellData(0, "sAcctNo", Ds_CrntAcct.getCellData(0, "sAcctNo"));
                Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", Ds_CrntAcct.getCellData(0, "sCrtorRelnFlag"));
                Ds_LTIFA03.setCellData(0, "sDpsrCd", sDpsrCd);
                Ds_LTIFA03.setCellData(0, "sDpsrName", sDpsrName);
                //Ds_LTIFA03.SetColumn(0, "sRecpDate",Ds_CrntAcct.GetColumn(0, "sRecpDate"));
                Ds_LTIFA03.setCellData(0, "sCardValdYearMnth", Ds_CrntAcct.getCellData(0, "sCardValdYearMnth"));
                Ds_LTIFA03.setCellData(0, "sTrnfAsmtDate", Ds_CrntAcct.getCellData(0, "sTrnfAsmtDate"));
                var sCardValdYearMnth = Ds_CrntAcct.getCellData(0, "sCardValdYearMnth");
                if (wconv.length(sCardValdYearMnth) == 6) {
                    scwin.lfn_cardYearSetting(wconv.substr(sCardValdYearMnth, 0, 4));
                    msk_sCardValdYear.setValue(wconv.substr(sCardValdYearMnth, 0, 4));
                    msk_sCardValdMnth.setValue(wconv.substr(sCardValdYearMnth, 4, 2));
                }
                Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_CrntAcct.getCellData(0, "sRecvCrtorRelCd"));
                Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", Ds_CrntAcct.getCellData(0, "sRecvCrtorTelNo"));
                scwin.lfn_cmb_sAutoTrnfDate_OnChanged(cmb_sAutoTrnfDate, cmb_sAutoTrnfDate.getValue(), cmb_sAutoTrnfDate.getValue(), 0, 0);
                scwin.lfn_getsCardComName();
            } else {
                if (sCrtorRelnFlag == "40") {
                    //기타
                    Ds_LTIFA03.setCellData(0, "sAcctNo", Ds_CrntAcct.getCellData(0, "sAcctNo"));
                    Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", Ds_CrntAcct.getCellData(0, "sCrtorRelnFlag"));
                    Ds_LTIFA03.setCellData(0, "sCardValdYearMnth", Ds_CrntAcct.getCellData(0, "sCardValdYearMnth"));
                    Ds_LTIFA03.setCellData(0, "sTrnfAsmtDate", Ds_CrntAcct.getCellData(0, "sTrnfAsmtDate"));
                    Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_CrntAcct.getCellData(0, "sRecvCrtorRelCd"));
                    Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", Ds_CrntAcct.getCellData(0, "sRecvCrtorTelNo"));
                    var sCardValdYearMnth = Ds_CrntAcct.getCellData(0, "sCardValdYearMnth");
                    if (wconv.length(sCardValdYearMnth) == 6) {
                        //card year setting
                        scwin.lfn_cardYearSetting(wconv.substr(sCardValdYearMnth, 0, 4));
                        msk_sCardValdYear.setValue(wconv.substr(sCardValdYearMnth, 0, 4));
                        msk_sCardValdMnth.setValue(wconv.substr(sCardValdYearMnth, 4, 2));
                    }
                    scwin.lfn_cmb_sAutoTrnfDate_OnChanged(cmb_sAutoTrnfDate, cmb_sAutoTrnfDate.getValue(), cmb_sAutoTrnfDate.getValue(), 0, 0);
                    scwin.lfn_getsCardComName();
                    promise = promise.then(function(rtnVal) {
                        return scwin.lfn_cmb_sCrtorRelnFlag_OnChanged(cmb_sCrtorRelnFlag);
                    });
                } else {
                    cmb_sCrtorRelnFlag.setSelectedIndex(0);
                    cmb_sAutoTrnfDate.setSelectedIndex(0);
                    promise = promise.then(function(rtnVal) {
                        return scwin.lfn_cmb_sCrtorRelnFlag_OnChanged(cmb_sCrtorRelnFlag, cmb_sCrtorRelnFlag.getValue(), cmb_sCrtorRelnFlag.getValue(), cmb_sCrtorRelnFlag.getSelectedIndex(), cmb_sCrtorRelnFlag.getSelectedIndex());
                    });
                }
            }
        } else {
            cmb_sCrtorRelnFlag.setSelectedIndex(0);
            cmb_sAutoTrnfDate.setSelectedIndex(0);
            promise = promise.then(function(rtnVal) {
                return scwin.lfn_cmb_sCrtorRelnFlag_OnChanged(cmb_sCrtorRelnFlag, cmb_sCrtorRelnFlag.getValue(), cmb_sCrtorRelnFlag.getValue(), cmb_sCrtorRelnFlag.getSelectedIndex(), cmb_sCrtorRelnFlag.getSelectedIndex());
            });
        }
    } else {}
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : btn_CnfmCarInfo_OnClick
// 내용        : 입력된 카드 정보와 실제 카드사에 등록된 정보를 확인함
//---------------------------------------------------------------------------
scwin.btn_CnfmCarInfo_OnClick = function(e) {
    if (wconv.length(msk_sDpsrCd.getValue()) == 0 && wconv.length(cmb_sCrtorRelnFlag.getValue()) == 0) {
        wprom.alert("계약관계자를 입력하세요.");
        cmb_sCrtorRelnFlag.focus();
        return false;
    }
    if (wconv.length(msk_sDpsrCd.getValue()) == 0) {
        wprom.alert("소유자의 주민번호를 입력하세요.");
        msk_sCardValdYear.focus();
        return false;
    }
    if (wconv.length(edt_sDpsrName.getValue()) == 0) {
        wprom.alert("소유자의 성명을 입력하세요.");
        msk_sCardValdYear.focus();
        return false;
    }
    if (wconv.length(msk_sAcctNo.getValue()) == 0) {
        wprom.alert("카드번호를 입력하세요.");
        msk_sAcctNo.focus();
        return false;
    } else if (wconv.length(msk_sAcctNo.getValue()) < 13) {
        wprom.alert("카드번호를 잘못 입력하였습니다. 확인해주십시요.");
        msk_sAcctNo.focus();
        return false;
    }
    if (wconv.length(msk_sCardValdYear.getValue()) == 0) {
        wprom.alert("유효기간을 입력하세요.");
        msk_sCardValdYear.focus();
        return false;
    }
    if (wconv.length(msk_sCardValdMnth.getValue()) == 0) {
        wprom.alert("유효기간을 입력하세요.");
        msk_sCardValdMnth.focus();
        return false;
    }
    var sDoerRegistrationNo = "";
    var ssDpsrCdChk = "";
    var ssCrtorCd = "";
    ssDpsrCdChk = Ds_LTIFA03.getCellData(0, "sDpsrCd"); //제3자의 주민번호
    sDoerRegistrationNo = Ds_CrntAcct.getCellData(0, "sDoerRegistrationNo"); //취급자의 주민번호
    ssCrtorCd = Ds_Args.getCellData(0, "sCrtorCd"); // 계약자의 주민번호
    if (ssCrtorCd != sDoerRegistrationNo) {
        if (ssDpsrCdChk == sDoerRegistrationNo) {
            wprom.alert("소유자의 주민번호와 취급자의 주민번호가 같은 경우 처리 할수없습니다.");
            return false;
        }
    }
    scwin.lfn_getsCardComName();
    scwin.lfn_CnfmCardInfo();
};

scwin.lfn_getsCardComName = function() {
    wconv.clear(DsWs_CardBinCode);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCardTask", "selectCardBinInfo", "", "");
    gfn_SetParam(MethodObj, "sCardBinCode", wconv.substr(msk_sAcctNo.getValue(), 0, 6));
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardBinCode, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCardTask", "selectCardBinInfo");
	MethodObj.setId("selectCardBinInfo");
	MethodObj.setParam("sCardBinCode", wconv.substr(msk_sAcctNo.getValue(), 0, 6));
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/ACCAB10");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB10"), "DsWs_CardBinCode");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_CardBinCode");
	util.setRowPosition(DsWs_CardBinCode, 0);
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다.");
        return;
    }
   
    if (DsWs_CardBinCode.getCellData(0, "result") != "0") {
        edt_sCrcoName.setValue(DsWs_CardBinCode.getCellData(0, "sCardComName"));
        edt_sCrcoCode.setValue(DsWs_CardBinCode.getCellData(0, "sCardCom"));
        isDpsrCnfm = -1;
        edt_isChkInfo.setValue("");
    } else {
        //alert("카드번호가 잘못입력되었습니다. 확인하십시요");
        msk_sAcctNo.focus();
        edt_sCrcoName.setValue("");
        edt_sCrcoCode.setValue("");
        isDpsrCnfm = -1;
        edt_isChkInfo.setValue("");
    }
};

scwin.lfn_CnfmCardInfo = function() {
    var sCardValdYearMnth = msk_sCardValdYear.getValue() + "" + msk_sCardValdMnth.getValue();
    var crntYM = wconv.substr(crntYMD, 0, 6);
    var lastDD = getLastDay(crntYM);
    var nextYMD = wconv.addDateSimple(crntYM + lastDD, 1);
    var nextYM = wconv.substr(nextYMD, 0, 6);
    if (sCardValdYearMnth < nextYM) {
        wprom.alert("유효기간이 1개월 이상 남은 카드만 등록가능합니다.");
        msk_sCardValdYear.focus();
        return false;
    }

    //N1609-00176:장기보험 보험료 입금 관련 프로그램 개발(계속보험료 입금 및 입금방법 변경_보험료 카드납입)
    //저축보험의 경우 20161001 이후 청약은 현대, NH농협카드만 결제 가능
    if (Ds_Args.getCellData(0, "sPrcCat") == "1") {
        // 처리구분 : 1(청약),2(기타),3(변경) 
        if (parent.parent.Ds_LTIDA00.getCellData(0, "sGdTypeFlgCd") == "3") {
            if (parent.parent.Ds_LTIEA00.getCellData(0, "sInsurStrtdate") >= "20161201") {
                if (!scwin.lfn_chkCardRecvYn()) {
                    wprom.alert("저축성 보험은 " + edt_sCrcoName.getValue() + " 카드로 납입할 수 없습니다.");
                    return;
                }
            }
        }
    } else {
        if ((parent.Ds_LTIFA03.getCellData(0, "sBunsMetdDocuClsfCd") == "5") || (parent.Ds_LTIFA03.getCellData(0, "sBunsMetdDocuClsfCd") == "7")) {
            if (parent.Ds_LTIFA03.getCellData(0, "sInsurStrtdate") >= "20161201") {
                if (!scwin.lfn_chkCardRecvYn()) {
                    wprom.alert("저축성 보험은 " + edt_sCrcoName.getValue() + " 카드로 납입할 수 없습니다.");
                    return;
                }
            } else {
                if (!scwin.getCardRecvYn(parent.Ds_LTIFA03.getCellData(0, "sCrNo"))) {
                    if (!scwin.lfn_chkCardRecvYn()) {
                        wprom.alert("저축성 보험은 " + edt_sCrcoName.getValue() + " 카드로 납입할 수 없습니다.");
                        return;
                    }
                }
            }
        }
    }
    wconv.clear(DsWs_requestCardCert);
    /*
    SOBJ_requestCardCert.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_requestCardCert, "AccountingCardTask", "requestCardCert", "", "");
	*/
    /**********************************************************************************
     *결제수단구분	sSettleType	CXX
     *카드번호	sCardNo	카드번호 16자리
     *유효기간	sValidThru	년월 (예) 201011
     *할부개월	nInstall	할부개월수 
     *승인요청금액	nReqAmt	금액(필요없음)
     *카드소유자ID	sCardOwnerID	13자리 주민번호 or 10자리 사업자번호
     ***********************************************************************************/
    /* 
    gfn_SetParam(MethodObj, "sSettleType", "CXX");
    gfn_SetParam(MethodObj, "sCardNo", Ds_LTIFA03.getCellData(0, "sAcctNo"));
    gfn_SetParam(MethodObj, "sValidThru", sCardValdYearMnth);
    gfn_SetParam(MethodObj, "nInstall", 0);
    //gfn_SetParam(MethodObj, "nReqAmt", 0);
    gfn_SetParam(MethodObj, "sCardOwnerID", msk_sDpsrCd.getValue());
    var result = gfn_CallService(SOBJ_requestCardCert, DOBJ_requestCardCert, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCardTask", "requestCardCert");
	MethodObj.setId("requestCardCert");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam("sSettleType", "CXX");
    MethodObj.setParam("sCardNo", Ds_LTIFA03.getCellData(0, "sAcctNo"));
    MethodObj.setParam("sValidThru", sCardValdYearMnth);
    MethodObj.setParam("nInstall", 0);
    //gfn_SetParam(MethodObj, "nReqAmt", 0);
    MethodObj.setParam("sCardOwnerID", msk_sDpsrCd.getValue());
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/ACCAB02");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB02"), "DsWs_requestCardCert");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB02"), "DsWs_ACCAB02");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_requestCardCert");
	util.setRowPosition(DsWs_requestCardCert, 0);
    
    if (WARNING.getRowCount() != 0) {
        isDpsrCnfm = 1;
        wprom.alert("웹서비스 이상입니다.");
        return;
    }


    //trace(replace(gfn_XmlEncoder(DOBJ_requestCardCert.Value), "><", ">\n<"));
    if (DsWs_requestCardCert.getCellData(0, "sRspCode") == "0000") {
        edt_isChkInfo.setValue("정상");
        isDpsrCnfm = 1;
    } else {
        var sRspMsg1 = DsWs_ACCAB02.getCellData(0, "sRspMsg1");
        //trace(replace(gfn_XmlEncoder(DOBJ_requestCardCert.Value), "><", ">\n<"));
        wprom.alert("카드정보가 잘못입력되었습니다.\n" + sRspMsg1);
        edt_isChkInfo.setValue(sRspMsg1);
        msk_sAcctNo.focus();
        isDpsrCnfm = -1;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_crntDate
// 내용        : 서버날짜 가져오기
//---------------------------------------------------------------------------
scwin.lfn_crntDate = function() {
    // 현재일
    gfn_getServerTime();
    sysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간
    crntYMD = wconv.mid(sysDate, 0, 8);
    crntTime = wconv.mid(sysDate, 8, 6);
    return crntYMD;
};

//---------------------------------------------------------------------------
// function 명 : msk_sAcctNo_OnCharChanged
// 내용        : 카드번호 입력시
//---------------------------------------------------------------------------
scwin.msk_sAcctNo_OnCharChanged = function(obj, strPreText, strPostText) {
    isDpsrCnfm = -1;
    edt_sCrcoName.setValue("");
    edt_isChkInfo.setValue("");
    /*
    	if(length(obj.Value) >= 15) {
    	
    		if(length(obj.Value) == 16) {
    			return;
    		}
    	
    		DsWs_CardBinCode.Clear();
    		SOBJ_Accounting.WSDL = gWsdlAccounting;	
    		var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCardTask", "selectCardBinInfo", "", "");
    		gfn_SetParam(MethodObj, "sCardBinCode", substr(msk_sAcctNo.Value,0,6));
    		
    		
    		var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardBinCode, MethodObj);
    	
    		if( result == false ){
    			alert("웹서비스 이상입니다.");
    			return;
    		}
    		
    		if ( DsWs_CardBinCode.GetColumn(0,"result") != "0" ){		
    			edt_sCrcoName.Value =  DsWs_CardBinCode.GetColumn(0, "sCardComName");
    			isDpsrCnfm = -1;
    			edt_isChkInfo.Text = "";
    		}else{
    			//alert("카드번호가 잘못입력되었습니다. 확인하십시요");
    			msk_sAcctNo.SetFocus();
    			edt_sCrcoName.Value =  "";
    			isDpsrCnfm = -1;
    			edt_isChkInfo.Text = "";
    		}
    		
    	}else{
    		isDpsrCnfm = -1;
    		edt_sCrcoName.Text = "";
    		edt_isChkInfo.Text = "";
    	}
    */
};

//**************************************************************************************************
// getCardName
//
// @parameter :
// @description : 카드 명칭 조회 및 SET
//**************************************************************************************************
scwin.getCardName = function(cardName, obj) {
    wconv.clear(DsWs_CardBinCode);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCardTask", "selectCardBinInfo", "", "");
    gfn_SetParam(MethodObj, "sCardBinCode", wconv.substr(obj.getValue(), 0, 6));
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardBinCode, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCardTask", "selectCardBinInfo");
	MethodObj.setId("selectCardBinInfo");
	MethodObj.setParam("sCardBinCode", wconv.substr(obj.getValue(), 0, 6));
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/ADMAC03");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("ADMAC03"), "DsWs_CardBinCode");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_CardBinCode");
	util.setRowPosition(DsWs_CardBinCode, 0);
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다.");
        return;
    }
    if (DsWs_CardBinCode.getCellData(0, "result") != "0") {
        cardName.Value = DsWs_CardBinCode.getCellData(0, "sCardComName");
    } else {
        wprom.alert("카드번호가 잘못입력되었습니다. 확인하십시요");
        cardName.Value = "";
        obj.focus();
    }
};

scwin.lfn_cmb_sCrtorRelnFlag_OnChanged = function(info) {
    var promise = Promise.resolve();
    var sDpsrCd;
    var sDpsrName;
    if (cmb_sCrtorRelnFlag.getValue() == "10") {
        sDpsrCd = Ds_Args.getCellData(0, "sCrtorCd");
        sDpsrName = Ds_Args.getCellData(0, "sCrtorName");

        //20120423 R20120423000002__보험료 제3자 납입 개발 의뢰 start
//        Shape1.hide();
//        Static2.hide();
//        cmb_sRecvCrtorRelFlag.hide();
//        Static3.hide();
//        msk_sDpsrCd.setDisabled(true);
//        edt_sDpsrName.setDisabled(true);
//        edt_sHomeTel.hide();
//        btn_PerAgree.hide();
//        btn_IvrInput2.setDisabled(true);
        
        //cbs 변경
	    Shape1.setStyle("display", "none");
	    msk_sDpsrCd.setDisabled(true);
        edt_sDpsrName.setDisabled(true);
	    btn_IvrInput2.setDisabled(true);

        //cbs
//        if (nNewIndex == 0) {
//            cmb_sRecvCrtorRelFlag.setSelectedIndex(0);
//            sRecvCrtorRelCd = "";
//            sRecvCrtorTelNo = "";
//        }
    } else if (cmb_sCrtorRelnFlag.getValue() == "20") {
        var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
        var nInspCnt = DsWs_CrntAcct.getCellData(0, "nInspCnt");

        //20120423 R20120423000002__보험료 제3자 납입 개발 의뢰 start
//        Shape1.hide();
//        Static2.hide();
//        cmb_sRecvCrtorRelFlag.hide();
//        Static3.hide();
//        msk_sDpsrCd.setDisabled(true);
//        edt_sDpsrName.setDisabled(true);
//        edt_sHomeTel.hide();
//        btn_PerAgree.hide();
//        btn_IvrInput2.setDisabled(true);
        
        //cbs
       	Shape1.setStyle("display", "none");
	    msk_sDpsrCd.setDisabled(true);
        edt_sDpsrName.setDisabled(true);
	    btn_IvrInput2.setDisabled(true);
        
        //if (nNewIndex == 0) {
        if (cmb_sCrtorRelnFlag.getValue() == "20") {        
            cmb_sRecvCrtorRelFlag.setSelectedIndex(0);
            sRecvCrtorRelCd = "";
            sRecvCrtorTelNo = "";
        }
        if (nInspCnt == 1) {
            sDpsrCd = Ds_Args.getCellData(0, "sInrpsCd");
            sDpsrName = Ds_Args.getCellData(0, "sInrpsName");
        } else if (sPrcCat == "1") {
            promise = promise.then(function(rtnVal) {
	            var indata = {};
	            indata.sInqrFlag= sPrcCat;
	            indata.sInqrValue=Ds_Args.getCellData(0, "sPlanNo");
	            var popInfo = {
		       			title : "피보험자조회",
						width : 448,
						height : 330,
	            		"indata":indata
	            };
                return wprom.popupOpen("/ui/cbsc/CBSC151P.xml", popInfo);
            });
            promise = promise.then(function(result) {
                /*wprom.popupOpen(가이드참조)*/
                if (wconv.length(result) != 0) {
                    var sInrpsInfo = result.split( "^");
                    sDpsrCd = sInrpsInfo[0]; // 피보험자코드
                    sDpsrName = sInrpsInfo[1]; // 피보험자명
                }
            });
        } else {
            promise = promise.then(function(rtnVal) {
	            var indata = {};
	            indata.sInqrFlag= sPrcCat;
	            indata.sInqrValue=Ds_Args.getCellData(0, "sCrNo");
	            var popInfo = {
		       			title : "피보험자조회",
						width : 448,
						height : 330,
	            		"indata":indata
	            };	            
                return wprom.popupOpen("/ui/cbsc/CBSC151P.xml", popInfo);
            });
            promise = promise.then(function(result) {
                if (wconv.length(result) != 0) {
                    var sInrpsInfo = result.split( "^");
                    sDpsrCd = sInrpsInfo[0]; // 피보험자코드
                    sDpsrName = sInrpsInfo[1]; // 피보험자명
                }
            });
        }
    } else if (cmb_sCrtorRelnFlag.getValue() == "40") {
        sDpsrCd = Ds_CrntAcct.getCellData(0, "sDpsrCd");
        sDpsrName = Ds_CrntAcct.getCellData(0, "sDpsrName");
        msk_sDpsrCd.setDisabled(false);
        edt_sDpsrName.setDisabled(false);
        //20120423 R20120423000002__보험료 제3자 납입 개발 의뢰 start
//        Shape1.show();
//        //Static1.Visible = true; 
//        cmb_sRecvCrtorRelFlag.show();
//        Static1.show();
//        Static2.show();
//        Static3.show();
//        edt_sHomeTel.show();
//        btn_PerAgree.show();
//        edt_sHomeTel.setDisabled(false);
//        btn_IvrInput2.setDisabled(false);
        
        //cbs
        Shape1.setStyle("display", "");
	    edt_sHomeTel.setDisabled(false);
	    btn_IvrInput2.setDisabled(false);

        //2014.08.25 By SDJ (N1408-00240)
        if (parent.parent.sScanObjtYn == "Y") {
            btn_PerAgree.setStyle("visibility", "hidden");
        }
    }
    promise = promise.then(function(rtnVal) {
        /*if(length(obj.value) == 10){
    	msk_sDpsrCd.Mask = "###-##-#####";
    }else if(length(obj.value) == 13){
    	msk_sDpsrCd.Mask = "######-#######";
    }*/
        Ds_LTIFA03.setCellData(0, "sDpsrCd", sDpsrCd);
        Ds_LTIFA03.setCellData(0, "sDpsrName", sDpsrName);
        Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_CrntAcct.getCellData(0, "sRecvCrtorRelCd"));
        isDpsrCnfm = -1;
        edt_isChkInfo.setValue("");
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_AcctRgst
// 내용        : 이체계좌 저장
//---------------------------------------------------------------------------
scwin.lfn_AcctRgst = function() {
    wconv.clear(warning0);
    if (scwin.lfn_reqChkValue() == false) {
        return false;
    }

    //현재일
    scwin.lfn_crntDate();
    Ds_LTIFA03.setCellData(0, "sRecpDate", crntYMD); // 신청일자
    //Ds_LTIFA03.SetColumn(0, "sOpnApplDate", crntYMD);//개시적용일
    //user 정보
    Ds_Args.setCellData(0, "gUserID", util.getGdsValue("gUserID"));
    Ds_Args.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));
    /*
    SOBJ_Save.WSDL = gds.gWsdlBasis;
    var MethodObj = SOBJ_Save.CreateMethodObj("perform");

    //헤더 작성, 첫 패러미터인 루트노드값은 hashtable로 고정
    setHeader("hashtable", "com.inswave.longterm.dpt.rec.task.FAF170Task", "rgstCard");

    //저장시 벡터로 넘긴다
    addVectorData("Args", "Args", Ds_Args);
    addVectorData("LTIFA03", "LTIFA03", Ds_LTIFA03);
    setTail("hashtable");

    // 서비스 오브젝트 생성 패러미터값 in0는 고정값
    SOBJ_Save.CreateObj("in0");
    MethodObj.in0 = insertStr;
	

    ////trace("lfn_AcctRgst()  >> Ds_LTIFA03 : " + Ds_LTIFA03.SaveXML());
    ////trace("lfn_AcctRgst()  >> Ds_Args : " + Ds_Args.SaveXML());
    // 서비스 호출
    var result = gfn_CallService(SOBJ_Save, DOBJ_Save, MethodObj);
	*/
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF170Task", "rgstCard");
	MethodObj.setId("rgstCard");	
	MethodObj.addVectorData("Args", "Args", "Ds_Args:A");
	MethodObj.addVectorData("LTIFA03", "LTIFA03", "Ds_LTIFA03:A");
	MethodObj.setUrl("/contract/CBSC053SController.do");  	// 서버단 호출 URL (수납 확정)    
	MethodObj.setXPath("//WARNING");	// XPath
	MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
	MethodObj.sync();					// 동기 처리[기본(async:비동기)]
	MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>
	warning0.setJSON(_tranSync.getDsJson("WARNING"));	
	
    //trace(replace(gfn_XmlEncoder(DOBJ_Save.Value), "><", ">\n<"));
    // 오류처리
    if (warning0.getRowCount() != 0) {
        wprom.alert(warning0.getCellData(0, "msg"));
        return;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_reqChkValue
// 내용        : 저장할 입력값 체크
//---------------------------------------------------------------------------
scwin.lfn_reqChkValue = function(chkId) {
    Ds_Args.setCellData(0, "sUserID", util.getGdsValue("gUserID"));
    Ds_Args.setCellData(0, "sUserIP", util.getGdsValue("gUserIP"));
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 (필수): 1(청약),2(기타),3(변경) 
    var sCrtorCd = Ds_Args.getCellData(0, "sCrtorCd"); // 계약자 코드 (필수)
    var sCrtorName = Ds_Args.getCellData(0, "sCrtorName"); // 계약자명 (필수)
    var sCrNo = Ds_Args.getCellData(0, "sCrNo");
    var sPlanNo = Ds_Args.getCellData(0, "sPlanNo");
    var sCmMetdBefo = Ds_Args.getCellData(0, "sCmMetdBefo"); // 변경전 수금방법 (청약 "")
    var nCrChngNo = Ds_LTIFA03.getCellData(0, "nCrChngNo"); // 변경번호 (필수, 청약: 0 )
    var sDpsrCd = Ds_LTIFA03.getCellData(0, "sDpsrCd"); // 카드소유주코드(필수)
    var sDpsrName = Ds_LTIFA03.getCellData(0, "sDpsrName"); // 카드소유주명(옵션 : 예금주코드가 입력되면 필수)
    var sAcctNo = Ds_LTIFA03.getCellData(0, "sAcctNo"); //카드번호
    var sTrnfAsmtDate = Ds_LTIFA03.getCellData(0, "sTrnfAsmtDate"); //이체지정일
    //var sCardValdYearMnth = Ds_LTIFA03.GetColumn(0,"sCardValdYearMnth");//유효년월
    if (sPlanNo == "1") {
        if (sPlanNo == "") {
            wprom.alert("설계번호를 입력하세요.");
            return false;
        } else if (wconv.length(wconv.trim(sPlanNo)) != 12) {
            wprom.alert("설계번호를 잘못 입력하였습니다. 확인해주십시요.");
            return false;
        }
    } else {
        if (sCrNo == "") {
            wprom.alert("계약번호를 입력하세요.");
            return false;
        } else if (wconv.length(wconv.trim(sCrNo)) != 12) {
            wprom.alert("계약번호를 잘못 입력하였습니다. 확인해주십시요.");
            return false;
        } else if (nCrChngNo == "") {
            wprom.alert("변경번호를 입력하세요.");
            return false;
        }
    }
    if (sCrtorCd == "") {
        wprom.alert("카드소유자 주민번호를 입력하세요.");
        msk_sDpsrCd.focus();
        return false;
    } else if (sDpsrName == "") {
        wprom.alert("카드소유자명이 없습니다. 고객찾기를 실행하세요.");
        edt_sDpsrName.focus();
        return false;
    } else if (sPrcCat == "") {
        wprom.alert("처리구분을 입력하세요.");
        return false;
    }
    if (wconv.length(sAcctNo) == 0) {
        wprom.alert("카드번호를 입력하세요.");
        msk_sAcctNo.focus();
        return false;
    } else if (wconv.length(sAcctNo) < 13) {
        wprom.alert("카드번호를 잘못 입력하였습니다. 확인해주십시요.");
        msk_sAcctNo.focus();
        return false;
    } else {
        util.insertColumn(Ds_LTIFA03, [["sBankName","sBankName","text"]]);
        util.setCompBindRefresh(Ds_LTIFA03.getID());
        Ds_LTIFA03.setRowPosition(0, false);
        Ds_LTIFA03.setCellData(0, "sBankName", edt_sCrcoName.getValue());
    }
    if (wconv.length(msk_sCardValdYear.getValue()) == 0) {
        wprom.alert("유효기간을 입력하세요.");
        msk_sCardValdYear.focus();
        return false;
    } else if (wconv.length(msk_sCardValdMnth.getValue()) == 0) {
        wprom.alert("유효기간을 입력하세요.");
        msk_sCardValdMnth.focus();
        return false;
    } else {
        var sCardValdYearMnth = msk_sCardValdYear.getValue() + "" + msk_sCardValdMnth.getValue();
        Ds_LTIFA03.setCellData(0, "sCardValdYearMnth", sCardValdYearMnth); //유효년월
    }
    if (wconv.length(sTrnfAsmtDate) == 0) {
        wprom.alert("이체일을 입력하세요.");
        cmb_sAutoTrnfDate.focus();
        return false;
    }
    if (isDpsrCnfm == 0) {
        wprom.alert("카드정보확인을하세요.");
        return false;
    } else if (isDpsrCnfm == -1) {
        wprom.alert("카드정보가 일치하지 않습니다.");
        return false;
    }
};

scwin.lfn_cmb_sAutoTrnfDate_OnChanged = function(info) {
    if (cmb_sAutoTrnfDate.getValue() != "") {
        Ds_LTIFA03.setCellData(Ds_LTIFA03.getRowPosition(), "sOpnApplDate", scwin.lfn_getApplDate(cmb_sAutoTrnfDate.getValue()));
    } else {
        Ds_LTIFA03.setCellData(Ds_LTIFA03.getRowPosition(), "sOpnApplDate", "");
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_getApplDate
// 내용        : 이체적용일 구하기
//---------------------------------------------------------------------------
scwin.lfn_getApplDate = function(strDD) {
    if (isDigit(strDD) == false) {
        return "";
    }
    wconv.clear(warning);
    wconv.clear(DsWs_sApplDate);
    /*
    SOBJ_sApplDate.WSDL = gds.gWsdlBasis;
    warning.DataObject = DOBJ_sApplDate.ID;
    var MethodObj = gfn_CreateMethodObj(SOBJ_sApplDate, "com.inswave.longterm.dpt.com.task.FAF000Task", "getApplDate", "", "");
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
    gfn_SetParam(MethodObj, "sAcctKind", "02");
    gfn_SetParam(MethodObj, "sPrcCat", sPrcCat);
    gfn_SetParam(MethodObj, "sAutoTrnfDate", strDD);
    gfn_SetParam(MethodObj, "sStndDate", crntYMD);
    gfn_SetParam(MethodObj, "nBizDays", 2); //신용카드 변경 후 최초 출금예정일이 변경일 + 2일 이상 (영업일 기준)시 변경된 신용카드 승인 가능함.
    gfn_SetParam(MethodObj, "sPaymCyclCd", Ds_CrntAcct.getCellData(0, "sPaymCyclCd"));
    gfn_SetParam(MethodObj, "sInsurStrtDate", Ds_CrntAcct.getCellData(0, "sInsurStrtDate"));
    gfn_SetParam(MethodObj, "sInsurEndDate", Ds_CrntAcct.getCellData(0, "sInsurEndDate"));
    gfn_SetParam(MethodObj, "nFinalPaymSeq", Ds_CrntAcct.getCellData(0, "nFinalPaymSeq"));
    var result = gfn_CallService(SOBJ_sApplDate, DOBJ_sApplDate, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.com.task.FAF000Task", "getApplDate");
	MethodObj.setId("getApplDate");
	//MethodObj.setParam("sAgentCode", gUserID);
    var sPrcCat = Ds_Args.getCellData(0, "sPrcCat"); // 처리구분 : 1(청약),2(기타),3(변경)
    MethodObj.setParam( "sAcctKind", "02");
    MethodObj.setParam( "sPrcCat", sPrcCat);
    MethodObj.setParam( "sAutoTrnfDate", strDD);
    MethodObj.setParam( "sStndDate", crntYMD);
    MethodObj.setParam( "nBizDays", 2); //신용카드 변경 후 최초 출금예정일이 변경일 + 2일 이상 (영업일 기준)시 변경된 신용카드 승인 가능함.
    MethodObj.setParam( "sPaymCyclCd", Ds_CrntAcct.getCellData(0, "sPaymCyclCd"));
    MethodObj.setParam( "sInsurStrtDate", Ds_CrntAcct.getCellData(0, "sInsurStrtdate"));
    MethodObj.setParam( "sInsurEndDate", Ds_CrntAcct.getCellData(0, "sInsurEndDate"));
    MethodObj.setParam( "nFinalPaymSeq", Ds_CrntAcct.getCellData(0, "nFinalPaymSeq"));
	
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/DATE");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("DATE"), "DsWs_sApplDate");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning");
	util.setCompBindRefresh("DsWs_sApplDate");
	util.setRowPosition(DsWs_sApplDate, 0);
    
    var sApplDate = "";
    if (warning.getRowCount() != 0) {} else {
        sApplDate = DsWs_sApplDate.getCellData(0, "sApplDate");
    }


    //trace(DsWs_sApplDate.SaveXML());
    //trace(replace(gfn_XmlEncoder(DOBJ_sApplDate.Value), "><", ">\n<"));
  
    return sApplDate;
};

//---------------------------------------------------------------------------
// function 명 : lfn_PerAgree_OnClick
// 내용        : 제3자일경우 개인정보 신용동의
//---------------------------------------------------------------------------
scwin.lfn_PerAgree_OnClick = function(e) {
    var promise = Promise.resolve();
    var arg;
    var sDoerRegistrationNo = "";
    var ssDpsrCdChk = "";
    var ssCrtorCd = "";
    ssDpsrCdChk = Ds_LTIFA03.getCellData(0, "sDpsrCd"); //제3자의 주민번호
    sDoerRegistrationNo = Ds_CrntAcct.getCellData(0, "sDoerRegistrationNo"); //취급자의 주민번호
    ssCrtorCd = Ds_Args.getCellData(0, "sCrtorCd"); // 계약자의 주민번호
    if (ssCrtorCd != sDoerRegistrationNo) {
        if (ssDpsrCdChk == sDoerRegistrationNo) {
            wprom.alert("소유자의 주민번호와 취급자의 주민번호가 같은 경우 처리 할수없습니다.");
            return false;
        }
    }
    if (wconv.length(msk_sDpsrCd.getValue()) == 0) {
        wprom.alert("소유자의 주민번호를 입력하세요.");
        msk_sDpsrCd.focus();
        return false;
    }
    if (wconv.length(edt_sDpsrName.getValue()) == 0) {
        wprom.alert("소유자의 성명을 입력하세요.");
        edt_sDpsrName.focus();
        return false;
    }
    if (wconv.length(cmb_sRecvCrtorRelFlag.getValue()) == 0) {
        wprom.alert("계약자와의 관계를 선택하세요.");
        cmb_sRecvCrtorRelFlag.focus();
        return false;
    }
    if (wconv.length(edt_sHomeTel.getValue()) == 0) {
        wprom.alert("카드 소유자 전화번호를 입력하세요.");
        edt_sHomeTel.focus();
        return false;
    }

    // 유효한 전화번호 체크
    if (wconv.length(edt_sHomeTel.getValue()) > 0) {
        if (isValidPhone(edt_sHomeTel.getValue())) {} else {
            //alert(errStr + " 무효한 번호입니다. \n재입력해 주세요");
            return false; //alert("무효");
        }
    }
    promise = promise.then(function(rtnVal) {
	    var indata = {};
	    indata.sPlanNoOri=Ds_CrntAcct.getCellData(0, "sPlanNoOri");
	    indata.sDpsrName=Ds_LTIFA03.getCellData(0, "sDpsrName");
	    indata.sDpsrCd=Ds_LTIFA03.getCellData(0, "sDpsrCd");
	    indata.sDpsrCd=Ds_LTIFA03.getCellData(0, "sDpsrCd");
	    indata.sCrtorName=Ds_CrntAcct.getCellData(0, "sCrtorName");
	    indata.nApplPrem=Ds_CrntAcct.getCellData(0, "nApplPrem");
	    indata.sGdCdName=Ds_CrntAcct.getCellData(0, "sGdCdName");
	    indata.sRecvCrtorRelCd=Ds_LTIFA03.getCellData(0, "sRecvCrtorRelCd");
	    indata.sRecvCrtorTelNo=Ds_LTIFA03.getCellData(0, "sRecvCrtorTelNo");
	    indata.sCmMetd="03";
		var popInfo = {
       			title : "개인(신용)정보처리 동의",
				width : 685,
				height : 315,		
				indata : indata
		}
        return wprom.popupOpen("/ui/cbsc/CBSC011P.xml", popInfo);    
    });
    promise = promise.then(function(result) {
        if (result == 1) {}
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_sDpsrCd_OnCharChanged
// 내용        : 주민번호 변경시에 카드정보 확인 초기화
//---------------------------------------------------------------------------
scwin.lfn_sDpsrCd_OnCharChanged = function(info) {
    edt_isChkInfo = "";
    isDpsrCnfm = -1;
};

//---------------------------------------------------------------------------
// function 명 : Btn_IVR_OnClick
// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
// param 
// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
// 2: lfn_IVR_CallBack (콜백 함수명)
// 3 : ""  (콜백 받는 변수명 1)
// 4 : nRow (콜백 받는 변수명 2)
//---------------------------------------------------------------------------
scwin.Btn_IVR_OnClick = function(obj, nRow) {
    ivrOpenPop("C", "", "lfn_IVR_CallBack", "", ""); // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호)
    // obj는 결과값을 셋팅할 fieldName				
};

//---------------------------------------------------------------------------
// function 명 : lfn_IVR_CallBack
// 내용        :  IVR 콜백함수
//---------------------------------------------------------------------------
scwin.lfn_IVR_CallBack = function(id, nRow, val) {
    if (wconv.length(val) > 0) {
        msk_sAcctNo.setValue(val);
    }
};

//---------------------------------------------------------------------------
// function 명 : Btn_IVR_OnClick
// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
// param 
// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
// 2: lfn_IVR_CallBack (콜백 함수명)
// 3 : ""  (콜백 받는 변수명 1)
// 4 : nRow (콜백 받는 변수명 2)
//---------------------------------------------------------------------------
scwin.Btn_IVR_OnClick2 = function(obj, nRow) {
    ivrOpenPop("J", "", "lfn_IVR_CallBack2", "", ""); // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호)
    // obj는 결과값을 셋팅할 fieldName				
};

//---------------------------------------------------------------------------
// function 명 : lfn_IVR_CallBack
// 내용        :  IVR 콜백함수
//---------------------------------------------------------------------------
scwin.lfn_IVR_CallBack2 = function(id, nRow, val) {
    if (wconv.length(val) > 0) {
        msk_sDpsrCd.setValue(val);
    }
};

//---------------------------------------------------------------------------
// function 명 : Btn_IVR_OnClick
// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
// param 
// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
// 2: lfn_IVR_CallBack (콜백 함수명)
// 3 : ""  (콜백 받는 변수명 1)
// 4 : nRow (콜백 받는 변수명 2)
//---------------------------------------------------------------------------
scwin.Btn_IVR_OnClick3 = function(obj, nRow) {
    ivrOpenPop("V", "", "lfn_IVR_CallBack3", "", ""); // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호, V : 유효기간)
    // obj는 결과값을 셋팅할 fieldName				
};

//---------------------------------------------------------------------------
// function 명 : lfn_IVR_CallBack
// 내용        :  IVR 콜백함수
//---------------------------------------------------------------------------
scwin.lfn_IVR_CallBack3 = function(id, nRow, val) {
    if (wconv.length(val) > 0) {
        //wconv.trace(val);
        var MM = wconv.substr(val, 0, 2);
        //wconv.trace(MM);
        var YY = "20" + wconv.substr(val, 2, 4);
        ////wconv.trace(YY);
        Div4_msk_sCardValdYear.Value = YY;
        Div4_msk_sCardValdMnth.Value = MM;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_cardYearSetting
// 내용        :  카드 과거 년도 셋팅
//---------------------------------------------------------------------------
scwin.lfn_cardYearSetting = function(Year) {
    if (wconv.findRow(Ds_Year, "CODE", Year) < 0) {
        util.appendRow(Ds_Year);
        Ds_Year.setCellData(0, "CODE", Year);
        Ds_Year.setCellData(0, "TEXT", Year);
    }
};

//---------------------------------------------------------------------------
// function 명 : btn_SearchCust_OnClick
// 내용        : 스마트폰앱고객 버튼클릭시 처리
//---------------------------------------------------------------------------
scwin.btn_SearchCust_OnClick = function(e) {
	//alert("추후개발예정(대상아님)");
	//return;

    var promise = Promise.resolve();
    promise = promise.then(function(rtnVal) {
	    var arg = {sUserID : util.getGdsValue("gUserID")};
		var popInfo = {
						"width"     : 635,
						"height"    : 390,  
						"indata"    : arg,
						"title"     : "대면채널조회"
						};
	    return wprom.popupOpen("/ui/cbso/CBSO009P.xml", popInfo);	
    });
    promise = promise.then(function(result) {
        var args = result.split( "^" );
        if (wconv.length(args) > 2) {
            msk_sDpsrCd.setValue(wconv.trim(args[2]));
        }
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_chkCardRecvYn
// 내용        : 카드수납가능여부
//---------------------------------------------------------------------------
scwin.lfn_chkCardRecvYn = function() {
    //현대(0008), NH농협(0015) 이외 카드납 불가 처리
    if ((edt_sCrcoCode.getValue() != "0008") && (edt_sCrcoCode.getValue() != "0015")) {
        return false;
    }

    //전카드사 카드납 불가로 변경.20161201
    return false;
};

//---------------------------------------------------------------------------
// function 명 : getCardRecvYn
// 내용        : 카드납입 이력 여부
//---------------------------------------------------------------------------
scwin.getCardRecvYn = function(sCrNo) {
    wconv.clear(DsWs_CardRecvYn);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "com.inswave.longterm.dpt.rec.task.FAF041Task", "getCardRecvYn", "", "");
    gfn_SetParam(MethodObj, "sCrNo", sCrNo);
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardRecvYn, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF041Task", "getCardRecvYn");
	MethodObj.setId("getCardRecvYn");
	MethodObj.setParam("sCrNo", sCrNo);
	MethodObj.setUrl("/contract/CBSC053SController.do");
	MethodObj.setXPath("//*/LTIFA01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("LTIFA01"), "DsWs_CardRecvYn");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");	
	util.setCompBindRefresh("DsWs_CardRecvYn");
	util.setRowPosition(DsWs_CardRecvYn, 0);
    
    if (WARNING.getRowCount() == false) {
        wprom.alert("웹서비스 이상입니다.");
        return false;
    }
    //goo if (DOBJ_CardRecvYn.GetColumn(0, "result") != "0") {
    if (DsWs_CardRecvYn.getCellData(0, "result") != "0") {
        if (DsWs_CardRecvYn.getCellData(0, "sCardRecvYn") == "Y") {
            return true;
        } else {
            return false;
        }
    } else {
        wprom.alert("이전 입금내역이 없습니다. 확인하십시오.");
        return false;
    }
};]]></script>
	</head>
	<body>

		<!-- group:s -->
		<!-- group:e -->

		<!-- group:s -->

		<xf:group id="" style="" class="section">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="Static1" label="신용카드정보"
					style="">
				</w2:textbox>
				<xf:input disabled="true" id="edt_sCrcoCode" ref="" style="margin-left:80px;display: none;"></xf:input>
				<w2:anchor class="" disabled=""
					ev:onclick="" id="btn_IvrInput" outerDiv="" style="display : none">
					<xf:label><![CDATA[저장]]></xf:label>
				</w2:anchor>
				<w2:anchor class="" disabled=""
					ev:onclick="" id="btn_IvrInput2" outerDiv="" style="display : none;">
					<xf:label><![CDATA[저장]]></xf:label>
				</w2:anchor>
				<w2:anchor class="btn_icon tel" disabled=""
					ev:onclick="" id="btn_IvrInput3" outerDiv="" style="display : none;">
					<xf:label><![CDATA[저장]]></xf:label>
				</w2:anchor>
			</xf:group>
			<xf:group id="" style="" class="w2tb tb mb3" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:160px;" tagname="col"></xf:group>
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="width:65px;" tagname="col"></xf:group>
					<xf:group style="width:150px;" tagname="col"></xf:group>
					<xf:group style="width:65px;" tagname="col"></xf:group>
					<xf:group style="width:65px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						카드소유자구분
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.lfn_cmb_sCrtorRelnFlag_OnChanged" id="cmb_sCrtorRelnFlag" optionOrder=""
							ref="data:Ds_LTIFA03.sCrtorRelnFlag" renderType="native" style="" submenuSize="">
							<xf:choices></xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						소유자
						<w2:attributes></w2:attributes>
						<w2:anchor class="btn_icon prot" disabled=""
							ev:onclick="scwin.btn_SearchCust_OnClick" id="btnGroupList" outerDiv="" style="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>

						<w2:attributes></w2:attributes>

						<w2:attributes></w2:attributes>
						<xf:input disabled="" id="msk_sDpsrCd" ref="data:Ds_LTIFA03.sDpsrCd" style="width:130px" displayFormat="######-#######">
							</xf:input>
						<xf:input disabled="" id="edt_sDpsrName" ref="data:Ds_LTIFA03.sDpsrName"
							style="width:80px;">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">신청일자<w2:attributes></w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="msk_sRecpDate" ref="data:Ds_LTIFA03.sRecpDate"
							style="width:120px;" displayFormat="####-##-##">
						</xf:input>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						카드번호
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:input disabled="" id="msk_sAcctNo" ref="data:Ds_LTIFA03.sAcctNo" style="width:140px;" displayFormat="####-####-####-####" ev:onviewchange="scwin.msk_sAcctNo_OnCharChanged" maxlength="16">
							</xf:input>
						<xf:input disabled="true" id="edt_sCrcoName" ref="" style="width:80px;"></xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">유효기간<w2:attributes></w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="" id="msk_sCardValdYear"
							optionOrder="" ref="" renderType="native" style="width:55px;"
							submenuSize="">
							<xf:choices>
								<xf:itemset nodeset="data:Ds_Year">
									<xf:label ref="TEXT"></xf:label>
									<xf:value ref="CODE"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="" id="msk_sCardValdMnth"
							optionOrder="" ref="" renderType="native" style="width:40px;"
							submenuSize="">
							<xf:choices>
								<xf:itemset nodeset="data:Ds_Month">
									<xf:label ref="TEXT"></xf:label>
									<xf:value ref="CODE"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">이체일<w2:attributes></w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>

						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.lfn_cmb_sAutoTrnfDate_OnChanged"
							id="cmb_sAutoTrnfDate" optionOrder=""
							ref="data:Ds_LTIFA03.sTrnfAsmtDate" renderType="native"
							style="width:60px;" submenuSize="">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_CardTrnfDate">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<w2:anchor class="btn_nml1 bul" ev:onclick="scwin.btn_CnfmCarInfo_OnClick"
							id="btn_CnfmCarInfo" outerDiv="true" style="">
							<xf:label><![CDATA[카드정보확인]]></xf:label>
						</w2:anchor>
						<xf:input disabled="true" id="edt_isChkInfo" ref=""
							style="width:80px;">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="Shape1" style="margin-top:0px;" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="width:200px;" tagname="col"></xf:group>
					<xf:group style="width:130px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr" id="">
					<xf:group class="w2tb_th" tagname="th" id="Static2">계약자와의&amp;nbsp;관계</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="" id="cmb_sRecvCrtorRelFlag" optionOrder=""
							ref="data:Ds_LTIFA03.sRecvCrtorRelCd" renderType="native" style="" submenuSize="">
							<xf:choices></xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th" id="Static3">카드소유자&amp;nbsp;전화번호<w2:attributes></w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="" id="edt_sHomeTel" ref="data:Ds_LTIFA03.sRecvCrtorTelNo"
							style="width:80px;">
						</xf:input>
						<w2:anchor class="btn_nml1 bul fr" ev:onclick="scwin.lfn_PerAgree_OnClick"
							id="btn_PerAgree" outerDiv="true" style="">
							<xf:label><![CDATA[개인신용정보동의]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<!-- group:s -->
		<!-- group:e -->

		<!-- group:s -->
		<!-- group:e -->

	</body>
</html>