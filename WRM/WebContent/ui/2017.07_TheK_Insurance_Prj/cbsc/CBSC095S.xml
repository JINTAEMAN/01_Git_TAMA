<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
	<!-- 
       ###################################################
        파일명 : CBSC095S.xml
        프로그램명 : 재물청약설계
        설 명 :  재물청약설계 화면
        작성자 : MS.Kang
        작성일 : 2017.09.14

        수정일자            수정자                  수정내용
       ==================================================
       2017.09.14       	MS.Kang       			최초작성
       ###################################################
    -->
	<w2:type>DEFAULT</w2:type>
	<w2:buildDate />
	<xf:model>
		<xf:instance>
			<data xmlns="" />
		</xf:instance>
		<w2:dataCollection baseNode="map">
			<w2:dataList baseNode="list" id="Ds_Grade" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sCd" name="sCd"></w2:column>
                    <w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Single" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sStndDate" name="sStndDate"></w2:column>
                    <w2:column dataType="text" id="sResno" name="sResno"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Dsws_BaseSlct" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_InPayTerm" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="number" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="number" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="number" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="number" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="number" id="nPaymAge" name="nPaymAge"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIDA00" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDA00']/LTIDA00"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_BosangTrty" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIEA10" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sGroupCrAdmNo" name="sGroupCrAdmNo"></w2:column>
                    <w2:column dataType="text" id="sRpstName" name="sRpstName"></w2:column>
                    <w2:column dataType="text" id="sRpstCd" name="sRpstCd"></w2:column>
                    <w2:column dataType="text" id="sGroupName" name="sGroupName"></w2:column>
                    <w2:column dataType="text" id="nFrstPsct" name="nFrstPsct"></w2:column>
                    <w2:column dataType="text" id="nGroupDcrt" name="nGroupDcrt"></w2:column>
                </w2:columnInfo>
                <w2:data use="true">
                    <w2:row>
                        <nFrstPsct></nFrstPsct>
                        <nGroupDcrt></nGroupDcrt>
                        <sGroupCrAdmNo></sGroupCrAdmNo>
                        <sGroupName></sGroupName>
                        <sRpstCd></sRpstCd>
                        <sRpstName></sRpstName>
                    </w2:row>
                </w2:data>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_long_mPlr" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sCustNo" name="sCustNo"></w2:column>
                    <w2:column dataType="text" id="sCstId" name="sCstId"></w2:column>
                    <w2:column dataType="text" id="nSeqNo" name="nSeqNo"></w2:column>
                    <w2:column dataType="text" id="sName" name="sName"></w2:column>
                    <w2:column dataType="text" id="sCustType" name="sCustType"></w2:column>
                    <w2:column dataType="text" id="sClass" name="sClass"></w2:column>
                    <w2:column dataType="text" id="sMarry" name="sMarry"></w2:column>
                    <w2:column dataType="text" id="sJobCode" name="sJobCode"></w2:column>
                    <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                    <w2:column dataType="text" id="sDrvCls" name="sDrvCls"></w2:column>
                    <w2:column dataType="text" id="sJobCls" name="sJobCls"></w2:column>
                    <w2:column dataType="text" id="nHomAdrsChangeNo" name="nHomAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sHomZco" name="sHomZco"></w2:column>
                    <w2:column dataType="text" id="sHomAdr1" name="sHomAdr1"></w2:column>
                    <w2:column dataType="text" id="sHomAdr2" name="sHomAdr2"></w2:column>
                    <w2:column dataType="text" id="nCrpAdrsChangeNo" name="nCrpAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sCrpZco" name="sCrpZco"></w2:column>
                    <w2:column dataType="text" id="sCrpAdr1" name="sCrpAdr1"></w2:column>
                    <w2:column dataType="text" id="sCrpAdr2" name="sCrpAdr2"></w2:column>
                    <w2:column dataType="text" id="nEtcAdrsChangeNo" name="nEtcAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sEtcZco" name="sEtcZco"></w2:column>
                    <w2:column dataType="text" id="sEtcAdr1" name="sEtcAdr1"></w2:column>
                    <w2:column dataType="text" id="sEtcAdr2" name="sEtcAdr2"></w2:column>
                    <w2:column dataType="text" id="sAdrsType" name="sAdrsType"></w2:column>
                    <w2:column dataType="text" id="nAdrsChangeNo" name="nAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sAdrsZco" name="sAdrsZco"></w2:column>
                    <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                    <w2:column dataType="text" id="sAdrs2" name="sAdrs2"></w2:column>
                    <w2:column dataType="text" id="sDMAdrsTyp" name="sDMAdrsTyp"></w2:column>
                    <w2:column dataType="text" id="nTelChangeNo" name="nTelChangeNo"></w2:column>
                    <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                    <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                    <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                    <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                    <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                    <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                    <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                    <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                    <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                    <w2:column dataType="text" id="sEtcType" name="sEtcType"></w2:column>
                    <w2:column dataType="text" id="sEtcTel1" name="sEtcTel1"></w2:column>
                    <w2:column dataType="text" id="sEtcTel2" name="sEtcTel2"></w2:column>
                    <w2:column dataType="text" id="sEtcTel3" name="sEtcTel3"></w2:column>
                    <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                    <w2:column dataType="text" id="sEmail2" name="sEmail2"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIDA00" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sCrNoType" name="sCrNoType"></w2:column>
                    <w2:column dataType="text" id="sItemCd" name="sItemCd"></w2:column>
                    <w2:column dataType="text" id="sCrNoSeq" name="sCrNoSeq"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sHsecFlagCd" name="sHsecFlagCd"></w2:column>
                    <w2:column dataType="text" id="sSaleChnlFlagCd" name="sSaleChnlFlagCd"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sBunsAchvDgrmClsfCd" name="sBunsAchvDgrmClsfCd"></w2:column>
                    <w2:column dataType="text" id="sApplDclrRato" name="sApplDclrRato"></w2:column>
                    <w2:column dataType="text" id="sDvdnFlagCd" name="sDvdnFlagCd"></w2:column>
                    <w2:column dataType="text" id="sPpayAvaYn" name="sPpayAvaYn"></w2:column>
                    <w2:column dataType="text" id="sTaxPrfrYn" name="sTaxPrfrYn"></w2:column>
                    <w2:column dataType="text" id="sCrStatCd" name="sCrStatCd"></w2:column>
                    <w2:column dataType="text" id="sCrStatFlgcd" name="sCrStatFlgcd"></w2:column>
                    <w2:column dataType="text" id="nCrStatCarrSeqno" name="nCrStatCarrSeqno"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sSsrtDate" name="sSsrtDate"></w2:column>
                    <w2:column dataType="text" id="sCpayDate" name="sCpayDate"></w2:column>
                    <w2:column dataType="text" id="sPaymExptDate" name="sPaymExptDate"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nDefrYct" name="nDefrYct"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sPaymCyclCd" name="sPaymCyclCd"></w2:column>
                    <w2:column dataType="text" id="sCmMetd" name="sCmMetd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nBussPrem" name="nBussPrem"></w2:column>
                    <w2:column dataType="text" id="nDcPrem" name="nDcPrem"></w2:column>
                    <w2:column dataType="text" id="nApplPrem" name="nApplPrem"></w2:column>
                    <w2:column dataType="text" id="nMinPrem" name="nMinPrem"></w2:column>
                    <w2:column dataType="text" id="nMaxPrem" name="nMaxPrem"></w2:column>
                    <w2:column dataType="text" id="sPsnGroupFlgcd" name="sPsnGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="sGroupCrAdmNo" name="sGroupCrAdmNo"></w2:column>
                    <w2:column dataType="text" id="sBsmnRgstNo" name="sBsmnRgstNo"></w2:column>
                    <w2:column dataType="text" id="sAnntOpnAgeCd" name="sAnntOpnAgeCd"></w2:column>
                    <w2:column dataType="text" id="sAnntPymTermCd" name="sAnntPymTermCd"></w2:column>
                    <w2:column dataType="text" id="sAnntPymCyclCd" name="sAnntPymCyclCd"></w2:column>
                    <w2:column dataType="text" id="sAnntPymTypeCd" name="sAnntPymTypeCd"></w2:column>
                    <w2:column dataType="text" id="sAnntPymStrtDate" name="sAnntPymStrtDate"></w2:column>
                    <w2:column dataType="text" id="nAnntPymCt" name="nAnntPymCt"></w2:column>
                    <w2:column dataType="text" id="nFinalPaymSeq" name="nFinalPaymSeq"></w2:column>
                    <w2:column dataType="text" id="sFinalPaymMthy" name="sFinalPaymMthy"></w2:column>
                    <w2:column dataType="text" id="sFinalRecpDate" name="sFinalRecpDate"></w2:column>
                    <w2:column dataType="text" id="nTotPaymPrem" name="nTotPaymPrem"></w2:column>
                    <w2:column dataType="text" id="sInsurCrLoanYn" name="sInsurCrLoanYn"></w2:column>
                    <w2:column dataType="text" id="sFinalReviDate" name="sFinalReviDate"></w2:column>
                    <w2:column dataType="text" id="sLapsDate" name="sLapsDate"></w2:column>
                    <w2:column dataType="text" id="sFrstSaleChnlCd" name="sFrstSaleChnlCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerHdqtCd" name="sFrstDoerHdqtCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerCentrCd" name="sFrstDoerCentrCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerTeamCd" name="sFrstDoerTeamCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerGroupCd" name="sFrstDoerGroupCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerPartCd" name="sFrstDoerPartCd"></w2:column>
                    <w2:column dataType="text" id="sFrstDoer" name="sFrstDoer"></w2:column>
                    <w2:column dataType="text" id="sFrstDoerUser" name="sFrstDoerUser"></w2:column>
                    <w2:column dataType="text" id="sDoer" name="sDoer"></w2:column>
                    <w2:column dataType="text" id="sDoerUser" name="sDoerUser"></w2:column>
                    <w2:column dataType="text" id="sCrNo" name="sCrNo"></w2:column>
                    <w2:column dataType="text" id="sPlanProgRankCd" name="sPlanProgRankCd"></w2:column>
                    <w2:column dataType="text" id="sPlanProgTbNo" name="sPlanProgTbNo"></w2:column>
                    <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                    <w2:column dataType="text" id="sJugmGradCd" name="sJugmGradCd"></w2:column>
                    <w2:column dataType="text" id="sConuResltCd" name="sConuResltCd"></w2:column>
                    <w2:column dataType="text" id="sHndwritJugmYn" name="sHndwritJugmYn"></w2:column>
                    <w2:column dataType="text" id="nInrpsPsct" name="nInrpsPsct"></w2:column>
                    <w2:column dataType="text" id="nObjtNum" name="nObjtNum"></w2:column>
                    <w2:column dataType="text" id="nGroupInsPsct" name="nGroupInsPsct"></w2:column>
                    <w2:column dataType="text" id="sCedeStndYm" name="sCedeStndYm"></w2:column>
                    <w2:column dataType="text" id="nEndRtnrt" name="nEndRtnrt"></w2:column>
                    <w2:column dataType="text" id="nExptEndRetrnAmt" name="nExptEndRetrnAmt"></w2:column>
                    <w2:column dataType="text" id="nExptEndRtnrt" name="nExptEndRtnrt"></w2:column>
                    <w2:column dataType="text" id="sPectSaleYn" name="sPectSaleYn"></w2:column>
                    <w2:column dataType="text" id="sScanObjtYn" name="sScanObjtYn"></w2:column>
                    <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                    <w2:column dataType="text" id="sSaleChnlDtal" name="sSaleChnlDtal"></w2:column>
                    <w2:column dataType="text" id="sInsurTermPaymTermName" name="sInsurTermPaymTermName"></w2:column>
                    <w2:column dataType="text" id="gUserID" name="gUserID"></w2:column>
                    <w2:column dataType="text" id="gUserIP" name="gUserIP"></w2:column>
                    <w2:column dataType="text" id="sPlanProgRankName" name="sPlanProgRankName"></w2:column>
                    <w2:column dataType="text" id="sConuResltName" name="sConuResltName"></w2:column>
                    <w2:column dataType="text" id="sGdTypeFlgCd" name="sGdTypeFlgCd"></w2:column>
                    <w2:column dataType="text" id="sTaxPrfrGdYn" name="sTaxPrfrGdYn"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt1" name="nEndRtnAmtCalElmnt1"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt2" name="nEndRtnAmtCalElmnt2"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt3" name="nEndRtnAmtCalElmnt3"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt4" name="nEndRtnAmtCalElmnt4"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt5" name="nEndRtnAmtCalElmnt5"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt6" name="nEndRtnAmtCalElmnt6"></w2:column>
                    <w2:column dataType="text" id="sSrdoIssuDate" name="sSrdoIssuDate"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt10" name="nEndRtnAmtCalElmnt10"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt21" name="nEndRtnAmtCalElmnt21"></w2:column>
                    <w2:column dataType="text" id="nEndRtnAmtCalElmnt22" name="nEndRtnAmtCalElmnt22"></w2:column>
                    <w2:column dataType="text" id="nAddPaymPrem" name="nAddPaymPrem"></w2:column>
                    <w2:column dataType="text" id="sDrivFlagCd" name="sDrivFlagCd"></w2:column>
                </w2:columnInfo>
                <w2:data use="true">
                    <w2:row>
                        <gUserID></gUserID>
                        <gUserIP></gUserIP>
                        <nAccuPrem></nAccuPrem>
                        <nAddPaymPrem></nAddPaymPrem>
                        <nAnntPymCt></nAnntPymCt>
                        <nApplPrem></nApplPrem>
                        <nBussPrem></nBussPrem>
                        <nCrChngNo></nCrChngNo>
                        <nCrStatCarrSeqno></nCrStatCarrSeqno>
                        <nDcPrem></nDcPrem>
                        <nDefrYct></nDefrYct>
                        <nEndAge></nEndAge>
                        <nEndRtnAmtCalElmnt1></nEndRtnAmtCalElmnt1>
                        <nEndRtnAmtCalElmnt10></nEndRtnAmtCalElmnt10>
                        <nEndRtnAmtCalElmnt2></nEndRtnAmtCalElmnt2>
                        <nEndRtnAmtCalElmnt21></nEndRtnAmtCalElmnt21>
                        <nEndRtnAmtCalElmnt22></nEndRtnAmtCalElmnt22>
                        <nEndRtnAmtCalElmnt3></nEndRtnAmtCalElmnt3>
                        <nEndRtnAmtCalElmnt4></nEndRtnAmtCalElmnt4>
                        <nEndRtnAmtCalElmnt5></nEndRtnAmtCalElmnt5>
                        <nEndRtnAmtCalElmnt6></nEndRtnAmtCalElmnt6>
                        <nEndRtnrt></nEndRtnrt>
                        <nExptEndRetrnAmt></nExptEndRetrnAmt>
                        <nExptEndRtnrt></nExptEndRtnrt>
                        <nFinalPaymSeq></nFinalPaymSeq>
                        <nGrntPrem></nGrntPrem>
                        <nGroupInsPsct></nGroupInsPsct>
                        <nInrpsPsct></nInrpsPsct>
                        <nMaxPrem></nMaxPrem>
                        <nMinPrem></nMinPrem>
                        <nObjtNum></nObjtNum>
                        <nPaymAge></nPaymAge>
                        <nRealInsurTerm></nRealInsurTerm>
                        <nRealPaymTerm></nRealPaymTerm>
                        <nTotPaymPrem></nTotPaymPrem>
                        <sAnntOpnAgeCd></sAnntOpnAgeCd>
                        <sAnntPymCyclCd></sAnntPymCyclCd>
                        <sAnntPymStrtDate></sAnntPymStrtDate>
                        <sAnntPymTermCd></sAnntPymTermCd>
                        <sAnntPymTypeCd></sAnntPymTypeCd>
                        <sApplDclrRato></sApplDclrRato>
                        <sApplPlanCd></sApplPlanCd>
                        <sApplPlanName></sApplPlanName>
                        <sBsmnRgstNo></sBsmnRgstNo>
                        <sBunsAchvDgrmClsfCd></sBunsAchvDgrmClsfCd>
                        <sCedeStndYm></sCedeStndYm>
                        <sCmMetd></sCmMetd>
                        <sConuResltCd></sConuResltCd>
                        <sConuResltName></sConuResltName>
                        <sCpayDate></sCpayDate>
                        <sCrNo></sCrNo>
                        <sCrNoSeq></sCrNoSeq>
                        <sCrNoType></sCrNoType>
                        <sCrStatCd></sCrStatCd>
                        <sCrStatFlgcd></sCrStatFlgcd>
                        <sDoer></sDoer>
                        <sDoerUser></sDoerUser>
                        <sDrivFlagCd></sDrivFlagCd>
                        <sDvdnFlagCd></sDvdnFlagCd>
                        <sFinalPaymMthy></sFinalPaymMthy>
                        <sFinalRecpDate></sFinalRecpDate>
                        <sFinalReviDate></sFinalReviDate>
                        <sFrstDoer></sFrstDoer>
                        <sFrstDoerCentrCd></sFrstDoerCentrCd>
                        <sFrstDoerGroupCd></sFrstDoerGroupCd>
                        <sFrstDoerHdqtCd></sFrstDoerHdqtCd>
                        <sFrstDoerPartCd></sFrstDoerPartCd>
                        <sFrstDoerTeamCd></sFrstDoerTeamCd>
                        <sFrstDoerUser></sFrstDoerUser>
                        <sFrstSaleChnlCd></sFrstSaleChnlCd>
                        <sGdCd></sGdCd>
                        <sGdTypeFlgCd></sGdTypeFlgCd>
                        <sGnrzCd></sGnrzCd>
                        <sGroupCrAdmNo></sGroupCrAdmNo>
                        <sHndwritJugmYn></sHndwritJugmYn>
                        <sHsecFlagCd></sHsecFlagCd>
                        <sInsurCrLoanYn></sInsurCrLoanYn>
                        <sInsurEndDate></sInsurEndDate>
                        <sInsurStrtdate></sInsurStrtdate>
                        <sInsurTermCd></sInsurTermCd>
                        <sInsurTermPaymTermName></sInsurTermPaymTermName>
                        <sItemCd></sItemCd>
                        <sJugmAuthCd></sJugmAuthCd>
                        <sJugmGradCd></sJugmGradCd>
                        <sLapsDate></sLapsDate>
                        <sPaymCyclCd></sPaymCyclCd>
                        <sPaymExptDate></sPaymExptDate>
                        <sPaymTermCd></sPaymTermCd>
                        <sPectSaleYn></sPectSaleYn>
                        <sPlanNo></sPlanNo>
                        <sPlanProgRankCd></sPlanProgRankCd>
                        <sPlanProgRankName></sPlanProgRankName>
                        <sPlanProgTbNo></sPlanProgTbNo>
                        <sPpayAvaYn></sPpayAvaYn>
                        <sPsnGroupFlgcd></sPsnGroupFlgcd>
                        <sSaleChnlDtal></sSaleChnlDtal>
                        <sSaleChnlFlagCd></sSaleChnlFlagCd>
                        <sScanObjtYn></sScanObjtYn>
                        <sSrdoIssuDate></sSrdoIssuDate>
                        <sSsrtDate></sSsrtDate>
                        <sTaxPrfrGdYn></sTaxPrfrGdYn>
                        <sTaxPrfrYn></sTaxPrfrYn>
                    </w2:row>
                </w2:data>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIEA10" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIEA10']/LTIEA10"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Backup" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIDA15" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nSeqno" name="nSeqno"></w2:column>
                    <w2:column dataType="text" id="sCcndFlagCd" name="sCcndFlagCd"></w2:column>
                    <w2:column dataType="text" id="sCcndFlagName" name="sCcndFlagName"></w2:column>
                    <w2:column dataType="text" id="sCcndResno" name="sCcndResno"></w2:column>
                    <w2:column dataType="text" id="sCcndName" name="sCcndName"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                    <w2:column dataType="text" id="sJugmAuthName" name="sJugmAuthName"></w2:column>
                    <w2:column dataType="text" id="sJugmGradName" name="sJugmGradName"></w2:column>
                    <w2:column dataType="text" id="sJugmCont" name="sJugmCont"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                    <w2:column dataType="text" id="sConuObjtYn" name="sConuObjtYn"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="nOthrInsurSeqno" name="nOthrInsurSeqno"></w2:column>
                    <w2:column dataType="text" id="nGroupInrpsSeqno" name="nGroupInrpsSeqno"></w2:column>
                    <w2:column dataType="text" id="sRqstCd" name="sRqstCd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Tmp" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="Trtygp" name="Trtygp"></w2:column>
                    <w2:column dataType="text" id="TrtyObjtFlag" name="TrtyObjtFlag"></w2:column>
                    <w2:column dataType="text" id="sFlag1" name="sFlag1"></w2:column>
                    <w2:column dataType="text" id="sFlag2" name="sFlag2"></w2:column>
                    <w2:column dataType="text" id="sFlag3" name="sFlag3"></w2:column>
                    <w2:column dataType="text" id="sFlag4" name="sFlag4"></w2:column>
                    <w2:column dataType="text" id="sFlag5" name="sFlag5"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag1" name="StndPremTablFlag1"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag2" name="StndPremTablFlag2"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag3" name="StndPremTablFlag3"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag4" name="StndPremTablFlag4"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag5" name="StndPremTablFlag5"></w2:column>
                    <w2:column dataType="text" id="PremCalcFomlFlag" name="PremCalcFomlFlag"></w2:column>
                    <w2:column dataType="text" id="nPs1CmpsLmitAmt" name="nPs1CmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="nTotCmpsLmitAmt" name="nTotCmpsLmitAmt"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" ev:oncelldatachange="scwin.Ds_Pibo_OnColumnChanged" id="Ds_Pibo" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sel" name="sel"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                    <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                    <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                    <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
                    <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                    <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
                    <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                    <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
                    <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                    <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                    <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nMaxPrem" name="nMaxPrem"></w2:column>
                    <w2:column dataType="text" id="nMinPrem" name="nMinPrem"></w2:column>
                    <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
                    <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
                    <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
                    <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
                    <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
                    <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
                    <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
                    <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
                    <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                    <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                    <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                    <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                    <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                    <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
                    <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                    <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpCd" name="sXcptPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpName" name="sXcptPftbpName"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpTelno" name="sXcptPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpFlagCd" name="sXcptPftbpFlagCd"></w2:column>
                    <w2:column dataType="text" id="nManAge" name="nManAge"></w2:column>
                    <w2:column dataType="text" id="sPiboDrivCd" name="sPiboDrivCd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:linkedDataList id="Ds_InsAmt" bind="Dsws_InsAmt"></w2:linkedDataList>
            <w2:dataList baseNode="list" id="Ds_InsAmt_Tmp" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Pibo_BackUp" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                    <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                    <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                    <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                    <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                    <w2:column dataType="text" id="fixFlag" name="fixFlag"></w2:column>
                    <w2:column dataType="text" id="MediFlag" name="MediFlag"></w2:column>
                    <w2:column dataType="text" id="hasPronCmpsTrty" name="hasPronCmpsTrty"></w2:column>
                    <w2:column dataType="text" id="hasFxamtCmps" name="hasFxamtCmps"></w2:column>
                    <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                    <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Pibo_Tmp" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sOnlyPrprtYn" name="sOnlyPrprtYn"></w2:column>
                    <w2:column dataType="text" id="sel" name="sel"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                    <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                    <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                    <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
                    <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                    <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
                    <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                    <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
                    <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
                    <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                    <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                    <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nMaxPrem" name="nMaxPrem"></w2:column>
                    <w2:column dataType="text" id="nMinPrem" name="nMinPrem"></w2:column>
                    <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
                    <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
                    <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
                    <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
                    <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
                    <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
                    <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
                    <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
                    <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                    <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                    <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                    <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                    <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                    <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
                    <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                    <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpCd" name="sXcptPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpName" name="sXcptPftbpName"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpTelno" name="sXcptPftbpTelno"></w2:column>
                    <w2:column dataType="text" id="sXcptPftbpFlagCd" name="sXcptPftbpFlagCd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Set" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="Trtygp" name="Trtygp"></w2:column>
                    <w2:column dataType="text" id="TrtyObjtFlag" name="TrtyObjtFlag"></w2:column>
                    <w2:column dataType="text" id="sFlag1" name="sFlag1"></w2:column>
                    <w2:column dataType="text" id="sFlag2" name="sFlag2"></w2:column>
                    <w2:column dataType="text" id="sFlag3" name="sFlag3"></w2:column>
                    <w2:column dataType="text" id="sFlag4" name="sFlag4"></w2:column>
                    <w2:column dataType="text" id="sFlag5" name="sFlag5"></w2:column>
                    <w2:column dataType="text" id="PremCalcFomlFlag" name="PremCalcFomlFlag"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Save" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="Trtygp" name="Trtygp"></w2:column>
                    <w2:column dataType="text" id="TrtyObjtFlag" name="TrtyObjtFlag"></w2:column>
                    <w2:column dataType="text" id="sFlag1" name="sFlag1"></w2:column>
                    <w2:column dataType="text" id="sFlag2" name="sFlag2"></w2:column>
                    <w2:column dataType="text" id="sFlag3" name="sFlag3"></w2:column>
                    <w2:column dataType="text" id="sFlag4" name="sFlag4"></w2:column>
                    <w2:column dataType="text" id="sFlag5" name="sFlag5"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag1" name="StndPremTablFlag1"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag2" name="StndPremTablFlag2"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag3" name="StndPremTablFlag3"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag4" name="StndPremTablFlag4"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag5" name="StndPremTablFlag5"></w2:column>
                    <w2:column dataType="text" id="PremCalcFomlFlag" name="PremCalcFomlFlag"></w2:column>
                    <w2:column dataType="text" id="nPs1CmpsLmitAmt" name="nPs1CmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="nTotCmpsLmitAmt" name="nTotCmpsLmitAmt"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Basic" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Prprt" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sel1" name="sel1"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nInsrdObjctSeqno" name="nInsrdObjctSeqno"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCd" name="sInsBntpCd"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCdMcls" name="sInsBntpCdMcls"></w2:column>
                    <w2:column dataType="text" id="sInsBntpObjtFlagCd" name="sInsBntpObjtFlagCd"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpCd" name="sRatoBntpCd"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpCdMcls" name="sRatoBntpCdMcls"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpObjtFlagCd" name="sRatoBntpObjtFlagCd"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrt" name="sBuldgStrt"></w2:column>
                    <w2:column dataType="text" id="sPoleTypeCd" name="sPoleTypeCd"></w2:column>
                    <w2:column dataType="text" id="sExtrnWlTypeCd" name="sExtrnWlTypeCd"></w2:column>
                    <w2:column dataType="text" id="sRoofTypeCd" name="sRoofTypeCd"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrtGradCd" name="sBuldgStrtGradCd"></w2:column>
                    <w2:column dataType="text" id="nInsArea" name="nInsArea"></w2:column>
                    <w2:column dataType="text" id="nBuldgGrodFlct" name="nBuldgGrodFlct"></w2:column>
                    <w2:column dataType="text" id="nBuldgUndgFlct" name="nBuldgUndgFlct"></w2:column>
                    <w2:column dataType="text" id="sObjctGrodUndgFlagCd" name="sObjctGrodUndgFlagCd"></w2:column>
                    <w2:column dataType="text" id="nObjctRelvFlct" name="nObjctRelvFlct"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCdName" name="sInsBntpCdName"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpName" name="sRatoBntpName"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgFlagCd" name="sSpclBuldgFlagCd"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgNo" name="sSpclBuldgNo"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgTypeCd" name="sSpclBuldgTypeCd"></w2:column>
                    <w2:column dataType="text" id="sEmplSubCvrgeInsYn" name="sEmplSubCvrgeInsYn"></w2:column>
                    <w2:column dataType="text" id="sEqmtOwnRprtnBntpCd" name="sEqmtOwnRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="sEqmtScal" name="sEqmtScal"></w2:column>
                    <w2:column dataType="text" id="sSchlMngrRprtnBntpCd" name="sSchlMngrRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="nStuNum" name="nStuNum"></w2:column>
                    <w2:column dataType="text" id="sParkEqmtFlagCd" name="sParkEqmtFlagCd"></w2:column>
                    <w2:column dataType="text" id="nPrkLtArea" name="nPrkLtArea"></w2:column>
                    <w2:column dataType="text" id="nParkAvaCarNum" name="nParkAvaCarNum"></w2:column>
                    <w2:column dataType="text" id="nPrkLtMachNum" name="nPrkLtMachNum"></w2:column>
                    <w2:column dataType="text" id="sFoodRprtnBntpCd" name="sFoodRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="nBfyySaleAmt" name="nBfyySaleAmt"></w2:column>
                    <w2:column dataType="text" id="sGasRprtnBntpCd" name="sGasRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="sGasRprtnAreaFlagCd" name="sGasRprtnAreaFlagCd"></w2:column>
                    <w2:column dataType="text" id="sGasEqmtCpctFlagCd" name="sGasEqmtCpctFlagCd"></w2:column>
                    <w2:column dataType="text" id="sCityGasUseFlagCd" name="sCityGasUseFlagCd"></w2:column>
                    <w2:column dataType="text" id="sGasEqmtUndgLctnYn" name="sGasEqmtUndgLctnYn"></w2:column>
                    <w2:column dataType="text" id="sAgreRestTermCd" name="sAgreRestTermCd"></w2:column>
                    <w2:column dataType="text" id="sOwnrFlagCd" name="sOwnrFlagCd"></w2:column>
                    <w2:column dataType="text" id="sOwnrDscrNo" name="sOwnrDscrNo"></w2:column>
                    <w2:column dataType="text" id="sOwnrNm" name="sOwnrNm"></w2:column>
                    <w2:column dataType="text" id="sCrtorReln" name="sCrtorReln"></w2:column>
                    <w2:column dataType="text" id="sAccptPlac" name="sAccptPlac"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrtGradCdNm" name="sBuldgStrtGradCdNm"></w2:column>
                    <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="Trtygp" name="Trtygp"></w2:column>
                    <w2:column dataType="text" id="TrtyObjtFlag" name="TrtyObjtFlag"></w2:column>
                    <w2:column dataType="text" id="sFlag1" name="sFlag1"></w2:column>
                    <w2:column dataType="text" id="sFlag2" name="sFlag2"></w2:column>
                    <w2:column dataType="text" id="sFlag3" name="sFlag3"></w2:column>
                    <w2:column dataType="text" id="sFlag4" name="sFlag4"></w2:column>
                    <w2:column dataType="text" id="sFlag5" name="sFlag5"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag1" name="StndPremTablFlag1"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag2" name="StndPremTablFlag2"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag3" name="StndPremTablFlag3"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag4" name="StndPremTablFlag4"></w2:column>
                    <w2:column dataType="text" id="StndPremTablFlag5" name="StndPremTablFlag5"></w2:column>
                    <w2:column dataType="text" id="PremCalcFomlFlag" name="PremCalcFomlFlag"></w2:column>
                    <w2:column dataType="text" id="nPs1CmpsLmitAmt" name="nPs1CmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt"></w2:column>
                    <w2:column dataType="text" id="nTotCmpsLmitAmt" name="nTotCmpsLmitAmt"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Prprt_Flag" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="nInsrdObjctSeqno" name="nInsrdObjctSeqno"></w2:column>
                    <w2:column dataType="text" id="Cd" name="Cd"></w2:column>
                    <w2:column dataType="text" id="Value" name="Value"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Prprt_Backup" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sel1" name="sel1"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nInsrdObjctSeqno" name="nInsrdObjctSeqno"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCd" name="sInsBntpCd"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCdMcls" name="sInsBntpCdMcls"></w2:column>
                    <w2:column dataType="text" id="sInsBntpObjtFlagCd" name="sInsBntpObjtFlagCd"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpCd" name="sRatoBntpCd"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpCdMcls" name="sRatoBntpCdMcls"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpObjtFlagCd" name="sRatoBntpObjtFlagCd"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrt" name="sBuldgStrt"></w2:column>
                    <w2:column dataType="text" id="sPoleTypeCd" name="sPoleTypeCd"></w2:column>
                    <w2:column dataType="text" id="sExtrnWlTypeCd" name="sExtrnWlTypeCd"></w2:column>
                    <w2:column dataType="text" id="sRoofTypeCd" name="sRoofTypeCd"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrtGradCd" name="sBuldgStrtGradCd"></w2:column>
                    <w2:column dataType="text" id="nInsArea" name="nInsArea"></w2:column>
                    <w2:column dataType="text" id="nBuldgGrodFlct" name="nBuldgGrodFlct"></w2:column>
                    <w2:column dataType="text" id="nBuldgUndgFlct" name="nBuldgUndgFlct"></w2:column>
                    <w2:column dataType="text" id="sObjctGrodUndgFlagCd" name="sObjctGrodUndgFlagCd"></w2:column>
                    <w2:column dataType="text" id="nObjctRelvFlct" name="nObjctRelvFlct"></w2:column>
                    <w2:column dataType="text" id="sInsBntpCdName" name="sInsBntpCdName"></w2:column>
                    <w2:column dataType="text" id="sRatoBntpName" name="sRatoBntpName"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgFlagCd" name="sSpclBuldgFlagCd"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgNo" name="sSpclBuldgNo"></w2:column>
                    <w2:column dataType="text" id="sSpclBuldgTypeCd" name="sSpclBuldgTypeCd"></w2:column>
                    <w2:column dataType="text" id="sEmplSubCvrgeInsYn" name="sEmplSubCvrgeInsYn"></w2:column>
                    <w2:column dataType="text" id="sEqmtOwnRprtnBntpCd" name="sEqmtOwnRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="sEqmtScal" name="sEqmtScal"></w2:column>
                    <w2:column dataType="text" id="sSchlMngrRprtnBntpCd" name="sSchlMngrRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="nStuNum" name="nStuNum"></w2:column>
                    <w2:column dataType="text" id="sParkEqmtFlagCd" name="sParkEqmtFlagCd"></w2:column>
                    <w2:column dataType="text" id="nPrkLtArea" name="nPrkLtArea"></w2:column>
                    <w2:column dataType="text" id="nParkAvaCarNum" name="nParkAvaCarNum"></w2:column>
                    <w2:column dataType="text" id="nPrkLtMachNum" name="nPrkLtMachNum"></w2:column>
                    <w2:column dataType="text" id="sFoodRprtnBntpCd" name="sFoodRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="nBfyySaleAmt" name="nBfyySaleAmt"></w2:column>
                    <w2:column dataType="text" id="sGasRprtnBntpCd" name="sGasRprtnBntpCd"></w2:column>
                    <w2:column dataType="text" id="sGasRprtnAreaFlagCd" name="sGasRprtnAreaFlagCd"></w2:column>
                    <w2:column dataType="text" id="sGasEqmtCpctFlagCd" name="sGasEqmtCpctFlagCd"></w2:column>
                    <w2:column dataType="text" id="sCityGasUseFlagCd" name="sCityGasUseFlagCd"></w2:column>
                    <w2:column dataType="text" id="sGasEqmtUndgLctnYn" name="sGasEqmtUndgLctnYn"></w2:column>
                    <w2:column dataType="text" id="sAgreRestTermCd" name="sAgreRestTermCd"></w2:column>
                    <w2:column dataType="text" id="sOwnrFlagCd" name="sOwnrFlagCd"></w2:column>
                    <w2:column dataType="text" id="sOwnrDscrNo" name="sOwnrDscrNo"></w2:column>
                    <w2:column dataType="text" id="sOwnrNm" name="sOwnrNm"></w2:column>
                    <w2:column dataType="text" id="sCrtorReln" name="sCrtorReln"></w2:column>
                    <w2:column dataType="text" id="sAccptPlac" name="sAccptPlac"></w2:column>
                    <w2:column dataType="text" id="sBuldgStrtGradCdNm" name="sBuldgStrtGradCdNm"></w2:column>
                    <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                    <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_InsAmt_501" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_test" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="nTrtyInsAmt1" name="nTrtyInsAmt1"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt2" name="nTrtyInsAmt2"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIDB01Cnt" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt"></w2:dataList>
            <w2:dataList baseNode="list" id="Dsws_InsAmt" repeatNode="map" userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi">
            	<w2:columnInfo>
                    <w2:column dataType="text" id="sCdAttrValue" name="sCdAttrValue"></w2:column>
                    <w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sCd" name="sCd"></w2:column>
                    <w2:column dataType="text" id="sEngCdName" name="sEngCdName"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:linkedDataList id="lk_InsAmt" bind="Dsws_InsAmt">
           		<w2:condition type="filter"><![CDATA[sTrtyCd==ref('data:Ds_Trty.sTrtyCd')]]></w2:condition>
           	</w2:linkedDataList>
            <w2:dataList baseNode="list" id="DsWs_Pibo" repeatNode="map" userData2="//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Bogi" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_InsurTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_PaymCycl" repeatNode="map" userData2="//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Plan" repeatNode="map" userData2="//hashtable/data[@hashkey='applPlanList']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Trty" repeatNode="map" userData2="//hashtable/data[@hashkey='multi']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_PaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Napgi" repeatNode="map" userData2="//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_PrdAttr" repeatNode="map" userData2="//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_InsurTermPaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIDA15" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Goods" repeatNode="map" userData2="//*/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:linkedDataList id="Ds_TrtyTerm" bind="DsWs_TrtyTerm"></w2:linkedDataList>
            <w2:linkedDataList id="lk_TrtyTerm" bind="DsWs_TrtyTerm">
           		<w2:condition type="filter"><![CDATA[sTrtyCd==ref('data:Ds_Trty.sTrtyCd')]]></w2:condition>
           	</w2:linkedDataList>
            <w2:dataList baseNode="list" id="DsWs_AgencyHistory" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_MinsrReln" repeatNode="map" userData2="//hashtable/data[@hashkey='MinsrReln']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Search42" repeatNode="map" userData2="//*/CUSAA42"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_BascTrty" repeatNode="map" userData2="//hashtable/data[@hashkey='BascList']/vector/data/LTIBA01"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_BankBizDay" repeatNode="map" userData2="//*/ACCAB02"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Prprt" repeatNode="map" userData2="//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_AsmtInsAmt" repeatNode="map" userData2="//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Dmcy" repeatNode="map" userData2="//*/DMCY"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_PvcrJob" repeatNode="map" userData2="//vector/data/LTIEA01Job">
            	<w2:columnInfo>
					<w2:column id="sJobCd" name="" dataType="text" ></w2:column>
					<w2:column id="sInrpsCd" name="" dataType="text" ></w2:column>
					<w2:column id="sJobName" name="" dataType="text" ></w2:column>
					<w2:column id="sCrNo" name="" dataType="text" ></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_SsrtCarr" repeatNode="map" userData2="//vector/data/LTIEA01Carr"></w2:dataList>
		    <w2:dataList baseNode="list" id="DsWs_CmCd" repeatNode="map">
	    		<w2:columnInfo>
	    			<w2:column dataType="text" id="sClsfCd" name="sClsfCd"></w2:column>
	    			<w2:column dataType="text" id="sCdType" name="sCdType"></w2:column>
	    			<w2:column dataType="text" id="sCd" name="sCd"></w2:column>
	    			<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"></w2:column>
	    		</w2:columnInfo>
	   		</w2:dataList>
	   		<w2:linkedDataList id="DsWs_Drive" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="DrivFlagCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_FlagCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="CcndFlagCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_Grade" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="JobGradCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_CrtorRelnCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="CrtorRelnCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_GrodUndg" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="ObjctGrodUndgFlagCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_BuldgStrtGradCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="S03"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_PoleTypeCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="PoleTypeCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_ExtrnWlTypeCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="ExtrnWlTypeCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_RoofTypeCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="RoofTypeCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_BntpCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="S70"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_BntpLargClsfCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="S71"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:dataList baseNode="list" id="Ds_LTIDA03" repeatNode="map"></w2:dataList>
           	<w2:dataMap baseNode="map" id="TrtyCmpsContAmtLimitVo">
				<w2:keyInfo>
					<w2:key id="gdCd" name="gdCd" dataType="text"></w2:key>
					<w2:key id="gnrzCd" name="gnrzCd" dataType="text"></w2:key>
					<w2:key id="planCd" name="planCd" dataType="text"></w2:key>
					<w2:key id="ssrtDate" name="ssrtDate" dataType="text"></w2:key>
					<w2:key id="trtyCd" name="trtyCd" dataType="text"></w2:key>
					<w2:key id="trtyInsAmt" name="trtyInsAmt" dataType="text"></w2:key>
					<w2:key id="ps1CmpsLmitAmt" name="ps1CmpsLmitAmt" dataType="text"></w2:key>
					<w2:key id="accd1CmpsLmitAmt" name="accd1CmpsLmitAmt" dataType="text"></w2:key>
					<w2:key id="totCmpsLmitAmt" name="totCmpsLmitAmt" dataType="text"></w2:key>
					<w2:key id="selfChamt" name="selfChamt" dataType="text"></w2:key>
				</w2:keyInfo>
			</w2:dataMap>
			<w2:dataList baseNode="list" id="TrtyCmpsContAmtLimitDtalVo" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="amtAftrPrgp" name="amtAftrPrgp" dataType="text"></w2:column>
					<w2:column id="amtSpclGu" name="amtSpclGu" dataType="text"></w2:column>
					<w2:column id="bosangAmt" name="bosangAmt" dataType="text"></w2:column>
					<w2:column id="calcStnd" name="calcStnd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd" name="connCvrgeCd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd1" name="connCvrgeCd1" dataType="text"></w2:column>
					<w2:column id="conts" name="conts" dataType="text"></w2:column>
					<w2:column id="cvrgeCd" name="cvrgeCd" dataType="text"></w2:column>
					<w2:column id="cvrgeName" name="cvrgeName" dataType="text"></w2:column>
					<w2:column id="pymStndSpec" name="pymStndSpec" dataType="text"></w2:column>
					<w2:column id="seqno" name="seqno" dataType="text"></w2:column>
					<w2:column id="stndVarb" name="stndVarb" dataType="text"></w2:column>
					<w2:column id="stndVarb1" name="stndVarb1" dataType="text"></w2:column>
					<w2:column id="trtyCd" name="trtyCd" dataType="text"></w2:column>
					<w2:column id="trtyName" name="trtyName" dataType="text"></w2:column>
					<w2:column id="unit" name="unit" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList id="DS_TrtyCmpsContAmtLimitInfo" baseNode="list" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="sTrtyCd" name="sTrtyCd" dataType="text"></w2:column>
					<w2:column id="nTrtyInsAmt" name="nTrtyInsAmt" dataType="text"></w2:column>
					<w2:column id="sInfo" name="sInfo" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Warning" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
		</w2:dataCollection>
	</xf:model>
	<script src="/cm/js/convertJs/Global_Script.js"/>
    <script src="/cm/js/convertJs/comm_Webservice.js"/>
    <script src="/cm/js/convertJs/NewGen_Script.js"/>
    <script src="/cm/js/convertJs/LongTerm_Script.js"/>
    <script src="/cm/js/convertJs/Marine_Script.js"/>
	<script type="javascript"><![CDATA[
	var sGdCd;  //상품코드
	var sGnrzCd; //종형코드
	var sPlanCd = "00"; //플랜코드
	var nMaxPrem = 0;//최대보험료
	var nMinPrem = 0;//최소보험료
	var sInrpsCd_Backup;//피보험자번호 Backup
	var drive_Backup;//운전용도 Backup
	var oldPlanNo = "";//읽어온청약번호
	var runOnCellPosChanged = true;
	var oldSsrtDate ="";
	var except ="";
	var nInrpsAgeOld = ""; //변경전 보험나이 보관
	var nInrpsAgeNew = ""; //변경후 보험나이 보관
	var nManAgeOld = ""; //변경전 만나이 보관
	var nManAgeNew = ""; //변경후 만나이 보관
	//체크 플래그
	var modifyFlag = false;//화면값중 기존값에서 변경된 경우 체크
	var CalcPremFlag = false; //보험료 계산 체크
	var scmb_plan = false; //프랜변경 flag
	var chkMedical = true;
	
	//---------------------------------------------------------------------------
	// function 명 : B010_Div1_OnLoadCompleted(obj)
	// 내용        : 화면오픈시 처리
	//---------------------------------------------------------------------------
	scwin.init = function(){
		//공통코드dataset에 코드가 없으면 조회해 온다.
	    if (DsWs_CmCd.getRowCount() == 0) {
	        //var dataSets = "DsWs_FlagCd DsWs_Drive DsWs_Grade DsWs_CrtorRelnCd DsWs_GrodUndg DsWs_BuldgStrtGradCd DsWs_PoleTypeCd DsWs_ExtrnWlTypeCd DsWs_RoofTypeCd DsWs_BntpCd DsWs_BntpLargClsfCd";
		    //var columns = "CcndFlagCd DrivFlagCd JobGradCd CrtorRelnCd ObjctGrodUndgFlagCd S03 PoleTypeCd ExtrnWlTypeCd RoofTypeCd S70 S71";
		    //var objects = "cmb_codeHidden cmb_codeHidden cmb_codeHidden cmb_codeHidden cmb_GrodUndg cmb_etc cmb_etc cmb_etc cmb_etc cmb_etc cmb_etc";
		    //var titleTypes = "N"; //A:전체, S:선택, N:안넣기
		    //gfn_getCommonCodes(dataSets, columns, objects, titleTypes);
		    scwin.lfn_commCodeSetting();	
	    }
	    //if (DsWs_GrodUndg.getRowCount() > 0) {
	    //    var insRow = util.insertRow(DsWs_GrodUndg, 0);
	        /*수작업 변환 개발자 가이드(테스트 중)
	        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	    //    DsWs_GrodUndg.setCellData(0, "sHnglCdName", "-선택-");
	    //}
	};
	
	/*-----------------------------------
	// function 명 : scwin.lfn_commCodeSetting
	// 내용        : 공통 코드호출
	-----------------------------------*/
	scwin.lfn_commCodeSetting = function() {
		//json 데이터를 가져와서 DataSet에 바인딩 해준다
	    var json = gfn_getJsonCommonCode("CcndFlagCd DrivFlagCd JobGradCd CrtorRelnCd ObjctGrodUndgFlagCd S03 PoleTypeCd ExtrnWlTypeCd RoofTypeCd S70 S71");
	    if(json != null){
	    	//alert(JSON.stringify(json));
	    	DsWs_CmCd.setJSON(json, false);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_init()
	// 내용        : 화면초기화
	//---------------------------------------------------------------------------
	scwin.fn_init = function() {
		//정기추가납입가능여부
	    if (DsWs_PrdAttr.getCellData(0, "PeriAddPaymPremYn") == "Y") {
	        //Static0.show();
	        //Static0.setStyle("display", "");
	        //medt_nAddPaymPrem.show();
	        //medt_nAddPaymPrem.setStyle("display", "");
	        medt_nAddPaymPrem.setDisabled(false);
	    } else {
	        //Static0.hide();
	        //Static0.setStyle("display", "none");
	        //medt_nAddPaymPrem.hide();
	        //medt_nAddPaymPrem.setStyle("display", "none");
	        medt_nAddPaymPrem.setDisabled(true);
	    }
	
	    //피보험자번호 백업
	    scwin.lfn_backup_Pibo();
	    //wconv.copy(Ds_Prprt_Backup, Ds_Prprt);
	    util.copyM(Ds_Prprt_Backup, Ds_Prprt.getAllJSON());
	};

	//---------------------------------------------------------------------------
	// function 명 : lfn_addRow
	// 내용        : 피보험자 추가
	//---------------------------------------------------------------------------
	var chkMedical = true;
	scwin.lfn_addRow = function(nSeq) {
		//최대피보험목적수 <= 피보험자일때  추가금지
	    if (wconv.length(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        if (parseInt(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) <= Ds_Pibo.getRowCount()) {
	            wprom.alert("피보험자 " + parseInt(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) + "명까지 가입 가능한 상품입니다.");
	            return false;
	        }
	    }
	
	    //청약일이 입력되어 있어야 한다.
	    if (parent.cal_sSsrtDate.getValue().length == 0) {
	        wprom.alert("청약일을 입력해 주세요");
	        parent.cal_sSsrtDate.focus();
	        return false;
	    }
	    
	    //Idle();
	    
	    //Ds_Pibo.FireEvent = false;
	    //Grd_Pibo.FireEvent = false;
	    var arrpibo = util.getDataListEvent(Ds_Pibo);
		util.removeAllDataListEvent(Ds_Pibo);
	    
	    var nCurrow = -1;
	    if (nSeq != undefined && nSeq >= 0) {
	        //var insRow = util.insertRow(Ds_Pibo, nSeq);
	        /*수작업 변환 개발자 가이드(테스트 중)
	        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	        // Dataset에 빈 Record한줄 추가
	        //var insRow = util.insertRow(Ds_Pibo_BackUp, nSeq);
	        /*수작업 변환 개발자 가이드(테스트 중)
	        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	        nCurrow = nSeq;
	        Ds_Pibo.insertRow(nSeq);
	        Ds_Pibo_BackUp.insertRow(nSeq);
	    } else {
	        //util.appendRow(Ds_Pibo); // Dataset에 빈 Record한줄 추가
	        //util.appendRow(Ds_Pibo_BackUp);
	        Ds_Pibo.insertRow();
       		Ds_Pibo_BackUp.insertRow();
	        nCurrow = (Ds_Pibo.getTotalRow() - 1);
	        /*수작업 변환 가이드 (getTotalRow)
	            필터 적용이 되어있는 row의 건수는 getRowCount API를 사용합니다.*/
	    }
	
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    scwin.sel_sel1(null, nCurrow);
	    Ds_Pibo.setCellData(nCurrow, "sel", "0");
	    Ds_Pibo.setCellData(nCurrow, "sInrpsFlagCd", "1");
	    Ds_Pibo.setCellData(nCurrow, "sCrtorRelnCd", "10"); //피보험자관계(본인)
	    Ds_Pibo.setCellData(nCurrow, "sGroupInrpsDrveFlagCd", "1");
	    Ds_Pibo.setCellData(nCurrow, "sPftbpInrpsRelnCd", "99");
	    Ds_Pibo.setCellData(nCurrow, "sPftbpName", "법정상속인");
	    Ds_Pibo.setCellData(nCurrow, "sXcptPftbpInrpsRelnCd", "");
	    Ds_Pibo.setCellData(nCurrow, "sXcptPftbpName", "선택");
	    Ds_Pibo.setCellData(nCurrow, "sPsnInfoOferAgreYn", "N");
	    Ds_Pibo.setCellData(nCurrow, "sMNumCrInsAgreYn", "N");
	    Ds_Pibo.setCellData(nCurrow, "nInrpsSeqno", (nCurrow + 1)); //피보험자 일련번호
	    Ds_Pibo.setCellData(nCurrow, "sApplPlanCd", Ds_Pibo.getCellData(0, "sApplPlanCd"));
	    Ds_Pibo.setCellData(nCurrow, "sApplPlanName", Ds_Pibo.getCellData(0, "sApplPlanName"));
	    
	    if (nCurrow == 0) {
	        Ds_Pibo.setCellData(nCurrow, "sMinsrRelnCd", "10");
	    }
	    
	    Ds_Pibo_BackUp.setCellData(nCurrow, "MediFlag", "N");
		Ds_Pibo_BackUp.setCellData(nCurrow, "fixFlag", "N");
	
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (i != nCurrow && Ds_Pibo.getCellData(i, "sel") == "1") {
	            Ds_Pibo.setCellData(i, "sel", "0");
	        }
	    }
	    
	    if (Ds_Trty.getRowCount() > 0) {
	        Ds_Pibo.setCellData(nCurrow, "sel", "1");
	    }
	    //util.setCompBindRefresh(Ds_Pibo.getID());
		util.setRowPosition(Ds_Pibo, nCurrow);
	
	    scwin.lfn_changeTrty();
	    
	    //MS 피보험자 그리드에서 직업 찾기 버튼 숨기기
	    if(parent.sSimpleYn == "N"){
	    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
	    }
	    
	    //Grd_Pibo.focus();
	    wconv.moveToNextCell(Grd_Pibo.getID());
	    wconv.moveToNextCell(Grd_Pibo.getID());
	    //Ds_Pibo.FireEvent = true;
	    
	    util.setDataListEvent(Ds_Pibo, arrpibo);
	    
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nCurrow, "nInrpsSeqno") + "'"); //목적물일련번호
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nCurrow, "nInrpsSeqno") + "'"); //목적물일련번호
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_deleteRow
	// 내용        : 보험자 삭제 행삭제
	//---------------------------------------------------------------------------
	scwin.lfn_deleteRow = function() {
	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	    if (nFindRow < 0) {
	        wprom.alert("삭제할 피보험자를 선택하세요.");
	        return;
	    }
	    if (nFindRow < Ds_Pibo.getRowCount() - 1) {
	        wprom.alert("마지막 피보험자를 먼저 삭제 하세요.");
	        return;
	    }
	
	    //보험료 산출시 피보험자 입력여부 확인 후 자동삭제함.
	    if (Ds_Pibo.getRowCount() == 1 && (((wconv.length(Ds_Pibo.getCellData(0, "sInrpsCd")) == 0) || (wconv.substr(Ds_Pibo.getCellData(0, "sInrpsCd"), 7, 6) == "000000")))) {
	        Ds_Pibo.setCellData(0, "sel", "1");
	        //util.deleteRow(Ds_Pibo, 0);
	        Ds_Pibo.removeRow(0);
	        //var trtyFilter = Ds_Trty.getFilterList();
			//Ds_Trty.clearFilter();
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        	if (util.getCellDataF(Ds_Trty, i, "sPsnPrprtGroupFlgcd") == "1") {
	        		util.setCellDataF(Ds_Trty, i, "chk", "0");
	            }
	        }
	        //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	        Ds_Prprt.setCellData(0, "sel1", "1");
	        Ds_Trty.removeColumnFilterAll();
   			Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='1'");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='1'");
	        return;
	    }
	    
	    //Ds_Pibo.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrpibo = util.getDataListEvent(Ds_Pibo);
		util.removeAllDataListEvent(Ds_Pibo);
	    
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc(nFindRow, "Y");
	
	    //특약 삭제
	    scwin.lfn_ClearTrty(nFindRow);
	    util.removeRow(Ds_Pibo, nFindRow);
	    util.removeRow(Ds_Pibo_BackUp, nFindRow);
	
	    //Grd_Pibo_OnCellPosChanged(obj,nFindRow-1,0,nFindRow-1,-1,-1,-1);
	    //Ds_Pibo.FireEvent = true;
	    util.setDataListEvent(Ds_Pibo, arrpibo);
	    
	    //MS텝 정보 출력
	    if(parent.sSimpleYn != "Y"){
	    	parent.scwin.lfn_set_Tab_Info("S1", "T1");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : sel_sel1
	// 내용        : 현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	//---------------------------------------------------------------------------
	scwin.sel_sel1 = function(obj, nRow) {
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo.setCellData(i, "sel", "0");
	    }
	    for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	        Ds_Prprt.setCellData(i, "sel1", "0");
	    }
	    if (obj != null && obj != undefined && obj.getID() == "Grd_Pibo") {
	        Ds_Pibo.setCellData(nRow, "sel", "1");
	    } else if (obj != null && obj != undefined && obj.getID() == "Grd_Prprt") {
	        Ds_Prprt.setCellData(nRow, "sel1", "1");
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_changeTrty
	// 내용        : 피보험자의 해당 특약으로 필터링
	-----------------------------------*/
	scwin.lfn_changeTrty = function() {
	    //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);

	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	    if (nFindRow < 0) {
	        // 피보 선택이 없는 경우 return;
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
	        return false;
	    }
	    Ds_Trty.removeColumnFilterAll();
  		Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'");
	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(nFindRow);
	    
	    //Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	/*-----------------------------------
	// function 명 : lfn_PlanEnable
	// 내용        : 플랜,납입주기,납만 화면 활성화/비활성화
	-----------------------------------*/
	scwin.lfn_PlanEnable = function(nRow) {
	    if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58 || (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M")) {
	        return;
	    }
	
	    //주피보험자가 아닌경우 청약,시작일,납입주기,플랜콤포넌트 비활성화 처리
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sPaymTermCd = exArr[1];
	    if (nRow == 0) {
	    	cmb_Plan.setDisabled(false);
	        cmb_InsurTermPaymTerm.setDisabled(false);
	        if (sPaymTermCd == "000") {
	            cmb_PaymCycl.setDisabled(true);
	        } else {
	            cmb_PaymCycl.setDisabled(false);
	        }
	    } else {
	        cmb_PaymCycl.setDisabled(true);
	        cmb_Plan.setDisabled(true);
	        cmb_InsurTermPaymTerm.setDisabled(true); //일괄적용을 한경우 버튼 비활성화 처리
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : setRule()
	// 내용        : 상품선택시 납입주기, 플랜사항조회
	//---------------------------------------------------------------------------
	scwin.fn_setRule = function(prodCd) {
		txtTrtyInfo.setValue("");
	    nMaxPrem = "";
	    Ds_LTIDA00.setCellData(0, "sGdCd", prodCd); //상품코드세팅
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드세팅
	    
	    sGdCd = prodCd;
	    if (!mfn_IsEmpty(sGdCd)) {
	    	//MS 상품의 변경에 따라 보상한도 정보 초기화
	    	wconv.clear(DS_TrtyCmpsContAmtLimitInfo);
	    	
	        wconv.clear(DsWs_PaymCycl); //납입주기조회
	        wconv.clear(DsWs_Plan); //플랜사항조회
	        wconv.clear(DsWs_Trty); //특약사항조회
	        wconv.clear(Dsws_InsAmt); //가입금액조회
	        wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화		
	        wconv.clear(DsWs_PrdAttr); //상품속성 초기화
	        wconv.clear(DsWs_BascTrty); //대표특약 초기화
	        wconv.clear(DsWs_AsmtInsAmt); //지정가입금액 초기화
	        
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB022Task", "getCommCode", "", "");
	        MethodObj.setId("getCommCode");
	        MethodObj.setUrl("/contract/CBSC094MController.do");
	        MethodObj.setParam("sFlagCd", "1");
	        MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	        MethodObj.setParam("sStndDate", parent.cal_sSsrtDate.getValue()); //청약일
	        MethodObj.setParam("sPlanCd", sPlanCd); //플랜코드
	        MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	        //N1305-00225:장기 재물보험 청약시스템 개발 요청
	        //인, 물 가입 가능 상품 구분 처리 
	        //대면/비대면체크  0 :  대면 , 1 : 비대면 (비대면->고객동의)
	        //대면 주민번호 미입력시 30세 남성으로 하드코딩
	        //test (비대면으로 강제 세팅)		
	        //if(parent.sScanObjtYn = 'N') {
	        if (gds.gUseCustType == "1") {
	            if(Ds_Pibo.getCellData(0, "sInrpsCd") != null && Ds_Pibo.getCellData(0, "sInrpsCd") != "") {
	            	MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd")); //주민번호 
	            	MethodObj.setParam("sDrveFlagCd", Ds_Pibo.getCellData(0, "sDrveFlagCd")); //운전용도
	            }else{
	            	gfn_getServerTime();//서버시간
					var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
		            if (wconv.substr(sBirthDate, 4, 4) == "0229") {
		                sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
		            }
		            MethodObj.setParam("sResno", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000"); //주민번호 
		            MethodObj.setParam("sDrveFlagCd", "1"); //운전용도
	            }
	        } else {
	        	if(Ds_Pibo.getCellData(0, "sInrpsCd") != null && Ds_Pibo.getCellData(0, "sInrpsCd") != "") {
		        	//trace("jumin : " + Ds_Pibo.GetColumn(0, "sInrpsCd"));
					MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd") );//주민번호 
					MethodObj.setParam("sDrveFlagCd","1");//운전용도 
	        	}else{
	        		gfn_getServerTime();//서버시간
					var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
		            if (wconv.substr(sBirthDate, 4, 4) == "0229") {
		                sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
		            }
		            MethodObj.setParam("sResno", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000"); //주민번호 
		            MethodObj.setParam("sDrveFlagCd", "1"); //운전용도
	        	}	
	        }
	        MethodObj.setParam("sPlanPsnGroupCd", "1"); //개인단체구분코드(1:개인)
	        		
	        //N1502-00095(모집인별 마이플랜 조회 위해 추가	)
	        if (Ds_LTIDA00.getCellData(0, "sDoer") == null || Ds_LTIDA00.getCellData(0, "sDoer") == "") {
	            MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	            MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	            MethodObj.setParam("sChnlCd", parent.sSaleChnl); //채널코드
	        } else {
	        	MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	            MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	            MethodObj.setParam("sChnlCd", Ds_LTIDA00.getCellData(0, "sChnlCd")); //채널코드
	        }
	        //END
	        MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
	        MethodObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");
	        //MethodObj.addXPath("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd");
	        MethodObj.addXPath("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd");
	        MethodObj.addXPath("//hashtable/data[@hashkey='applPlanList']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
	        //MethodObj.addXPath("");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
	        MethodObj.addXPath("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	        MethodObj.addXPath("//WARNING");
	        MethodObj.setXPathDs();
   			MethodObj.sync();
			MethodObj.send();
			
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
	        if (DsWs_Warning.getRowCount() != 0) {
	        	alert(DsWs_Warning.getCellData(0, "msg"));
	        	//화면을 초기화한다.
		        scwin.lfn_Step0Init();
	            return;
	        }else{
	        	//DsWs_PaymCycl.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"));
       			util.copyM(DsWs_PaymCycl, _tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"), true);
       			if (DsWs_PaymCycl.getRowCount() == 0) {
       				wprom.alert("납입주기 조회건이 없습니다.");
       			}else{
        			//DsWs_LTIDA00.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
        			util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
       				//Dsws_BaseSlct.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"));
        			//util.copyM(Dsws_BaseSlct, _tranSync.getDsJson("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"));
        			//DsWs_Napgi.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"));
        			util.copyM(DsWs_Napgi, _tranSync.getDsJson("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"));
        			//DsWs_Plan.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"));
        			util.copyM(DsWs_Plan, _tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"), true);
        			//DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
        			util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
        			//Dsws_InsAmt.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"));
        			util.copyM(Dsws_InsAmt, _tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"), true);
        			//DsWs_AsmtInsAmt.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi"));
        			util.copyM(DsWs_AsmtInsAmt, _tranSync.getDsJson("//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi"));
        			//DsWs_InsurTermPaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"));
        			util.copyM(DsWs_InsurTermPaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"), true);
        			//util.setCompBindRefresh(DsWs_InsurTermPaymTerm.getID());
        			//util.setRowPosition(DsWs_InsurTermPaymTerm, 0);
        			//DsWs_Bogi.setJSON(_tranSync.getDsJson(""));
        			//util.copyM(DsWs_Bogi, _tranSync.getDsJson(""));
        			//DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
        			util.copyM(DsWs_InsurTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
        			//DsWs_MinsrReln.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi"));
        			util.copyM(DsWs_MinsrReln, _tranSync.getDsJson("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi"));
        			//DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
        			util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
        			//DsWs_LTIDA15.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"));
        			util.copyM(DsWs_LTIDA15, _tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"));
        			//DsWs_PrdAttr.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"));
        			util.copyM(DsWs_PrdAttr, _tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"));
        			//DsWs_TrtyTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
        			util.copyM(DsWs_TrtyTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
        			
        			//납입주기 선택옵션추가
	                var insRow = util.insertRow(DsWs_PaymCycl, 0);
	                /*수작업 변환 개발자 가이드(테스트 중)
	                dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	                DsWs_PaymCycl.setCellData(0, "sGdCd", "");
	                DsWs_PaymCycl.setCellData(0, "sPaymCyclCd", "");
	                DsWs_PaymCycl.setCellData(0, "sPaymCyclName", "- 선택 -");
	                //cmb_PaymCycl.BindDataset = "Ds_LTIDA00";
	                cmb_PaymCycl.setRef("data:Ds_LTIDA00.sPaymCyclCd");
	                if (wconv.length(Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) == 0) {
	                    //납입주기
	                    cmb_PaymCycl.setSelectedIndex(1);
	                }
	                
	                //MS 공통코드 Binding 대한 그리드 새로고침
	                util.setCompBindRefresh(Ds_Pibo.getID());
	                //MS 피보험자 그리드에서 직업 찾기 버튼 숨기기
	    			if(parent.sSimpleYn == "N"){
				    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
				    }
       			}
       			
       			//정기추가납입가능여부
	            if (DsWs_PrdAttr.getCellData(0, "PeriAddPaymPremYn") == "Y") {
	                //Static0.show();
	                //Static0.setStyle("display", "");
	        		//medt_nAddPaymPrem.show();
	        		//medt_nAddPaymPrem.setStyle("display", "");
	                medt_nAddPaymPrem.setDisabled(false);
	            } else {
	                //Static0.hide();
	                //Static0.setStyle("display", "none");
	        		//medt_nAddPaymPrem.hide();
	        		//medt_nAddPaymPrem.setValue(0);
	        		//medt_nAddPaymPrem.setStyle("display", "none");
	                medt_nAddPaymPrem.setDisabled(true);
	                
	            }
	            
	            if (DsWs_Trty.getRowCount() == 0) {
	                wprom.alert("특약사항 조회건이 없습니다.");
	            } else {
	                //플랜 첫번째 세팅
	                cmb_Plan.setSelectedIndex(0);
	                for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	                	if(i == 0){
	                		Ds_Pibo.setCellData(0, "sMinsrRelnCd", "10");
	                	}
	                    Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	                    Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText()); //ldh
	                }
	
	                //플랜 첫번째 세팅(목적물) 2013.06.14 lbc
	                cmb_Plan.setSelectedIndex(0);
	                for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	                    Ds_Prprt.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	                    Ds_Prprt.setCellData(i, "sApplPlanName", cmb_Plan.getText()); //ldh
	                }
	
	                //trace("sPaymCyclCd:" + sPaymCyclCd());
	                //보기납기 첫번째 세팅
	                cmb_InsurTermPaymTerm.setSelectedIndex(0);
	                //일시납 납입기간에 따른 납입주기 세팅
	                scwin.lfn_PaymCyclSet();
	                //wconv.copy(Ds_Trty, DsWs_Trty);
	                util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
	                util.setCompBindRefresh(Ds_Trty.getID());
	                //MS 헤더 체크박스
        			scwin.grd_Trty_head_Check();
	
	                //테이블 필드도 추가한다.	
	                scwin.lfn_TrtyDataSetSet();
	                //Ds_Trty_View.Copy("Ds_Trty");	
	                //trace("Ds_Trty_View:" + Ds_Trty_View.SaveXML());
	                util.insertColumn(Ds_LTIDA00, [["sApplPlanCd","sApplPlanCd","text"]
	                , ["sApplPlanName","sApplPlanName","text"]
	                , ["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]
	                , ["sSaleChnl","sSaleChnl","text"]
	                , ["sSaleChnlDtal","sSaleChnlDtal","text"]
	                , ["sGdTypeFlgCd","sGdTypeFlgCd","text"]
	                , ["sInsType","sInsType","text"]
	                , ["sBunsMetdDocuClsfCd","sBunsMetdDocuClsfCd","text"]
	                , ["sApplDclrRato","sApplDclrRato","text"]
	                , ["sGdFlgcd","sGdFlgcd","text"]
	                , ["sDvdnFlagCd","sDvdnFlagCd","text"]
	                , ["sPpayAvaYn","sPpayAvaYn","text"]
	                , ["sHsecFlagCd","sHsecFlagCd","text"]
	                , ["sPsnGroupFlgcd","sPsnGroupFlgcd","text"]
	                , ["sGroupCrAdmNo","sGroupCrAdmNo","text"]
	                , ["sBsmnRgstNo","sBsmnRgstNo","text"]
	                , ["nMinPremRate","nMinPremRate","text"]
	                ]);
	                util.setCompBindRefresh(Ds_LTIDA00.getID());
					util.setRowPosition(Ds_LTIDA00, 0);
	                
	                //보험기간,가입금액 초기값 세팅
	                scwin.lfn_InsurTermInit(btn_CalcPrem);
	                //alert("test014");	
	                //피보험자 추가시 특약세트를 넣어주기 위해 필요
	                //wconv.copy(Ds_Trty_Set, "Ds_Trty"); //trace("ibc ======> " + Ds_Trty_Set.savexml());
	                util.copyM(Ds_Trty_Set, Ds_Trty.getAllJSON());
	                //특약중 화면출력특약만 화면에 보여줌
	                //alert("aa1");
	                //	wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                //	wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
   		        }
	            
	            //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	            if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	                medt_nBussPrem.setDisabled(true);
	            } else {
	                medt_nBussPrem.setDisabled(false);
	            }
	            
	            //특약데이터셋 변경시 이벤트처리를 위해 이벤트 정의함
	            //Ds_Trty.bind("oncelldatachange", scwin.lfn_Trty_OnColumnChanged);
	            util.setBind(Ds_Trty, "oncelldatachange", "scwin.lfn_Trty_OnColumnChanged");
	            
	            modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check();
	            //특약 가입가능 체크
	            scwin.lfn_Trty_Relation_InsAvaYn(Ds_Trty, "N");
	            
	            //합계보험료쪽 INITIALIZE
	            scwin.lfn_init_Prem();
	            Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N"); //세금우대사항 setting
	            //피보험자 추가버튼 활성화
	            scwin.lfn_setBtnAddPibo(DsWs_PrdAttr);
	            for (var i = 1; i < Ds_Pibo.getRowCount(); i++) {
	                scwin.lfn_searchPiboTrty(cmb_Plan, i);
	            }
	
	            //목적물 추가버튼 활성화
	            scwin.lfn_setBtnAddPrprt(DsWs_PrdAttr);
	            for (var i = 1; i < Ds_Prprt.getRowCount(); i++) {
	                scwin.lfn_searchPrprtTrty(cmb_Plan, i);
	            }
	
	            //당사 자동차가입현황 버튼 활성화
//	            if (DsWs_PrdAttr.getCellData(0, "DrvrGdYn") == "Y") {
	                //Btn_carList.setDisabled(false);
//	            }
	            
	            //세금우대 상품 버튼 활성화
	            if(DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn") == "Y"){
	            	if(parent.sSimpleYn == "N"){
	            		if(parent.Tab_Step2 != null){
	                		parent.Tab_Step2.cmb_sTaxPrfrYn.setDisabled(false);
	                		parent.tab2Tax = false;
	                	}else{
	                		parent.tab2Tax = true;
	                	}
	                }
	            }
	            
	            parent.scwin.lfn_ThcpCarInsCrst(DsWs_PrdAttr); //자동차가입 현황 팝업
	            Ds_Trty.removeColumnFilterAll();
    			Ds_Trty_Backup.removeColumnFilterAll();
	            if (wconv.findRow(Ds_Pibo, "sel", "1") > -1) {
	            	wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'");
	                wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'"); //alert("pibo:" + Ds_Pibo.FindRow("sel","1"));
	            } else if (wconv.findRow(Ds_Prprt, "sel1", "1") > -1) {
	                wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'");
	                wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'"); //alert("pibo:" + Ds_Pibo.FindRow("sel","1"));
	            }
	        }
	    }
	
	    //붕괴침강 가입금액 셋팅
	    var info = new Object();
           info.oldValue = "";
           info.newValue = "";
           info.rowIndex = "0";
           info.colID = "nTrtyInsAmt";
	    scwin.lfn_Trty_OnColumnChanged(info);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_TrtyDataSetSet
	// 내용        : 특약 데이터셋에 copy를 할경우 정의된 컬럼이 삭제되어서 추가해줌
	//---------------------------------------------------------------------------
	scwin.lfn_TrtyDataSetSet = function() {
	    util.insertColumn(Ds_Trty, [["sBascSlctFlagCd","sBascSlctFlagCd","text"]
	    , ["sTrtyName","sTrtyName","text"]
	    , ["sPlanNo","sPlanNo","text"]
	    , ["sPsnPrprtGroupFlgcd","sPsnPrprtGroupFlgcd","text"]
	    , ["nPsnPrprtGroupSeqno","nPsnPrprtGroupSeqno","text"]
	    , ["nCrChngNo","nCrChngNo","text"]
	    , ["nTrtyOrdr","nTrtyOrdr","text"]
	    , ["sScrnIndcYn","sScrnIndcYn","text"]
	    , ["sGdCd","sGdCd","text"]
	    , ["sGnrzCd","sGnrzCd","text"]
	    , ["sAutoRenwlAvaYn","sAutoRenwlAvaYn","text"]
	    , ["sAutoRenwlCyclCd","sAutoRenwlCyclCd","text"]
	    , ["nSelfChamt","nSelfChamt","text"]
	    , ["sGrntAccuFlagCd","sGrntAccuFlagCd","text"]
	    , ["nAccuPrem","nAccuPrem","text"]
	    , ["nExptGrntBussPrem","nExptGrntBussPrem","text"]
	    , ["nRiskPrem","nRiskPrem","text"]
	    , ["nTrtyPrem","nTrtyPrem","text"]
	    , ["nRenwlSeq","nRenwlSeq","text"]
	    , ["sRenwlYn","sRenwlYn","text"]
	    , ["nRealPaymTerm","nRealPaymTerm","text"]
	    , ["nRealInsurTerm","nRealInsurTerm","text"]
	    , ["nPaymAge","nPaymAge","text"]
	    , ["nEndAge","nEndAge","text"]
	    , ["sTrtyStatCd","sTrtyStatCd","text"]
	    , ["sInsurStrtdate","sInsurStrtdate","text"]
	    , ["sInsurEndDate","sInsurEndDate","text"]
	    , ["sCnclExtnEndDate","sCnclExtnEndDate","text"]
	    , ["TrtyFlagCd","TrtyFlagCd","text"]
	    , ["sResvAmtKey","sResvAmtKey","text"]
	    , ["sPmmiInsurFlagCd","sPmmiInsurFlagCd","text"]
	    , ["sPsnInfoOferAgreYn","sPsnInfoOferAgreYn","text"]
	    , ["sMNumCrInsAgreYn","sMNumCrInsAgreYn","text"]
	    ]);
	    util.setCompBindRefresh(Ds_Trty.getID());
	    //MS 헤더 체크박스
     	scwin.grd_Trty_head_Check();
		//util.setRowPosition(Ds_Trty, 0);
	    for (var i = 0; Ds_Trty.getRowCount() > i; i++) {
	        if (Ds_Trty.getCellData(i, "TrtyObjtFlag") == "3") {
	            Ds_Trty.setCellData(i, "sPsnPrprtGroupFlgcd", "2");
	        } else {
	            Ds_Trty.setCellData(i, "sPsnPrprtGroupFlgcd", Ds_Trty.getCellData(i, "TrtyObjtFlag"));
	        }
	        Ds_Trty.setCellData(i, "nPsnPrprtGroupSeqno", "1");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_PaymCyclSet
	// 내용        : 일시납 납입기간에 따른 납입주기 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_PaymCyclSet = function() {
	    //확정된 건은 변경 불가 
	    if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58 || (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M")) {
	        return;
	    }
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    //var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //일시납일경우 납입주기를 일시납으로 변경
	    if (sPaymTermCd == "000") {
	        cmb_PaymCycl.setValue("99");
	        cmb_PaymCycl.setDisabled(true);
	        wconv.filter(DsWs_PaymCycl, ("Number(sPaymCyclCd) < 100"));
	    } else {
	        if (wconv.length(Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) == 0 || Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	            cmb_PaymCycl.setSelectedIndex(1);
	        }
	        cmb_PaymCycl.setDisabled(false);
	        wconv.filter(DsWs_PaymCycl, ("Number(sPaymCyclCd) < 99"));
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_InsurTermInit
	// 내용        : 보험기간,가입금액 초기값 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_InsurTermInit = function(obj) {
	    if (Ds_Trty.getRowCount() > 0) {
	        //보험기간종료일자 setting
	        cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(0, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	
	        //보험기간/납입기간 세팅
	        Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(0, "sInsurTermCd")); //보험기간
	        Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(0, "sPaymTermCd")); //납입기간
	        Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData("Body", 0, 4) + "/" + grd_sTrty.getCellDisplayData("Body", 0, 5)); //보기납기
	        //trace("보험기간=="+DsWs_InsurTerm.SaveXML());	
	        //trace("납입기간=="+DsWs_PaymTerm.SaveXML());	
	        //trace("=="+ Ds_LTIDA00.getCellData(0,"sInsurTermCd"));	
	        //trace("=="+ Ds_LTIDA00.getCellData(0,"sPaymTermCd"));	
	        //trace("=="+ Ds_Trty.getCellData(0,"sInsurTermCd"));	
	        //trace("=="+ Ds_Trty.getCellData(0,"sPaymTermCd"));
	        //trace("3="+ grd_sTrty.GetCellText("Body", 0, 3));	
	        //trace("4="+ grd_sTrty.GetCellText("Body", 0, 4));	
	        //trace("=="+ Ds_LTIDA00.getCellData(0,"sInsurTermPaymTermName"));	
	    }
	    scwin.lfn_TrtyInsAmtInit(obj); //가입금액 초기값 세팅
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_endDate()
	// 내용        : 개시일, 보험기간, 연령을 입력받아 종료일구하기
	//---------------------------------------------------------------------------
	scwin.lfn_endDate = function(startDate, sInsurTermCd, age) {
		var insurTermCd_Gubun = wconv.substr(sInsurTermCd, 0, 1);
	    var insurTermCd_Value = wconv.substr(sInsurTermCd, 1, 3);
	    var endDate;
	    var month;
	    switch (wconv.toInteger(insurTermCd_Gubun)) {
	        case 1:
	            month = (wconv.toInteger(insurTermCd_Value) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 2:
	            month = (((wconv.toInteger(insurTermCd_Value) - wconv.toInteger(age))) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 9:
	            endDate = "99991231";
	            break;
	        default:
	            break;
	    }
	    return endDate;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_TrtyInsAmtInit
	// 내용        : 가입금액 초기값 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_TrtyInsAmtInit = function(obj) {
		//MS 변경된 가입금액이 피보험자를 추가 하는순간 obj cmb_Plan 호출하여 첫번째 가입금액으로 변경된다
		//보험기간 콤보 초기값세팅
		for(var i = 0; i < Ds_Trty.getTotalRow(); i++) {
			//화재배상책임 특약 콤보에서 가입금액 앞 0 일때체크 2013.07.16
			if((wconv.substr((typeof util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")=="number"?wconv.toString(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")):util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")), 0, 1) != 0)
			&& Number(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")) >= 100000000 
			&& util.getCellDataF(Ds_Trty, i, "PremCalcFomlFlag") == "01")//보험료 산출식 구분 추가
			{
	            util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", "0" +util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt"));
	            if(Ds_Trty_Backup.getTotalRow() > i){
	            	util.setCellDataF(Ds_Trty_Backup, i, "nTrtyInsAmt", "0" +util.getCellDataF(Ds_Trty_Backup, i, "nTrtyInsAmt"));
	            }
	        }

	        if ((obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") || (wconv.length(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")) == 0)) {
	            Ds_InsAmt.setCondition("filter", "sTrtyCd == '"+util.getCellDataF(Ds_Trty, i, "sTrtyCd")+"'"+(wconv.length(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt"))==0?"":" && sCd == '"+util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")+"'"));
	            for (var j = 0; j < Ds_InsAmt.getRowCount(); j++) {
	            	util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Ds_InsAmt.getCellData(j, "sCd"));
                    break;
	            }/*
	            for (var j = 0; j < Dsws_InsAmt.getRowCount(); j++) {
	            	if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == Dsws_InsAmt.getCellData(j, "sTrtyCd")) {
	                    util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Dsws_InsAmt.getCellData(j, "sCd"));
	                    break;
	                }
	            }*/
	        } else if (!(mfn_IsEmpty(obj))) {
	            Ds_InsAmt.setCondition("filter", "sTrtyCd == '"+util.getCellDataF(Ds_Trty, i, "sTrtyCd")+"'"+(wconv.length(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt"))==0?"":" && sCd == '"+util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")+"'"));
	            for (var j = 0; j < Ds_InsAmt.getRowCount(); j++) {
	            	util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Ds_InsAmt.getCellData(j, "sCd"));
                    break;
	            }/*
	            for (var j = 0; j < Dsws_InsAmt.getRowCount(); j++) {
	                if ((wconv.length(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")) == 0)) {
	                    if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == Dsws_InsAmt.getCellData(j, "sTrtyCd")) {
	                    	util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Dsws_InsAmt.getCellData(j, "sCd"));
	                        break;
	                    }
	                }
	            }*/
	        }
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_OnColumnChanged
	// 내용        : 특약그리드 값 변경시 처리
	//---------------------------------------------------------------------------
	var trtyCheckFlag = false; //setColumn처리시 다시 반복해서 이벤트가 발생하므로 제어가 필요함
	scwin.lfn_Trty_OnColumnChanged = function(info) {
	    //alert(JSON.stringify(info));
		//info.oldValue
		//info.newValue
		//info.rowIndex
		//info.colID

	    switch (info.colID) {
	        case "chk":
	        	var sRelTrtyCd;
	            //종속 특약셋팅.
	            //Ds_Trty.FireEvent = false;
	            var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);

	            //체크 해제시 해당row 초기화(보험료)
	            //if (Ds_Trty.getCellData(info.rowIndex,"chk") == "0" && !trtyCheckFlag){
	            //trtyCheckFlag = true;
	            if (Ds_Trty.getCellData(info.rowIndex, "chk") == "0") {
	                Ds_Trty.setCellData(info.rowIndex, "nGrntPrem", ""); //보장보험료
	                Ds_Trty.setCellData(info.rowIndex, "nExptGrntBussPrem", ""); //예상보장영업보험료
	                //trace("0일경우="+Ds_Trty.getCellData(info.rowIndex,"chk"));		
	                sRelTrtyCd = Ds_Trty.getCellData(info.rowIndex, "sSubTrtyCd");
	
	                //특약간 관계 체크
	                scwin.lfn_Trty_Relation_Check(info.rowIndex, Ds_Trty.getCellData(info.rowIndex, "sPkgCd"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd1"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd2"), Ds_Trty.getCellData(info.rowIndex, "TrtyHnglAbbName"), "", sRelTrtyCd, false);
	            } else if (Ds_Trty.getCellData(info.rowIndex, "chk") == "1") {
	                trtyCheckFlag = false;
	                sRelTrtyCd = Ds_Trty.getCellData(info.rowIndex, "sMainTrtyCd");
	
	                //특약간 관계 체크
               		scwin.lfn_Trty_Relation_Check(info.rowIndex, Ds_Trty.getCellData(info.rowIndex, "sPkgCd"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd1"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd2"), Ds_Trty.getCellData(info.rowIndex, "TrtyHnglAbbName"), "", sRelTrtyCd, true);
	                
	                for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
						if(util.getCellDataF(Ds_Trty, i, "chk") == "1" && util.getCellDataF(Ds_Trty, i, "nGrntPrem") == ""){
							util.setCellDataF(Ds_Trty, i, "nGrntPrem", (Ds_Trty_Backup.getTotalRow()==Ds_Trty.getTotalRow()?util.getCellDataF(Ds_Trty_Backup, i, "nGrntPrem"):""));
							util.setCellDataF(Ds_Trty, i, "nExptGrntBussPrem", (Ds_Trty_Backup.getTotalRow()==Ds_Trty.getTotalRow()?util.getCellDataF(Ds_Trty_Backup, i, "nExptGrntBussPrem"):""));
						}
					}
	                
	                if (Ds_Trty.getCellData(0, "sInsurTermCd") != Ds_Trty.getCellData(info.rowIndex, "sInsurTermCd")) {
	                    var sMsg = Ds_Trty.getCellData(info.rowIndex, "TrtyHnglAbbName") + " 특약은 " + Ds_Trty.getCellData(0, "sPaymTermName") + "/" + Ds_Trty.getCellData(0, "sInsurTermName") + " 가입불가합니다.";
	                    wprom.alert(sMsg);
	                    Ds_Trty.setCellData(info.rowIndex, "chk", "0");
	                }
	            }
	            scwin.lfn_Trty_Relation_InsAvaYn(Ds_Trty);
	            
	            //붕괴특약 예외처리1.(선택된 기본특약 가입금액 합계 처리)
	            //if (Ds_Trty.getCellData(info.rowIndex, "TrtyCd") == "25000101"  || Ds_Trty.getCellData(info.rowIndex, "TrtyFlagCd") == "01"){
	            //if ((DsWs_AsmtInsAmt.wconv.findRowNF("sTrtyCd", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1) || (DsWs_AsmtInsAmt.wconv.findRowNF("sCdAttrValue", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1)) {
	            if(wconv.findRow(DsWs_AsmtInsAmt, "sTrtyCd", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1 || wconv.findRow(DsWs_AsmtInsAmt, "sCdAttrValue", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1){
	                //가입금액 초기화.
	                for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
	                    var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
	                    Ds_Trty.setCellData(nRowNum, "nTrtyInsAmt", 0);
	                }
	                for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
	                    var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sCdAttrValue"));
	                    if (Ds_Trty.getCellData(nRowNum, "chk") == "1") {
	                        var sTrtynum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
	                        Ds_Trty.setCellData(sTrtynum, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(sTrtynum, "nTrtyInsAmt")) + wconv.toNumber(Ds_Trty.getCellData(nRowNum, "nTrtyInsAmt")));
	                    }
	                }
	            }
	            //Ds_Trty.FireEvent = true;
	            util.setDataListEvent(Ds_Trty, arrtrty);
	            scwin.grd_Trty_head_Check();
	            break;
	        case "sInsurTermCd":
	            //보험기간별 납입기간 조회
	            scwin.lfn_PaymTerm();
	            //보험기간종료일자 setting
	            cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(info.rowIndex, "sInsurTermCd"), Ds_Pibo.getCellData(0, "sInrpsCd")));
	            //ds_Trty.setCellData(info.rowIndex, "sPaymTermCd", DsWs_PaymTerm.getCellData(0, "sPaymTermCd"));
	            break;
	        case "sPaymTermCd":
	            if (DsWs_PaymTerm.getRowCount() == 0) {
	                wprom.alert("보험기간을 선택하세요.");
	            }
	            //보험기간/납입기간 세팅
	            if (info.rowIndex == 0) {
	                Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(info.rowIndex, "sInsurTermCd")); //보험기간
	                Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(info.rowIndex, "sPaymTermCd")); //납입기간
	                Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(info.rowIndex, 4) + "/" + grd_sTrty.getCellDisplayData(info.rowIndex, 5)); //보기납기
	            }
	            break;
	        case "sTrtyCd":
	        	//txtTrtyInfo.setValue("");
	        	scwin.lfn_Trty_OnCellClick(info.rowIndex, 2);
	        	break;
	        case "nTrtyInsAmt":
	        	scwin.lfn_Trty_OnCellClick(info.rowIndex, 2);
	            //붕괴특약 예외처리2(선택된 기본특약 가입금액 합계 처리)
	            //Ds_Trty.FireEvent = false;
	            var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);
	            
	            if ((wconv.findRow(DsWs_AsmtInsAmt, "sTrtyCd", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1) || (wconv.findRow(DsWs_AsmtInsAmt, "sCdAttrValue", Ds_Trty.getCellData(info.rowIndex, "TrtyCd")) > -1)) {
	                //가입금액 초기화.
	                for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
	                    var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
	                    Ds_Trty.setCellData(nRowNum, "nTrtyInsAmt", "0");
	                }
	                for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
	                    var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sCdAttrValue"));
	                    if (Ds_Trty.getCellData(nRowNum, "chk") == "1") {
	                        var sTrtynum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
	                        Ds_Trty.setCellData(sTrtynum, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(sTrtynum, "nTrtyInsAmt")) + wconv.toNumber(Ds_Trty.getCellData(nRowNum, "nTrtyInsAmt")));
	                    }
	                }
	            }
	            //Ds_Trty.FireEvent = true;
	            util.setDataListEvent(Ds_Trty, arrtrty);
	            break;
	        default:
	            break;
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_TrtyList_Relation_Check
	// 내용        : 특약전체 관계체크
	-----------------------------------*/
	scwin.lfn_TrtyList_Relation_Check = function(nRow) {
	    //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
		
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        //베타그룹체크
	        scwin.lfn_Trty_Relation_sExcluGroupCd(i, "all");
	    }
	    scwin.lfn_Trty_Drv_chk(nRow);
	    //Ds_Trty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Check
	// 내용        : 특약간 관계 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Check = function(nRow, sPkgCd, sExcluGroupCd1, sExcluGroupCd2, TrtyHnglAbbName, all, sRelTrtyCd, chk) {
	    //grd_sTrty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
	    
	    //trace(grd_sTrty.getID()+"==="+nRow+"==="+sPkgCd+"==="+sExcluGroupCd1+"==="+sExcluGroupCd2);
	    //패키지체크
	    scwin.lfn_Trty_Relation_Pkg(Ds_Trty, sPkgCd, chk);
	
	    //베타그룹체크
	    scwin.lfn_Trty_Relation_sExcluGroupCd(nRow, all);
	
	    //특약간 종속 체크
	    scwin.lfn_Trty_Relation_Subo(Ds_Trty, sRelTrtyCd, chk);
	
	    //피보험자중 1명만 가입가능 특약체크
	    scwin.lfn_Trty_Relation_OnlyOne(Ds_Trty, nRow, "1");
	    
	    scwin.lfn_Trty_Drv_chk();
	    //grd_sTrty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_sExcluGroupCd
	// 내용        : 특약간 관계 체크(베타그룹체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_sExcluGroupCd = function(nRow, all) {
	    //베타그룹체크1
	    //var trtyFilter = Ds_Trty.getFilterList();
		//Ds_Trty.clearFilter();
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") != "1") {
	            continue;
	        }
	
	        //그룹코드가 없으면 체크필요없음
	        if (wconv.length(Ds_Trty.getCellData(i, "sGroupCd")) <= 0) {
	            continue;
	        }
	        var sGroupCd = Ds_Trty.getCellData(i, "sGroupCd");
	        var sExcluGroupCd1 = Ds_Trty.getCellData(nRow, "sExcluGroupCd1");
	        var sExcluGroupCd2 = Ds_Trty.getCellData(nRow, "sExcluGroupCd2");
	        var sExcluGroupCd3 = Ds_Trty.getCellData(nRow, "sExcluGroupCd3");
	        var sExcluGroupCd4 = Ds_Trty.getCellData(nRow, "sExcluGroupCd4");
	        var sExcluGroupCd5 = Ds_Trty.getCellData(nRow, "sExcluGroupCd5");
	        var sExcluGroupCd6 = Ds_Trty.getCellData(nRow,"sExcluGroupCd6");
			var sExcluGroupCd7 = Ds_Trty.getCellData(nRow,"sExcluGroupCd7");
			var sExcluGroupCd8 = Ds_Trty.getCellData(nRow,"sExcluGroupCd8");
			var sExcluGroupCd9 = Ds_Trty.getCellData(nRow,"sExcluGroupCd9");
			var sExcluGroupCd10 = Ds_Trty.getCellData(nRow,"sExcluGroupCd10");
			var sExcluGroupCd11 = Ds_Trty.getCellData(nRow,"sExcluGroupCd11");
	        var TrtyHnglAbbName = Ds_Trty.getCellData(nRow, "TrtyHnglAbbName");
	
	        //베타그룹값과 같은 그룹코드값을 찾는다.		
	        if (sGroupCd == sExcluGroupCd1 || sGroupCd == sExcluGroupCd2 || sGroupCd == sExcluGroupCd3 || sGroupCd == sExcluGroupCd4 || sGroupCd == sExcluGroupCd5 || sGroupCd == sExcluGroupCd6
			|| sGroupCd == sExcluGroupCd7
			|| sGroupCd == sExcluGroupCd8
			|| sGroupCd == sExcluGroupCd9
			|| sGroupCd == sExcluGroupCd10
			|| sGroupCd == sExcluGroupCd11) {
	            if (wconv.length(all) == 0) {
	                wprom.alert("'" + Ds_Trty.getCellData(i, "TrtyHnglAbbName") + "' 특약과 '" + TrtyHnglAbbName + "' 특약은 동시가입이 불가합니다.");
	            }
	            if (Ds_Trty.getCellData(nRow, "BascSlctFlagCd") != "1") {
	                Ds_Trty.setCellData(nRow, "chk", "0");
	            }
	            scwin.lfn_Trty_Relation_Pkg(Ds_Trty, Ds_Trty.getCellData(nRow, "sPkgCd"), false);
	            break;
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Pkg
	// 내용        : 특약간 관계 체크(패키지체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Pkg = function(obj, sPkgCd, chk) {
	    //패키지체크
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        //패키지값과 같은 그룹코드값을 찾는다.		
	        if (wconv.length(obj.getCellData(i, "sPkgCd")) > 0 && wconv.length(sPkgCd) > 0 && (obj.getCellData(i, "sPkgCd") == sPkgCd)) {
	            //체크인경우
	            if (chk) {
	                obj.setCellData(i, "chk", "1");
	            } else {
	                obj.setCellData(i, "chk", "0");
	                //보험료 초기화
	                obj.setCellData(i, "nGrntPrem", ""); //보장보험료
	                obj.setCellData(i, "nExptGrntBussPrem", ""); //예상보장영업보험료				
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Subo
	// 내용        :  특약간 종속 특약 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Subo = function(obj, sRelTrtyCd, chk) {
	    //특약간 종속 특약 체크
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        if (obj.getCellData(i, "sTrtyCd") == sRelTrtyCd) {
	            if (chk) {
	                obj.setCellData(i, "chk", "1");
	            } else {
	                obj.setCellData(i, "chk", "0");
	                obj.setCellData(i, "nGrntPrem", ""); //보장보험료
	                obj.setCellData(i, "nExptGrntBussPrem", ""); //예상보장영업보험료				
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_OnlyOne
	// 내용        : 특약간 관계 체크(피보험자 중복 가입 체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_OnlyOne = function(obj, nRow, all) {
	    var sInrpsDoubInsImprYn = "";
	    var sTrtyCd = "";
	    var sTrtyName = "";
	    if (all == "all") {
	        nRow = wconv.findRow(Ds_Trty, "InrpsDoubInsImprYn", "Y");
	        sInrpsDoubInsImprYn = Ds_Trty.getCellData(nRow, "InrpsDoubInsImprYn");
	        sTrtyCd = Ds_Trty.getCellData(nRow, "sTrtyCd");
	        sTrtyName = Ds_Trty.getCellData(nRow, "TrtyHnglAbbName");
	    } else {
	        sInrpsDoubInsImprYn = obj.getCellData(nRow, "InrpsDoubInsImprYn");
	        sTrtyCd = obj.getCellData(nRow, "sTrtyCd");
	        sTrtyName = obj.getCellData(nRow, "TrtyHnglAbbName");
	    }
	    var nInsuCnt = 0;
	    if (sInrpsDoubInsImprYn == "Y") {
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	            if (util.getCellDataF(Ds_Trty, i, "chk") != "1") {
	                continue;
	            }
	            if (sTrtyCd == util.getCellDataF(Ds_Trty, i, "sTrtyCd")) {
	                nInsuCnt++;
	            }
	        }
	    }
	    if (nInsuCnt > 1) {
	        alert("'" + sTrtyName + "' 특약은 피보험자별 중복가입이 불가합니다.");
	        if (all == "all") {
	            return false;
	        } else {
	            obj.setCellData(nRow, "chk", "0");
	        }
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Drv_chk
	// 내용        : 운전용도 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Drv_chk = function(nRow) {
	    var sDrveFlagCd = "";
	    if (nRow != undefined && nRow != null && nRow >= 0) {
	        sDrveFlagCd = Ds_Pibo.getCellData(nRow, "sDrveFlagCd"); //운전용도
	    } else {
	        sDrveFlagCd = Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd"); //운전용도
	    }
	
	    //trace("sDrveFlagCd:" + sDrveFlagCd);
	    if (sDrveFlagCd == "2") {
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            if (Ds_Trty.getCellData(i, "BussInsAvaYn") != "Y") {
	                Ds_Trty.setCellData(i, "chk", "0");
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_InsAvaYn
	// 내용        :  특약 가입가능 여부
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_InsAvaYn = function(obj, flag) {
		//var trtyFilter = obj.getFilterList();
		//obj.clearFilter();
		
	    for (var i = 0; i < obj.getTotalRow(); i++) {
	        //보장특약(화면에 보여지는 특약만)
	        if (util.getCellDataF(obj, i, "sScrnIndcYn") == "Y") {
	            if (util.getCellDataF(obj, 0, "sInsurTermCd") != util.getCellDataF(obj, i, "sInsurTermCd")) {
	                if (util.getCellDataF(obj, i, "chk") == "1") {
	                	util.setCellDataF(obj, i, "chk", "0");
	                	util.setCellDataF(obj, i, "nGrntPrem", ""); //보장보험료
	                	util.setCellDataF(obj, i, "nExptGrntBussPrem", ""); //예상보장영업보험료
	                	var sMsg = util.getCellDataF(obj, i, "TrtyHnglAbbName") + " 특약은 " + util.getCellDataF(obj, 0, "sPaymTermName") + "/" + util.getCellDataF(obj, 0, "sInsurTermName") + " 가입불가합니다.";
	                    if ("N" != flag) {
	                        wprom.alert(sMsg);
	                    }
	                }
	            }
	        }
	    }
	    
	    
	    //for(var i = 0; i < trtyFilter.length; i++){obj.setColumnFilter(trtyFilter[i]);}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_init_Prem
	// 내용        : 합계보험료column초기화
	//---------------------------------------------------------------------------
	scwin.lfn_init_Prem = function() {
	    //사전조회사항초기화
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "MediFlag", "N");
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "fixFlag", "N");
	    btn_Medical.setDisabled(true);
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "N"); //실손가입 확인
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "N");
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo.setCellData(i, "sPsnInfoOferAgreYn", "N");
	        Ds_Pibo.setCellData(i, "sMNumCrInsAgreYn", "N");
	    }
	    Ds_LTIDA00.setCellData(0, "nGrntPrem", 0); //보장보험료
	    Ds_LTIDA00.setCellData(0, "nAccuPrem", 0); //적립보험료
	    Ds_LTIDA00.setCellData(0, "nDcPrem", 0); //할인보험료
	    Ds_LTIDA00.setCellData(0, "nApplPrem", 0); //적용보험료
	    Ds_LTIDA00.setCellData(0, "nMinPrem", 0); //최소보험료
	    Ds_LTIDA00.setCellData(0, "nMaxPrem", 0); //최대보험료
	    Ds_LTIDA00.setCellData(0, "nBussPrem", 0); //영업보험료
	    Ds_LTIDA00.setCellData(0, "nExptEndRetrnAmt", 0); //예상환급금
	    Ds_LTIDA00.setCellData(0, "nExptEndRtnrt", 0); //예상환급율
	    Ds_LTIDA00.setCellData(0, "nAddPaymPrem", 0); //추가납입보험료
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc(wconv.findRow(Ds_Pibo, "sel", "1"), "N");
	
	    //목적물에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc1(wconv.findRow(Ds_Prprt, "sel1", "1"), "N");
	
	    //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	    if (DsWs_Plan.getCellData(0, "sPremAmtChgYn") == "N") {
	        medt_nBussPrem.setDisabled(true);
	    } else {
	        medt_nBussPrem.setDisabled(false);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_deleteEtc
	// 내용        : 피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	//---------------------------------------------------------------------------
	scwin.lfn_deleteEtc = function(nSeq, delLTIDA01YN) {
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "delete_PiboDetail", "", "");
		MethodObj.setId("delete_PiboDetail");
		MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue());
		MethodObj.setParam("sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));//개인단체구분코드
		MethodObj.setParam("sPsnPrprtGroupFlgcd", "1");//인물단체구분코드(인) 
		MethodObj.setParam("nPsnPrprtGroupSeqno", nSeq + 1);//일련번호 
		//MethodObj.setParam("sDriveYn", Ds_Pibo.getCellData(0, "sDrveFlagCd"));//운전용도
		MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(nSeq, "sInrpsCd"));//피보험자코드
		//MethodObj.setParam("sInrpsName", Ds_Pibo.getCellData(0, "sInrpsName"));//성명
		//MethodObj.setParam("sSsrtDate", parent.cal_sSsrtDate.getValue());//청약일자
		MethodObj.setParam("sCrChngNo", "0"); //변경seq
		MethodObj.setParam("nInrpsSeqno", nSeq + 1); //변경seq
		MethodObj.setParam("delLTIDA01YN", delLTIDA01YN); //피보험자 테이블 삭제 여부
		//trace("sPlanProgRankCd:"+Ds_LTIDA00.getCellData(0,"sPlanProgRankCd"));
	    //설계상태를 지움. 산출을 다시 시키기 위해
	    if (delLTIDA01YN == "Y") {
	    	Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "10"); //설계진행단계코드(보험료산출(인))
	        MethodObj.setParam("sPlanProgRankCd", "10");
	    }
	    MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N"); //세금우대사항 setting
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_deleteEtc1  LTIDA60
	// 내용        : 목적물에 종속되어있는 데이타삭제(LTIDA61,LTIDA62)
	//---------------------------------------------------------------------------
	scwin.lfn_deleteEtc1 = function(nSeq, delLTIDA60YN) {
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "delete_PiboDetail", "", "");
	    MethodObj.setId("delete_PiboDetail");
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue());
	    
	    MethodObj.setParam("sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd")); //개인단체구분코드
	    MethodObj.setParam("sPsnPrprtGroupFlgcd", "2"); //인물단체구분코드(1:인,2:물) 
	    MethodObj.setParam("nPsnPrprtGroupSeqno", nSeq + 1); //일련번호
	    
	    MethodObj.setParam("sCrChngNo", "0"); //변경seq
	    MethodObj.setParam("nInsrdObjctSeqno", wconv.toString(nSeq + 1)); //변경seq
	    //목적물소재지 LTIDA61
	    MethodObj.setParam("delLTIDA60YN", delLTIDA60YN); //목적물 테이블 삭제 여부(LTIDA61,LTIDA62포함)
	    MethodObj.setParam("nLctnSeqno", "1"); //소재지일련번호
	    //명기가재 LTIDA62
	    MethodObj.setParam("nSwHsHldGdsSeqno", "1"); //명기가재일련번호
	    //설계상태를 지움. 산출을 다시 시키기 위해 2013.06.14 lbc
	    if (delLTIDA60YN == "Y") {
	        Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "10"); //설계진행단계코드(보험료산출(인))
	        MethodObj.setParam("sPlanProgRankCd", "10");
	    }
	    MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N"); //세금우대사항 setting	
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_setBtnAddPibo
	// 내용        : 피보험자 추가/삭제버튼 활성화
	//---------------------------------------------------------------------------
	scwin.lfn_setBtnAddPibo = function(dsPrdAttr) {
	    //최대피보험목적수가 > 0 일때 버튼 활성화
	    if (parseInt(dsPrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        //btnAddPibo.show();
	        //btnDelPibo.show();
	        btnAddPibo.visible(true);
	        btnDelPibo.visible(true);
	        //Grd_Pibo.SetCellProp("Body", 7, "Edit", "Combo"); //피보험자 주피보험자와 관계
	    } else {
	        //btnAddPibo.hide();
	        //btnDelPibo.hide();
	        btnAddPibo.visible(false);
	        btnDelPibo.visible(false);
	        //grd_sTrty.SetCellProp("Body", 3, "Edit", "None");
	        //grd_sTrty.SetCellProp("Body", 4, "Edit", "None");
	        //Grd_Pibo.SetCellProp("Body", 7, "Edit", "None"); //피보험자 주피보험자와 관계
	        for (var k = Ds_Pibo.getRowCount() - 1; k >= 1; k--) {
	            //scwin.lfn_deleteEtc(k, "Y");
	            //util.deleteRow(Ds_Pibo, k); // Dataset에 빈 Record한줄 추가
	            //util.deleteRow(Ds_Pibo_BackUp, k);
	            scwin.lfn_deleteEtc(k, "Y");
	            Ds_Pibo.deleteRow(k);
	            Ds_Pibo_BackUp.deleteRow(k);
	        }
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_searchPiboTrty
	// 내용        : 피보험자에 해당하는 특약정보를 조회한다.
	-----------------------------------*/
	scwin.lfn_searchPiboTrty = function(obj, nRow) {
	    //고객찾기를 하지 않으면 조회를 하지 않는다
	    if (wconv.length(wconv.trim(Ds_Pibo.getCellData(nRow, "sInrpsName"))) <= 0) {
	        scwin.lfn_changeTrty();
	        return;
	    }
	
	    //trace("Ds_Trty:" + Ds_Trty.SaveXML());
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    //trace(Ds_Pibo.savexml());
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
   		MethodObj.setId("getPiboTrty");
   		MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    MethodObj.setParam("sPsnGroupFlgcd", Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd")); //개인단체구분코드
	    MethodObj.setParam("sDrveFlagCd", Ds_Pibo.getCellData(nRow, "sDrveFlagCd")); //운전용도 
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sInrpsCd")); //피보험자주민번호
	    MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	    MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	    //피보험자 추가일때는 특약DB조회를 하지 않기 위해
	    if (Ds_Trty.getRowCount() > 0) {
	    	MethodObj.setParam("nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno")); //일련번호
	    }
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //trace("sInsurTermCd:"+sInsurTermCd);
	    //trace("sPaymTermCd:"+sPaymTermCd);
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC094MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    //특약중 화면출력특약만 화면에 보여줌
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
	    
	    //Ds_Trty.removeColumnFilterAll();
	    //Ds_Trty_Backup.removeColumnFilterAll();
	    //wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    //wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");

	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        } else {
        	util.copyM(DsWs_InsurTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
		    util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
		    util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
		    
	        //플랜선택시에는 특약만추가 함.
	        if (obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") {
	        	util.copyM(Ds_Trty_Basic, Ds_Trty.getAllJSON());
	        		
	        	wconv.filter(Ds_Trty_Basic, "chk=='" + "1" + "'");
	            scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno"), "1");
	            scwin.lfn_TrtyInsAmtInit(obj); //가입금액 초기값 세팅
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check(nRow);
	        } else {
	            //요청인 경우 처리
	            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 52) {
	                //피보험자 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {
	                    scwin.lfn_changeTrty();
	                } else {
	                    //특약세팅
	                    scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno"), "1"); //lfn_TrtyDataSetSet();
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                }
	            } else {
	                //일시납 납입기간에 따른 납입주기 세팅
	                scwin.lfn_PaymCyclSet();
	                scwin.lfn_changeTrty();
	
	                //피보험자 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {} else {
	                    //플랜,납입주기,납만 화면 활성화/비활성화
	                    scwin.lfn_PlanEnable(nRow);
	                    //Ds_Trty.FireEvent = false;
	                    var arrtrty = util.getDataListEvent(Ds_Trty);
						util.removeAllDataListEvent(Ds_Trty);

	                    //특약세팅
	                    scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno"), "1");
	                    //lfn_TrtyDataSetSet();
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                    //보험기간,가입금액 초기값 세팅
	                    scwin.lfn_InsurTermInit(obj);
	                    
	                    //Ds_Trty.FireEvent = true;
	                    util.setDataListEvent(Ds_Trty, arrtrty);
	                    
	                    //특약관계체크
	                    scwin.lfn_TrtyList_Relation_Check();
	                }
	            }
	
	            //피보험자 추가일때만 특약 추가
	            if (Ds_Trty.getRowCount() <= 0) {
	                for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	                    //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
	                    if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" || Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                        btn_Medical.setDisabled(false); //사전조회버튼 활성화
	                    }
	                    
	                    //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                    if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
	                        Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "Y"); //실손가입 확인
	                    }
	                    
	                    //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                    if (Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                        Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "Y"); //사전조회버튼 활성화
	                    }
	                }
	            }
	        }
	    }
	    
	    Ds_Trty.removeColumnFilterAll();
   		Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
   		wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
   		//Ds_Trty.FireEvent = true; //trace("특약=="+Ds_Trty.rowcount);
	    util.setDataListEvent(Ds_Trty, arrtrty);
	    //피보험자 체크박스 플래그 초기화
	    //piboCheckFlag = false;
	};
	
	/*-----------------------------------
	// function 명 : lfn_trtyAddRow
	// 내용        : 조회된 특약을 Ds_Tyty에 추가함.
	-----------------------------------*/
	scwin.lfn_trtyAddRow = function(obj, nPsnPrprtGroupSeqno, sPsnPrprtGroupFlgcd) {
	    var nRowPos = Ds_Trty.getRowCount();
	    var jCnt = Ds_Trty_Basic.getRowCount();
	    
	    for (var i = 0; i < DsWs_Trty.getRowCount(); i++) {
	        if (DsWs_Trty.getCellData(i, "sPsnPrprtGroupFlgcd") == sPsnPrprtGroupFlgcd && DsWs_Trty.getCellData(i, "sScrnIndcYn") == "Y") {
	            Ds_Trty.insertRow(nRowPos);
				Ds_Trty.setRowJSON(nRowPos, DsWs_Trty.getRowJSON(i), true);
				Ds_Trty.setCellData(nRowPos,"nPsnPrprtGroupSeqno",nPsnPrprtGroupSeqno);
	            
	            //2013.06.12 lbc
	            //Ds_Trty.SetColumn(nRowPos,"sPsnPrprtGroupFlgcd",sPsnPrprtGroupFlgcd);
	            if (obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") {
	                if (cmb_Plan.getText().indexOf("자유") >= 0) {
	                    for (var j = 0; j < jCnt; j++) {
	                        if (Ds_Trty.getCellData(nRowPos, "TrtyCd") == Ds_Trty_Basic.getCellData(j, "TrtyCd")) {
	                            Ds_Trty.setCellData(nRowPos, "chk", "1");
	                            break;
	                        } else {
	                            Ds_Trty.setCellData(nRowPos, "chk", 0);
	                        }
	                    }
	                } else {
	                    Ds_Trty.setCellData(nRowPos, "chk", "1");
	                }
	                Ds_Trty.setCellData(nRowPos, "nTrtyPrem", "");
	                Ds_Trty.setCellData(nRowPos, "nExptGrntBussPrem", "");
	                Ds_Trty.setCellData(nRowPos, "nGrntPrem", "");
	
	                //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(nRowPos, "PronCmpsTrtyYn") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "nInrpsSeqno", nPsnPrprtGroupSeqno), "hasPronCmpsTrty", "Y"); //실손가입 확인
	                }
	                
	                //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(nRowPos, "FxamtCmpsFlag") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "nInrpsSeqno", nPsnPrprtGroupSeqno), "hasFxamtCmps", "Y"); //사전조회버튼 활성화
	                }
	            }
	            nRowPos++;
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_setBtnAddPrprt
	// 내용        : 목적물 추가/삭제버튼 활성화
	//---------------------------------------------------------------------------
	scwin.lfn_setBtnAddPrprt = function(dsPrdAttr) {
	    //최대피보험목적수가 > 0 일때 버튼 활성화
	    if (parseInt(dsPrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        //btnAddPrprt.show();
	        //btnDelPrprt.show();
	        btnAddPrprt.visible(true);
	        btnDelPrprt.visible(true);
	        //grd_sTrty.SetCellProp("Body",3,"Edit","Combo"); //나중에 개별 수정 필요시(20120713)
	        //grd_sTrty.SetCellProp("Body",4,"Edit","Combo"); //나중에 개별 수정 필요시(20120713)
	        //	Grd_Pibo.SetCellProp("Body",7,"Edit","Combo");	//피보험자 주피보험자와 관계
	    } else {
	        //btnAddPrprt.hide();
	        //btnDelPrprt.hide();
	        btnAddPrprt.visible(false);
	        btnDelPrprt.visible(false);
	        //	grd_sTrty.SetCellProp("Body",3,"Edit","None");
	        //	grd_sTrty.SetCellProp("Body",4,"Edit","None");
	        //	Grd_Pibo.SetCellProp("Body",7,"Edit","None");	//피보험자 주피보험자와 관계
	        for (var k = Ds_Prprt.getRowCount() - 1; k >= 1; k--) {
	            scwin.lfn_deleteEtc1(k, "Y");
	            //util.deleteRow(Ds_Prprt, k); // Dataset에 빈 Record한줄 추가
	            Ds_Prprt.removeRow(nFindRow);
	        }
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_searchPrprtTrty
	// 내용        : 목적물에 해당하는 특약정보를 조회한다.
	-----------------------------------*/
	scwin.lfn_searchPrprtTrty = function(obj, nRow) {
	    //요율업종 찾기를 하지 않으면 조회를 하지 않는다
	    if (wconv.length(wconv.trim(Ds_Prprt.getCellData(nRow, "sRatoBntpCd"))) <= 0) {
	        wprom.alert("요율업종 찾기를 하세요");
	        scwin.lfn_changeTrty1(); //목적물의 해당 특약으로 필터링
	        return;
	    }
	
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
   		MethodObj.setId("getPiboTrty");
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    if (wconv.length(Ds_Prprt.getCellData(nRow, "sApplPlanCd")) == 0) {
	    	MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    	MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    }else{
	    	MethodObj.setParam("sPlanCd", Ds_Prprt.getCellData(nRow, "sApplPlanCd")); //플랜코드
	    	MethodObj.setParam("sPlanName", Ds_Prprt.getCellData(nRow, "sApplPlanName")); //플랜명
	    }
	    MethodObj.setParam("sPsnGroupFlgcd", Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));
	    MethodObj.setParam("sDrveFlagCd", "1"); //운전용도 
	    gfn_getServerTime();//서버시간
		var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	    if (wconv.substr(sBirthDate, 4, 4) == "0229") {
	        sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
	    }
	    MethodObj.setParam("sResno", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000"); //피보험자주민번호
	    
	    MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	    MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	    
	    //목적물 추가일때는 특약DB조회를 하지 않기 위해xxxxxxxxxx
	    if (Ds_Trty.getRowCount() > 0) {
	    	MethodObj.setParam("nPsnPrprtGroupSeqno", Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno")); //일련번호 
	    }
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	
	    //trace("sInsurTermCd:"+sInsurTermCd);
	    //trace("sPaymTermCd:"+sPaymTermCd);
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC094MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);

	    //Ds_Trty.removeColumnFilterAll();
	    //Ds_Trty_Backup.removeColumnFilterAll();
		//wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    //wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
	    if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }else{
        	util.copyM(DsWs_InsurTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
		    util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
		    util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
        	
        	//trace("보험기간2=="+DsWs_InsurTerm.SaveXML());	
	        //trace("납입기간2=="+DsWs_PaymTerm.SaveXML());	
	        //trace("특약2=="+DsWs_Trty.SaveXML());	
	        //플랜세팅
	        //if(nRow == 0 && Length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) > 0){
	        //	cmb_Plan.getValue() = Ds_Pibo.getCellData(nRow, "sApplPlanCd");
	        //}
	        //보기납기 세팅
	        //if(Length(Ds_LTIDA00.getCellData(0, "sInsurTermCd")) > 0 && Length(Ds_LTIDA00.getCellData(0, "sPaymTermCd")) > 0){
	        //	cmb_InsurTermPaymTerm.getValue() = Ds_LTIDA00.getCellData(0, "sInsurTermCd")+"/"+Ds_LTIDA00.getCellData(0, "sPaymTermCd");			
	        //}
	        //Ds_Trty.FireEvent = false;
	
	        //플랜선택시에는 특약만추가 함.
	        //2013.06.17 lbc
	        //자유설계형일때 기본형특약에 체크를 해주기 위해 기본형특약을 조회함.
	        //첫번째에서는 cmb_Plan이므로 db에서 값을 셋팅 
	        //obj.id="선택" 두번째는 기본형에서 값셋팅.
	        //alert(obj);
	        if (obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") {
	            //wconv.copy(Ds_Trty_Basic, Ds_Trty);
	            util.copyM(Ds_Trty_Basic, Ds_Trty.getAllJSON());
	            wconv.filter(Ds_Trty_Basic, "chk=='" + "1" + "'");
	            scwin.lfn_trtyAddRow(obj, Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno"), "2");
	            //alert(222);
	            //112233
	            scwin.lfn_TrtyInsAmtInit(obj); //가입금액 초기값 세팅
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check(nRow);
	        } else {
	            //alert(333);
	            //인수요청인 경우 처리
	            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 52) {
	                //설계진행단계코드(52:인수요청)
	                //목적물 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {
	                    //alert(444);
	                    scwin.lfn_changeTrty1();
	                } else {
	                    //alert(555);
	                    //특약세팅yyyyyyyyyyy
	                    scwin.lfn_trtyAddRow(obj, Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno"), "2"); //피보험목적물일련번호
	                    //lfn_TrtyDataSetSet();
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                    //Ds_Trty_Backup.Copy("Ds_Trty");
	                    //Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                }
	            } else {
	                //alert(666);
	                //일시납 납입기간에 따른 납입주기 세팅
	                scwin.lfn_PaymCyclSet();
	                //fillter 처리.
	                scwin.lfn_changeTrty1();
	
	                //목적물 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {} else {
	                    //alert("6:" + Ds_Trty.getRowCount() );			
	                    //alert(888);
	                    //플랜,납입주기,납만 화면 활성화/비활성화
	                    scwin.lfn_PlanEnable(nRow);
	                    //Ds_Trty.FireEvent = false;
	                    var arrtrty = util.getDataListEvent(Ds_Trty);
						util.removeAllDataListEvent(Ds_Trty);
	                    
	                    //특약세팅
	                    scwin.lfn_trtyAddRow(obj, Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno"), "2");
	                    //lfn_TrtyDataSetSet();
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                    //Ds_Trty_Backup.Copy("Ds_Trty");
	                    //Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                    //보험기간,가입금액 초기값 세팅
	                    scwin.lfn_InsurTermInit(obj);
	                    //Ds_Trty.FireEvent = true;
	                    util.setDataListEvent(Ds_Trty, arrtrty);
	
	                    //특약관계체크
	                    scwin.lfn_TrtyList_Relation_Check();
	                }
	            }
	        }
        }
	    Ds_Trty.removeColumnFilterAll();
   		Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0  &&  sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='" + Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno") + "'"); //목적물일련번호
   		wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='" + Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno") + "'"); //목적물일련번호
	    //Ds_Trty.FireEvent = true; //피보험자 체크박스 플래그 초기화
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	/*-----------------------------------
	// function 명 : Grd_Pibo_OnCellPosChanged
	// 내용        : 
	-----------------------------------*/
	scwin.Grd_Pibo_OnCellPosChanged = function(nRow, nCell, nOldRow, nOldCell) {
		scwin.sel_sel1(Grd_Pibo, nRow);
		
	    if (Grd_Pibo.getColumnID(nCell) == "btn_GridRow_IVR") {
	        //IVR 화면 오픈 
	        if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58 || (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M")) {
	            //완료
	            return;
	        }
	        scwin.Btn_IVR_OnClick(obj, nRow);
	        //nInrpsAgeOld = Ds_Pibo.getCellData(nRow,"nInrpsAge");
	        //nManAgeOld = Ds_Pibo.getCellData(nRow,"nManAge");
	        nInrpsAgeOld = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        nManAgeOld = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        return;
	    }else if (Grd_Pibo.getColumnID(nCell) == "sel") {
	        //피보험자에 해당하는 특약사항을 조회한다.
	        //alert("pibo ncell:");		
	        scwin.lfn_searchPiboTrty(Grd_Pibo, nRow);
	    }
	    return;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Btn_IVR_OnClick
	// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
	// param 
	// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
	// 2: lfn_IVR_CallBack (콜백 함수명)
	// 3 : ""  (콜백 받는 변수명 1)
	// 4 : nRow (콜백 받는 변수명 2)
	//---------------------------------------------------------------------------
	scwin.Btn_IVR_OnClick = function(obj, nRow) {
	    alert("scwin.Btn_IVR_OnClick");
	    //ivrOpenPop("J", "", "lfn_IVR_CallBack", "", nRow); // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호)
	    // obj는 결과값을 셋팅할 fieldName				
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_IVR_CallBack
	// 내용        :  IVR 콜백함수
	//---------------------------------------------------------------------------
	scwin.lfn_IVR_CallBack = function(id, nRow, val) {
	    if (wconv.length(val) > 0) {
	        Ds_Pibo.setCellData(nRow, "sInrpsCd", val);
	        var info = new Object();
	        info.rowIndex = nRow;
			info.colIndex = 2;
			info.oldValue = "";
			info.newValue = val;
	        scwin.Grd_Pibo_OnKillFocus(info);
	        scwin.lfn_Edt_Mask_OnKillFocus(); //나이계산 
	        //Grd_Pibo.Redraw;
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_changeTrty1
	// 내용        : 목적물의 해당 특약으로 필터링
	-----------------------------------*/
	scwin.lfn_changeTrty1 = function() {
	    //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
		
	    var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
	    if (nFindRow < 0) {
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
	        return false;
	    }
	
	    //trace("changeTrty1==>" + Ds_Trty.savexml());
	    //	Ds_Trty.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='"+Ds_Prprt.getCellData(nFindRow,"nInsrdObjctSeqno")+"'");
	    //	Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='"+Ds_Prprt.getCellData(nFindRow,"nInsrdObjctSeqno")+"'");
	    Ds_Trty.removeColumnFilterAll();
  		Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='" + Ds_Prprt.getCellData(nFindRow, "nInsrdObjctSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2'  && nPsnPrprtGroupSeqno=='" + Ds_Prprt.getCellData(nFindRow, "nInsrdObjctSeqno") + "'");
	
	    //일시납 납입기간에 따른 납입주기 세팅
	    //lfn_PaymCyclSet();	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(nFindRow);

	    //Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_mkGrdPassWord()
	// 내용        : 그리드 패스워드 처리
	//---------------------------------------------------------------------------
	scwin.lfn_mkGrdPassWord = function() {
	    var ds_columnName = ["sInrpsCd"];
	    var grd_idx = [2];
	    var grd_cellSize;
	    if (parent.sSimpleYn == "Y") {
	        grd_cellSize = [128];
	    }
	    var edt_event = "scwin.lfn_Edt_Mask_OnKillFocus";
	    var grd_mask = ["######-#******"];
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Edt_Mask_OnKillFocus()
	// 내용        : 주민번호 입력 후 킬포커스
	//---------------------------------------------------------------------------
	scwin.lfn_Edt_Mask_OnKillFocus = function() {
	    //var nRow = Ds_Pibo.currow;
	    var nRow = Grd_Pibo.getRealRowIndex(Grd_Pibo.getFocusedRowIndex());
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sInrpsCd")) > 0 && scwin.lfn_ChkPersonID(Ds_Pibo.getCellData(nRow, "sInrpsCd"))) {
	        //보험나이계산
	        Ds_Pibo.setCellData(nRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        Ds_Pibo.setCellData(nRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        //Grd_Pibo.SetCellProp("body", 5, "edit", "normal");
	        Ds_Pibo_BackUp.setCellData(nRow, "sInrpsCd", Ds_Pibo.getCellData(nRow, "sInrpsCd"));
	        Ds_Pibo_BackUp.setCellData(nRow, "nInrpsSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno"));
	    } else {
	        //Ds_Pibo.FireEvent = false;
	        var arrpibo = util.getDataListEvent(Ds_Pibo);
			util.removeAllDataListEvent(Ds_Pibo);
	        wprom.alert("주민번호를 정확히 입력해 주세요.");
	        Ds_Pibo.setCellData(nRow, "nInrpsAge", "");
	        Ds_Pibo.setCellData(nRow, "nManAge", "");
	        Ds_Pibo.setCellData(nRow, "sInrpsName", "");
	        //Grd_Pibo.SetCellProp("body", 5, "edit", "none");
	        //Ds_Pibo.FireEvent = true;
	        util.setDataListEvent(Ds_Pibo, arrpibo);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_ChkPersonID
	// 내용        : 주민번호 체크
	//---------------------------------------------------------------------------
	scwin.lfn_ChkPersonID = function(sPersonCd) {
	    if (parent.sSimpleYn == "Y") {
	        return scwin.lfn_simpleChkPersonID(sPersonCd);
	    } else {
	    	//Global_Script.js 주민번호 체크
	        return checkPersonID(sPersonCd);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_simpleChkPersonID
	// 내용        : 주민번호 날자만 체크
	//---------------------------------------------------------------------------
	scwin.lfn_simpleChkPersonID = function(sPersonCd) {
	    var yy = "";
	    // 나이 (-) 체크
	    if (wconv.charAt(sPersonCd, 6) == "1" || wconv.charAt(sPersonCd, 6) == "2" || wconv.charAt(sPersonCd, 6) == "5" || wconv.charAt(sPersonCd, 6) == "6") {
	        yy = "19";
	    } else if (wconv.charAt(sPersonCd, 6) == "9" || wconv.charAt(sPersonCd, 6) == "0") {
	        yy = "18";
	    } else {
	        yy = "20";
	    }
	    gfn_getServerTime();//서버시간
		sToday = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	    if (wconv.toNumber(wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 4)) - wconv.toNumber(yy + wconv.substr(sPersonCd, 0, 2)) < 0) {
	        return false;
	    }
	    
	    //날짜 체크
	    if (!wconv.isDate(yy + wconv.substr(sPersonCd, 0, 6))) {
	        return false;
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_ClearTrty
	// 내용        : 해당 피보험자의 특약을 데이터셋에서 삭제
	//---------------------------------------------------------------------------
	scwin.lfn_ClearTrty = function(nRow) {
	    //grd_sTrty.Redraw = false;
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
	    util.removeAllDataListEvent(Ds_Trty);
	    
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    for (var k = Ds_Trty.getRowCount() - 1; k >= 0; k--) {
	        if (Ds_Trty.getCellData(k, "nPsnPrprtGroupSeqno") == Ds_Pibo.getCellData(nRow, "nInrpsSeqno") && Ds_Trty.getCellData(k, "sPsnPrprtGroupFlgcd") == "1") {
	            util.removeRow(Ds_Trty, k);
           		util.removeRow(Ds_Trty_Backup, k);
	        }
	    }
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    //Ds_Trty.FireEvent = true;
	    //grd_sTrty.Redraw = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_ClearTrty1
	// 내용        : 해당 목적물의 특약을 데이터셋에서 삭제
	//---------------------------------------------------------------------------
	scwin.lfn_ClearTrty1 = function(nRow) {
	    //grd_sTrty.Redraw = false;
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
		
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    for (var k = Ds_Trty.getRowCount() - 1; k >= 0; k--) {
	        if (Ds_Trty.getCellData(k, "nPsnPrprtGroupSeqno") == Ds_Prprt.getCellData(nRow, "nInsrdObjctSeqno") && Ds_Trty.getCellData(k, "sPsnPrprtGroupFlgcd") == "2") {
	            util.removeRow(Ds_Trty, k);
           		util.removeRow(Ds_Trty_Backup, k);
	        }
	    }
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Prprt, "sel1", "1"), "nInsrdObjctSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno=='" + Ds_Prprt.getCellData(wconv.findRow(Ds_Pibo, "sel1", "1"), "nInsrdObjctSeqno") + "'");
	    //Ds_Trty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	    //grd_sTrty.Redraw = true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Search
	// 내용        : 현재판매중인 상품리스트를 조회
	//---------------------------------------------------------------------------
	scwin.lfn_GoodsSearch = function() {
	    wconv.clear(DsWs_Goods);
	    var MethodObj = new callService("com.inswave.longterm.prd.rle.task.BCA710Task", "getInsAvaGdList", "", "");
	    MethodObj.setId("getInsAvaGdList");
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd"));
	    MethodObj.setParam("sUserID", util.getGdsValue("gUserID"));
	    MethodObj.setParam("sGdCd", wconv.trim(parent.edt_sGdCd.getValue()));
	    MethodObj.setParam("sPsnPrprtGroupFlgcd", "2"); //1:인, 2:물
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//*/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return false;
        }
		//DsWs_Goods.setJSON(_tranSync.getDsJson("//*/vector/data/multi"));	// dataset 데이터
		util.copyM(DsWs_Goods, _tranSync.getDsJson("//*/vector/data/multi"), true);
        if (DsWs_Goods.getRowCount() == 0) {
	        //		alert("가입가능한 상품이 없습니다.");
	        return false;
	    } else {
	        return true;
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_checkPrint
	// 내용        : 인쇄시 check사항
	//---------------------------------------------------------------------------
	scwin.lfn_checkPrint = function(PrintGubun) {
	    if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
	        wprom.alert("인수금지 대상입니다. 인수제한사유를 확인하세요\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) <= 0) {
	        wprom.alert("영업보험료가 0원 입니다.\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")) <= 0) {
	        wprom.alert("적용보험료가 0원 입니다.\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_checkMedical
	// 내용        : 사전조회 이미지등록여부조회및 check
	//---------------------------------------------------------------------------
	scwin.lfn_checkMedical = function(nRow) {
	    var result;
	    result = true;
	    if (nRow < 0){
	        nRow = 0; //값이 안넘어 오는 경우 0으로 강제 셋팅
	    }
	    
	    if (Ds_Pibo.getRowCount() < 1){
	        return true; // 피보험자가 없는 경우는 true  return
		}
					        
	    //사전조회 체크시 대면일 경우 (가입설계 동의가 없는 경우만 이미지 등록여부 체크
	    if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(nRow, "sInrpsCd")) == "Y") {
	        //데이터셋 초기화
	        wconv.clear(DsWs_LTIDB01Cnt);
	        
	        var MethodObj = new callService("com.inswave.customer.task.CustTask", "selMedicImageCheck", "", "");
	        MethodObj.setId("selMedicImageCheck");
	        MethodObj.setParam("sImagClsfCd", "JCD10001"); //이미지분류코드(JCD10001)
	        MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sInrpsCd")); //이미지키정보
	        MethodObj.setParam("sValdDate", parent.sToday); //기준일자
	        MethodObj.setParam("sUserID", util.getGdsValue("gUserID"));
	        MethodObj.setUrl("/contract/CBSC094MController.do");
			MethodObj.setXPath("//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt");
			MethodObj.addXPath("//WARNING");
			MethodObj.sync();
			MethodObj.send();
	        
	        util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
			if (DsWs_Warning.getRowCount() != 0){
	        	wprom.alert(DsWs_Warning.getCellData(0, "msg"));
	            result = false;
	            return false;
	        }
	        
	        //DsWs_LTIDB01Cnt.setJSON(_tranSync.getDsJson("LTIDB07Cnt"));	// dataset 데이터
			util.copyM(DsWs_LTIDB01Cnt, _tranSync.getDsJson("LTIDB07Cnt"), true);		   
	        if (wconv.toNumber(DsWs_LTIDB01Cnt.getCellData(0, "nCount")) == 0) {
	            wprom.alert(Ds_Pibo.getCellData(nRow, "sInrpsName") + "님의 보험계약사전조회동의서 스캔처리후 조회가능합니다.");
	            result = false;
	            return false;
	        }
	
	        //본인 스캔한 고객인지 체크 
	        if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
	            if (DsWs_LTIDB01Cnt.getCellData(0, "sSelfWrcsYn") == "N") {
	                wprom.alert(Ds_Pibo.getCellData(nRow, "sInrpsName") + "님의 보험계약동의서의 담당자 스캔처리후 조회가능합니다.");
	                result = false;
	                return false;
	            }
	        }
	    }
	    return result;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_getCUSAA42Info()
	// 내용        : 가입설계 동의여부 확인 
	//---------------------------------------------------------------------------
	scwin.lfn_getCUSAA42Info = function(insrdID) {
	    //신용정보 동의 23조 동의여부 확인	 
	    wconv.clear(DsWs_Search42);
   		var RejectYN = "";
   		
   		// 가입설계 동의 여부 체크
   		var MethodObj = new callService("com.inswave.customer.task.CustTask", "getHandlerCUSAA42Info", "", "");
	    MethodObj.setId("getHandlerCUSAA42Info");
	    MethodObj.setParam("sCustNo", insrdID);
	    MethodObj.setParam("sProductType", "3");
	    MethodObj.setParam("sHandlerID", (wconv.trim(parent.edt_sDoerUser.getValue())==""?parent.edt_sDoer.getValue():parent.edt_sDoerUser.getValue()));
	    MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//*/CUSAA42");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	    
	    //util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		//DsWs_Search42.setJSON(_tranSync.getDsJson("CUSAA42"));	// dataset 데이터
		util.copyM(DsWs_Search42, _tranSync.getDsJson("CUSAA42"));	
	    
	    if (DsWs_Search42.getCellData(0, "result") > 0) {
	        if (DsWs_Search42.getCellData(0, "sAgmReq") == "Y") {
	            RejectYN = "Y"; //유효일자가 지난경우 다시 받기. 해당 칼럼이 다 체크해줌
	        }
	    } else {
	        RejectYN = "Y"; //가입동의 거부
	    }
	    return RejectYN;
	};
	
	/*-----------------------------------
	// function 명 : lfn_PaymTerm
	// 내용        : 보험기간별 납입기간 조회
	-----------------------------------*/
	scwin.lfn_PaymTerm = function(nRow, strColumnID) {
	    if (Ds_Pibo.getRowCount() == 0) {
	        alert("피보험자를 입력하세요");
	        //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	        var arrtrty = util.getDataListEvent(Ds_Trty);
			util.removeAllDataListEvent(Ds_Trty);
			
	        Ds_Trty.setCellData(nRow, "sInsurTermCd", "");
	        
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
	        return false;
	    }
	    wconv.clear(DsWs_PaymTerm);
	    var MethodObj = new callService("com.inswave.longterm.prd.rle.task.BCA730Task", "getPaymTermRule", "", "");
	    MethodObj.setId("getPaymTermRule");
	    Ds_Single.removeAll();
	    Ds_InPayTerm.removeAll();
	    util.appendRow(Ds_Single);
	    Ds_Single.setCellData(0, "sGdCd", sGdCd);
	    Ds_Single.setCellData(0, "sStndDate", parent.cal_sSsrtDate.getValue());
	    Ds_Single.setCellData(0, "sResno", Ds_Pibo.getCellData(0, "sInrpsCd"));
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") == 1 && Ds_Trty.getCellData(i, "sInsurTermCd") != "") {
	            util.appendRow(Ds_InPayTerm);
	            wconv.mi_copyRow(Ds_Trty.getID(), i, Ds_InPayTerm.getID(), Ds_InPayTerm.getRowPosition());
	            Ds_InPayTerm.setCellData(Ds_InPayTerm.getRowPosition(), "sStandardDate", parent.cal_sSsrtDate.getValue());
	        }
	    }
	    if (Ds_InPayTerm.getRowCount() == 0) {
	        alert("특약사항을 선택하세요");
	        return false;
	    }
	    MethodObj.addSingleData("single", "single", Ds_Single.getID());
	    MethodObj.addVectorData("multi", "LTmultiIDA02", Ds_InPayTerm.getID());
		MethodObj.setHashTable();
	
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), warn);
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
	    	//DsWs_PaymTerm.setJSON(_tranSync.getDsJson("multi"));
	    	util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("multi"));
	        if (DsWs_PaymTerm.getRowCount() == 0) {
	            alert("납입기간이 없습니다.");
	        }
	    }
	};
	
	//Grd_Pibo 클릭된 Row Cell 값 저장
	var nPiboRow = 0;
	var nPiboCell = 0;
	//---------------------------------------------------------------------------
	// function 명 : Grd_PiboLIst_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
	// 내용        : 그리드에서 클릭시 처리
	//---------------------------------------------------------------------------
	scwin.Grd_Pibo_OnCellClick = function(nRow, nCell) {
		//현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    scwin.sel_sel1(Grd_Pibo, nRow);
	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(nRow);
	    switch (Grd_Pibo.getColumnID(nCell)){
	    	case "sel":
	    		window.top.util.winTopShowModalChk = "T"
 				util.winTopShowModal();
 				
 				setTimeout(
					function(){
						try{
							//trace(Ds_Trty.getRowCountNF());
				            if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
				                wprom.alert("청약일을 선택하세요");
				                return;
				            }
				            if (wconv.length(parent.edt_sGdCdNm.getValue()) == 0) {
				                wprom.alert("상품을 선택하세요");
				                return;
				            }
				            //피보험자에 해당하는 특약사항을 조회한다.
				            scwin.lfn_searchPiboTrty(Grd_Pibo, nRow);
						}
						finally{
							util.winTopHideModal();
						}
						
 					}
					,500
				);
	        break;
	        case "sInrpsCd":
	            nInrpsAgeOld = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
       			nManAgeOld = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        break;
	        case "btn_GridRow_Search":
	            if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58 || (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M")) {
	                break;
	            }
	            nInrpsAgeOld = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
       			nManAgeOld = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	            runOnCellPosChanged = true;
	            //CellClick 과 PosChanged 동시에 발생을 막기 위해
	            //고객화면 오픈
	            scwin.lfn_searchCust(nRow, nCell, 0, 0);
	            
	            //확인후 사용하지 않음
	            //scwin.lfn_juminProc();
            break;
	        case "7":
	            if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58 || (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M")) {
	                Grd_Pibo.SetCellProp("BODY", 7, "Edit", "none");
	                break;
	            }
            break;
	        case "btn_Job_Search":
	        	var promise = Promise.resolve();
	            promise = promise.then(function(rv) {
	            	scwin.lfn_searchJobCd(nRow);
	            });
	            promise = promise.then(function(rv) {
	            	if ((wconv.length(parent.edt_sGdCd.getValue()) > 0) && (Ds_Trty.getRowCount() < 1)) {
	                    //특약이 없는 경우 특약조회 
	                    runOnCellPosChanged = true;
	                    scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, 0);
	                }
	            });
	            return;
	        break;    
	        default:
	            break;
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_searchCust
	// 내용        : 고객팝업호출
	//---------------------------------------------------------------------------
	scwin.lfn_searchCust = function(nRow, nCell, nX, nY) {
	    //대리점일때
	    if (parent.sAgncYn == "Y") {
	        if (wconv.length(Ds_Pibo.getCellData(nRow, "nInrpsAge")) <= 0) {
	            return;
	        }
	    }
	
	    //휴면계약 존재여부 확인
	    var rtnValue = gfn_checkDmcyInsurByCustNo("DsWs_Dmcy", wconv.trim(Ds_Pibo.getCellData(nRow, "sInrpsCd")));
	    if (rtnValue != "") {
	        alert(rtnValue);
	    }
	    
	    var result;
	    var parentInfo = "";
	    Ds_long_mPlr.removeAll();
	    if (Ds_Pibo.getRowCount() > 0 && wconv.length(Ds_Pibo.getCellData(nRow, "sAddrFlgcd")) > 0 && Ds_Pibo.getCellData(nRow, "sInrpsCd") == Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") && wconv.length(Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd")) > 0) {
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCstId") + "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += Ds_Pibo.getCellData(nRow, "sAddrFlgcd") + "^"; //주소구분코드 자택
	        parentInfo += Ds_Pibo.getCellData(nRow, "nAddrChngSeq") + "^"; //주소변경회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "nTelnoChngSeq") + "^"; //전화회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명
	    } else {
	        parentInfo += "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += "^"; //주소구분코드 자택
	        parentInfo += "^"; //주소변경회차
	        parentInfo += "^"; //전화회차
	        parentInfo += "^"; //발송지주소구분
	        parentInfo += "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명 
	    }
	
	    var promise = Promise.resolve();
	    //고객화면 오픈  
	    //대면/비대면체크  0 :  대면 , 1 : 비대면
	    if (util.getGdsValue("gUseCustType") == "0") {
	        promise = promise.then(function(rtnVal) {
		    	var indata = new Object();
	    		indata.parentInfo = parentInfo;
	    		indata.screenId = "long";
	    		indata.sStandDate = parent.cal_sSsrtDate.getValue();//Ds_LTIDA00.getCellData(0, "sInsurStrtdate");
	    		indata.fAgntFlagPop = "";
	    		indata.sPlanNo = parent.medt_PlanNo.getValue();
	    		indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
	    		indata.sScanObjtYn = Ds_LTIDA00.getCellData(0, "sScanObjtYn");
	    		var popInfo = {"width":800,
	    	                   "height":580,
	    	                   "indata":indata,
	    	                   //"callback"  : scwin.popupCallback,
							   "title"     : "개인고객 등록"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);//개인고객 등록              
		    });
		    promise = promise.then(function(rv) {
		    	return util.winTopShowModalPromise(rv);
			});
		    promise = promise.then(function(rv) {
		    	var rtnValue = wprom.getReturnData();
				if (rtnValue != "") {
					scwin.cbso002pCallback(rtnValue);
				}
				util.winTopHideModal();
			});
	    } else {
	        open("cst_cst::A035_Pop.xml", "parentInfo=" + parentInfo, 820, 612, "TaskBar=true Resize=true");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_custConfirm
	// 내용        : 고객팝업에서 확인버튼 클릭 후 처리
	//---------------------------------------------------------------------------
	scwin.cbso002pCallback = function(result){
		if(result.Ds_long_mPlr != undefined && result.Ds_long_mPlr.length > 0){
			Ds_long_mPlr.removeAll();
			Ds_long_mPlr.setJSON(result.Ds_long_mPlr);
			
			var nRow = wconv.findRow(Ds_Pibo, "sInrpsCd", Ds_long_mPlr.getCellData(0, "sCustNo"));
			
			//2014.12.04 By SDJ(N1411-00267)
		    if (nRow < 0) {
		        nRow = wconv.findRow(Ds_Pibo, "sel", "1"); //현재 선택된 피보험자
		    }
		    //END (N1411-00267)
		    if(mfn_IsEmpty(parent.medt_PlanNo.getValue())){

				if((Ds_Pibo.getCellData(0, "sDrveFlagCd") != "") && (Ds_Pibo.getCellData(0, "sDrveFlagCd") != null)){	
				}else{	
//					Ds_Pibo.AddColumn("sDrveFlagCd");
					Ds_Pibo.setCellData(0, "sDrveFlagCd", "1");
				}
			}
	
		    if(cmb_Plan.getItemCount() <= 0) {
		    	scwin.fn_setRule(parent.edt_sGdCd.getValue());
		    	
		    	if(Ds_Pibo.getCellData(nRow, "sDrveFlagCd") != "" && Ds_Pibo.getCellData(nRow, "sDrveFlagCd") != null){
		    	}else{
		    		Ds_Pibo.setCellData(nRow, "sDrveFlagCd", "1");
		    	}
		    } else {
		        if (Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") != Ds_Pibo.getCellData(nRow, "sInrpsCd") || Ds_Pibo_BackUp.getCellData(nRow, "sDrveFlagCd") != Ds_Pibo.getCellData(nRow, "sDrveFlagCd")) {
		            if (!mfn_IsEmpty(parent.edt_sGdCd.getValue())) {
		                //피보험자별 특약을 조회하기 위해 먼저 셋팅
						Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
						
		                scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, -1);//lfn_searchPiboTrty("", nRow);
		            }
		        }
		        
		        var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);
				//특약세팅
				scwin.lfn_trtyDelRow(Ds_Pibo.getCellData(nRow,"nInrpsSeqno"),"1");
				scwin.lfn_trtyAddRow("",Ds_Pibo.getCellData(nRow,"nInrpsSeqno"),"1");
				scwin.lfn_TrtyInsAmtInit(cmb_Plan);

				if(Ds_Trty.getRowCount() == 0) {
					//alert("보험가입 가능한 나이가 아닙니다");
					//Ds_Pibo.setColumn(nRow,"sInrpsCd","");
					//Ds_Pibo.setColumn(nRow,"sInrpsName","");
					//return false;
				}
				util.setDataListEvent(Ds_Trty, arrtrty);
		    }
		    
		    if (Ds_long_mPlr.getRowCount() > 0) {
				Ds_Pibo.setCellData(nRow, "sInrpsCd", Ds_long_mPlr.getCellData(0,"sCustNo"));	//주민번호
				Ds_Pibo.setCellData(nRow, "sInrpsFlagCd", Ds_long_mPlr.getCellData(0,"sCustType"));//구분코드
				Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
				Ds_Pibo.setCellData(nRow, "sJobCd", Ds_long_mPlr.getCellData(0,"sJobCode"));//직업코드
				Ds_Pibo.setCellData(nRow, "sJobName", Ds_long_mPlr.getCellData(0,"sJobName"));//직업명
				Ds_Pibo.setCellData(nRow, "sJobGradCd", Ds_long_mPlr.getCellData(0,"sJobCls"));//직업급수
				//Ds_Pibo.setCellData(nRow, "sDrveFlagCd", Ds_long_mPlr.getCellData(0,"sDrvCls"));//운전용도
				Ds_Pibo.setCellData(nRow, "sInrpsSexFlag", scwin.lfn_getSex(Ds_Pibo.getCellData(nRow, "sInrpsCd")));	 //피보험자성별구분           
				Ds_Pibo.setCellData(nRow, "sInrpsCstId", Ds_long_mPlr.getCellData(0, "sCstId"));	      //피보험자고객ID             
				Ds_Pibo.setCellData(nRow, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo"));	      //고객변경일련번호         
				Ds_Pibo.setCellData(nRow, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType"));	      //고객구분코드             
				Ds_Pibo.setCellData(nRow, "sAddrFlgcd", "1");	      //주소구분코드   1 자택 2 직장          
				Ds_Pibo.setCellData(nRow, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo"));	      //주소변경회차             
				Ds_Pibo.setCellData(nRow, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo"));	      //전화번호변경회차         
				//MS DisplayFormat 적용
				
				//보험나이계산
				Ds_Pibo.setCellData(nRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue()));//나이
				Ds_Pibo.setCellData(nRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue()));//만나이
		        nInrpsAgeNew= Ds_Pibo.getCellData(nRow, "nInrpsAge"); 
		        nManAgeNew = gfn_getAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue());
		        
		        //trace("nInrpsAgeOld:" + nInrpsAgeOld);
        		//trace("nInrpsAgeNew:" + nInrpsAgeNew);
        		//주민번호, 운전용도backup
		        Ds_Pibo_BackUp.setCellData(nRow, "sInrpsCd", Ds_Pibo.getCellData(nRow, "sInrpsCd"));
		        Ds_Pibo_BackUp.setCellData(nRow, "sDrveFlagCd", Ds_Pibo.getCellData(nRow, "sDrveFlagCd"));
		        
		        //운전용도 셋팅
        		/*MS 확인 컬럼속성
        		//Grd_Pibo.SetCellProp("body", 11, "edit", "combo"); //ldh
        		MS 확인 컬럼속성*/
        		
        		//첫번째 피보험자로 계약자 셋팅
        		if (nRow == 0){
        			if (parent.medt_PlanNo.getValue() == "" || parent.Ds_LTIDA03.getRowCount() == 0 || Ds_Pibo.getCellData(nRow, "sInrpsCd") == parent.Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
		                //계약자사항 setting;
		                if (parent.Ds_LTIDA03.getRowCount() == 0) {
		                    parent.util.appendRow(parent.Ds_LTIDA03);
		                    parent.Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드     
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처         
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처 		 
		                    parent.Ds_LTIDA03.setCellData(0, "sEnntmPftbpYn", "N"); //만기수익자입력상태
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntYn", "N"); //지정대리인입력상태		
		                    parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
		                }
		                parent.Ds_LTIDA03.setCellData(0, "nCrChngNo", "0"); //계약변경번호             
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //계약자구분코드           
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //계약자코드               
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorName", Ds_long_mPlr.getCellData(0, "sName")); //계약자명                 
		                parent.Ds_LTIDA03.setCellData(0, "nCrtorAge", gfn_getInsAge(parent.Ds_LTIDA03.getCellData(0, "sCrtorCd"), Ds_LTIDA00.getCellData(0, "sSsrtDate"))); //계약자연령
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorSexFlag", scwin.lfn_getSex(parent.Ds_LTIDA03.getCellData(0, "sCrtorCd"))); //계약자성별구분           
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //계약자고객ID             
		                parent.Ds_LTIDA03.setCellData(0, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
		                parent.Ds_LTIDA03.setCellData(0, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
		                parent.Ds_LTIDA03.setCellData(0, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
		                parent.Ds_LTIDA03.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
		                parent.Ds_LTIDA03.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
		                parent.Ds_LTIDA03.setCellData(0, "sMailRvadAddrFlagCd", Ds_long_mPlr.getCellData(0, "sDMAdrsTyp")); //우편물수령처주소구분코드 
		                parent.Ds_LTIDA03.setCellData(0, "nMailRvadChngSeq", Ds_long_mPlr.getCellData(0, "nAdrsChangeNo")); //우편물수령처변경회차     
		                parent.Ds_LTIDA03.setCellData(0, "sZip1", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 0, 3)); //우편번호
		                parent.Ds_LTIDA03.setCellData(0, "sZip2", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 3, 3)); //우편번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax1", Ds_long_mPlr.getCellData(0, "sFax1")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax2", Ds_long_mPlr.getCellData(0, "sFax2")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax3", Ds_long_mPlr.getCellData(0, "sFax3")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sEmail1", Ds_long_mPlr.getCellData(0, "sEmail1")); //이메일
		                parent.Ds_LTIDA03.setCellData(0, "RvadAddr", Ds_long_mPlr.getCellData(0, "sAdrs1") + " " + Ds_long_mPlr.getCellData(0, "sAdrs2")); //우편물수령처주소
		                parent.Ds_LTIDA03.setCellData(0, "sAdrs1", Ds_long_mPlr.getCellData(0, "sHomAdr1")); //집주소
		                parent.Ds_LTIDA03.setCellData(0, "sAdrsAdd", Ds_long_mPlr.getCellData(0, "sHomAdr2")); //집주소
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel1", Ds_long_mPlr.getCellData(0, "sHomeTel1")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel2", Ds_long_mPlr.getCellData(0, "sHomeTel2")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel3", Ds_long_mPlr.getCellData(0, "sHomeTel3")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel1", Ds_long_mPlr.getCellData(0, "sOfficeTel1")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel2", Ds_long_mPlr.getCellData(0, "sOfficeTel2")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel3", Ds_long_mPlr.getCellData(0, "sOfficeTel3")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone1", Ds_long_mPlr.getCellData(0, "sCellPhone1")); //핸드폰번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone2", Ds_long_mPlr.getCellData(0, "sCellPhone2")); //핸드폰번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone3", Ds_long_mPlr.getCellData(0, "sCellPhone3")); //핸드폰번호
		                //			if (wconv.length(parent.medt_PlanNo.getValue()) > 0){
		                //				fn_calPrem();
		                //			}
		            }
		            //trace("step2-:"+ ds_trty.GetCountNF());
		            nInrpsAgeNew = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
					nManAgeNew = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
					
		            //피보험자가 변경되었을때 기 보험종목이 선택되었다면 특약 셋팅 초기화 처리.(예외처리 : 피보험자의 나이가 같은 경우는 초기화 제외)
		            if ((wconv.length(parent.edt_sGdCd.getValue()) > 0) && ((nInrpsAgeOld != nInrpsAgeNew || nManAgeOld != nManAgeNew))) {
		                //if (length(parent.edt_sGdCd.getValue()) > 0 ){    
		                var info = new Object();
		                info.oldValue = ""; 
						info.newValue = ""; 
						info.oldSelectedIndex = ""; 
						info.newSelectedIndex = ""; 
		                scwin.lfn_PlanChanged(info);
		                scwin.lfn_TrtyInsAmtInit(cmb_Plan); //가입금액 초기값 세팅
		                scwin.lfn_PaymCyclSet(); //일시납 납입기간에 따른 납입주기 세팅
		            }
        		}
			}
			//MS텝 정보 출력
			if(parent.sSimpleYn != "Y"){
	    		parent.scwin.lfn_set_Tab_Info("S1", "T1");
	    	}
	    	
	    	Ds_Trty.removeColumnFilterAll();
   			Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
    		wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
		}
	};
	
	/*-----------------------------------
	// function 명 : lfn_trtyDelRow
	// 내용        : 특약을 Ds_Trty에서 삭제함.
	-----------------------------------*/
	scwin.lfn_trtyDelRow = function(nPsnPrprtGroupSeqno, sPsnPrprtGroupFlgcd){
//		trace("lfn_trtyDelRow : " + nPsnPrprtGroupSeqno + " " + nPsnPrprtGroupSeqno);
		//trace(Ds_Trty.GetRowCount());
		var trtyFilter = Ds_Trty.getFilterList();
		Ds_Trty.clearFilter();
        
		for(var i=Ds_Trty.getRowCount()-1; i>=0; i--) {
			//trace("lfn_trtyDelRow " +i+" : " + Ds_Trty.GetColumn(i,"nTrtyInsAmt"));
			if((Ds_Trty.getCellData(i,"nPsnPrprtGroupSeqno")==nPsnPrprtGroupSeqno && Ds_Trty.getCellData(i,"sPsnPrprtGroupFlgcd")==sPsnPrprtGroupFlgcd)) {
				//Ds_Trty.deleteRow(i);
				Ds_Trty.removeRow(i);
			}
		}
		
		for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	}
	
	scwin.lfn_juminProc = function() {
	    if (wconv.length(Ds_Pibo.getCellData(2, "sInrpsCd")) > 0 && scwin.lfn_ChkPersonID(Ds_Pibo.getCellData(nOldRow, "sInrpsCd"))) {
	        //보험나이계산
	        Ds_Pibo.setCellData(2, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(2, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        Ds_Pibo.setCellData(2, "nManAge", gfn_getInsAge(Ds_Pibo.getCellData(2, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_insuDetail()
	// 내용        : 인수제한사유조회
	//---------------------------------------------------------------------------
	scwin.fn_insuDetail = function() {
	    //var result = Open("ssr_pln::B080_Pop.xml", 800, 550, "TaskBar=true Resize=true");
	    var promise = Promise.resolve();
		promise = promise.then(function(rtnVal) {
			var indata = new Object();
	 		var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					 	"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
						, "Ds_Pibo" : Ds_Pibo 							// 피보험자 정보 Ds Set 
						, "Ds_LTIDA03" : parent.Ds_LTIDA03  		// 계약자 정보 Ds Set
						, "Ds_LTIDA15" : Ds_LTIDA15  		// 부모창 심사 정보 Ds Set  
						, "medt_PlanNo" : parent.medt_PlanNo 		// 설계번호 Set
						, "edt_sGdCdNm" : parent.edt_sGdCdNm	// 상품명 Set  
					} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
					
			var popInfo = {"width":834,	// 수정(추가) 2017.10.31, by 진태만  --> 834, 449
						   "height":480,
						   "indata":indata,
						   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "callback"  : scwin.popupCallback,
						   "title"     : "인수제한사유조회"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);//인수제한사유조회
		});
		return promise;
	};
	
	scwin.btn_Copy_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_Copy_OnClick, arguments);
	};
	
	/*-----------------------------------
	// function 명 : btn_Copy_OnClick
	// 내용        : 복사버튼 클릭시 데이타복사
	-----------------------------------*/
	scwin.btn_Copy_OnClick = function() {
	    if (util.getGdsValue("gDoer") == "A000271" && parent.sToday >= "20161001" && parent.sToday <= "20161010") {
	        alert("2016.10.10까지 처리불가합니다.");
	        return;
	    }
	
	    //가입설계 동의 유효기간이 지난것은 안되도록 처리(20120801)
	    var sInrpsNameEtc = "";
	    for (var j = 0; j < Ds_Pibo.getRowCount(); j++) {
	        if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(j, "sInrpsCd")) == "Y") {
	            sInrpsNameEtc = sInrpsNameEtc + Ds_Pibo.getCellData(j, "sInrpsName") + ",";
	        }
	    }
	    if (wconv.length(sInrpsNameEtc) > 0) {
	        if (wconv.substr(Ds_Pibo.getCellData(0, "sInrpsCd"), 7, 6) != "000000") {
	            sInrpsNameEtc = wconv.mid(sInrpsNameEtc, 0, wconv.length(sInrpsNameEtc) - 1);
	            alert(sInrpsNameEtc + "님의 가입설계를 위한 동의 유효기간(3개월)이 만료되었습니다. 재동의 수행하시기 바랍니다.");
	            return false;
	        }
	    }
	    var sStdDate = "20110805"; //질의서 B230_Div3_Pop 기준일
	    if (util.getGdsValue("gProdYN") == "N") {
	        sStdDate = "20110804";
	    }

	    //가입가능상품 check
	    if (scwin.lfn_GoodsSearch() == false) {
	        alert("복사가 불가능한 청약번호입니다.");
	        return false;
	    }
	
	    //가입가능상품 check
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "nInrpsAge") != gfn_getInsAge(Ds_Pibo.getCellData(i, "sInrpsCd"), parent.sToday)) {
	            alert("복사가 불가능한 청약번호입니다..");
	            return false;
	        }
	        /*if (Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") {
	            alert("영업용운전자는 가입금지입니다");
	            return false;
	        }*/
	    }
	    if (Ds_LTIDA00.getCellData(0, "sSsrtDate") < sStdDate) {
	        alert("복사가 불가능한 청약번호입니다...");
	        return false;
	    }
	    
	    //과거 청약번호를 보관한다.(질의서, 전산심사테이블 복사를위해)
	    oldPlanNo = parent.medt_PlanNo.getValue();
	    oldSsrtDate = parent.cal_sSsrtDate.getValue();
	    parent.medt_PlanNo.setValue("");
	    parent.cal_sSsrtDate.setValue(parent.sToday);
	    cal_sInsurStrtdate.setValue(parent.sToday);
	    cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(0, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	        Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	        Ds_Pibo.setCellData(i, "sPsnInfoOferAgreYn", ""); //개인정보제공동의여부
	        Ds_Pibo.setCellData(i, "sMNumCrInsAgreYn", ""); //다수계약가입동의여부
	    }
	
	    //세금우대 미가입
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
	
	    //청약서발행일자
	    Ds_LTIDA00.setCellData(0, "sSrdoIssuDate", "");

	    //수익자 약정과 / 통신수단 해지는 초기화.
	    parent.Ds_LTIDA03.setCellData(0, "sInsurPftbpAsmtYn", "");
	    Ds_LTIDA00.setCellData(0, "sCmmcMeanCnclAgreYn", "");
	    if (parent.sSimpleYn != "Y") {
	    	if(parent.Tab_Step4 != null){
	        	parent.Tab_Step4.scwin.initDescrFlag();
	        	tab4InitDescr = false;
	        }else{
	        	tab4InitDescr = true;
	        }
	    }
	
	    //복사시 심의결과코드 지움(2011.05.18 김상운)
	    Ds_LTIDA00.setCellData(0, "sConuResltCd", "");
	
	    //복사시 비교계약안내 확인여부 제거
	    Ds_LTIDA00.setCellData(0, "sCmprCrNotcSsrt", "");
	    Ds_LTIDA00.setCellData(0, "sCmprCrNotcCncl", "");
	    //복사시 실명확인증표 제거
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmPstnFlgcd", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmRgcr", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmInfoRvMatt1", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmInfoRvMatt2", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmDate", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfm", "");
	    
	    //2011.04.25 김상운추가(품의결과 내용 삭제)
	    parent.scwin.lfn_clearConuReslt();
	
	    //목적물만 있는 경우 예외사항 처리 2013.07.11
	    scwin.lfn_OnlyPrprt_Check();
	    scwin.fn_calPrem("copy");
	    if (parent.sSimpleYn != "Y") {
	        //화면항목비활성화처리
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", true);
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", true);
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", true);
	    }
	
	    //납이주기별 콤보활성화구분
	    //일시납 납입기간에 따른 납입주기 세팅
	    scwin.lfn_PaymCyclSet();
	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(wconv.findRow(Ds_Prprt, "sel1", "1"));
	
	    //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	    if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	        medt_nBussPrem.setDisabled(true);
	    } else {
	        medt_nBussPrem.setDisabled(false);
	    }
	    
	    //복사시 건물급수 
	    cmb_BuldgStrtGradCd.setDisabled(true);
	    
	    util.setCompBindRefresh(Ds_Trty.getID());
        //MS 헤더 체크박스
		scwin.grd_Trty_head_Check();
	    
	    //MS텝 정보 출력
	    if(parent.sSimpleYn != "Y"){
	    	parent.scwin.lfn_set_Tab_Info("S1", "T1");
	    	parent.scwin.lfn_set_Tab_Info("S1", "T2");
	    	parent.scwin.lfn_set_Tab_Info("S1", "T3");
	    	parent.scwin.lfn_set_Tab_Info("S1", "T4");
	    	
	    	parent.scwin.lfn_set_Tab_Info("S2", "T1");
		    parent.scwin.lfn_set_Tab_Info("S2", "T2");
		    
		    parent.scwin.lfn_set_Tab_Info("S3", "T1");
		    parent.scwin.lfn_set_Tab_Info("S3", "T2");
		    //개인정보 조회 이력 쌓기
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_OnlyPrprt_Check
	// 내용        : 목적물만 있는 경우 임시피보험자 셋팅 
	//---------------------------------------------------------------------------
	scwin.lfn_OnlyPrprt_Check = function() {
	    gfn_getServerTime();//서버시간
		var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	    if (wconv.substr(sBirthDate, 4, 4) == "0229") {
	        sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
	    }
	    // 목적물만 있는 경우 임시피보험자 셋팅 
	    //Ds_Pibo_Tmp.removeAll();
	    wconv.clear(Ds_Pibo_Tmp);
	    util.appendRow(Ds_Pibo_Tmp);
	    Ds_Pibo_Tmp.setCellData(0, "sInrpsCd", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000");
	    Ds_Pibo_Tmp.setCellData(0, "sDrveFlagCd", "1");
	    Ds_Pibo_Tmp.setCellData(0, "sJobGradCd", "0");
	    Ds_Pibo_Tmp.setCellData(0, "sJobCd", "0");
	    Ds_Pibo_Tmp.setCellData(0, "sOnlyPrprtYn", "Y");
	    //피보험자가 없는 경우 보험료 산출을 위한 강제처리
	    Ds_Pibo_Tmp.setCellData(0, "sApplPlanCd", cmb_Plan.getValue());
	    Ds_Pibo_Tmp.setCellData(0, "sApplPlanName", cmb_Plan.getText());
	    Ds_Pibo_Tmp.setCellData(0, "nInrpsAge", gfn_getInsAge(wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000", parent.cal_sSsrtDate.getValue())); //나이
	    Ds_Pibo_Tmp.setCellData(0, "sMinsrRelnCd", "10"); //주피구분
	    //alert(Ds_Pibo.rowcount + "+" +length(Ds_Pibo.getCellData(0,"sInrpsCd")));
	    //보험료 산출시 피보험자 입력여부 확인 후 자동삭제함.
	    if (Ds_Pibo.getRowCount() == 1 && wconv.length(Ds_Pibo.getCellData(0, "sInrpsCd")) == 0) {
	        Ds_Pibo.setCellData(0, "sel", "1");
	        util.removeRow(Ds_Pibo, 0);
	        //var trtyFilter = Ds_Trty.getFilterList();
			//Ds_Trty.clearFilter();
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	            if (util.getCellDataF(Ds_Trty, i, "sPsnPrprtGroupFlgcd") == "1") {
	            	util.setCellDataF(Ds_Trty, i, "chk", "0");
	            }
	        }
	        //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Grd_PrprtLIst_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
	// 내용        : 그리드에서 클릭시 처리
	//---------------------------------------------------------------------------
	var nPrprtCell = 0;
	var nPrprtRow = 0;
	scwin.Grd_PrprtLIst_OnCellClick = function(nRow, nCell) {
		var sParam = "";
	    var sStndDate = ""; // 기준일자
	    var sToday = ""; // 현재일자(서버일자)	
	    sStndDate = sStndDate; // 파라메터
	    // 현재시간 setting
	    //global.http.Sync = true;
	    //getServerTime();
	    //sToday = substr(gDs_ServerTime.getCellData(0, "sToday"),0,8);
	    //global.http.Sync = false;
	    gfn_getServerTime();//서버시간
		sToday = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	    cmb_BuldgStrtGradCd.setDisabled(true);
	
	    // 기준일자 설정
	    if (wconv.trim(sStndDate) == null || wconv.trim(sStndDate) == "") {
	        sStndDate = sToday;
	    }
	
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.	
	    scwin.sel_sel1(Grd_Prprt, nRow);
	
	    //최초 건물구조
	    if (wconv.length(Ds_Prprt.getCellData(nRow, "sBuldgStrtGradCd")) > 0) {
	        var nPoleTypeCdIdx = wconv.findRow(DsWs_PoleTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sPoleTypeCd"));
	        var nExtrnWlTypeCdIdx = wconv.findRow(DsWs_ExtrnWlTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sExtrnWlTypeCd"));
	        var nRoofTypeCdIdx = wconv.findRow(DsWs_RoofTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sRoofTypeCd"));
	
	        Edt_sBuldgStrt.setValue(DsWs_CmCd.getCellData(nPoleTypeCdIdx, "sHnglCdName") + " / " + DsWs_CmCd.getCellData(nExtrnWlTypeCdIdx, "sHnglCdName") + " / " + DsWs_CmCd.getCellData(nRoofTypeCdIdx, "sHnglCdName"));
	    } else {
	        Edt_sBuldgStrt.setValue("");
	    }
	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(nRow);
	
	    //화재배상책임특약 콤보2013.07.16
	    //lfn_TrtyInsAmtInit(obj); //가입금액 초기값 세팅
	    switch (Grd_Prprt.getColumnID(nCell)) {
	        case "sel1":
	        	window.top.util.winTopShowModalChk = "T"
 				util.winTopShowModal();
 				setTimeout(
					function(){
						try{
							runOnCellPosChanged = false;
				            if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
				                wprom.alert("청약일을 선택하세요");
				                return;
				            }
				            if (wconv.length(parent.edt_sGdCdNm.getValue()) == 0) {
				                wprom.alert("상품을 선택하세요");
				                return;
				            }
				            //목적물에 해당하는 특약사항을 조회한다.
				            if (wconv.length(parent.edt_sGdCdNm.getValue()) > 0) {
				                scwin.lfn_searchPrprtTrty(Grd_Prprt, nRow);
				            }
				            if (wconv.length(parent.medt_PlanNo.getValue()) == 0) {
				                //Ds_Trty.FireEvent = false;
				                var arrtrty = util.getDataListEvent(Ds_Trty);
								util.removeAllDataListEvent(Ds_Trty);
				                if ((wconv.findRow(DsWs_AsmtInsAmt, "sTrtyCd", Ds_Trty.getCellData(nRow, "TrtyCd")) > -1) || (wconv.findRow(DsWs_AsmtInsAmt, "sCdAttrValue", Ds_Trty.getCellData(nRow, "TrtyCd")) > -1)) {
				                    //가입금액 초기화.
				                    for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
				                        var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
				                        Ds_Trty.setCellData(nRowNum, "nTrtyInsAmt", 0);
				                    }
				                    for (var i = 0; i < DsWs_AsmtInsAmt.getRowCount(); i++) {
				                        var nRowNum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sCdAttrValue"));
				                        if (Ds_Trty.getCellData(nRowNum, "chk") == "1") {
				                            var sTrtynum = wconv.findRow(Ds_Trty, "sTrtyCd", DsWs_AsmtInsAmt.getCellData(i, "sTrtyCd"));
				                            Ds_Trty.setCellData(sTrtynum, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(sTrtynum, "nTrtyInsAmt")) + wconv.toNumber(Ds_Trty.getCellData(nRowNum, "nTrtyInsAmt")));
				                        }
				                    }
				                }
				                //Ds_Trty.FireEvent = true;
				                util.setDataListEvent(Ds_Trty, arrtrty);
				            }
						}
						finally{
							util.winTopHideModal();
						}
					}
					,500
				);
	            break;
	        case "btn_InsBntp_Search":
	            var applyEnable = "N";
	            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
	                applyEnable = "N"; //00 완료 90 수납대기일경우 화면 비활성화 처리함
	            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && //완료
	                wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M") {
	                //최초설계
	                applyEnable = "N";
	            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
	                applyEnable = "N";
	            } else if (Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	                //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
	                applyEnable = "N";
	            } else {
	                applyEnable = "Y";
	            }
	            var promise = Promise.resolve();
	            promise = promise.then(function(rtnVal) {
	            	var indata = new Object();
	            	indata.applyEnable = applyEnable;
	            	indata.sStndDate = sStndDate;
	            	var popInfo = {"width":710,
								   "height":470,
								   "indata":indata,
								   "callback"  : scwin.popupCallback,
								   "title"     : "업종찾기"
								  };
					return wprom.popupOpen("/ui/cbsc/CBSC072P.xml", popInfo);
	            });
	            promise = promise.then(function(rst) {
	            	//var rtnValue = wprom.getReturnData();
					//if (rtnValue != ""){
						
					//}
					//alert(JSON.stringify(rst));
					if (wconv.length(rst) > 0) {
	                    Ds_Prprt.setCellData(nRow, "sInsBntpObjtFlagCd", rst[0]); //업종대분류코드
	                    Ds_Prprt.setCellData(nRow, "sInsBntpCdMcls", rst[2]); //목적물의 업종중분류코드
	                    Ds_Prprt.setCellData(nRow, "sInsBntpCd", rst[4]); //가입업종코드
	                    Ds_Prprt.setCellData(nRow, "sInsBntpCdName", rst[5]); //가입업종명
	                    
	                    //MS텝 정보 출력
	                    if(parent.sSimpleYn != "Y"){
	    					parent.scwin.lfn_set_Tab_Info("S1", "T2");
	    				}
	                }
	            });
	            break;
	        case "btn_RatoBntp_Search":
	        	//확정건 조회 가능(적용불가)
	            var applyEnable = "N";
	            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
	                applyEnable = "N"; //00 완료 90 수납대기일경우 화면 비활성화 처리함
	            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && //완료
	                wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M") {
	                //최초설계
	                applyEnable = "N";
	            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
	                applyEnable = "N";
	            } else if (Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	                //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
	                applyEnable = "N";
	            } else {
	                applyEnable = "Y";
	            }
	            var promise = Promise.resolve();
	            promise = promise.then(function(rtnVal) {
	            	var indata = new Object();
	            	indata.applyEnable = applyEnable;
	            	indata.sStndDate = sStndDate;
	            	indata.sInsBntpCd = Ds_Prprt.getCellData(nRow, "sInsBntpCd");
	            	var popInfo = {"width":747,
								   "height":480,
								   "indata":indata,
								   "callback"  : scwin.popupCallback,
								   "title"     : "적용요율찾기"
								  };
					return wprom.popupOpen("/ui/cbsc/CBSC097P.xml", popInfo);
	            });
	            promise = promise.then(function(rst) {
	            	//var rtnValue = wprom.getReturnData();
					//if (rtnValue != ""){
						
					//}
					//alert(JSON.stringify(rst));
					if (wconv.length(rst) > 0) {
						Ds_Prprt.setCellData(nRow, "sRatoBntpObjtFlagCd", rst[0]); //목적물의 업종대분류코드
	                    Ds_Prprt.setCellData(nRow, "sRatoBntpCdMcls", rst[2]); //목적물의 업종중분류코드
	                    Ds_Prprt.setCellData(nRow, "sRatoBntpCd", rst[4]); //요율업종코드
	                    Ds_Prprt.setCellData(nRow, "sRatoBntpName", rst[5]); //요율업종명
	                    
	                    if (wconv.length(parent.edt_sGdCdNm.getValue()) > 0) {
		                    scwin.lfn_searchPrprtTrty(this, nRow);
		                }
	                }
	            });
	            break;
	        default:
	            break;
	    }
	    nPrprtCell = nCell;
        nPrprtRow = nRow;
	};
	
	// 간편설계시 주민번호 뒷자리를 모두 "000000" 셋팅
	scwin.Grd_Pibo_OnChar = function(info) {
		if(Grd_Pibo.getColumnID(info.colIndex) == "sInrpsCd" && parent.sSimpleYn == "Y" && wconv.length(wconv.replace(wconv.replace(info.newValue,"_",""),"-","")) >= 7){
			//Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        //Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "nManAge", gfn_getAge(Ds_Pibo.getCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
			//Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd", wconv.left(wconv.replace(info.newValue,"-",""),7)+"000000");
			
			Grd_Pibo._setCellData(info.rowIndex, "sInrpsCd", wconv.left(wconv.replace(info.newValue,"-",""),7)+"000000");
			
			wconv.moveToNextCell(Grd_Pibo.getID());
			wconv.moveToNextCell(Grd_Pibo.getID());

			scwin.lfn_Edt_Mask_OnKillFocus();
		}
	};
	
	//간편산출 주민번호 복사시에 기존 데이터 삭제후 복사 처리.
	//Ctrl+v(붙여넣기)시에 기존 데이터 삭제후 처리.
	scwin.Grd_Pibo_OnKeyDown = function(e) {
		if ((Grd_Pibo.getFocusedColumnID() == "sInrpsCd") && ((parent.sSimpleYn == "Y"))) {
		    if (crtlDown && e.keyCode == 86) {
				Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(Grd_Pibo.getFocusedRowIndex()), "sInrpsCd", "");
	        }    
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Grd_Pibo_OnKillFocus
	// 내용        : 피보험자그리드 Losing Focus시 처리
	//---------------------------------------------------------------------------
	scwin.Grd_Pibo_OnKillFocus = function(info) {
		//info.rowIndex
		//info.colIndex
		//info.oldValue
		//info.newValue
		if(Grd_Pibo.getColumnID(info.colIndex) == "sInrpsCd"){
			if (wconv.length(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd")) > 0 && Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd") != Ds_Pibo_BackUp.getCellData(info.rowIndex,"sInrpsCd")){
				var arrpibo = util.getDataListEvent(Ds_Pibo);
				util.removeAllDataListEvent(Ds_Pibo);
				runOnCellPosChanged = false;
				
				//MS Logic 변경
				nInrpsAgeNew = gfn_getInsAge(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	            nManAgeNew = gfn_getAge(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	            if (nInrpsAgeOld != nInrpsAgeNew || nManAgeOld != nManAgeNew) {
	                //Newage와 oldage가 다른 때만 초기화
	                //scwin.lfn_ClearTrty(info.rowIndex);
	                scwin.fn_setRule(parent.edt_sGdCd.getValue());
	            }
				
				//피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	            scwin.lfn_deleteEtc(info.rowIndex, "N");
	            var sInrpsdCd = Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd");
	            var sApplPlanCd = Ds_Pibo.getCellData(info.rowIndex, "sApplPlanCd");
	            //util.deleteRow(Ds_Pibo, info.rowIndex);
			    Ds_Pibo.removeRow(info.rowIndex);
			    //util.deleteRow(Ds_Pibo_BackUp, info.rowIndex);
			    Ds_Pibo_BackUp.removeRow(info.rowIndex)
	
	            //alert(Ds_Pibo.getRowCount());			
	            scwin.lfn_addRow(info.rowIndex);
	            //Ds_Pibo.row = i;
	
	            Ds_Pibo.setCellData(info.rowIndex, "sInrpsCd", sInrpsdCd);
	            Ds_Pibo.setCellData(info.rowIndex, "sApplPlanCd", sApplPlanCd);
	            
	            if (parent.sSimpleYn == "Y") {
	                if (wconv.length(Ds_Pibo_getCellData(info.rowIndex, "sInrpsCd")) > 0) {
	                    if (scwin.lfn_ChkPersonID(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"))) {
	                        //보험나이계산
	                        Ds_Pibo.setCellData(info.rowIndex, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	                        Ds_Pibo.setCellData(info.rowIndex, "nManAge", gfn_getAge(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	                    } else {
	                        //Ds_Pibo.row = i;
	                        Ds_Pibo.setCellData(info.rowIndex, "sInrpsName", Ds_Pibo.getCellData(info.rowIndex, "sInrpsName"));
	                        wprom.alert("주민번호를 정확히 입력해 주세요.");
	                        wconv.moveToNextCell(Grd_Pibo.getID());
	                        wconv.moveToNextCell(Grd_Pibo.getID());
	                    }
	                }
	                scwin.lfn_backup_Pibo();
	            }
				
				util.setDataListEvent(Ds_Pibo, arrpibo);
			}
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_addRow1
	// 내용        : 목적물 추가
	//---------------------------------------------------------------------------
	var chkMedical = true;
	scwin.lfn_addRow1 = function(nSeq) {
	    //최대피보험목적수 <= 피보험자일때  추가금지
	    if (wconv.length(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        if (parseInt(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) <= Ds_Prprt.getRowCount()) {
	            wprom.alert("피보험목적물 " + parseInt(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) + "건까지 가입 가능한 상품입니다.");
	            return false;
	        }
	    }
	
	    //청약일이 입력되어 있어야 한다.
	    if (parent.cal_sSsrtDate.getValue().length == 0) {
	        wprom.alert("청약일을 입력해 주세요");
	        parent.cal_sSsrtDate.focus();
	        return false;
	    }
	
	    //Ds_Prprt.FireEvent = false;
	    var arrprprt = util.getDataListEvent(Ds_Prprt);
		util.removeAllDataListEvent(Ds_Prprt);

	    var nCurrow = -1;
	    if (nSeq >= 0) {
	        var insRow = util.insertRow(Ds_Prprt, nSeq);
	        nCurrow = nSeq;
	    } else {
	        Ds_Prprt.insertRow();
	        nCurrow = (Ds_Prprt.getTotalRow()-1);
	    }
	    util.setRowPosition(Ds_Prprt, nCurrow);
	
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    scwin.sel_sel1(Grd_Prprt, nCurrow);
	
	    //addrow editbox 초기화
	    Ds_Prprt.setCellData(nCurrow, "sel1", "1");
	    Edt_sBuldgStrt.setValue(""); //건물구조
	    //Edt_sBuldgStrtGradCdNm.getValue() = ""; //건물급수
	    //행추가시 "-선택-" 세팅 목적물지상지하구분코드
	    //콤보에서는 BindDataSet 후 Index는 Null 이므로 값을 처리하지 못해 space를 세팅함
	    Ds_Prprt.setCellData(nCurrow, "sObjctGrodUndgFlagCd", "");
	    nBuldgGrodFlct.setValue(""); //건물지상층수
	    nBuldgUndgFlct.setValue(""); //건물지하층수
	    nObjctRelvFlct.setValue(""); //목적물해당층수
	    Edt_nInsArea.setValue(""); //가입면적
	    Ds_Prprt.setCellData(nCurrow, "sPsnPrprtGroupFlgcd", "2"); //목적물 구분코드
	    Ds_Prprt.setCellData(nCurrow, "nInsrdObjctSeqno", wconv.toString(nCurrow + 1)); //목적물 일련번호
	    //목적물 플랜코드 2013.06.14 lbc
	    Ds_Prprt.setCellData(nCurrow, "sApplPlanCd", Ds_Prprt.getCellData(0, "sApplPlanCd"));
	    Ds_Prprt.setCellData(nCurrow, "sApplPlanName", Ds_Prprt.getCellData(0, "sApplPlanName"));
	
	    //화재배상책임특약 콤보2013.07.16
	    //lfn_TrtyInsAmtInit(obj); //가입금액 초기값 세팅
	    if (nCurrow == 0) {
	        Ds_Prprt.setCellData(nCurrow, "sMinsrRelnCd", "10");
	    }
	    
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	        if (i != nCurrow && Ds_Prprt.getCellData(i, "sel1") == "1") {
	            Ds_Prprt.setCellData(i, "sel1", "0");
	        }
	    }
	    Ds_Prprt.setCellData(nCurrow, "sel1", "1");
	
	    //특약리스트를 한셋트 추가함.
	    //grd_sTrty.Redraw = false;
	    //var nRowPos = Ds_Trty.getRowCount();
	    //필터 셋팅.
	    //Ds_Trty_Set.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='2'");
	    //trace("lfn_addrow before : " + Ds_Trty.rowcount);
	    //Ds_Trty_Set.Filter("wconv.pos(TrtyObjtFlag, '2') >= 0");
	    //Ds_Trty_Set.Filter("wconv.pos(sPsnPrprtGroupFlgcd, '2') >= 0");
	    //trace("lfn_addrow set count : " + Ds_Trty_Set.rowcount);
	    //trace("lfn_addrow after : " + Ds_Trty.rowcount);
	    //trace(Ds_Trty.savexml());
	    //lfn_changeTrty();
	    //grd_sTrty.Redraw = true;
	    
	    scwin.lfn_changeTrty1();
	    Grd_Prprt.focus();
	    wconv.moveToNextCell(Grd_Prprt.getID());
	    wconv.moveToNextCell(Grd_Prprt.getID());
	    //Ds_Prprt.FireEvent = true; //trace("lbc=trty=>" + Ds_Trty.SaveXML());
		util.setDataListEvent(Ds_Prprt, arrprprt);
	};
	
	// 주기선택후 포커스 이동
	scwin.lfn_OnKillFocus_OnChanged = function(e) {
		if (this.getID() == "cmb_InsurTermPaymTerm") {
	        btn_CalcPrem.focus();
	    } else if (this.getID() == "cmb_Plan") {
	        btn_CalcPrem.focus();
	    } else if (this.getID() == "cmb_PaymCycl") {
	        //edt_insuredPaym.focus();
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_InsurTermPaymTermChanged
	// 내용        : 보험기간/납입기간변경시 조회
	-----------------------------------*/
	scwin.lfn_InsurTermPaymTermChanged = function() {
		var DsWs_TrtyCntOrg = DsWs_Trty.getRowCount();
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    
	    if (wconv.length(Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsCd")) == 13) {
	    	MethodObj.setParam("sResno", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsCd")); //피보험자주민번호
	    	MethodObj.setParam("sDrveFlagCd", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd")); //주민번호 
	    } else {
	    	gfn_getServerTime();//서버시간
			var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
            if (wconv.substr(sBirthDate, 4, 4) == "0229") {
                sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
            }
	        MethodObj.setParam("sDrveFlagCd", "1"); //운전용도 
	    	MethodObj.setParam("sResno", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000"); //피보험자주민번호
	    }
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간 
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC094MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	    MethodObj.addXPath("//WARNING");
        MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
        	util.copyM(DsWs_InsurTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), true);
        	util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), true);
        	util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), true);
	        //Ds_Trty.FireEvent = false;
	        var arrtrty = util.getDataListEvent(Ds_Trty);
			util.removeAllDataListEvent(Ds_Trty);
			
			var DsWs_TrtyCntNew = DsWs_Trty.getRowCount();
			//trace("DsWs_Trty cntNew : " + DsWs_Trty.GetRowCount());
			
			if(DsWs_TrtyCntOrg != DsWs_TrtyCntNew) {
				//특약세팅
				util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
				
				scwin.lfn_TrtyDataSetSet();
				
				Ds_Trty.removeColumnFilterAll();
				Ds_Trty_Backup.removeColumnFilterAll();
				
				//특약중 화면출력특약만 화면에 보여줌
				wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
				wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
				
				//보험기간,가입금액 초기값 세팅555555555555555555
				scwin.lfn_InsurTermInit();
		
				//플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
				if(DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N"){
					medt_nBussPrem.setDisabled(true);
				}else{
					medt_nBussPrem.setDisabled(false);
				}
				
				//특약관계체크
				scwin.lfn_TrtyList_Relation_Check();		
				
				var arrpibo = util.getDataListEvent(Ds_Pibo);
				util.removeAllDataListEvent(Ds_Pibo);
				 
				//피보험자가 여러명일때 나머지 피보험자의 특약도 조회
				for(var i=1; i < Ds_Pibo.getRowCount() ; i++){
					scwin.lfn_searchPiboTrty(null, i);
				}
				//목적물가 여러명일때 나머지 목적물의 특약도 조회
				for(var i=1; i < Ds_Prprt.getRowCount() ; i++){
					scwin.lfn_searchPrprtTrty(null, i);
				}
				
				Ds_Trty.removeColumnFilterAll();
				Ds_Trty_Backup.removeColumnFilterAll();
				if(wconv.findRow(Ds_Pibo, "sel", "1")>-1) {
//					trace("피보험자선택");
					wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'");
					wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'");
				}else if(wconv.findRow(Ds_Prprt, "sel1", "1")>-1){
//					trace("피목적물선택");
					wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'");
					wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'");
				}
				//붕괴침강 가입금액 셋팅 
				var info = new Object();
		        info.oldValue = "";
		        info.newValue = "";
		        info.rowIndex = "0";
		        info.colID = "nTrtyInsAmt";
		        scwin.lfn_Trty_OnColumnChanged(info);
				
				util.setDataListEvent(Ds_Pibo, arrpibo);
			}else{
				//보험기간,납입기간 초기값 세팅
		        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
		            for (var j = 0; j < DsWs_InsurTerm.getTotalRow(); j++) {
		            	if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == util.getCellDataF(DsWs_InsurTerm, j, "sTrtyCd")) {
		            		util.setCellDataF(Ds_Trty, i, "sInsurTermCd", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermCd"));
		            		util.setCellDataF(Ds_Trty, i, "sInsurTermName", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermName"));
		            		//trace(i+"==sInsurTermCd=="+Ds_Trty.getCellData(i, "sInsurTermCd")+"]");
		                    break;
		                }
		            }
		
		            //보험기간종료일자 setting
		            if (i == 0) {
		                cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(i, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
		            }
		
		            //납입기간 초기값세팅
		            for (var j = 0; j < DsWs_PaymTerm.getTotalRow(); j++) {
		                if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == util.getCellDataF(DsWs_InsurTerm, j, "sTrtyCd")) {
		                    util.setCellDataF(Ds_Trty, i, "sPaymTermCd", util.getCellDataF(DsWs_InsurTerm, j, "sPaymTermCd"));
		            		util.setCellDataF(Ds_Trty, i, "sPaymTermName", util.getCellDataF(DsWs_InsurTerm, j, "sPaymTermName"));
		                    break;
		                }
		            }
		        }
			}
			
	        //보험기간/납입기간 세팅
	        Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(0, "sInsurTermCd")); //보험기간
	        Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(0, "sPaymTermCd")); //납입기간
	        Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData("Body", 0, 4) + "/" + grd_sTrty.getCellDisplayData("Body", 0, 5)); //보기납기
	        
	        //일시납 납입기간에 따른 납입주기 세팅
	        scwin.lfn_PaymCyclSet();
	
	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
	
	        //특약 가입가능 체크
	        scwin.lfn_Trty_Relation_InsAvaYn(Ds_Trty);
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
        }
	    btn_CalcPrem.focus();
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_deleteRow
	// 내용        : 보험자 삭제 행삭제
	//---------------------------------------------------------------------------
	scwin.lfn_deleteRow1 = function(obj) {
	    var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
	    if (nFindRow == 0) {
	        wprom.alert("첫번째 목적물은 삭제할 수 없습니다.");
	        return;
	    }
	    if (nFindRow < Ds_Prprt.getRowCount() - 1) {
	        wprom.alert("마지막 목적물을 먼저 삭제 하세요.");
	        return;
	    }
	    //Ds_Prprt.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrprprt = util.getDataListEvent(Ds_Prprt);
		util.removeAllDataListEvent(Ds_Prprt);
	    //목적물에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc1(nFindRow, "Y");
	
	    //특약 삭제
	    scwin.lfn_ClearTrty1(nFindRow);
	    //util.deleteRow(Ds_Prprt, nFindRow); // Dataset에 선택된 Record한줄 삭제
	    Ds_Prprt.removeRow(nFindRow);
	    //Ds_Prprt_BackUp.DeleteRow(nFindRow);
	    //Grd_Prprt_OnCellPosChanged(obj,nFindRow-1,0,nFindRow-1,-1,-1,-1);	
	    //Ds_Prprt.FireEvent = true;
	    util.setDataListEvent(Ds_Prprt, arrprprt);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_Buldg()
	// 내용        : 건물가액 추정 버튼 
	//---------------------------------------------------------------------------
	scwin.fn_Buldg = function(e) {
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
    		indata.argArea = Edt_nInsArea.getValue();
    		var popInfo = {"width":600,
    	                   "height":562,
    	                   "indata":indata,
    	                   "callback"  : scwin.popupCallback,
						   "title"     : "주택 종류별 m2당 건축단가 예시표"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC098P.xml", popInfo);
	    });
	    promise = promise.then(function(rv) {
	    	var rtnValue = wprom.getReturnData();
			//console.log("====CBSO002P promise close \n"+JSON.stringify(rtnValue));
			if (rtnValue != "") {
				
			}
	    });
	};
	
	/*-----------------------------------
	// function 명 : lfn_bosang_OnClick
	// 내용        : 보상한도조회
	-----------------------------------*/
	scwin.lfn_bosang_OnClick = function(e) {
	    //계약기본사항만 변경되었는지 체크한다.
	    //if (scwin.lfn_ValidationCheck("level1")) {
	    //    return false;
	    //}
	    if (modifyFlag) {
	        wprom.alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
	        return false;
	    }
	
	    //초기화
	    wconv.clear(Ds_BosangTrty);
	
	    //청약일이 입력되어 있어야 한다.
	    if (wconv.length(parent.cal_sSsrtDate_getValue()) == 0) {
	        wprom.alert("청약일을 입력해 주세요");
	        parent.cal_sSsrtDate.focus();
	        return false;
	    }
	
	    //특약데이터가 있는지 체크한다.
	    if (Ds_Trty.getRowCount() == 0) {
	        wprom.alert("선택할 특약이 없습니다.");
	        return false;
	    }
	
	    //선택된 특약이 있는지 확인
	    var check = false;
	    var cnt = 0;
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") == "1") {
	            util.insertColumn(Ds_BosangTrty, [["sTrtyCd","sTrtyCd","text"]
	            , ["nTrtyInsAmt","nTrtyInsAmt","text"]
	            , ["sBaseSlctFlagName","sBaseSlctFlagName","text"]
	            , ["nPs1CmpsLmitAmt","nPs1CmpsLmitAmt","text"]
	            , ["n1AccdCmpsLmitAmt","n1AccdCmpsLmitAmt","text"]
	            , ["nTotCmpsLmitAmt","nTotCmpsLmitAmt","text"]
	            ]);
	            //util.setCompBindRefresh(Ds_BosangTrty.getID());
				//util.setRowPosition(Ds_BosangTrty, 0);
	            util.appendRow(Ds_BosangTrty);
	            Ds_BosangTrty.setCellData(cnt, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")); //특약번호
	            Ds_BosangTrty.setCellData(cnt, "nTrtyInsAmt", Ds_Trty.getCellData(i, "nTrtyInsAmt")); //가입금액
	            Ds_BosangTrty.setCellData(cnt, "sBaseSlctFlagName", Ds_Trty.getCellData(i, "BascSlctFlagCd_H")); //특약구분
	            //trace(Ds_Trty.SaveXML());
	            //alert(111);
	            //1인당,1사고당,보상한도
	            Ds_BosangTrty.setCellData(cnt, "nPs1CmpsLmitAmt", Ds_Trty.getCellData(i, "nPs1CmpsLmitAmt"));
	            Ds_BosangTrty.setCellData(cnt, "n1AccdCmpsLmitAmt", Ds_Trty.getCellData(i, "n1AccdCmpsLmitAmt"));
	            Ds_BosangTrty.setCellData(cnt, "nTotCmpsLmitAmt", Ds_Trty.getCellData(i, "nTotCmpsLmitAmt"));
	            cnt++;
	            check = true;
	        }
	    }
	    if (!check) {
	        wprom.alert("선택된 특약이 없습니다.");
	        return false;
	    }
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	var popInfo = {"width":800,
						   "height":550,
						   "indata":indata,
						   "callback"  : scwin.popupCallback,
						   "title"     : ""
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC055P.xml", popInfo);
	    });
        promise = promise.then(function(rv) {
        	var rtnValue = wprom.getReturnData();
			if (rtnValue != ""){
				
			}
        });
	};

	//---------------------------------------------------------------------------
	// function 명 : grd_BntpCd1_OnMouseOver(obj)
	// 내용        : 건물업종 그리드 OnMouseOver(ToolTipText)
	//---------------------------------------------------------------------------
	scwin.Grd_Prprt_OnMouseOver = function(info) {
		//info.rowIndex
		//info.colIndex
		
		if (Grd_Prprt.getColumnID(info.colIndex) == "sInsBntpCd" && Grd_Prprt.getCellData(info.rowIndex, info.colIndex) != null) {
	        Grd_Prprt.ToolTipText = Grd_Prprt.getCellDisplayData("Body", info.rowIndex, info.colIndex);
	    }
	    if (Grd_Prprt.getColumnID(info.colIndex) == "sRatoBntpCd" && Grd_Prprt.getCellData(info.rowIndex, info.colIndex) != null) {
	        Grd_Prprt.ToolTipText = Grd_Prprt.getCellDisplayData("Body", info.rowIndex, info.colIndex);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_BuldgStrt_onClick(obj)
	// 내용        : 건물구조 클릭시 처리
	//---------------------------------------------------------------------------
	//var nPrprtCell = 0;
	//var nPrprtRow = 0;
	scwin.lfn_sBuldgStrt_onClick = function(e) {
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	indata.PoleTypeCd = Ds_Prprt.getCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sPoleTypeCd");
	    	indata.ExtrnWlTypeCd = Ds_Prprt.getCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sExtrnWlTypeCd");
	    	indata.RoofTypeCd = Ds_Prprt.getCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sRoofTypeCd");
	    	var popInfo = {"width":896,
						   "height":623,
						   "indata":indata,
						   "callback"  : scwin.popupCallback,
						   "title"     : "건물구조급수"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC024P.xml", popInfo);
	    });
	    promise = promise.then(function(rst) {
	    	var rtnValue = wprom.getReturnData();
			//if (rtnValue != ""){
				
			//}
			//Ds_Prprt.getro
			if (rst != null && wconv.length(rst) != "0") {
	            Ds_Prprt.setCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sBuldgStrtGradCd", rst[0]); //건물구조등급코드
	            Ds_Prprt.setCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sPoleTypeCd", rst[2]); //기둥형태코드
	            Ds_Prprt.setCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sExtrnWlTypeCd", rst[4]); //외벽형태코드
	            Ds_Prprt.setCellData(Grd_Prprt.getRealRowIndex(Grd_Prprt.getFocusedRowIndex()), "sRoofTypeCd", rst[6]); //지붕형태코드		
	            Edt_sBuldgStrt.setValue(rst[3] + "/" + rst[5] + "/" + rst[7]); //건물구조명
	            Ds_Prprt.setCellData(Ds_Prprt.getRowPosition(), "sBuldgStrt", Edt_sBuldgStrt.getValue()); //건물구조명
	            
	            //MS텝 정보 출력
	            if(parent.sSimpleYn != "Y"){
	   				parent.scwin.lfn_set_Tab_Info("S1", "T3");
	   				parent.scwin.lfn_set_Tab_Info("S1", "T4");
   				}
	        }
		});
	};
	
	scwin.lfn_sBuldgStrt_OnKeyDown = function(e) {
	    if (e.keyCode == "13") {
	    	btn_Search_Search.trigger("onclick");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_BuldgStrt_onClick(obj)
	// 내용        : 가입면적 클릭시 처리
	// * return
	//   retArr[0]    : 제곱미터(㎡)
	//   retArr[1]    : 평수
	//---------------------------------------------------------------------------
	scwin.lfn_nInsArea_onClick = function(obj) {
	    var promise = Promise.resolve();
	    var sParam = "";
	    promise = promise.then(function(rtnVal) {
			var indata = new Object();
			var popInfo = {"width":453,
						   "height":78,
						   "indata":indata,
						   "callback"  : scwin.popupCallback,
						   "title"     : "평형계산"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC127P.xml", popInfo);//모니터링
		});
		promise = promise.then(function(result) {
			var rtnValue = wprom.getReturnData();
			if (rtnValue != ""){
				
			}
			if (result != null) {
	            Edt_nInsArea.setValue(result[0]); //가입면적
	            Ds_Prprt.setCellData(Ds_Prprt.getRowPosition(), "nInsArea", wconv.replace(Edt_nInsArea.getValue(), ",", ""));
	        }
	        //Ds_Prprt.getCellData(Ds_Prprt.getRowPosition(),"nInsArea", rst[0]);//가입면적
		});
	};
	
	scwin.lfn_nInsArea_OnKeyDown = function(e) {
	    if (e.keyCode == "13") {
	    	btn_nInsArea.trigger("onclick");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : btn_SearchCust_OnClick
	// 내용        : 스마트폰앱고객 버튼클릭시 처리
	//---------------------------------------------------------------------------
	scwin.btn_SearchCust_OnClick = function(obj) {
	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1"); //현재 선택된 피보험자
	    if (nFindRow < 0) {
	        wprom.alert("피보험자를 먼저 선택하시기 바랍니다.");
	        return false;
	    }
	    
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	indata.sUserID = util.getGdsValue("gUserID");
	    	var popInfo = {"width"     : 635,
							"height"    : 390,  
							"indata"    : indata,
							"title"     : "대면채널조회"
    	                  };
    	    return wprom.popupOpen("/ui/cbso/CBSO009P.xml", popInfo);//대면채널조회
	    });
	    promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
			if (wconv.length(rtnValue) != 0) {
				var args = wconv.split(rtnValue, "^", true);
	        	if (args.length > 2) {
	        		Ds_Pibo.setCellData(nFindRow, "sInrpsCd", wconv.trim(args[2]));
	            	var afInrpsCd = Ds_Pibo.getCellData(nFindRow, "sInrpsCd"); //변경후 피보험자
	        	}
	        }
		});
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Ds_Pibo_OnColumnChanged
	// 내용        : Ds_Pibo 변경
	//---------------------------------------------------------------------------
	scwin.Ds_Pibo_OnColumnChanged = function(info) {
		//info.rowIndex
		//info.colID
		//info.oldValue
		//info.newValue를
	    //고객선택시 기존계약의 직업과 현재 직업차이 확인
	    if (info.colID == "sJobCd") {
	        if (info.newValue != "" && parent.sSimpleYn != "Y") {
	            //wconv.trace("sJobCd : " + sJobCd);
	            wconv.clear(DsWs_PvcrJob);
	            
	            var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getPvcrJobCnfm", "", "");
                MethodObj.setId("getPvcrJobCnfm");
                MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"));
                MethodObj.setParam("sJobCd", info.newValue);
                MethodObj.setUrl("/contract/CBSC094MController.do");
				MethodObj.setXPath("//vector/data/LTIEA01Job");
				MethodObj.addXPath("//WARNING");
				MethodObj.sync();
				MethodObj.send();
                
                util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
		        if (DsWs_Warning.getRowCount() != 0){
		        	alert(DsWs_Warning.getCellData(0, "msg"));
		        	return;
		        }else{
					//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
					DsWs_PvcrJob.setJSON(_tranSync.getDsJson("LTIEA01Job"));	// dataset 데이터
				    
				    if (DsWs_PvcrJob.getRowCount() > 0) {
	                    var msg = Ds_Pibo.getCellData(info.rowIndex, "sInrpsName") + " 고객님의 직업은 당사기존에 체결된 계약에서의 직업과 \n상이합니다.\n" + "확인 후 기존계약의 직업을 변경하거나 신규 직업을 변경하여 \n등록하시기 바랍니다.\n" + "[중요]직업이 정확하지 않은 경우 향후 고지의무위반이나 통지\n의무위반으로 " + "가입자 및 모집자 모두에게 불이익이 발생할 수 \n있습니다.\n\n" + "* 기존계약번호 : " + DsWs_PvcrJob.getCellData(0, "sCrNo") + "\n" + "* 직업 : " + DsWs_PvcrJob.getCellData(0, "sJobName") + "(" + DsWs_PvcrJob.getCellData(0, "sJobCd") + ")";
	                    alert(msg);
	                }
				}
	        }
	    }
	};
	
	scwin.lfn_next_Async = function() {
		util.eventAsyncCall(this, scwin.lfn_next, arguments);
	};
	
	/*-----------------------------------
	// function 명 : lfn_next
	// 내용        : 다음버튼
	-----------------------------------*/
	scwin.lfn_next = function(e) {
	    var flag = parent.scwin.lfn_TabChanging(0, 1);
	    if (flag) {
	    	parent.scwin.lfn_Tab_Focus(1);
	    }
	};
	
	/*-----------------------------------
	// function 명 : fn_printInfo
	// 내용        : 안내문발송
	-----------------------------------*/
	scwin.fn_printInfo = function() {
	    var promise = Promise.resolve();
	    if (scwin.lfn_checkPrint("")) {
	        //해약환급금처리
	        parent.scwin.lfn_RtnAmt();
	        var sArg = "";
	        var sPlanNo = parent.medt_PlanNo.getValue();
	        var sPsnGroupFlgcd; //개인단체구분코드
	        /*if (chk_sPsnGroupFlgcd.getValue() == true){//개인단체구분코드
	        	sPsnGroupFlgcd = "20";//개인단체구분코드
	        }else{
	        */
	        sPsnGroupFlgcd = "10"; //개인단체구분코드
	        //}
	        
	        var indata = new Object();
	        indata.sPlanNo = sPlanNo;
	        indata.sPsnGroupFlgcd = sPsnGroupFlgcd;//개인단체구분코드
	        indata.sGdCd = parent.edt_sGdCd.getValue();
	        indata.sGdCdNm = parent.edt_sGdCdNm.getValue();
	        indata.sPlanProgRankCd = Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
	        indata.sRdchCrYn = Ds_LTIDA00.getCellData(0, "sRdchCrYn");
	        indata.sCmprCrNotcSsrt = Ds_LTIDA00.getCellData(0, "sCmprCrNotcSsrt");
	        indata.tab = 1;
	        if (parent.sSimpleYn != "Y") {
	        	if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        		promise = promise.then(function(rtnVal) {
				    	var pObj = { 
								"Ds_Pibo" : Ds_Pibo  
								, "DsWs_PrdAttr" : DsWs_PrdAttr 
								, "DsWs_LTIDA00" :  parent.DsWs_LTIDA00
       							, "Ds_LTIDA00"   :  Ds_LTIDA00 
						}
				    	var popInfo = {"width":1208,
			    	                   "height":770,
			    	                   "indata":indata,
			    	                   "parentObject"    : pObj,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "안내문발송"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC103M.xml", popInfo);
				    });
				    promise = promise.then(function(rv) {
						/*wprom.popupOpen(가이드참조)*/
	                    //if (!mfn_IsEmpty(rv)) {
	                    //    parent.DsWs_LTIDA00.setCellData(0, "sSrdoIssuDate", rv);
	                    //    Ds_LTIDA00.setCellData(0, "sSrdoIssuDate", rv);
	                    //}
	
	
	                    //청약서발행건은 재산출 / 수정 금지
	                    if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && wconv.length(parent.Ds_LTIDA00.getCellData(0, "sSrdoIssuDate")) > 0) {
	                        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", false); //parent.lfn_ComponentEnable(Tab_Req_Step2, "", false);	
	                    }
					});
	        	}else{
	        		wprom.alert("비대면 채널로 설계한 청약입니다. 상담원시스템으로 로그인하세요.");
	        	/*MS 설계자 요청
	        		promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":656,
			    	                   "height":200,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "대면채널조회"
			    	                  };
			    	    //return wprom.popupOpen("PROJECT_PATH_TEMP/psv_ens/D190.xml", sArg, 800, 550); 
			    	    return wprom.popupOpen("/ui/cbsc/D190.xml", popInfo);
				    });*/
	        	}
	        }else{
	        	if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        		var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	                indata.sPlanNo = sPlanNo;
	                indata.sInrpsName = sInrpsName;
	                promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":690,
			    	                   "height":255,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "증명서신청"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC102P.xml", popInfo);
				    });
	        	}else{
	        		wprom.alert("비대면 채널로 설계한 청약입니다. 상담원시스템으로 로그인하세요.");
	        	/*MS 설계자 요청
	        		var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	                indata.sPlanNo = sPlanNo;
	                indata.sPlanNo = sInrpsName;
	                promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":697,
			    	                   "height":210,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "증명서출력"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC104P.xml", popInfo);
				    });*/
	        	}
	        }
	    }
	    return promise;
	};
	
	
	//---------------------------------------------------------------------------
	// function 명 : fn_setTrty()
	// 내용        : 특약사항조회
	//---------------------------------------------------------------------------
	scwin.fn_setTrty = function() {
	    //특약사항조회
	    wconv.clear(DsWs_Trty);
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB022Task", "getTrty", "", "");
	    MethodObj.setId("getTrty");
	    MethodObj.setParam("sFlagCd", "2");
	    MethodObj.setParam("sGdcd", sGdCd);
	    MethodObj.setParam("sPlanCd", sPlanCd);
	    MethodObj.setParam("sStndDate", parent.sToday);
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsCd"));
	    MethodObj.setUrl("/contract/CBSC094MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }
        
        util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
       	if (DsWs_Trty.getRowCount() == 0) {
	        wprom.alert("특약사항 조회건이 없습니다.");
	    } else {
	        util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
               util.setCompBindRefresh(Ds_Trty.getID());
               //MS 헤더 체크박스
      			scwin.grd_Trty_head_Check();
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_getSex
	// 내용        : 성별을 체크한다.
	//---------------------------------------------------------------------------
	scwin.lfn_getSex = function(val) {
	    if ("1357".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "1";
	    } else if ("2468".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "2";
	    } else {
	        return "";
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_ValidationCheck
	// 내용        : 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_ValidationCheck = function(gubun) {
	    var validFlag = false;
	    //변경여부 초기화
	    modifyFlag = false;
	
	    //전체 데이터 체크
	    if (gubun == "all") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00);
	
	        //단체관리 체크
	        if (!validFlag) {
	            //alert("단체관리케드 ==> " + chk_sPsnGroupFlgcd.Value);
	            //목적물 밸리데이션 체크
	            if (!validFlag) {
	                validFlag = scwin.lfn_Prprt_ValidationCheck(Ds_Prprt);
	                //trace("validFlag 물==> "+validFlag);
	                //특약사항 밸리데이션체크
	                if (!validFlag) {
	                	Ds_Trty.removeColumnFilterAll();
   						Ds_Trty_Backup.removeColumnFilterAll();
	                    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='2'");
	                    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='2'");
	                    validFlag = scwin.Trty_Prprt_ValidationCheck(Ds_Trty);
	                    Ds_Trty.removeColumnFilterAll();
   						Ds_Trty_Backup.removeColumnFilterAll();
	                    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='2' && nPsnPrprtGroupSeqno=='1'");
	                    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='2' && nPsnPrprtGroupSeqno=='1'");
	                }
	            }
	
	            //피보험자 밸리데이션체크
	            if (!validFlag) {
	                validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	                //trace("validFlag 인==> "+validFlag);
	                //trace("Ds_Trty:"+Ds_Trty.saveXML());
	                //특약사항 밸리데이션체크
	                if (!validFlag) {
	                    if (Ds_Pibo.getRowCount() > 0) {
	                    	Ds_Trty.removeColumnFilterAll();
   							Ds_Trty_Backup.removeColumnFilterAll();
	                        //wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1'");
	                        //wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1'");
	                        //validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	                        
	                        for(var i=1; i<=Ds_Pibo.getRowCount(); i++) {
								wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1' && nPsnPrprtGroupSeqno=='"+i+"'");
	                        	wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1' && nPsnPrprtGroupSeqno=='"+i+"'");
	                        
								validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
								if(validFlag == true){break;}
								
								Ds_Trty.removeColumnFilterAll();
   								Ds_Trty_Backup.removeColumnFilterAll();
							}
	                        scwin.sel_sel1(Grd_Pibo, 0);
	                        Ds_Trty.removeColumnFilterAll();
   							Ds_Trty_Backup.removeColumnFilterAll();
	                        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1' && nPsnPrprtGroupSeqno=='1'");
	                        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd=='1' && nPsnPrprtGroupSeqno=='1'");
	                    } else {
	                        validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	                    }
	                }
	            }
	        }
	    } else if (gubun == "level1") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00); //계약기본사항,피보험자 체크
	    } else if (gubun == "level2") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00);
	        //피보험자 밸리데이션체크
	        if (!validFlag) {
	            validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	        }
	    } else if (gubun == "level3") {
	        //목적물 밸리데이션 체크 2013.07.15
	        if (!validFlag) {
	            validFlag = scwin.lfn_Prprt_ValidationCheck(Ds_Prprt);
	            //trace("validFlag==> "+validFlag);
	            //특약사항 밸리데이션체크
	            if (!validFlag) {
	                validFlag = scwin.Trty_Prprt_ValidationCheck(Ds_Trty);
	            }
	        }
	
	        //피보험자 밸리데이션 체크
	        if (!validFlag) {
	            validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	            //특약사항 밸리데이션체크
	            if (!validFlag) {
	                validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	            }
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_LTIDA00_ValidationCheck
	// 내용        : 기본사항 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_LTIDA00_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        //trace(Ds_LTIDA00.savexml());
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol( ); j++) {
	                colID = obj.getColumnID(j);
	
	                //설계번호
	                if (colID == "sPlanNo") {} else if (colID == "sGdCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("상품을  선택하세요");
	                        /*MS note 사용여부 문의 필요 설계자 S*/
	                        //btn_sGdCd.focus();
	                        /*MS note 사용여부 문의 필요 설계자 E*/
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //청약일자
	                } else if (colID == "sSsrtDate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("청약일자를 입력하세요");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	                    //trace("gFaceSalesYN = "+gFaceSalesYN);
	                    //trace("sPlanProgRankCd = "+Ds_LTIDA00.getCellData(0,"sPlanProgRankCd"));
	                    //trace("일자 " + substr(parent.sToday,0,6) + ":" + substr(obj.getCellData(i, colID),0,6));
	                    //비대면이고, 청약일이 현재일이 아니면(월)
	                    if (parent.sScanObjtYn != "Y" && 
	                    	Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "00" && //완료
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "52" && //인수요청	
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "53" && //진단심사중
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "57" && //인수불가(거절)
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "58" && 
	                        //parent.sToday != obj.getCellData(i, colID)){
	                        //조건부승인
	                        //parent.sToday != obj.getCellData(i, colID)){
	                        wconv.substr(parent.sToday, 0, 6) != wconv.substr(obj.getCellData(i, colID), 0, 6)) {
	                        alert("복사후 재설계하여 주시기 바랍니다. ");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	
	                    //대면이고, 청약월 현재일인지 체크(월)
	                    if (parent.sScanObjtYn == "Y" && 
	                    	Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "00" && //완료
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "52" && //인수요청	
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "53" && //진단심사중
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "57" && //인수불가(거절)
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "58" && //조건부승인
	                        wconv.substr(parent.sToday, 0, 6) != wconv.substr(obj.getCellData(i, colID), 0, 6)) {
	                        //substr(parent.sToday,0,6) != substr(obj.getCellData(i, colID),0,4)){ //잠시 테스트를 위해서 해제.(ldh)
	                        alert("복사후 재설계하여 주시기 바랍니다. ");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	                    //10영업일이 지난건인지 확인.->15일
	                    //alert( parent.sToday + ":" + addBizDaysForBank(obj.getCellData(i, colID), 7) + ":" + Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") + ":" + obj.getCellData(i, colID));
	                    /*if (parent.sScanObjtYn == "Y" && 
							Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "00" && 	//완료
							Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "52" &&	//인수요청	
							Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "53" &&	//진단심사중
							Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "57" &&	//인수불가(거절)
							Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "58" &&	//조건부승인
							parent.sToday >= addBizDaysForBank(obj.getCellData(i, colID), 15)){ 
							alert("청약일자로부터 15영업일 이내 입금가능합니다. ");
						    
							parent.cal_sSsrtDate.focus();
							validFlag = true;
							break;
						}*/
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //보험시작일자
	                } else if (colID == "sInsurStrtdate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("보험시작일자를 입력하세요");
	                        cal_sInsurStrtdate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //보험종료일자
	                } else if (colID == "sInsurEndDate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("보험종료일자를 입력하세요");
	                        cal_sInsurEndDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //납입주기코드
	                } else if (colID == "sPaymCyclCd") {
	                	if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("납입주기를 입력하세요");
	                        cmb_PaymCycl.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //영업보험료
	                } else if (colID == "nBussPrem") {
	                    //보험료계산시엔 check하지않는다.
	                    if (except != "calPrem") {
	                        if (wconv.toNumber(obj.getCellData(i, colID)) < wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMinPrem")) || wconv.toNumber(obj.getCellData(i, colID)) > wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMaxPrem"))) {
	                            if (medt_nBussPrem.getDisabled() == false) {
	                                alert("영업보험료는 최소/최대보험료 사이값으로 입력해야 합니다..");
	                            } else {
	                                if (DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd") == "1") {
	                                    alert("자유설계형으로 설계바랍니다.");
	                                } else {
	                                    alert("종합형으로 설계바랍니다.");
	                                }
	                            }
	                            medt_nBussPrem.focus();
	                            validFlag = true;
	                            break;
	                        }
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                } else if (colID == "sPeriMwayWdraYn") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //개인단체구분
	                } else if (colID == "sPsnGroupFlgcd") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                }
	            }
	        }
	    }
	
		//플랜체크
	    if (wconv.length(Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) > 0) {
	        if (cmb_Plan.getValue() != Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) {
	            modifyFlag = true;
	        }
	    }
	    //trace(cmb_Plan.Value+"==="+Ds_Pibo.getCellData(Ds_Pibo.FindRow("sel","1"), "sApplPlanCd")); 
	    return validFlag;
	    
	};
	
	/*-----------------------------------
	// function 명 : lfn_Pibo_ValidationCheck
	// 내용        : 피보험자 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_Pibo_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        var nMinsrRelnCnt = 0;
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                colID = obj.getColumnID(j);
	
	                //피보험자코드
	                if (colID == "sInrpsCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("피보험자코드를 입력하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    var oldModiFlag = modifyFlag;
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                    if (oldModiFlag != "1" && modifyFlag == "1") {
	                        alert("피보험자코드가 변경되었습니다.");
	                        break;
	                    }
	                } else if (colID == "sInrpsName") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        if (parent.sSimpleYn == "Y") {
	                            alert("피보험자명을 입력하세요");
	                        } else {
	                            alert("고객등록을 먼저 해주세요");
	                        }
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //피보험자직업코드
	                } else if (colID == "sJobCd") {
	                    //trace("obj.getCellData(i, colID)::: " + obj.getCellData(i, colID));
	                    if ((mfn_IsEmpty(obj.getCellData(i, colID)) || obj.getCellData(i, colID) == "000000") && parent.sSimpleYn != "Y"){
	                        alert("피보험자직업을 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //피보험자운전용도코드
	                } else if (colID == "sDrveFlagCd") {
	                    /*
	                    if(Ds_LTIDA00.getCellData(0, "sBunsMetdDocuClsfCd") == "2"){
	                    	obj.setCellData(i, colID, "1");	// 1-자가용
	                    }
	                    */
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("피보험자운전용도를 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //주피와의 관계
	                } else if (colID == "sMinsrRelnCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("주피와의 관계를 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                    if (obj.getCellData(i, "sMinsrRelnCd") == "10") {
	                        nMinsrRelnCnt++;
	                    }
	                }
	            }
	            if (validFlag) {
	                return validFlag;
	            }
	            if (parent.sSimpleYn != "Y") {
	                if (wconv.length(Ds_Pibo.getCellData(i, "sAddrFlgcd")) <= 0) {
	                    alert("고객등록을 먼저 해주세요");
	                    validFlag = true;
	                    break;
	                }
	            }
	        }
	        if (nMinsrRelnCnt <= 0) {
	            alert("주피와의관계 [본인]이 없습니다.");
	            validFlag = true;
	        } else if (nMinsrRelnCnt > 1) {
	            alert("주피와의관계 [본인]은 2명 이상일수 없습니다.");
	            validFlag = true;
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : Trty_ValidationCheck
	// 내용        : 특약정보 체크 여부 
	-----------------------------------*/
	scwin.Trty_ValidationCheck = function(obj) {
	    var validFlag = true;
	    btn_Medical.setDisabled(true);
	
	    //Ds_Pibo_BackUp.setColumn(Ds_Pibo.FindRow("sel","1"), "hasPronCmpsTrty","N");//실손가입 확인
	    //Ds_Pibo_BackUp.setColumn(Ds_Pibo.FindRow("sel","1"), "hasFxamtCmps","N");//정액가입 확인
	    for (var i = 0; i < Ds_Pibo_BackUp.getRowCount(); i++) {
	        Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N"); //실손가입 확인
	        Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "N"); //정액가입 확인
	    }
	    
	    //피보험자 입력시 특약사항 선택하세요 2013.07.08
	    var flag = true;
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        if (obj.getCellData(i, "chk") == "1") {
	            flag = false;
	        }
	    }
	    
	    if (flag == true) {
	        wprom.alert("피보험자 입력시 특약사항을 선택하세요.");
	        validFlag = true;
	        return validFlag;
	    }
	
	    //trace(obj.saveXML());
	    //trace("ds_trty.getCount : "+obj.getCount());
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (obj.getCellData(i, "chk") == "1") {
	                //보험기간코드
	                if (wconv.length(obj.getCellData(i, "sInsurTermCd")) == 0) {
	                    wprom.alert("특약 보험기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(3);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "sInsurTermCd", true);
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "sInsurTermCd");						
	                //납입기간코드
	                if (wconv.length(obj.getCellData(i, "sPaymTermCd")) == 0) {
	                    wprom.alert("특약 납입기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(4);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "sPaymTermCd", true);
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "sPaymTermCd");	
	                //특약가입금액
	                if (wconv.length(obj.getCellData(i, "nTrtyInsAmt")) == 0) {
	                    wprom.alert("특약 가입금액을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(5);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "nTrtyInsAmt", true);
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "nTrtyInsAmt");					
	                /*				
	                				//보장보험료
	                				if(Length(obj.getCellData(i, "nGrntPrem")) == 0){
	                					alert("보험료 산출을 해주세요");
	                					validFlag = true; 
	                					break;
	                				}										
	                */
	                //trace("i : "+i+", ds_Trty.getCellData(i, PronCmpsTrtyYn)"+ds_Trty.getCellData(i, "PronCmpsTrtyYn"));
	                //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
	                // 사전조회 무조건 활성화. (2013.01.31) 다시 체크 
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" || Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    btn_Medical.setDisabled(false); //사전조회버튼 활성화
	                }
	
	
	                //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
	                    for (var j = 0; j < Ds_Pibo_BackUp.getRowCount(); j++) {
	                        if (Ds_Trty.getCellData(i, "nPsnPrprtGroupSeqno") == Ds_Pibo_BackUp.getCellData(j, "nInrpsSeqno")) {
	                            Ds_Pibo_BackUp.setCellData(j, "hasPronCmpsTrty", "Y"); //실손가입 확인
	                        }
	                    }
	                }
	
	                //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    for (var j = 0; j < Ds_Pibo_BackUp.getRowCount(); j++) {
	                        if (Ds_Trty.getCellData(i, "nPsnPrprtGroupSeqno") == Ds_Pibo_BackUp.getCellData(j, "nInrpsSeqno")) {
	                            Ds_Pibo_BackUp.setCellData(j, "hasFxamtCmps", "Y"); //정액담보가입 확인
	                        }
	                    }
	                }
	
	                //특약변경여부 체크
	                validFlag = false; //break;	
	            }
	            scwin.lfn_Trty_CompChangeCheck(Ds_Trty, Ds_Trty_Backup, i);
	        }
	    }
	
	
	
	    //trace("Ds_Pibo_BackUp:" + Ds_Pibo_BackUp.SaveXML());
	    if (chkMedical == true && except != "calPrem" && except != "allPrem") {
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            //alert("hasPronCmpsTrty:["+i+"]"+Ds_Pibo_BackUp.getCellData(i, "hasPronCmpsTrty"));//실손가입 확인
	            //alert("MediFlag:["+i+"]"+Ds_Pibo_BackUp.getCellData(i, "MediFlag"));
	            //alert("hasFxamtCmps["+i+"]"+Ds_Pibo_BackUp.getCellData(i, "hasFxamtCmps")); //정액담보 가입 확인
	            //alert("fixFlag:["+i+"]"+Ds_Pibo_BackUp.getCellData(i, "fixFlag"));
	            if ((Ds_Pibo_BackUp.getCellData(i, "hasPronCmpsTrty") == "Y" && Ds_Pibo_BackUp.getCellData(i, "MediFlag") == "N") || (Ds_Pibo_BackUp.getCellData(i, "hasFxamtCmps") == "Y" && Ds_Pibo_BackUp.getCellData(i, "fixFlag") == "N")) {
	                if (parent.sScanObjtYn == "Y") {
	                    if (scwin.lfn_checkMedical(i) == false) {
	                        validFlag = true;
	                        return validFlag;
	                    }
	                }
	                wprom.alert(Ds_Pibo.getCellData(i, "sInrpsName") + "님의 보험계약정보 사전조회를 실행하십시오.");
	                btn_Medical.focus();
	                validFlag = true;
	                return validFlag;
	            }
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_CompChangeCheck
	// 내용        : 각 항목 변경여부체크
	-----------------------------------*/
	scwin.lfn_CompChangeCheck = function(obj, i, colID) {
		if (obj.getID() == "Ds_Pibo") {
	        if (Ds_Pibo.getCellData(i, colID) != Ds_Pibo_BackUp.getCellData(i, colID)) {
	            modifyFlag = true;
	        }
	    }else if (obj.getID() == "Ds_Prprt") {
	        if (Ds_Prprt.getCellData(i, colID) != Ds_Prprt_Backup.getCellData(i, colID)) {
	            modifyFlag = true;
	        }
	    } else {
	        //변경여부체크
	        if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
	            modifyFlag = true;
	        } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
	            modifyFlag = true;
	        }
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_Prprt_ValidationCheck
	// 내용        : 목적물 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_Prprt_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	
	            for (var j = 0; j < obj.getTotalCol( ); j++) {
	                colID = obj.getColumnID(j);
	
	                //요율업종코드
	                if (colID == "sRatoBntpCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("요율업종코드를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    var oldModiFlag = modifyFlag;
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //if (oldModiFlag != "1" && modifyFlag == "1"){
	                    //	alert("요율업종코드가 변경되었습니다.");
	                    //	break;
	                    //}
	                } else if (colID == "sInsBntpCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("가입업종코드를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                } else if (colID == "sBuldgStrtGradCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("건물급수를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    var oldModiFlag = modifyFlag;
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //if (oldModiFlag != "1" && modifyFlag == "1"){
	                    //	alert("건물급수가 변경되었습니다.");
	                    //	break;
	                    //}
	                } else if (colID == "nBuldgGrodFlct") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("층수(지상)를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                } else if (colID == "nBuldgUndgFlct") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("층수(지하)를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                } else if (colID == "nInsArea") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("가입면적을 입력하세요");
	
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    var oldModiFlag = modifyFlag;
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //if (oldModiFlag != "1" && modifyFlag == "1"){
	                    //	alert("가입면적이 변경되었습니다.");
	                    //	break;
	                    //}					
	                } else if (colID == "nTrtyInsAmt") {
	                    if (mfn_IsEmpty(Ds_Trty.getCellData(i, colID))) {
	                        wprom.alert("가입금액을 입력하세요");
	                        validFlag = true;
	                        break;
	                    }
	                } else if (colID == "nObjctRelvFlct") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("목적물 위치의 층수를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                } else if (colID == "sObjctGrodUndgFlagCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        wprom.alert("목적물 위치를 입력하세요");
	                        //Object(obj.getCellData(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    } else {
	                        if (wconv.trim(obj.getCellData(i, "sObjctGrodUndgFlagCd") == "1") && eval(obj.getCellData(i, "nObjctRelvFlct")) > eval(obj.getCellData(i, "nBuldgGrodFlct"))) {
	                            wprom.alert("목적물 층수는 지상층수 보다 클수없습니다.");
	                            nObjctRelvFlct.focus();
	                            validFlag = true;
	                            var oldModiFlag = modifyFlag;
	                            scwin.lfn_CompChangeCheck(obj, i, "nObjctRelvFlct");
	                            break;
	                        } else if (wconv.trim(obj.getCellData(i, "sObjctGrodUndgFlagCd")) == "2" && eval(obj.getCellData(i, "nObjctRelvFlct")) > eval(obj.getCellData(i, "nBuldgUndgFlct"))) {
	                            wprom.alert("목적물 층수는 지하층수 보다 클수없습니다.");
	                            nObjctRelvFlct.focus();
	                            validFlag = true;
	                            var oldModiFlag = modifyFlag;
	                            scwin.lfn_CompChangeCheck(obj, i, "nObjctRelvFlct");
	                            break;
	                        }
	                    }
	                }
	            }
	            if (validFlag) {
	                return validFlag;
	            }
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_searchJobCd
	// 내용        : 피보험자의 직업 찾기
	-----------------------------------*/
	scwin.lfn_searchJobCd = function(nRow){
		//보험나이 누락시 나이계산
	    if (parent.sSimpleYn == "Y" && wconv.length(wconv.toString(Ds_Pibo.getCellData(nRow, "nInrpsAge"))) <= 0) {
	        //보험나이계산
	        Ds_Pibo.setCellData(nRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        Ds_Pibo.setCellData(nRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	    }
	    if (wconv.length(wconv.toString(Ds_Pibo.getCellData(nRow, "nInrpsAge"))) <= 0) {
	        alert("주민번호를 정확히 입력해 주세요.");
	        Grd_Pibo.wconv.moveToPrevCell();
	        Grd_Pibo.wconv.moveToPrevCell();
	        return;
	    }
	    var promise = Promise.resolve();
	    
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	var popInfo = {
				"width"     : 845,
				"height"    : 565,  
				"indata"    : indata,
				"title"     : "직업코드 조회",
				"callback"  : scwin.popupCallback
			};
	        return wprom.popupOpen("/ui/cbso/CBSO021P.xml", popInfo);//직업코드 조회   
	    });
	    promise = promise.then(function(result) {
	        /*wprom.popupOpen(가이드참조)*/
	        if (wconv.length(result) != 0) {
	            var jobretArr = result.split("^");
	            Ds_Pibo.setCellData(nRow, "sJobCd", jobretArr[1]); //직업코드 
	            Ds_Pibo.setCellData(nRow, "sJobName", jobretArr[0]); //직업명
	            Ds_Pibo.setCellData(nRow, "sJobGradCd", jobretArr[2]); //직업급수코드 
	            Ds_Pibo.setCellData(nRow, "sDrveFlagCd", jobretArr[3]); //운전용도코드 
	            if (wconv.length(parent.edt_sGdCdNm.text) > 0) {
	                if (Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") != Ds_Pibo.getCellData(nRow, "sInrpsCd") || Ds_Pibo_BackUp.getCellData(nRow, "sDrveFlagCd") != Ds_Pibo.getCellData(nRow, "sDrveFlagCd")) {
	                    if (!mfn_IsEmpty(edt_sGdcd.getValue())) {
	                        //fn_setRule();
	                        //피보험자별 특약을 조회하기 위해 먼저 셋팅
	                        //Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
	                        //해당 피보험자로 선택 시킨 후 피보험자특약 조회
	                        scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, -1); //lfn_searchPiboTrty("", nRow);
	                    }
	                }
	            }
	            Ds_Pibo_BackUp.setCellData(nRow, "sJobCd", jobretArr[1]);
	            Ds_Pibo_BackUp.setCellData(nRow, "sDrveFlagCd", jobretArr[3]);
	        }
	    });
	    return promise;
	};
	
	scwin.btn_CalcPrem_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_CalcPrem_OnClick, arguments);
	}
	
	//---------------------------------------------------------------------------
	// function 명 : btn_CalcPrem_OnClick
	// 내용        : 보험료계산 버튼클릭시 처리
	//---------------------------------------------------------------------------
	scwin.btn_CalcPrem_OnClick = function() {
	    scmb_plan = false; //플랜변경 확인 
	    CalcPremFlag = false; // 보험료 계산 플래그 
	    //간편설계는 가입설계 동의 여부 체크 제외
	    //2013.06.24 LBC
	    /*
	    if(parent.sSimpleYn != "Y") {
	    	//가입설계 동의 여부 체크 
	    	for(var i=0;i < Ds_Pibo.getRowCount() ; i++){
	    		if(scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(i,"sInrpsCd"))=="Y"){
	    		   alert( Ds_Pibo.getCellData(i,"sInrpsName") + "님의 가입설계 동의여부를 확인하세요");
	    		   return;
	    		}
	    	}
	    }
	    */
	    var trtyFilter = Ds_Trty.getFilterList();
		Ds_Trty.clearFilter();
		//Ds_Trty.removeColumnFilterAll();
		wconv.filter(Ds_Trty, "TrtyFlagCd=='01' && chk == '1'");
		if(Ds_Trty.getRowCount() == 0){
			wprom.alert("기본특약은 필수입니다.");
	        return;
		}
		Ds_Trty.removeColumnFilterAll();
		for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
		
	    //동일피보험자 청약이력확인
	    wconv.clear(DsWs_SsrtCarr);
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getSsrtCarrCnfm", "", "");
		MethodObj.setId("getSsrtCarrCnfm");
		MethodObj.setParam("sSsrtDate", Ds_LTIDA00.getCellData(0, "sSsrtDate"));
		MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(0, "sInrpsCd"));
		MethodObj.setParam("sDoer", parent.edt_sDoer.getValue());//취급자
		MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue());//사용인
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//vector/data/LTIEA01Carr");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }
		
		//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		//DsWs_SsrtCarr.setJSON(_tranSync.getDsJson("LTIEA01Carr"));
		util.copyM(DsWs_SsrtCarr, _tranSync.getDsJson("LTIEA01Carr"));
		if (wconv.substr(Ds_Pibo.getCellData(0, "sInrpsCd"), 7, 6) != "000000") {
		    if (DsWs_SsrtCarr.getRowCount() > 0){
	            alert("최근 1개월 내에 동일한 피보험자로 다른 모집인의 청약이 있습니다.");
	        }
	    }
	    
	    //목적물만 있는 경우 예외사항 처리
	    scwin.lfn_OnlyPrprt_Check();
	
	
	    //배상책임 값 셋팅
	    scwin.lfn_Trty_Rprtn_Set(btn_CalcPrem);
	
	    //피보험자중 1명만 가입가능 특약체크
	    if (!scwin.lfn_Trty_Relation_OnlyOne(btn_CalcPrem, -1, "all")){return;}
	
	    //패키지 특약 가입 체크 //funcldh
	    if (scwin.lfn_Trty_Relation_PkgErr(btn_CalcPrem)){return;}
		
		//보험료계산
	    scwin.fn_calPrem();
	
	    //대면일 경우 보험료 계산후 다음 메세지 팝업.
	    if(util.getGdsValue("gFaceSalesYN") == "Y" && parent.sSimpleYn == "Y" && CalcPremFlag ){
	        wprom.alert("간편설계로서 인수심사결과에 따라 청약내용 달라질 수 있습니다");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_calPrem
	// 내용        : 보험료계산
	//---------------------------------------------------------------------------
	scwin.fn_calPrem = function(obj) {
	    //trace("계약자사항(전)==> " + parent.Ds_LTIDA03.SaveXML());
	    btn_Medical.setDisabled(true);
	    except = "calPrem";
	    /*for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") {
	            wprom.alert("영업용운전자는 가입금지입니다");
	            return;
	        }
	    }*/
	
	    // 보험중에 복사 제외 (LDH 2012.5.21)
	    if ((wconv.findRow(Ds_Trty, "TrtyCd", "22011801") != "-1") && (Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "nTrtyInsAmt") == 3000000) && (Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "chk") == "1")) {
	        if (obj == "copy") {
	            wprom.alert("복사할수 없는 특약(" + Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "TrtyHnglAbbName") + ")이 있습니다");
	        } else {
	            wprom.alert("보험료 계산 문제 특약(" + Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "TrtyHnglAbbName") + ")이 있습니다");
	        }
	        return;
	    }
	
	    // 청약진행중인 가입설계 보험료 계산 불가 처리.
	    if (parent.sSimpleYn == "Y" && (obj != null && obj != undefined && obj != "copy") && wconv.length(parent.medt_PlanNo.getValue()) > 0) {
	        //MS 부모창에 존재 하지 않는 함수
	        //parent.scwin.lfn_ProgRankCd();
	        //MS sSimpleProg 변수가 존재 하지 않음
	        if (wconv.length(sSimpleProg) > 0) {
	            alert("청약진행중인 가입설계입니다 \n간편산출을 할수 없습니다.");
	            return;
	        }
	    }
	    util.insertColumn(Ds_LTIDA00, [["nMinPremRate","nMinPremRate","text"]]);
	    Ds_LTIDA00.setCellData(0, "sSsrtDate", parent.cal_sSsrtDate.getValue());
	    Ds_LTIDA00.setCellData(0, "gUserID", util.getGdsValue("gUserID"));
	    Ds_LTIDA00.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));
	    Ds_LTIDA00.setCellData(0, "sSaleChnl", parent.sSaleChnl); //판매채널구분코드
	    Ds_LTIDA00.setCellData(0, "sSaleChnlDtal", parent.sSaleChnlDtal); //판매채널상세코드
	    Ds_LTIDA00.setCellData(0, "sDoer", parent.edt_sDoer.getValue()); //취급자
	    Ds_LTIDA00.setCellData(0, "sDoerUser", parent.edt_sDoerUser.getValue()); //최초취급자사용인	
	    Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    Ds_LTIDA00.setCellData(0, "sApplPlanCd", cmb_Plan.getValue()); //플랜코드(화면에서 선택된 플랜을 가져감)
	    Ds_LTIDA00.setCellData(0, "sApplPlanName", cmb_Plan.getText()); //플랜명
	    Ds_LTIDA00.setCellData(0, "sGdCd", parent.edt_sGdCd.getValue()); //상품코드
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드
	    Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20"); //설계진행단계코드(보험료산출(인))
	    //20130614 lbc
	    //Ds_LTIDA00.setCellData(0, "sPsnPrprtGroupFlgcd", "1"); //인물단체구분코드(1:인,2:물)
	    Ds_LTIDA00.setCellData(0, "sPsnPrprtGroupFlgcd", "1"); //인물단체구분코드(1:인,2:물)
	    Ds_LTIDA00.setCellData(0, "sGdTypeFlgCd", DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd")); //상품유형구분
	    Ds_LTIDA00.setCellData(0, "sBunsMetdDocuClsfCd", DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd")); //사업실적표분류코드
	    Ds_LTIDA00.setCellData(0, "sApplDclrRato", DsWs_PrdAttr.getCellData(0, "ApplDclrRato")); //적용공시이율
	    Ds_LTIDA00.setCellData(0, "sGdFlgcd", DsWs_PrdAttr.getCellData(0, "GdFlgcd"));
	    Ds_LTIDA00.setCellData(0, "sDvdnFlagCd", DsWs_PrdAttr.getCellData(0, "DvdnFlagCd")); //배당구분코드
	    Ds_LTIDA00.setCellData(0, "sPpayAvaYn", DsWs_PrdAttr.getCellData(0, "PpayAvaYn")); //선납가능여부
	    Ds_LTIDA00.setCellData(0, "sHsecFlagCd", DsWs_PrdAttr.getCellData(0, "HsecFlagCd")); //가계구분코드
	    Ds_LTIDA00.setCellData(0, "sGroupCrAdmNo", Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo")); //단체관리번호
	    Ds_LTIDA00.setCellData(0, "sBsmnRgstNo", Ds_LTIEA10.getCellData(0, "sGroupCd")); //단체코드	
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrGdYn", DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn")); //세금우대상품여부
	    Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "");
	    Ds_LTIDA00.setCellData(0, "nMaxPrem", nMaxPrem);
	    Ds_LTIDA00.setCellData(0, "nInrpsPsct", Ds_Pibo.getRowCount()); //피보험자인원수
	    //2013.06.17 LBC
	    Ds_LTIDA00.setCellData(0, "nObjtNum", Ds_Prprt.getRowCount()); //목적물수
	    //trace(Ds_Prprt.savexml());
	    //간편산출인 경우 간편 산출 구분자 셋팅.	
	    if (parent.sSimpleYn == "Y") {
	        util.insertColumn(Ds_LTIDA00, [["sSimpleYn","sSimpleYn","text"]]);
	        Ds_LTIDA00.setCellData(0, "sSimpleYn", "Y");
	        for (var k = 0; Ds_Pibo.getRowCount() > k; k++) {
	            //간편산출에서 직업코드가 없는 경우 
	            if (wconv.length(Ds_Pibo.getCellData(k, "sJobCd")) < 1) {
	                Ds_Pibo.setCellData(k, "sJobCd", "000000"); // 간편산출의 경우 강제 셋팅(000000) 
	            }
	
	            //간편설계에서 주민번호가 들어오는 경우  주민번호 0 처리 N1405-00243
	            if (wconv.right(Ds_Pibo.getCellData(k, "sInrpsCd"), 6) != "000000") {
	                Ds_Pibo.setCellData(k, "sInrpsCd", wconv.left(Ds_Pibo.getCellData(k, "sInrpsCd"), 7) + "000000");
	            }
	        }
	    }
	    if (parent.medt_PlanNo.getValue() == "") {
	        Ds_LTIDA00.setCellData(0, "sCrNo", ""); //계약번호
	        Ds_LTIDA00.setCellData(0, "sCmMetd", ""); //입금방법
	    }
	    Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "10"); //개인단체구분코드
	    Ds_LTIDA00.setCellData(0, "sInsType", "10"); //가입유형
	    Ds_LTIDA00.setCellData(0, "nAddPaymPrem", 0);
	    Ds_LTIDA00.setCellData(0, "sScanObjtYn", (util.getGdsValue("gFaceSalesYN") == "Y"?util.getGdsValue("gFaceSalesYN"):"N")); //대면일때 스캔대상 = Y
	    parent.sScanObjtYn = (util.getGdsValue("gFaceSalesYN")=="Y"?util.getGdsValue("gFaceSalesYN"):"N");
	
	    //밸리데이션 체크
	    if (obj == null || obj == undefined || obj != "copy") {
	        if (scwin.lfn_ValidationCheck("all")) {
	        	util.setCompBindRefresh(Ds_LTIDA00.getID());
	        	util.setRowPosition(Ds_LTIDA00, 0);
	            return false;
	        }
	    }
	    
	    //로딩처리
	    //scwin.lfn_ShowWaitImage(true);
	    //Idle();
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB730Task", "setBasicObject", "", "");
	    MethodObj.setId("setBasicObject");
	    
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        //설계번호 셋팅
	        Ds_Pibo.setCellData(i, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo"));
	
	        //피보험자에 플랜세팅
	        Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText());
	
	        //피보험자 일련번호
	        Ds_Pibo.setCellData(i, "nInrpsSeqno", i + 1);
	        
	        //피보험자 운전용도
	        Ds_Pibo.setCellData(i, "sPiboDrivCd", Ds_Pibo.getCellData(0, "sDrveFlagCd"));
	    }
	    Ds_LTIDA00.setCellData(0, "sDrivFlagCd", Ds_Pibo.getCellData(0, "sDrveFlagCd"));
	    
	    //목적물만 처리시 세팅
	    for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	        //설계번호 셋팅
	        Ds_Prprt.setCellData(i, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo"));
	
	        //목적물에 플랜세팅
	        Ds_Prprt.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Prprt.setCellData(i, "sApplPlanName", cmb_Plan.getText());
	
	        //목적물 일련번호
	        Ds_Prprt.setCellData(i, "nInsrdObjctSeqno", wconv.toString(i + 1));
	    }
	
	    //체크된 특약만 보관 2013.06.19 
	    scwin.lfn_make_Ds_Trty_Save();
	
	    //임의 가입금액 셋팅시 값누락 여부 체크 2013.07.17
	    if (scwin.lfn_Check_Ds_Trty_Save()) {
	        //scwin.lfn_ShowWaitImage(false);
	        return;
	    }
	    //계약기본사항을 담는다	
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", "Ds_LTIDA00");
	    if(Ds_LTIEA10.getRowCount() < 1){Ds_LTIEA10.insertRow();}
	    MethodObj.addSingleData("LTIEA10", "LTIEA10", "Ds_LTIEA10");
	    wconv.clear(Ds_LTIDA03);
	    util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
	    MethodObj.addSingleData("LTIDA03", "LTIDA03", "Ds_LTIDA03:A");
	    if (Ds_Pibo.getRowCount() < 1) {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo_Tmp.getID());//피보험자사항
	    } else {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID());//피보험자사항
	    }
	    //계약기본사항을 담는다(목적물사항) 입력 20130531 lbc
	    
	    util.insertColumn(Ds_Prprt, [["sInrpsRelnFlagCd","sInrpsRelnFlagCd","text"]]);
	    Ds_Prprt.setCellData(0, "sInrpsRelnFlagCd", "00");
	    
	    MethodObj.addVectorData("vLTIDA60", "LTIDA60", Ds_Prprt.getID());//목적사항
	    //MethodObj.addVectorData("vLTIDA61", "LTIDA61", Ds_Prprt.getID());//목적물소재지이력
	    //MS Dataset 중복 오류로 인하여 임시 tDs_Prprt 만들어서 사용
	    util.dataListCloneCopy(Ds_Prprt, "tDs_Prprt", "0");
	    MethodObj.addVectorData("vLTIDA61", "LTIDA61", "tDs_Prprt");//목적물소재지이력
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID());//특약사항정보담음
	    //trace(Ds_Trty_Save.savexml());
	    //복사건일때 과거번호, 과거청약일을 가지고감(질의서, 전산심사테이블 복사를위해)
	    //과거증번
	     //과거증번
	    util.jSonDsCreate([{"oldPlanNo":""}], "DSoldPlanNo");
		$w.data["DSoldPlanNo"].setCellData(0, "oldPlanNo", oldPlanNo);
	    MethodObj.addSingleData("oldPlanNo", "oldPlanNo", "DSoldPlanNo:A", "type02");
	    
	    //과거청약일
	    util.jSonDsCreate([{"oldSsrtDate":""}], "DSoldSsrtDate");
	    $w.data["DSoldSsrtDate"].setCellData(0, "oldSsrtDate", oldSsrtDate);
	    MethodObj.addSingleData("oldSsrtDate", "oldSsrtDate", "DSoldSsrtDate:A", "type02");
	    
	    //플랜에서 나온 영업보험료
	    util.jSonDsCreate([{"nBussPrem":""}], "DSnBussPrem");
	    $w.data["DSnBussPrem"].setCellData(0, "nBussPrem", DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "nBussPrem"));
	    MethodObj.addSingleData("nBussPrem", "nBussPrem", "DSnBussPrem:A", "type02");
		
		MethodObj.setHashTable();
	    wconv.clear(DsWs_LTIDA00);
	    wconv.clear(DsWs_Pibo);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(Ds_Trty_Backup); //특약 백업용	
	    
	    MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");//기본사항
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01");//피보험자 xpath 변경 
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02");//특약 xpath 변경
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA60']/vector/data/LTIDA60");//목적물 xpath 변경 2013.06.14 lbc
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15");//인수제한사항 xpath변경
		MethodObj.addXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");//단체사항
		//MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03");//계약자사항
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	
        	util.setCompBindRefresh(Ds_LTIDA00.getID());
		    util.setRowPosition(Ds_LTIDA00, 0);
		    
		    util.setCompBindRefresh(Ds_Prprt.getID());
		    util.setRowPosition(Ds_Prprt, 0);
		    
		    util.setCompBindRefresh(Ds_Pibo.getID());
		    util.setRowPosition(Ds_Pibo, 0);
		    if(parent.sSimpleYn == "N"){
		    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
		    }
		    
		    util.setCompBindRefresh(Ds_Trty.getID());
		    util.setRowPosition(Ds_Trty, 0);
        	
        	return;
        } else {
        	util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
	        util.copyM(DsWs_Pibo,_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01"));
	        util.copyM(DsWs_Trty,_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"));
	        util.copyM(DsWs_Prprt,_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA60']/vector/data/LTIDA60"));
	        util.copyM(DsWs_LTIDA15,_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15"));
	        util.copyM(DsWs_LTIEA10,_tranSync.getDsJson("//hashtable/data[@hashkey='LTIEA10']/LTIEA10"));
	        
	        //계약기본정보의 보험료를 세팅
	        //wconv.copy(Ds_LTIDA00, "DsWs_LTIDA00");
	        util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON());
	        
	        //trace("DsWs_LTIDA00=="+DsWs_LTIDA00.SaveXML());			
	        //피보험자 그리드로 옮긴다.
	        //Ds_Pibo.Copy("DsWs_Pibo");
	        //trace("DsWs_Pibo=="+DsWs_Pibo.SaveXML());		
	        //단체관리복사
	        //wconv.copy(Ds_LTIEA10, "DsWs_LTIEA10");
	        util.copyM(Ds_LTIEA10, DsWs_LTIEA10.getAllJSON());
	
	        //인수제한사항 세팅
	        //wconv.copy(Ds_LTIDA15, "DsWs_LTIDA15");
	        util.copyM(Ds_LTIDA15, DsWs_LTIDA15.getAllJSON());
	
	        //trace("DsWs_Pibo:" + DsWs_Pibo.SaveXML());
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            //DsWs_Pibo 해당된 피보험자만 세팅한다.	
	            wconv.mi_copyRow(DsWs_Pibo.getID(), i, Ds_Pibo.getID(), i);
	            wconv.mi_copyRow(DsWs_Pibo.getID(), i, Ds_Pibo_BackUp.getID(), i);
	        }
	
	        //2013.06.14 lbc
	        for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	            //DsWs_Prprt 해당된 목적물만 세팅한다.	
	            wconv.mi_copyRow(DsWs_Prprt.getID(), i, Ds_Prprt.getID(), i);
	            wconv.mi_copyRow(DsWs_Prprt.getID(), i, Ds_Prprt_Backup.getID(), i);
	        }
	        
	        //특약정보중 체크된것의 특약코드를 찾아서 보험료를 넣어준다.
			if (Ds_Trty.getTotalRow() > 0) {
//				var arrtrty = util.getDataListEvent(Ds_Trty);
//				util.removeAllDataListEvent(Ds_Trty);
				for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
					if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
						var nFondTrtyRow = util.searchRow(DsWs_Trty, "i",
						"DsWs_Trty.getCellData(i, 'sTrtyCd') == '" + util.getCellDataF(Ds_Trty, i, "sTrtyCd") + "' && " +
						"DsWs_Trty.getCellData(i, 'nPsnPrprtGroupSeqno') =='" + util.getCellDataF(Ds_Trty, i, "nPsnPrprtGroupSeqno") +"'");  
						//가입시보장보험료
						util.setCellDataF(Ds_Trty, i, "nGrntPrem", DsWs_Trty.getCellData(nFondTrtyRow, "nGrntPrem"));
						//예상보장영업보험료
						util.setCellDataF(Ds_Trty, i, "nExptGrntBussPrem", DsWs_Trty.getCellData(nFondTrtyRow, "nExptGrntBussPrem"));
						
						//저장하면서 추가된 사항 복사한다.
						util.setCellDataF(Ds_Trty, i, "sPlanNo", DsWs_Trty.getCellData(nFondTrtyRow, "sPlanNo"));//설계번호
						util.setCellDataF(Ds_Trty, i, "sPsnPrprtGroupFlgcd", DsWs_Trty.getCellData(nFondTrtyRow, "sPsnPrprtGroupFlgcd"));//인물단체구분코드
						util.setCellDataF(Ds_Trty, i, "sGdCd", DsWs_Trty.getCellData(nFondTrtyRow, "sGdCd"));//상품코드
						util.setCellDataF(Ds_Trty, i, "nPsnPrprtGroupSeqno", DsWs_Trty.getCellData(nFondTrtyRow, "nPsnPrprtGroupSeqno"));//인물단체일련번호
						util.setCellDataF(Ds_Trty, i, "nCrChngNo", DsWs_Trty.getCellData(nFondTrtyRow, "nCrChngNo"));//계약변경번호
						util.setCellDataF(Ds_Trty, i, "sInsurStrtdate", DsWs_Trty.getCellData(nFondTrtyRow, "sInsurStrtdate"));//보험시작일자
						util.setCellDataF(Ds_Trty, i, "sInsurEndDate", DsWs_Trty.getCellData(nFondTrtyRow, "sInsurEndDate"));//보험종료일자
						util.setCellDataF(Ds_Trty, i, "sTrtyStatCd", DsWs_Trty.getCellData(nFondTrtyRow, "sTrtyStatCd"));
						util.setCellDataF(Ds_Trty, i, "nTrtyOrdr", DsWs_Trty.getCellData(nFondTrtyRow, "nTrtyOrdr"));//특약순서
						util.setCellDataF(Ds_Trty, i, "sBascSlctFlagCd", DsWs_Trty.getCellData(nFondTrtyRow, "sBascSlctFlagCd"));//기본선택구분코드
						util.setCellDataF(Ds_Trty, i, "sAutoRenwlAvaYn", DsWs_Trty.getCellData(nFondTrtyRow, "sAutoRenwlAvaYn"));//자동갱신가능여부
						util.setCellDataF(Ds_Trty, i, "sGrntAccuFlagCd", DsWs_Trty.getCellData(nFondTrtyRow, "sGrntAccuFlagCd"));//보장적립구분코드
						util.setCellDataF(Ds_Trty, i, "RenwlUseCrFlagCd", DsWs_Trty.getCellData(nFondTrtyRow, "RenwlUseCrFlagCd"));//갱신구분코드
						util.setCellDataF(Ds_Trty, i, "RenwlTrtyCd", DsWs_Trty.getCellData(nFondTrtyRow, "RenwlTrtyCd"));//갱신특약코드
						util.setCellDataF(Ds_Trty, i, "TrtyTypeCd", DsWs_Trty.getCellData(nFondTrtyRow, "TrtyTypeCd"));//특약유형코드
						util.setCellDataF(Ds_Trty, i, "nAccuPrem", DsWs_Trty.getCellData(nFondTrtyRow, "nAccuPrem"));//적립보험료
						util.setCellDataF(Ds_Trty, i, "nRealInsurTerm", DsWs_Trty.getCellData(nFondTrtyRow, "nRealInsurTerm"));//실보험기간
						util.setCellDataF(Ds_Trty, i, "nRealPaymTerm", DsWs_Trty.getCellData(nFondTrtyRow, "nRealPaymTerm"));//실납입기간
						util.setCellDataF(Ds_Trty, i, "nEndAge", DsWs_Trty.getCellData(nFondTrtyRow, "nEndAge"));//만기연령
						util.setCellDataF(Ds_Trty, i, "nPaymAge", DsWs_Trty.getCellData(nFondTrtyRow, "nPaymAge"));//납입연령
						util.setCellDataF(Ds_Trty, i, "sGnrzCd", DsWs_Trty.getCellData(nFondTrtyRow, "sGnrzCd"));//종형코드
						util.setCellDataF(Ds_Trty, i, "nTrtyPrem", DsWs_Trty.getCellData(nFondTrtyRow, "nTrtyPrem"));//특약보험료
						util.setCellDataF(Ds_Trty, i, "sResvAmtKey", DsWs_Trty.getCellData(nFondTrtyRow, "sResvAmtKey"));//준비금
						
						if(util.getCellDataF(Ds_Trty, i, "sScrnIndcYn") == "N"){
							util.setCellDataF(Ds_Trty, i, "sPaymTermCd", DsWs_Trty.getCellData(nFondTrtyRow, "sPaymTermCd"));//준비금
							util.setCellDataF(Ds_Trty, i, "sInsurTermCd", DsWs_Trty.getCellData(nFondTrtyRow, "sInsurTermCd"));//준비금
						}
					}
				}
//				util.setDataListEvent(Ds_Trty, arrtrty);
			}
	    }
	
	    //로딩처리
	    //scwin.lfn_ShowWaitImage(false);
	    
	    util.setCompBindRefresh(Ds_LTIDA00.getID());
	    util.setRowPosition(Ds_LTIDA00, 0);
	    
	    util.setCompBindRefresh(Ds_Prprt.getID());
	    util.setRowPosition(Ds_Prprt, 0);
	    
	    util.setCompBindRefresh(Ds_Pibo.getID());
	    util.setRowPosition(Ds_Pibo, 0);
	    if(parent.sSimpleYn == "N"){
	    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
	    }
	    
	    util.setCompBindRefresh(Ds_Trty.getID());
	    util.setRowPosition(Ds_Trty, 0);
	    //MS 헤더 체크박스
     	scwin.grd_Trty_head_Check();
	    
	    //trace("+++--++"+ Ds_Trty.savexml());// 
	    if (parent.medt_PlanNo.getValue() == "") {
	        //대리점일때 대리점 이력생성	
	        if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
	            //gfn_insertAgencyHistory(SODJ_AgencyHistory, DODJ_AgencyHistory, "DsWs_AgencyHistory", DsWs_LTIDA00.getCellData(0, "sPlanNo"), Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sMinsrRelnCd", "10"), "sInrpsCd"), parent.edt_sGdCdNm.getValue(), "2"); //sApplyStat 2:보험료산출, 청약복사
	        }
	        wprom.alert("청약번호 " + DsWs_LTIDA00.getCellData(0, "sPlanNo") + "로 보관되었습니다.");
	        parent.medt_PlanNo.setValue(DsWs_LTIDA00.getCellData(0, "sPlanNo"));
	    }
	
	    // 이력저장(산출)
	    parent.scwin.saveHistory("2");
	
	    //가입설계서 발행버튼 활성화
	    btn_PrintAgmt.setDisabled(false);
	    btn_PrintInfo.setDisabled(false);
	    if (Ds_LTIDA15.getRowCount() > 0) {
	        //btn_Insu.Color = "red";
	        $("#btn_Insu").find("a").css("color", "red");
	        if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
	            wprom.alert("인수금지 대상입니다. 인수제한사유를 확인하세요");
	            btn_PrintAgmt.setDisabled(true);
	            btn_PrintInfo.setDisabled(true);
	        }
	    } else {
	        //btn_Insu.Color = ""; //2014.06.03
	        $("#btn_Insu").find("a").css("color", "");
	    }
		
	    //피보험자정보세팅
	    //parent.DsWs_Pibo.copy("DsWs_Pibo");
	    parent.util.copyM(parent.Ds_Pibo, Ds_Pibo.getAllJSON());
	    
	    //목적물정보세팅 2013.06.18 lbc
	    parent.util.copyM(parent.Ds_Prprt, Ds_Prprt.getAllJSON());
	    parent.util.copyM(parent.Ds_Trty, Ds_Trty.getAllJSON());
	    parent.util.copyM(parent.Ds_LTIDA15, Ds_LTIDA15.getAllJSON());
	
	    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	    util.copyM(Ds_Trty_Backup, Ds_Trty.getAllJSON());
	
	    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	    util.copyM(Ds_Prprt_Backup, Ds_Prprt.getAllJSON());
	
	    //Ds_Trty.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='"+Ds_Pibo.getCellData(Ds_Pibo.FindRow("sel","1"),"nInrpsSeqno")+"'");
	    //Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='"+Ds_Pibo.getCellData(Ds_Pibo.FindRow("sel","1"),"nInrpsSeqno")+"'");
	    //인/물 정보중 체크된것을 찾아서 특약사항을 넣어준다.
	    Ds_Trty.removeColumnFilterAll();
 		Ds_Trty_Backup.removeColumnFilterAll();
	    var rowNum = -1;
	    if (wconv.findRow(Ds_Pibo, "sel", "1") > -1) {
	        rowNum = wconv.findRow(Ds_Pibo, "sel", "1");
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno==" + Ds_Pibo.getCellData(rowNum, "nInrpsSeqno"));
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno==" + Ds_Pibo.getCellData(rowNum, "nInrpsSeqno"));
	    } else if (wconv.findRow(Ds_Prprt, "sel1", "1") > -1) {
	        rowNum = wconv.findRow(Ds_Prprt, "sel1", "1");
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno==" + Ds_Prprt.getCellData(rowNum, "nInsrdObjctSeqno"));
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno==" + Ds_Prprt.getCellData(rowNum, "nInsrdObjctSeqno"));
	    }
	
	    //trace(Ds_Trty_Backup.GetCount());		
	    //trace(Ds_Trty_Backup.GetCountNF());		
	    modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	    CalcPremFlag = true;
	    
	    //보험료 완료시 과거청약번호 clear
	    oldPlanNo = "";
	    oldSsrtDate = "";
	    except = "";
	
	    //trace("계약자사항(후)==> " + parent.Ds_LTIDA03.SaveXML());
	    //개인정보 조회 이력 쌓기2014.04.21
	    if (Ds_Pibo.getRowCount() > 0) {
	        gfn_LogCreditInfoVt(Ds_Pibo, "", "I", "sInrpsCd");
	    }
	};
	
	/*-----------------------------------
	// function 명 : Trty_Prprt_ValidationCheck
	// 내용        : 목적물 특약정보 체크 여부 
	-----------------------------------*/
	scwin.Trty_Prprt_ValidationCheck = function(obj) {
	    //	alert("Trty_Prprt_ValidationCheck");
	    var validFlag = true;
	
	    //목적물 입력시 특약사항 선택하세요 2013.07.15
	    var flag = true;
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        if (obj.getCellData(i, "chk") == "1") {
	            flag = false;
	        }
	    }
	    if (flag == true) {
	        wprom.alert("목적물 입력시 특약사항을 선택하세요.");
	        validFlag = true;
	        return validFlag;
	    }
	
	    //alert(obj.getCount());
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            //trace(Length(obj.getCellData(i, "sInsurTermCd"))+"==="+obj.getCellData(i, "sInsurTermCd")+"==="+obj.getCellData(i, "sPaymTermCd"));
	            if (obj.getCellData(i, "chk") == "1") {
	                //보험기간코드
	                if (wconv.length(obj.getCellData(i, "sInsurTermCd")) == 0) {
	                    wprom.alert("특약 보험기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //Ds_Trty.setRowPosition(i, false);
	                    //grd_sTrty.setFocusedCell(4);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "sInsurTermCd", true);
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "sInsurTermCd");						
	                //납입기간코드
	                if (wconv.length(obj.getCellData(i, "sPaymTermCd")) == 0) {
	                    wprom.alert("특약 납입기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(5);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "sPaymTermCd", true);
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "sPaymTermCd");	
	                //특약가입금액
	                if (wconv.length(obj.getCellData(i, "nTrtyInsAmt")) == 0) {
	                    wprom.alert("특약 가입금액을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(6);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "nTrtyInsAmt", true);
	                    validFlag = true;
	                    break;
	                }
	                if ((wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) < 1000000 && Ds_Trty.getCellData(i, "TrtyCd") == "25000001") || (wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) % 1000000 < 1000000 && wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) % 1000000 > 0 && Ds_Trty.getCellData(i, "TrtyCd") == "25000001") || //2014.06.20 
	                    //2014.06.20 
	                    (wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) < 1000000 && Ds_Trty.getCellData(i, "TrtyCd") == "25020001") || (wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) % 1000000 < 1000000 && wconv.toNumber(Ds_Trty.getCellData(i, "nTrtyInsAmt")) % 1000000 > 0 && Ds_Trty.getCellData(i, "TrtyCd") == "25020001")) {
	                    wprom.alert("화재손해(건물) 특약 가입금액은 백만원단위로 입력하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(6);
	                    //grd_sTrty.wconv.showEditor();
	                    grd_sTrty.setFocusedCell(i, "nTrtyInsAmt", nTrtyInsAmt);
	                    validFlag = true;
	                    break;
	                }
	
	                //특약변경여부 체크
	                validFlag = false; //break;	
	            }
	
	            //변경체크
	            scwin.lfn_Trty_CompChangeCheck(Ds_Trty, Ds_Trty_Backup, i);
	        }
	    }
	
	
	    //trace("objid==cmb_Plan==colID==sApplPlanCd==이전=="+Ds_Pibo.getCellData(Ds_Pibo.FindRow("sel","1"), "sApplPlanCd")+"==이후=="+cmb_Plan.Value+"==modifyFlag=="+modifyFlag);					
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_Trty_CompChangeCheck
	// 내용        : 특약 데이터  변경여부 체크
	-----------------------------------*/
	scwin.lfn_Trty_CompChangeCheck = function(obj, objBack, i) {
	    //기존엔 체크/해지 변경된경우 변경으로 봄
	    if (obj.getCellData(i, "chk") != objBack.getCellData(i, "chk") && obj.getCellData(i, "sScrnIndcYn") == "Y") {
	        modifyFlag = true;
	        return false;
	    } else {
	        if (obj.getCellData(i, "chk") == "1") {
	            //보험기간코드
	            if (obj.getCellData(i, "sInsurTermCd") != objBack.getCellData(i, "sInsurTermCd")) {
	                modifyFlag = true;
	                return false;
	            }
	
	            //납입기간코드
	            if (obj.getCellData(i, "sPaymTermCd") != objBack.getCellData(i, "sPaymTermCd")) {
	                modifyFlag = true;
	                return false;
	            }
	
	            //특약가입금액
	            if (obj.getCellData(i, "nTrtyInsAmt") != objBack.getCellData(i, "nTrtyInsAmt")) {
	                modifyFlag = true;
	                return false;
	            }
	        }
	    }
	    return true;
	};
	
	/*-----------------------------------
	// function 명 : lfn_Check_Ds_Trty_Save
	// 내용        : 산출을 위해 해당피보험자의 특약만 보관 
	-----------------------------------*/
	scwin.lfn_Check_Ds_Trty_Save = function() {
	    var checkFlag = false;
	    var checkPsnPrprtGroupSeqno = "";
	    for (var i = 0; i < Ds_Trty_Save.getRowCount(); i++) {
	        if (Ds_Trty_Save.getCellData(i, "sTrtyCd") == "25000001" || Ds_Trty_Save.getCellData(i, "sTrtyCd") == "25020001") {
	            if (wconv.length(Ds_Trty_Save.getCellData(i, "nTrtyInsAmt")) == 0) {
	                checkPsnPrprtGroupSeqno = Ds_Trty_Save.getCellData(i, "nPsnPrprtGroupSeqno");
	                wprom.alert(checkPsnPrprtGroupSeqno + "번째 건물업종의 화재손해(건물)특약 가입금액을 선택하세요");
	                checkFlag = true;
	                break;
	            }
	            if ((wconv.toNumber(Ds_Trty_Save.getCellData(i, "nTrtyInsAmt")) < 1000000) || (wconv.toNumber(Ds_Trty_Save.getCellData(i, "nTrtyInsAmt")) % 1000000 < 1000000 && wconv.toNumber(Ds_Trty_Save.getCellData(i, "nTrtyInsAmt")) % 1000000 > 0)) {
	                checkPsnPrprtGroupSeqno = Ds_Trty_Save.getCellData(i, "nPsnPrprtGroupSeqno");
	                wprom.alert(checkPsnPrprtGroupSeqno + "번째 건물업종의 화재손해(건물) 특약 가입금액은 백만원단위로 입력하세요");
	                checkFlag = true;
	                break;
	            }
	        }
	    }
	    return checkFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_make_Ds_Trty_Save
	// 내용        : 산출을 위해 해당피보험자의 특약만 보관
	-----------------------------------*/
	scwin.lfn_make_Ds_Trty_Save = function() {
	    //Ds_Trty_Save.removeAll();
	    wconv.clear(Ds_Trty_Save);
	    //var trtyFilter = Ds_Trty.getFilterList();
	    //Ds_Trty.clearFilter();
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	            util.appendRow(Ds_Trty_Save);
	            for (var j = 0; j < Ds_Trty.getTotalCol(); j++) {
	                Ds_Trty_Save.setCellData((Ds_Trty_Save.getRowCount() - 1), Ds_Trty.getColumnID(j), util.getCellDataF(Ds_Trty, i, Ds_Trty.getColumnID(j)));
	            }
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Rprtn_Set
	// 내용        : 배상책임 값 셋팅
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Rprtn_Set = function() {
	    //배상책임 값 셋팅 
	    //1인당,1사고당,보상한도
	    //선택된 특약이 있는지 확인
	    //var trtyFilter = Ds_Trty.getFilterList();
	    //Ds_Trty.clearFilter();
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	    	if (util.getCellDataF(Ds_Trty, i, "PremCalcFomlFlag") == "01") {
	            util.insertColumn(Ds_Trty, [["nPs1CmpsLmitAmt","nPs1CmpsLmitAmt","text"]
	            , ["n1AccdCmpsLmitAmt","n1AccdCmpsLmitAmt","text"]
	            , ["nTotCmpsLmitAmt","nTotCmpsLmitAmt","text"]
	            ]);
	            util.setCellDataF(Ds_Trty, i, "nPs1CmpsLmitAmt", 100000000);
	            util.setCellDataF(Ds_Trty, i, "nPs1CmpsLmitAmt", util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt"));
	            //util.setCellDataF(Ds_Trty, i, "nTotCmpsLmitAmt", util.getCellDataF(Ds_Trty, i, "nTotCmpsLmitAmt"));
	            util.setCompBindRefresh(Ds_Trty.getID());
				//util.setRowPosition(Ds_Trty, nCurrow);
				//MS 헤더 체크박스
        		scwin.grd_Trty_head_Check();
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_PkgErr
	// 내용        : 특약간 관계 체크(패키지체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_PkgErr = function(obj) {
	    var sPkgFlag = ""; //기본 패키지 체크 구분
	    var sBascPkgCd = ""; //기본 패키지 코드 
	    var sPkgName = ""; //패키지 명칭
	    var sSpclBuldgFlagCd = ""; //특수물건 여부 체크 
	    //패키지체크
	    
	    //var trtyFilter = Ds_Trty.getFilterList();
		//Ds_Trty.clearFilter();
		for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //기본 패키지 체크여부와 패키지 코드값을 찾는다.		
	        if (wconv.length(util.getCellDataF(Ds_Trty, i, "sPkgCd")) > 0) {
	            if (util.getCellDataF(Ds_Trty, i, "BascSlctFlagCd") == "1") {
	                if (util.getCellDataF(Ds_Trty, i, "chk") != "1") {
	                    sPkgFlag = "1";
	                    sBascPkgCd = util.getCellDataF(Ds_Trty, i, "sPkgCd");
	                    break;
	                }
	            }
	        }
	        if ((util.getCellDataF(Ds_Trty, i, "Trtygp") == "02") && util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	        	sSpclBuldgFlagCd = util.getCellDataF(Ds_Trty, i, "nPsnPrprtGroupSeqno");
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    
	    if (sPkgFlag == "1") {
	        //패키지체크(기본패키지의 명칭 확인)
	        for (var j = 0; j < Ds_Trty.getRowCount(); j++) {
	            //패키지값과 같은 그룹코드값을 찾는다.		
	            if (wconv.length(Ds_Trty.getCellData(j, "sPkgCd")) > 0 && Ds_Trty.getCellData(j, "sPkgCd") == sBascPkgCd) {
	                sPkgName = sPkgName + Ds_Trty.getCellData(j, "TrtyHnglAbbName") + ",";
	            }
	        }
	        wprom.alert("기본패키지 특약(" + wconv.substr(sPkgName, 0, wconv.length(sPkgName) - 1) + ")은 선택 필수입니다");
	        return true;
	    }
	    if (sSpclBuldgFlagCd != "") {
	        if (Ds_Prprt.getCellData(wconv.toNumber(sSpclBuldgFlagCd) - 1, "sSpclBuldgTypeCd") == "" || Ds_Prprt.getCellData(wconv.toNumber(sSpclBuldgFlagCd) - 1, "sSpclBuldgTypeCd") == null) {
	            wprom.alert(sSpclBuldgFlagCd + "번째 특수목적 건물을 입력하세요");
	            return true;
	        }
	    } else {
	        for (var j = 0; j < Ds_Prprt.getRowCount(); j++) {
	            Ds_Prprt.setCellData(j, "sSpclBuldgNo", "");
	            Ds_Prprt.setCellData(j, "sSpclBuldgTypeCd", "");
	        }
	    }
	    return false;
	};
	
	scwin.lfn_calSave_onClick_Async = function(){
		util.eventAsyncCall(this, scwin.lfn_calSave_onClick, arguments);
	};

	/*-----------------------------------
	// function 명 : lfn_calSave_onClick
	// 내용        : 영업보험료 입력후 클릭시 보험료를 계산 저장한다.
	-----------------------------------*/
	scwin.lfn_calSave_onClick = function() {
		except = "allPrem";

	    //물에서 기본특약 둘중 하나는 필수
	    var trtyFilter = Ds_Trty.getFilterList();
		Ds_Trty.clearFilter();
		wconv.filter(Ds_Trty, "TrtyFlagCd=='01' && chk == '1'"); //목적물일련번호
	    if (Ds_Trty.getRowCount() == 0) {
	        wprom.alert("기본특약은 필수입니다.");
	        return false;
	    }
	    Ds_Trty.removeColumnFilterAll();
	    for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	
	    //피보험자나 특약정보가 변경되었는지 체크한다.
	    if (scwin.lfn_ValidationCheck("level3")) {
	        //	if(Tab_Req.Tab_Step1.lfn_ValidationCheck("all")){
	        return false;
	    }
	
	    //납입주기변경체크
	    scwin.lfn_CompChangeCheck(Ds_LTIDA00, 0, "sPaymCyclCd");
	
	    //최소영업보험료 체크
	    if (scwin.lfn_checkMinPremAmt() == false) {
	        return false;
	    }
	    if (modifyFlag) {
	        wprom.alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
	        return false;
	    }
	
	    //임시 주석처리 2013.06.21
	    // 간편산출에서 계산할수 없도록 처리(청약진행중인건)
	    if (parent.sSimpleYn == "Y" && wconv.length(parent.medt_PlanNo.value) > 0) {
	        //MS 부모창에 존재 하지 않는 함수
	        //parent.lfn_ProgRankCd();
	        //MS sSimpleProg 변수가 존재 하지 않음
	        if (wconv.length(sSimpleProg) > 0) {
	            wprom.alert("청약진행중인 가입설계입니다 \n간편산출을 할수 없습니다.");
	            return;
	        }
	    }
	
	    //목적물만 있는 경우 예외사항 처리 2013.06.25
	    scwin.lfn_OnlyPrprt_Check();
	    var nGrntPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nGrntPrem")); //보장보험료
	    var nAccuPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nAccuPrem")); //적립보험료
	    //var nBussPrem = ToNumber(Ds_LTIDA00.GetColumn(0, "nBussPrem"));//영업보험료
	    var nBussPrem = wconv.toNumber(medt_nBussPrem.getValue()); //영업보험료
	    var nDcPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nDcPrem")); //할인보험료
	    var nApplPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")); //적용보험료
	    var nMinPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMinPrem")); //최소보험료
	    var nMaxPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMaxPrem")); //최대보험료
	    var nGroupDcrt = wconv.toNumber(Ds_LTIEA10.getCellData(0, "nGroupDcrt")) / 100; //단체할인율
	    //입력된 영업보험료가 최대/최소값 사이인지 체크 2013.08.01 test
	    if (!mfn_IsEmpty(wconv.toString(nBussPrem)) && nBussPrem >= nMinPrem && nBussPrem <= nMaxPrem) {} else {
	        wprom.alert("영업보험료는 최소/최대보험료 사이값으로 입력해야 합니다,");
	        medt_nBussPrem.focus();
	        return false;
	    }
	    if (!mfn_IsEmpty(wconv.toString(nBussPrem)) && nBussPrem < nGrntPrem) {
	        wprom.alert("영업보험료는 보장보험료보다 크게 입력해야 합니다,");
	        medt_nBussPrem.focus();
	        return false;
	    }
	    wconv.clear(DsWs_LTIDA00);
	
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB740Task", "updateCalcPrem", "", "");
		MethodObj.setId("updateCalcPrem");
		//계약기본사항을 담는다
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", Ds_LTIDA00.getID()+":A");// 계약기본사항정보
		//계약기본사항을 담는다
		wconv.clear(Ds_LTIDA03);
	    util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
	    MethodObj.addSingleData("LTIDA03", "LTIDA03", "Ds_LTIDA03:A");
	    //피보험자
	    //trace(Ds_Pibo_Tmp.SaveXML());		
	    //alert(Ds_Pibo.rowcount);
	    //보험료 산출시 피보험자 입력여부 확인 후 자동삭제함.
	    if ((Ds_Pibo.getRowCount() == 1 && wconv.length(Ds_Pibo.getCellData(0, "sInrpsCd")) == 0) || (Ds_Pibo.getRowCount() == 0)) {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo_Tmp.getID()); //피보험자정보
	    } else {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID()); //피보험자정보
	    }
	    MethodObj.addVectorData("vLTIDA60", "LTIDA60", Ds_Prprt.getID()); //목적물
	    
	    //trace("Ds_Trty=="+Ds_Trty.SaveXML());
	    //보장적립구분코드가 0일경우 주계약에 적립보험료 넣음
	    if (Ds_Trty.getTotalRow() > 0) {
	    	//var trtyFilter = Ds_Trty.getFilterList();
			//Ds_Trty.clearFilter();
	        wconv.clear(Ds_Trty_Tmp);
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        	if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	                util.appendRow(Ds_Trty_Tmp);
	                for (var j = 0; j < Ds_Trty.getTotalCol(); j++) {
	                	Ds_Trty_Tmp.setCellData((Ds_Trty_Tmp.getRowCount() - 1), Ds_Trty.getColumnID(j), util.getCellDataF(Ds_Trty, i, Ds_Trty.getColumnID(j)));
	                    //util.setCellData(Ds_Trty_Tmp, (Ds_Trty_Tmp.getRowCount() - 1), Ds_Trty.getColumnID(j), util.getCellDataF(Ds_Trty, i, Ds_Trty.getColumnID(j)));
	                }
	            }
	        }
	        //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    }
	
	    //trace("Ds_Trty_Tmp=="+Ds_Trty_Tmp.SaveXML());
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Tmp.getID()); //특약사항정보담음
	    MethodObj.setHashTable();
	    MethodObj.setParam("sUserId", util.getGdsValue("gUserID"));
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
	    util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else {
        	//DsWs_LTIDA00.setJSON(_tranSync.getDsJson("LTIDA00"));
        	util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("LTIDA00"));
			//계약기본정보의 보험료를 세팅(변경된 환급금/율때문에 세팅)
			util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON());
	        //Ds_LTIDA00.setRowPosition(0, false);
	        util.setCompBindRefresh(Ds_LTIDA00.getID());
	        util.setRowPosition(Ds_LTIDA00, 0);
	        
	        alert("보험료 계산이 처리되었습니다");
	    }
	    except = "";
	};
	
	/*-----------------------------------
	// function 명 : lfn_checkMinPremAmt
	// 내용        : 최소영업보험료 체크
	-----------------------------------*/
	scwin.lfn_checkMinPremAmt = function() {
	    /*
	    sPaymCyclCd
	    월납:12
	    2월:06
	    3월:04
	    6월:02
	    연납:01
	    일시납:99
		
	    nMinPremAmt1 : 월납
	    nMinPremAmt2 : 2월납
	    nMinPremAmt3 : 3월납
	    nMinPremAmt4 : 6월납
	    nMinPremAmt5 : 연납
	    nMinPremAmt6 : 일시납
	    */
	    var nPlanRow = wconv.findRow(DsWs_Plan, "sPlanCd", cmb_Plan.getValue());
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12") {
	        var nMinPremAmt1 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt1"));
	        if (nMinPremAmt1 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt1, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "06") {
	        var nMinPremAmt2 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt2"));
	        if (nMinPremAmt2 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt2, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "04") {
	        var nMinPremAmt3 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt3"));
	        if (nMinPremAmt3 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt3, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "02") {
	        var nMinPremAmt4 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt4"));
	        if (nMinPremAmt4 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt4, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "01") {
	        var nMinPremAmt5 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt5"));
	        if (nMinPremAmt5 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt5, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	        var nMinPremAmt6 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt6"));
	        if (nMinPremAmt6 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt6, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_Medical()
	// 내용        : 사전조회(비례보상제도)
	//---------------------------------------------------------------------------
	scwin.fn_Medical = function(e){
		//사전조회시에도 고객등록 여부 확인
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (wconv.length(Ds_Pibo.getCellData(i, "sAddrFlgcd")) <= 0) {
	            wprom.alert("고객등록을 먼저 해주세요");
	            fFlag = false;
	            return fFlag;
	        }
	    }
	    if (wconv.findRow(Ds_Pibo, "sel", "1") == -1) {
	        wprom.alert("피보험자를 선택 해주세요");
	        return false;
	    }
	
	    // scan 이 아직 셋팅전. 
	    if ((parent.sScanObjtYn == "Y" && scwin.lfn_checkMedical(wconv.findRow(Ds_Pibo, "sel", "1"))) || parent.sScanObjtYn != "Y") {
	        var pi_nRow = wconv.findRow(Ds_Pibo, "sel", "1");
	        if (Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty") == "N" && Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps") == "N") {
	            scwin.Trty_ValidationCheck(Ds_Trty);
	        }
	        var promise = Promise.resolve();
	        promise = promise.then(function(rtnVal) {
	        	var indata = new Object();
	        	indata.sInrpsCd = Ds_Pibo.getCellData(pi_nRow, "sInrpsCd"); //피보험자코드
				indata.sInrpsName = Ds_Pibo.getCellData(pi_nRow, "sInrpsName"); //피보험자명
				indata.sPlanNo = parent.medt_PlanNo.getValue(); //설계번호
				indata.hasPronCmpsTrty = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty");//실손가입여부(2011.05.13 김상운추가)
				indata.hasFxamtCmps = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps");//정액담보가입여부(2011.05.13 김상운추가)
				indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
				var sSvtYn = "N";
		        if (DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2") {
		            sSvtYn = "Y";
		        }
		        indata.sSvtYn = sSvtYn;
		        var pObj = {  // 수정(추가) 2017.10.20, by 진태만 
					"Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds 
					,"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds 
					,"Ds_Pibo_BackUp" : Ds_Pibo_BackUp 		//부모창 Ds_Pibo_BackUp  
				} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
				
		        //알림메세지
		        var popInfo = {"width":826,
							   "height":695,
							   "indata"    : indata,	 			// 자식으로 보낼 부모 파라미터  리스트
							   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.20, by 진태만 
							   "callback"  : scwin.popupCallback,
							   "title"     : "보험계약정보조회"
							  };
				return wprom.popupOpen("/ui/cbsc/CBSC056P.xml", popInfo);//보험계약정보조회
	        });
	        promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
				if (rtnValue != ""){
					
				}
			});
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_summary()
	// 내용        : 보험료 요약
	//---------------------------------------------------------------------------
	scwin.fn_summary = function() {
	    var promise = Promise.resolve();
	    if (wconv.length(Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	        wprom.alert("보험료 산출이 되지 않았습니다");
	        return false;
	    }
	
		promise = promise.then(function(rtnVal) {
			var indata = new Object();
			indata.sPlanNo = Ds_LTIDA00.getCellData(0, "sPlanNo"); //설계번호
			indata.sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
			
			var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					 	"Ds_LTIDA00" : Ds_LTIDA00 	// 보험 기본사항 정보 Ds Set	 
						, "Ds_Pibo" : Ds_Pibo 						// 피보험자 정보 Ds Set 
						, "Ds_LTIEA10" : Ds_LTIEA10  			// 부모창 단체 정보 Ds Set
						, "Ds_Prprt" : Ds_Prprt  			// 부모창 목적물 정보 Ds Set 
					} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
					
			var popInfo = {"width":825,	// 수정(width, height): 2017.10.31, by 진태만   --> 847, 575
						   "height":550,
						   "indata":indata,
						    "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "callback"  : scwin.popupCallback,
						   "title"     : "보험료 요약"
						  }; 
			return wprom.popupOpen("/ui/cbsc/CBSC058P.xml", popInfo);	// 보험료 요약 팝업
		});
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : openPrint()
	// 내용        : 가입설계서
	//---------------------------------------------------------------------------
	scwin.openPrint = function() {
		if (scwin.lfn_checkPrint("")) {
	        //해약환급처리
	        parent.scwin.lfn_RtnAmt();
	
	        //갱신보험료처리
	        parent.scwin.lfn_RenwlPrem();
	        
	        var sPlanNo = parent.medt_PlanNo.getValue();
	        var sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"); //개인단체구분코드
	        var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	        var sDmCode = "";
	        
	        var reportInfo = new Object();
	        if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        	reportInfo.rptName = "longterm/B870_Rep";
	        }else{
	        	reportInfo.rptName = "longterm/B870_Rep";
	        }
	        
	     	reportInfo.dataType       = "xml";
			reportInfo.taskValue      = "com.inswave.longterm.psv.ens.task.EBE200Task";
			reportInfo.actionValue    = "printB870_RepV01";
			reportInfo.sInterfaceType = "Y";
			reportInfo.gUserID        = util.getGdsValue("gUserID");
			reportInfo.setParam       = [ "sPlanNo|"+ sPlanNo
			                             ,"sPsnGroupFlgcd|"+sPsnGroupFlgcd
			                             ,"sGdCd|"+parent.edt_sGdCd.getValue()];
			reportInfo.title          = "가입설계서";
			wprom.reportOpen(reportInfo);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_hwangup()
	// 내용        : 예상환급금조회
	//---------------------------------------------------------------------------
	scwin.lfn_hwangup = function() {
	    var promise = Promise.resolve();
	    if (!CalcPremFlag) {
	        wprom.alert("보험료 산출을 해주세요");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) <= 0) {
	        wprom.alert("영업보험료가 0원 입니다.\n예상환급금 조회를 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")) <= 0) {
	        wprom.alert("적용보험료가 0원 입니다.\n예상환급금 조회를 할수 없습니다.");
	        return false;
	    }
	    promise = promise.then(function(rtnVal) {
	        var indata = new Object();
			indata.sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
   
			
			var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
					, "Ds_Pibo" : Ds_Pibo 							// 피보험자 정보 Ds Set 
					, "Ds_Trty" : Ds_Trty  							// 계약자 특약사항 Ds Set
					, "Ds_Prprt" :  Ds_Prprt						//목적물 정보 Ds Set
				} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
				
			var popInfo = {"width":870,
						   "height":700,
						   "indata":indata,
						   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트 // 수정(추가) 2017.10.31, by 진태만
						   "callback"  : scwin.popupCallback,
						   "title"     : "해지환급금 조회"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC131P.xml", popInfo);//해지환급금 조회
	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Moni
	// 내용        : 모니터링 클릭시 이벤트 처리
	//---------------------------------------------------------------------------
	scwin.lfn_Moni = function(obj) {
	    parent.scwin.lfn_RtnAmt();
	    
	    var promise = Promise.resolve();
    	promise = promise.then(function(rtnVal) {
			var indata = new Object();
			indata.sPlanNo = parent.medt_PlanNo.getValue();
			indata.sFlag = "b";
			var popInfo = {"width":737,
						   "height":471,
						   "indata":indata,
						   "callback"  : scwin.popupCallback,
						   "title"     : "모니터링"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC051P.xml", popInfo);//모니터링
		});
		promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
			if (rtnValue != ""){
				
			}
		});
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_backup_Pibo
	// 내용        : 피보험자 백업
	//---------------------------------------------------------------------------
	scwin.lfn_backup_Pibo = function() {
	    Ds_Pibo_BackUp.removeAll();
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        util.appendRow(Ds_Pibo_BackUp);
	        wconv.mi_copyRow(Ds_Pibo, i, Ds_Pibo_BackUp, i);
	        Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N");
	        Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "N");
	        Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	        Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 특약사항 그리드 상세버튼 보기
	//---------------------------------------------------------------------------
	scwin.lfn_btn_Detail_Check = function(value){
		if(value != ""){
			return "<img src=\"/cm/images/contents/ico_btn_input_sch.png\" style=\"cursor:hand;\"/>";
		}else{
			return "";
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_OnCellClick
	// 내용        : 특약사항 및 상세사항 Cell click시 처리
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_OnCellClick = function(nRow, nCell) {
	    var promise = Promise.resolve();
	    if (grd_sTrty.getColumnID(nCell) == "chk") {
	        if (Ds_Trty.getCellData(nRow, "TrtyFlagCd") == "01" && Ds_Trty.getCellData(nRow, "chk") == "0") {
	            var trtyFilter = Ds_Trty.getFilterList();
	            wconv.filter(Ds_Trty, "TrtyFlagCd=='01' && chk == '1'");
	            if(Ds_Trty.getRowCount() < 1){
	            	Ds_Trty.removeColumnFilterAll();
					for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
					
					//MS 마이플레폼이 readonly 속성에 의해서 값이 변경되는걸 막는걸 구현 하기 위해 강제로 1을 다시 set
					var arrtrty = util.getDataListEvent(Ds_Trty);
					util.removeAllDataListEvent(Ds_Trty);
					Ds_Trty.setCellData(nRow, "chk", "1");
		        	util.setDataListEvent(Ds_Trty, arrtrty);
	            	wprom.alert("기본특약은 필수입니다.");
	                //lfn_TrtyEnableCheck(nRow);
	                //Ds_Trty.FireEvent = true;
	                // 설계보관 후 특약 선택시 상태 확인 처리(이벤트처리를 막음)2013.07.12
	                var applyEnable = "N";
	                if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
	                    //if (toNumber(Ds_LTIDA00.GetColumn(0,"sPlanProgRankCd")) == 56) {
	                    applyEnable = "N"; //00 완료 90 수납대기일경우 화면 비활성화 처리함
	                } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && //완료
	                    wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M") {
	                    //최초설계
	                    applyEnable = "N";
	                } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
	                    applyEnable = "N";
	                } else if (Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	                    //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
	                    applyEnable = "N";
	                } else {
	                    applyEnable = "Y";
	                }
	                if (applyEnable == "Y") {
	                    Ds_Trty.setCellData(nRow, "chk", "1");
	                }
	                return;
	            }else{
	            	Ds_Trty.removeColumnFilterAll();
					for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	            }
	        }
	    }else if(grd_sTrty.getColumnID(nCell) == "TrtyHnglAbbName"){
	    	txtTrtyInfo.setValue("");
	    	var params = new Object();
	    	params.sTrtyCd = Ds_Trty.getCellData(nRow, "sTrtyCd");
	    	params.nTrtyInsAmt = Ds_Trty.getCellData(nRow, "nTrtyInsAmt");
	    	DS_TrtyCmpsContAmtLimitInfo.setColumnFilter({"type":"func", "colIndex":"sTrtyCd", "key":scwin.filterTrtyCmpsContAmtLimit, "condition":"and", param:params});
	    	if(DS_TrtyCmpsContAmtLimitInfo.getRowCount() > 0){
	        	txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(0, "sInfo"));
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        }else{
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        	TrtyCmpsContAmtLimitVo.set("gdCd", Ds_LTIDA00.getCellData(0, "sGdCd"));
				TrtyCmpsContAmtLimitVo.set("gnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd"));
				TrtyCmpsContAmtLimitVo.set("planCd", cmb_Plan.getValue());
				TrtyCmpsContAmtLimitVo.set("ssrtDate", parent.cal_sSsrtDate.getValue());
				TrtyCmpsContAmtLimitVo.set("trtyCd", Ds_Trty.getCellData(nRow, "sTrtyCd"));
				TrtyCmpsContAmtLimitVo.set("trtyInsAmt", Number(Ds_Trty.getCellData(nRow, "nTrtyInsAmt")).toString());
				TrtyCmpsContAmtLimitVo.set("ps1CmpsLmitAmt", Ds_Trty.getCellData(nRow, "nPs1CmpsLmitAmt"));
				TrtyCmpsContAmtLimitVo.set("accd1CmpsLmitAmt", Ds_Trty.getCellData(nRow, "n1AccdCmpsLmitAmt"));
				TrtyCmpsContAmtLimitVo.set("totCmpsLmitAmt", Ds_Trty.getCellData(nRow, "nTotCmpsLmitAmt"));
				TrtyCmpsContAmtLimitVo.set("selfChamt", Ds_Trty.getCellData(nRow, "nSelfChamt"));
				var trans = new transSub();      // transaction 보낼 객체 생성
				trans.setId("retrieveTrtyCmpsContAmtLmit");     // transaction 보낼 SubmissionID
				trans.setUrl("/contract/longterm/CBSC0011.do");  // Controller 쪽으로 보낼 주소
				trans.setDs("TrtyCmpsContAmtLimitVo");
				trans.targetDs("TrtyCmpsContAmtLimitDtalVo");
				trans.callBack("scwin.subCallBack"); // 받을 Dataset을 처리시 콜백함수
				trans.send();
	        }
	        
	    }else if (grd_sTrty.getColumnID(nCell) == "Trtygp") {
	    	if(Ds_Trty.getCellData(nRow, "Trtygp") == ""){
	    		return;
	    	}
			//Ds_Trty_save.ClearData();	
            //Ds_Trty_save.InsertRow();
            //Ds_Trty_save.CopyRow(0,"Ds_Trty",nRow);
            //40:보험료산출(단체)
            //50:청약사항입력(고지사항)/51:심사대상/52:인수요청/53:진단심사중/54:실사심사중
            //55:인수심사중/56:인수승인/57:인수불가/58:조건부승인
            //60:계약요약	
            var applyEnable = "N";
            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
                //if (toNumber(Ds_LTIDA00.GetColumn(0,"sPlanProgRankCd")) == 56) {
                applyEnable = "N"; //00 완료 90 수납대기일경우 화면 비활성화 처리함
            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && //완료
                wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M") {
                //최초설계
                applyEnable = "N";
            } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
                applyEnable = "N";
            } else if (Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
                //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
                applyEnable = "N";
            } else {
                applyEnable = "Y";
            }
            var indata = new Object();
            indata.applyEnable = applyEnable;
            if (Ds_Trty.getCellData(nRow, "Trtygp") == "01" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	indata.sGdCd = sGdCd;//Ds_Trty.getCellData(nRow, "sGdCd");
            	indata.sGnrzCd =  Ds_Trty.getCellData(nRow, "sGnrzCd");
            	indata.sPlanCd = cmb_Plan.getValue();
            	indata.sTrtyCd = Ds_Trty.getCellData(nRow, "sTrtyCd");
            	indata.TrtyHnglAbbName = Ds_Trty.getCellData(nRow, "TrtyHnglAbbName");
            	indata.sInsurTermCd = Ds_Trty.getCellData(nRow, "sInsurTermCd"); 
            	indata.sPaymTermCd = Ds_Trty.getCellData(nRow, "sPaymTermCd");
            	indata.sSsrtDate = (wconv.length(Ds_Trty.getCellData(nRow, "sInsurStrtdate"))>0?Ds_Trty.getCellData(nRow, "sInsurStrtdate"):cal_sInsurStrtdate.getValue());
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":480,
						   "height":260,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세조건 조회"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC116P.xml", popInfo);
            	});
            	promise = promise.then(function(rv) {
				    var nPoleTypeCdIdx = wconv.findRow(DsWs_PoleTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sPoleTypeCd"));
                    var nExtrnWlTypeCdIdx = wconv.findRow(DsWs_ExtrnWlTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sExtrnWlTypeCd"));
                    var nRoofTypeCdIdx = wconv.findRow(DsWs_RoofTypeCd, "sCd", Ds_Prprt.getCellData(nRow, "sRoofTypeCd"));
                    var nBuldgStrtGradCdIdx = wconv.findRow(DsWs_BuldgStrtGradCd, "sCd", Ds_Prprt.getCellData(nRow, "sBuldgStrtGradCd"));
                    if (nPoleTypeCdIdx < 0 || nExtrnWlTypeCdIdx < 0 || nRoofTypeCdIdx < 0){}
                    else{
                    	Edt_sBuldgStrt.setValue(DsWs_CmCd.getCellData(nPoleTypeCdIdx, "sHnglCdName") + " / " + DsWs_CmCd.getCellData(nExtrnWlTypeCdIdx, "sHnglCdName") + " / " + DsWs_CmCd.getCellData(nRoofTypeCdIdx, "sHnglCdName")); //신체손해배상책임,풍수재손해
                    }
				});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "02" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":253,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC117P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "03" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":253,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC118P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "04" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":253,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC119P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "05" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":253,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC120P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "06" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":786,
						   "height":519,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세조건 조회"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC121P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "07" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":250,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC122P.xml", popInfo);
            	});
            }else if (Ds_Trty.getCellData(nRow, "Trtygp") == "08" && Ds_Trty.getCellData(nRow, "chk") == "1") {
            	promise = promise.then(function(rtnVal) {
            		var pObj = { 
					 	"Ds_Prprt" : Ds_Prprt	   
					}
            		var popInfo = {"width":473,
						   "height":253,
						   "indata":indata,
						   "parentObject"    : pObj,
						   "callback"  : scwin.popupCallback,
						   "title"     : "특약상세입력"
						  };
					return wprom.popupOpen("/ui/cbsc/CBSC123P.xml", popInfo);
            	});
            }
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도 DataList Filter
	//---------------------------------------------------------------------------
	scwin.filterTrtyCmpsContAmtLimit = function(cellData, param, rowIndex){
		if(Number(DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "nTrtyInsAmt")) == Number(param.nTrtyInsAmt)
		&& DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "sTrtyCd") == param.sTrtyCd){
			return true;
		}else{
			return false;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도내용
	//---------------------------------------------------------------------------
	scwin.subCallBack = function(e) {
		//alert(JSON.stringify(e));
		switch (e.subID) {
			case "retrieveTrtyCmpsContAmtLmit":
				if(e.flag == "s"){
					//TrtyCmpsContAmtLimitDtalVo.setJSON(e.result.listTrtyCmpsContAmtLimitDtalVo);
					util.copyM(TrtyCmpsContAmtLimitDtalVo, e.result.listTrtyCmpsContAmtLimitDtalVo);
					var contMsg = "";
					var cvrgeCd = "";
	     			for (var i=0; i<TrtyCmpsContAmtLimitDtalVo.getRowCount();i++) {
		      			if(cvrgeCd != wconv.trim(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName"))){
		      				cvrgeCd = wconv.trim(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName"));
		      				
		      				contMsg += "[ " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName") + " ]<br/>";
		      				contMsg += TrtyCmpsContAmtLimitDtalVo.getCellData(i, "pymStndSpec") + "<br/>";
			      			contMsg += "# 보상한도 " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts") + (wconv.length(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts")) == 0?"":"<br/>");
		      			}else{
		      				contMsg += TrtyCmpsContAmtLimitDtalVo.getCellData(i, "pymStndSpec") + "<br/>";
		      				contMsg += (wconv.length(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts"))==0?"":"# 보상한도 " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts") +"<br/>");
		      			}
		      			contMsg += "<br/>";
	     			}
	     			//alert("조회완료\n\n"+contMsg);
	     			//txtTrtyInfo.setValue(contMsg);
	     			var row = grd_sTrty.getRealRowIndex(grd_sTrty.getFocusedRowIndex());
	     			var idx = DS_TrtyCmpsContAmtLimitInfo.getRowCount();
	     			DS_TrtyCmpsContAmtLimitInfo.insertRow(idx);
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sTrtyCd", TrtyCmpsContAmtLimitVo.get("trtyCd"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "nTrtyInsAmt", TrtyCmpsContAmtLimitVo.get("trtyInsAmt"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sInfo", contMsg);
	     			txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(idx, "sInfo"));
				}else{
					wprom.alert(e.msg);
				}
			break;
		}
	};
	
	scwin.lfn_PlanChanged_Async = function(info){
		util.eventAsyncCall(this, scwin.lfn_PlanChanged, info);
	};
	
	/*-----------------------------------
	// function 명 : lfn_PlanChanged
	// 내용        : 플랜변경조회
	-----------------------------------*/
	scwin.lfn_PlanChanged = function(info) {
		//info.oldValue 
		//info.newValue 
		//info.oldSelectedIndex 
		//info.newSelectedIndex 
	    //N1305-00225:장기 재물보험 청약시스템 개발 요청
	    //인, 물 가입 가능 상품 구분 처리 
	    //대면/비대면체크  0 :  대면 , 1 : 비대면 (비대면->고객동의)
	    //대면 주민번호 미입력시 30세 남성으로 하드코딩
	    //test (비대면으로 강제 세팅)		
	    //if(sScanObjtYn = 'N') {
	    //목적물에서 plan 변경 사항 체크 및 입력 반영 추가 20130605 yyyyyy
	    
	    //Ds_Pibo.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);

	    scmb_plan = true; //plan변경 flag.
	    for (var i = 0; i < Ds_Pibo.getTotalRow(); i++) {
	        Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText());
	    }
	
	    //1305.... 목적물에 플랜코드 보관
	    for (var j = 0; j < Ds_Prprt.getTotalRow(); j++) {
	        Ds_Prprt.setCellData(j, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Prprt.setCellData(j, "sApplPlanName", cmb_Plan.getText());
	    }
	
	    //trace("nNewIndex==="+nNewIndex);
	    //nMinPrem = DsWs_Plan.GetColumn(nNewIndex,"");
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(DsWs_AsmtInsAmt);
	    wconv.clear(DsWs_InsurTermPaymTerm);
	    wconv.clear(Dsws_InsAmt);
	    wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화
	    wconv.clear(DsWs_TrtyTerm);
	    
	    //DsWs_AsmtInsAmt
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    //목적물기준 조회시 주민번호 30세 하드코딩 추가 20130605
	    //N1305-00225:장기 재물보험 청약시스템 개발 요청
	    //인, 물 가입 가능 상품 구분 처리 
	    //대면/비대면체크  0 :  대면 , 1 : 비대면 (비대면->고객동의)
	    //대면 주민번호 미입력시 30세 남성으로 하드코딩
	    if (gds.gUseCustType == "1") {
		    MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd")); //주민번호 
		    MethodObj.setParam("sDrveFlagCd", Ds_Pibo.getCellData(0, "sDrveFlagCd")); //운전용도
	    } else {
	    	if( Ds_Pibo.getCellData(0, "sInrpsCd") == "" ) {
	    		gfn_getServerTime();//서버시간
				var sBirthDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	            if (wconv.substr(sBirthDate, 4, 4) == "0229") {
	                sBirthDate = wconv.substr(sBirthDate, 0, 4) + "0228";
	            }
	            MethodObj.setParam("sResno", wconv.substr(wconv.addMonth(sBirthDate, -360), 2, 6) + "1000000"); //주민번호
		    	MethodObj.setParam("sDrveFlagCd", "1"); //운전용도
			}else{
				MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd")); //주민번호
		    	MethodObj.setParam("sDrveFlagCd", "1"); //운전용도 
			}
	    }
	    MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	    MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	    MethodObj.setUrl("/contract/CBSC094MController.do");
	    //보험기간
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	    MethodObj.addXPath("//WARNING");
        MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
	    
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        } else {
        	util.copyM(DsWs_InsurTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"));
        	util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
        	util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
        	util.copyM(DsWs_AsmtInsAmt, _tranSync.getDsJson("//hashtable/data[@hashkey='AsmtInsAmt']/vector/data/multi"));
        	util.copyM(DsWs_InsurTermPaymTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"));
        	util.copyM(Dsws_InsAmt, _tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"));
        	util.copyM(DsWs_TrtyTerm, _tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
        	
        	//trace("보험기간=="+DsWs_InsurTerm.SaveXML());	
	        //trace("특약=="+DsWs_Trty.SaveXML());	
	        //보기납기 첫번째 세팅
	        cmb_InsurTermPaymTerm.setSelectedIndex(0);
	        //lfn_InsurTermPaymTermChanged(obj,cmb_InsurTermPaymTerm.Value,cmb_InsurTermPaymTerm.Value,0,0);
	        //Ds_Trty.FireEvent = false; 
		    //var arrtrty = util.getDataListEvent(Ds_Trty);
			//util.removeAllDataListEvent(Ds_Trty);
		    
		    //특약세팅
	        util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
	        //trace("Ds_Trty:" + Ds_Trty.SaveXML()); 
	        scwin.lfn_TrtyDataSetSet();
		    //Ds_Trty_View.Copy("Ds_Trty");					
	        //특약중 화면출력특약만 화면에 보여줌
	        Ds_Trty.removeColumnFilterAll();
   			Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	        
	        //보험기간,가입금액 초기값 세팅555555555555555555
	        scwin.lfn_InsurTermInit(cmb_Plan);
	        //Ds_Trty.FireEvent = true;
	        //util.setDataListEvent(Ds_Trty, arrtrty);
		    
		    //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	        if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	            medt_nBussPrem.setDisabled(true);
	        } else {
	            medt_nBussPrem.setDisabled(false);
	        }
	
	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
        }
	
	    //trace("Ds_Trty:"+Ds_Trty.SaveXml());
	    //피보험자가 여러명일때 나머지 피보험자의 특약도 조회
	    for (var i = 1; i < Ds_Pibo.getTotalRow(); i++) {
	        scwin.lfn_searchPiboTrty(cmb_Plan, i);
	    }
	
	    //목적물가 여러명일때 나머지 목적물의 특약도 조회
	    for (var i = 1; i < Ds_Prprt.getTotalRow(); i++) {
	        scwin.lfn_searchPrprtTrty(cmb_Plan, i);
	    }
	    if (wconv.findRow(Ds_Pibo, "sel", "1") > -1) {
	    	Ds_Trty.removeColumnFilterAll();
   			Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '1' &&  nPsnPrprtGroupSeqno=='1'");
	    } else if (wconv.findRow(Ds_Prprt, "sel1", "1") > -1) {
	    	Ds_Trty.removeColumnFilterAll();
   			Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 &&  sPsnPrprtGroupFlgcd == '2' &&  nPsnPrprtGroupSeqno=='1'");
	    }
	
	    //111:
	    //붕괴침강 가입금액 셋팅 
	    //scwin.lfn_Trty_OnColumnChanged(obj, 0, "nTrtyInsAmt", "", "", "");
	    var info = new Object();
        info.oldValue = "";
        info.newValue = "";
        info.rowIndex = "0";
        info.colID = "nTrtyInsAmt";
        scwin.lfn_Trty_OnColumnChanged(info);
	    //Ds_Pibo.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	
		if(Ds_Prprt.getRowCount() > 0){
			util.setCompBindRefresh(Ds_Prprt.getID());
		}
		
		if(Ds_Pibo.getRowCount() > 0){
			util.setCompBindRefresh(Ds_Pibo.getID());
			
			if(parent.sSimpleYn == "N"){
		    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
		    }
		}
	    // 최초 피해물 그리드 선택시 물특약정보만 Filter
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    /*for(var i=0; i < Ds_Prprt.GetRowCount(); i++){
	    	if(i == nRow){
	    		Grd_Prprt_OnFocus(null);
	    	}
	    }
	    for(var i=0; i < Ds_Pibo.GetRowCount(); i++){
	    	if(i == nRow){
	    		Grd_Pibo_OnFocus(null);
	    	}
	    }
	    */
	    //kill focus.
	    btn_CalcPrem.focus();
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_trtyOnHeadClick
	// 내용        : 특약전체 체크/해제
	//---------------------------------------------------------------------------
	var trtyChk = "0";
	scwin.lfn_trtyOnHeadClick = function(headerId) {
	    if(headerId == "gh101"){
	    	if(grd_sTrty.getColumnDisabled("chk")){
				return;
			}
			var chk = trtyChk;
			if (Ds_Trty.getRowCount() > 0) {
				for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
					//화면에 표시되지않은 특약은 체크처리에서 뺀다.
					if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "Y"){
						Ds_Trty.setCellData(i, "chk", chk);
					}
	            }
			}else{
				scwin.grd_Trty_head_Check();
			}
			trtyChk = (trtyChk=="1"?"0":"1");
		}
	};
	
	scwin.grd_Trty_head_Check = function(){
		if(trtyChk == "1" && (Ds_Trty.getRowCount() == 0 || Ds_Trty.getMatchedData("chk", "0", true).length < 1)){
		//console.log("====>scwin.grd_Trty_head_Check  ON  *********trtyChk*****"+trtyChk);
		    $("#grd_sTrty_gh101").html("<img src='/cm/images/chkon.jpg'/>");
	    }else{
//	    console.log("====>scwin.grd_Trty_head_Check  OFF *********trtyChk*****"+trtyChk);
	    	$("#grd_sTrty_gh101").html("<img src='/cm/images/chkoff.jpg'/>");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : MY Plan 조회
	//---------------------------------------------------------------------------
	scwin.btn_MyPlanView_onclick = function() {
		var promise = Promise.resolve();
		promise = promise.then(function(value) {
			var indata = new Object();
			indata.sJupiCode = Ds_Pibo.getCellData(0, "sInrpsCd");
			indata.sGdCd = parent.edt_sGdCd.getValue();
			indata.sGdName = parent.edt_sGdCdNm.getValue();
			indata.sGnrzCd = parent.edt_sGnrzCd.getValue();
			indata.sPsnPrprtGroupFlgcd = "2";
			indata.sDoer = parent.scwin.lfn_GetDoerUser();
			indata.sDoerTeamCd = parent.edt_sDoerCentrCd.getValue();
			var popInfo = {"width":756,
    	                   "height":537,
    	                   "indata":indata,
//    	                   "callback"  : scwin.popupCallback,
						   "title"     : "마이플랜조회"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC049P.xml", popInfo);
		});
		promise = promise.then(function(result) {
			return util.winTopShowModalPromise(result);
		});
	    promise = promise.then(function(result) {
	    	//alert(JSON.stringify(result));
	    	if (result != null && result != undefined) {
	    		scwin.call_Plan_Search(result);
			}
			util.winTopHideModal();
	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 플렌조회
	//---------------------------------------------------------------------------
	scwin.call_Plan_Search = function(result){
		var data = result.split("^");
   		if(data.length == 2){
			if (wconv.length(data[0]) == 0) {
		        alert("등록된 플렌의 청약번호에 이상이 있습니다.");
		        return false;
		    }else{
		    	parent.scwin.lfn_Plan_Search(data[0]);
		    }
		}
	}
	
	scwin.btn_MyPlanReg_onclick_Async = function(){
		util.eventAsyncCall(this, scwin.btn_MyPlanReg_onclick, arguments);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : MY Plan 등록
	//---------------------------------------------------------------------------
	scwin.btn_MyPlanReg_onclick = function() {
		//가입가능상품 check
		var planNo = "";
		try{
			if (wconv.length(wconv.trim(parent.edt_sGdCd.getValue())) < 1) { 
				alert("상품을 선택하세요.");
				return false;
			}
		    if (scwin.lfn_GoodsSearch() == false) {
		        alert("플랜등록이 불가능한 청약번호입니다.");
		        return false;
		    }
		    //가입가능상품 check
		    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
		        if (Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") {
		            alert("영업용운전자는 가입금지입니다");
		            return false;
		        }
		    }
		    var sStdDate = "20110805"; //질의서 B230_Div3_Pop 기준일
		    if (util.getGdsValue("gProdYN") == "N") {
		        sStdDate = "20110804";
		    }
		    if (Ds_LTIDA00.getCellData(0, "sSsrtDate") < sStdDate) {
		        alert("플랜등록이 불가능한 청약번호입니다.");
		        return false;
		    }
		    if (!CalcPremFlag) {
		        alert("보험료 산출을 해주세요");
		        return false;
		    }
			if (parent.sSimpleYn == "Y") {
	    		Ds_Pibo.setCellData(0, "sInrpsSexFlag", scwin.lfn_getSex(Ds_Pibo.getCellData(0, "sInrpsCd")));	 //피보험자성별구분
	    	}
		    planNo = scwin.lfn_Plan_Calc();
	    }finally{
	    }
	    
		if (wconv.length(planNo) <= 0) {
	        alert("플랜등록을 생성할수 없습니다.");
	        return;
	    }
		var promise = Promise.resolve();
		promise = promise.then(function(value) {
			var indata = new Object();
			indata.sPlanNo = planNo;
			var popInfo = {"width":570,
               "height":205,
               "indata":indata,
               //"callback"  : scwin.popupCallback,
				"title"     : "마이플랜관리"
			};
			return wprom.popupOpen("/ui/cbsc/CBSC135P.xml", popInfo);
		});
//	    promise = promise.then(function(result) {
	    	//alert(JSON.stringify(result));
//	    	var rtnValue = wprom.getReturnData();
//	    	if (rtnValue != "") {
				//id_rtn.setValue( rtnValue );
//			}
//	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 플렌 계산
	//---------------------------------------------------------------------------
	scwin.lfn_Plan_Calc = function(){
		var result = "";
		
		//목적물만 있는 경우 예외사항 처리
		scwin.lfn_OnlyPrprt_Check();
		
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB730Task", "setBasicObject", "", "");
	    MethodObj.setId("setBasicObject");
	    
	    //체크된 특약만 보관 2013.06.19 
	    scwin.lfn_make_Ds_Trty_Save();
	    
	    //계약기본사항을 담는다
	    //계약기본사항을 담는다
		util.dataListCloneCopy(Ds_LTIDA00, "tm_LTIDA00", "0");
		$w.data["tm_LTIDA00"].setCellData(0, "sPlanNo", "");
		//세금우대 미가입
	    $w.data["tm_LTIDA00"].setCellData(0, "sTaxPrfrYn", "N");
	    //청약서발행일자
	    $w.data["tm_LTIDA00"].setCellData(0, "sSrdoIssuDate", "");
		//복사시 심의결과코드 지움(2011.05.18 김상운)
	    $w.data["tm_LTIDA00"].setCellData(0, "sConuResltCd", "");
	    //복사시 비교계약안내 확인여부 제거
	    $w.data["tm_LTIDA00"].setCellData(0, "sCmprCrNotcSsrt", "");
	    $w.data["tm_LTIDA00"].setCellData(0, "sCmprCrNotcCncl", "");
	    //MS 플랜등록시 추가 설정값
	    $w.data["tm_LTIDA00"].setCellData(0, "sPlanProgRankCd", "99");
	    
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", "tm_LTIDA00");// 계약기본사항정보
	    if(Ds_LTIEA10.getRowCount() < 1){Ds_LTIEA10.insertRow();}
	    MethodObj.addSingleData("LTIEA10", "LTIEA10", "Ds_LTIEA10");
	    wconv.clear(Ds_LTIDA03);
	    util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
	    MethodObj.addSingleData("LTIDA03", "LTIDA03", "Ds_LTIDA03:A");
	    if (Ds_Pibo.getRowCount() < 1) {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo_Tmp.getID());//피보험자사항
	    } else {
	        MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID());//피보험자사항
	    }
	    //계약기본사항을 담는다(목적물사항) 입력 20130531 lbc
	    util.insertColumn(Ds_Prprt, [["sInrpsRelnFlagCd","sInrpsRelnFlagCd","text"]]);
	    Ds_Prprt.setCellData(0, "sInrpsRelnFlagCd", "00");
	    util.setCompBindRefresh(Ds_Prprt.getID());
	    
	    MethodObj.addVectorData("vLTIDA60", "LTIDA60", Ds_Prprt.getID());//목적사항
	    //MS Dataset 중복 오류로 인하여 임시 tDs_Prprt 만들어서 사용
	    util.dataListCloneCopy(Ds_Prprt, "tDs_Prprt", "0");
	    MethodObj.addVectorData("vLTIDA61", "LTIDA61", "tDs_Prprt");//목적물소재지이력
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID());//특약사항정보담음
	    
	    //복사건일때 과거번호, 과거청약일을 가지고감(질의서, 전산심사테이블 복사를위해)
	    util.jSonDsCreate([{"oldPlanNo":""}], "DSoldPlanNo");
		$w.data["DSoldPlanNo"].setCellData(0, "oldPlanNo", "");
	    MethodObj.addSingleData("oldPlanNo", "oldPlanNo", "DSoldPlanNo:A", "type02");
	    
	    //과거청약일
	    util.jSonDsCreate([{"oldSsrtDate":""}], "DSoldSsrtDate");
	    $w.data["DSoldSsrtDate"].setCellData(0, "oldSsrtDate", "");
	    MethodObj.addSingleData("oldSsrtDate", "oldSsrtDate", "DSoldSsrtDate:A", "type02");
	    
	    //플랜에서 나온 영업보험료
	    util.jSonDsCreate([{"nBussPrem":""}], "DSnBussPrem");
	    $w.data["DSnBussPrem"].setCellData(0, "nBussPrem", DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "nBussPrem"));
	    MethodObj.addSingleData("nBussPrem", "nBussPrem", "DSnBussPrem:A", "type02");
	    
	    MethodObj.setHashTable();
	    MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");//기본사항
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
        	result = _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00")[0].sPlanNo;
        }
        
        return result;
	};
	
	/*-----------------------------------
	// function 명 : 신규
	// 내용        : scwin.ExprDis
	-----------------------------------*/
	//chk, sInsurTermCd, sPaymTermCd, nTrtyInsAmt, 
	scwin.ExprDis = function(ExprChk, ExprTrtyFlagCd, ExprsScrnIndcYn, ExprsTrtyCd, rowIndex){
		//scwin.ExprDis(display('chk'), display('TrtyFlagCd'), display('sScrnIndcYn'), display('sTrtyCd'), rowIndex());
		var rChk = grd_sTrty.getCellReadOnly(rowIndex, "chk");
	
		if (scwin.lfn_TrtyEnableCheck(rowIndex) == "1") {
			if (rChk == false) {
				//grd_sTrty.setCellBackgroundColor( rowIndex, 0, gds.user5);
				grd_sTrty.setCellReadOnly(rowIndex, 0, true);
			}
		} else {
			if (rChk == true || util.isNull(rChk)) {
				//grd_sTrty.setCellBackgroundColor(rowIndex, 0, "");
				grd_sTrty.setCellReadOnly(rowIndex, 0, false);
			}
		}
		
		switch (scwin.lfn_changeCompType(ExprsTrtyCd)) {
	        case "combo":
	        	if(grd_sTrty.getCellReadOnly(rowIndex, "nTrtyInsAmt") || grd_sTrty.getCellReadOnly(rowIndex, "nTrtyInsAmt") == ""){
	            	grd_sTrty.setCellReadOnly(rowIndex, "nTrtyInsAmt", false);
	            }
	            break;
	        case "masknumber":
	            break;
	        case "none":
	        	if(!grd_sTrty.getCellReadOnly(rowIndex, "nTrtyInsAmt") || grd_sTrty.getCellReadOnly(rowIndex, "nTrtyInsAmt") == ""){
	            	grd_sTrty.setCellReadOnly(rowIndex, "nTrtyInsAmt", true);
	            }
	            break;
	        default:
	            break;
	    }
		return "";
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_changeCompType
	// 내용        : 가입금액 입력 타입 
	//---------------------------------------------------------------------------
	scwin.lfn_changeCompType = function(sTrtyCd) {
		var rtnCompType = "combo";
	    
	    Ds_InsAmt.setCondition("filter", "sTrtyCd == '" + sTrtyCd + "'");
	    if (Ds_InsAmt.getRowCount() < 1) {
	        rtnCompType = "masknumber";
	    }
	
		//붕괴침강의 경우 콤보 readonly 변경.
	    //if(sTrtyCd == "25000101"){
	    if (wconv.findRowF(DsWs_AsmtInsAmt, "sTrtyCd", sTrtyCd) > -1) {
	        rtnCompType = "none";
	    }
	    return rtnCompType;
	};
	
	scwin.lfn_changeExpandShow = function(sTrtyCd){
		var rtnExpandShow = false;
		
		Ds_InsAmt.setCondition("filter", "sTrtyCd == '" + sTrtyCd + "'");
	    if (Ds_InsAmt.getRowCount() > 1) {
	        rtnExpandShow = true;
	    }
	    
		return rtnExpandShow;
	}
	
	/*-----------------------------------
	// function 명 : lfn_TrtyEnableCheck
	// 내용        : 기본특약 비활성화 처리
	-----------------------------------*/
	scwin.lfn_TrtyEnableCheck = function(nRow) {
		if(Ds_Trty.getCellData(nRow, "TrtyFlagCd") == "01" || Ds_Trty.getCellData(nRow, "sScrnIndcYn") == "N"){
			$w.data.remove("ftDs_Prprt");
			util.jSonDsCreate(Ds_Trty.getAllJSON(), "ftDs_Prprt");
			wconv.filter($w.data["ftDs_Prprt"], "TrtyFlagCd == '01' && chk == '1'");
			var cnt = $w.data["ftDs_Prprt"].getRowCount();
			$w.data.remove("ftDs_Prprt");
			if(cnt == 0 ){
			var arrtrty = util.getDataListEvent(Ds_Trty);
			util.removeAllDataListEvent(Ds_Trty);
				Ds_Trty.setCellData(nRow, "chk", "1");
			util.setDataListEvent(Ds_Trty, arrtrty);	
				return 1;
			}else{
				return 2;
			}
		}	 
		return 2;
    }
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Btn_goChung_OnClick
	// 내용        : 청약화면으로 이동
	//---------------------------------------------------------------------------
	scwin.lfn_Btn_goChung_OnClick = function(e) {
	    parent.scwin.lfn_goChung();
	};
	
	//화면 로딩처리 키보드 crtl + v Event 처리 
	var crtlDown=false, crtlKey=17, cmdKey=91;
	$(document).ready(function(){
		$("#grd_sTrty_gh101").html("<img src='/cm/images/chkoff.jpg'/>");
		
		util.setLinkedCondition(lk_InsAmt,"sTrtyCd==ref('data:Ds_Trty.sTrtyCd')");
		util.setLinkedCondition(lk_TrtyTerm,"sTrtyCd==ref('data:Ds_Trty.sTrtyCd')");
	}).keydown(function(e){
		if(e.keyCode == crtlKey || e.keyCode == cmdKey){crtlDown=true;}
	}).keyup(function(e){
		if(e.keyCode == crtlKey || e.keyCode == cmdKey){crtlDown=false;}
	});
	
	var showPop = true;
	scwin.btn_View_onclick = function() {
		if (showPop) {
			top_main.setStyle("display", "none");
			right_main.setStyle("display", "none");
			grd_sTrty.setStyle("height", "500px");
			body_main.removeClass("layout_7_3");
			showPop = false;
		} else {
			top_main.setStyle("display", "");
			right_main.setStyle("display", "");
			grd_sTrty.setStyle("height", "228px");
			body_main.addClass("layout_7_3");
			showPop = true;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 확인 0인경우 Null 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onfocus = function(e) {
		if(medt_nBussPrem.getValue() == "0"){
			medt_nBussPrem.setValue("");
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 아웃 확인 Null일경우 0 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onblur = function(e) {
		if(wconv.length(wconv.trim(medt_nBussPrem.getValue())) == 0){
			medt_nBussPrem.setValue("0");
		}
	};
	]]></script>
	</head>
	<body>
	   	<!-- group:s -->
	   	<xf:group id="top_main" style="">
	   	<xf:group id="" style="" class="section">
	    	<xf:group id="" style="" class="w2tb tb" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="width:230.00px;" tagname="col"></xf:group>
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="width:130.00px;" tagname="col"></xf:group>
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">보험기간</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:group class="" style="">
							<xf:input id="cal_sInsurStrtdate" style="width:80px" readOnly="true" ref="data:Ds_LTIDA00.sInsurStrtdate" displayFormat="####-##-##"/>
							<w2:textbox class="txt_bw" id="" label="~" tagname="span"></w2:textbox>
							<xf:input id="cal_sInsurEndDate" style="width:80px" readOnly="true" ref="data:Ds_LTIDA00.sInsurEndDate" displayFormat="####-##-##"/>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">납입주기</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<!-- group:s -->
						<!-- group:e -->
						<xf:select1 id="cmb_PaymCycl" allOption="" appearance="minimal" chooseOption="" direction="auto" displayMode="label" style="width:95px;"  renderType="native" ref="data:Ds_LTIDA00.sPaymCyclCd" selectedData="false" ev:onblur="scwin.lfn_OnKillFocus_OnChanged">
							<xf:choices>
			    				<xf:itemset nodeset="data:DsWs_PaymCycl">
			    					<xf:label ref="sPaymCyclName" />
			    					<xf:value ref="sPaymCyclCd" />
			    				</xf:itemset>
			    			</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group style="" class="w2tb_th" tagname="th">보기/납기</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="" displayMode="label" ev:onviewchange="scwin.lfn_InsurTermPaymTermChanged" ev:onblur="scwin.lfn_OnKillFocus_OnChanged" id="cmb_InsurTermPaymTerm"
							ref="" style="width:140px;" submenuSize="" renderType="native">
							<xf:choices>
								<xf:itemset nodeset="data:DsWs_InsurTermPaymTerm">
									<xf:label ref="sInsurPaymName" />
									<xf:value ref="sInsurPaymCd" />
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->
		
		<xf:group id="" style="position:relative; top:-5px;" class="layout_5_5">
			<xf:group id="" style="" class="leftarea">
				<!-- group:s -->
				<xf:group id="" style="" class="section">
					<xf:group id="" style="" class="defaultbox">
						<w2:textbox id="" style="" class="df_tt fl" label="목적물"></w2:textbox>
						<xf:group class="fr" id="" style="">
							<w2:anchor id="btnAddPrprt" ev:onclick="scwin.lfn_addRow1" class="btn_add" outerDiv="false" style="visibility:hidden;">
								<xf:label><![CDATA[보상한도]]></xf:label>
							</w2:anchor>
							<w2:anchor id="btnDelPrprt" ev:onclick="scwin.lfn_deleteRow1" class="btn_del ml3" outerDiv="false" style="visibility:hidden;">
								<xf:label><![CDATA[보험료계산]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group id="" style="" class="ofay_wrap">
						<w2:gridView id="Grd_Prprt" dataList="Ds_Prprt" noResultMessageVisible="false"
						autoFit="allColumn" scrollByColumn="false" useShiftKey="true"
						editModeEvent="onClick" ignoreCellClick="false"
						rowStatusHeaderValue="상태" rowNumWidth="10" rowStatusWidth="20"
						class="cm_grid" style="height:100px"
						hideHeader="true"
						ev:oncellclick="scwin.Grd_PrprtLIst_OnCellClick"
						ev:onbodymouseover="scwin.Grd_Prprt_OnMouseOver" focusMode="none">
							<w2:header id="header1" style="">
								<w2:row id="row2" style="">
									<w2:column id="gh101" blockSelect="false" style="" width="26" inputType="text" value="1" displayMode="label"></w2:column>
									<w2:column id="gh102" blockSelect="false" style="" width="80" inputType="text" value="2" displayMode="label"></w2:column>
									<w2:column id="gh103" blockSelect="false" style="" width="60" inputType="text" value="3" displayMode="label"></w2:column>
									<w2:column id="gh104" blockSelect="false" style="" width="300" inputType="text" value="4" displayMode="label"></w2:column>
									<w2:column id="gh105" blockSelect="false" style="" width="30" inputType="text" value="5" displayMode="label"></w2:column>
								</w2:row>
							</w2:header>
							<w2:gBody id="gBody4" style="">
								<w2:row id="row5" style="">
									<w2:column id="sel1" blockSelect="false" width="26" inputType="checkbox" displayMode="label" valueType="other" trueValue="1" falseValue="0" rowSpan="2"></w2:column>
									<w2:column id="gb101" blockSelect="false" width="70" inputType="text" readOnly="true" disabled="true" value="가입업종"></w2:column>
									<w2:column id="sInsBntpObjtFlagCd" blockSelect="false" width="60" inputType="select" disabled="true" chooseOption="false" selectedData="false">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_BntpLargClsfCd">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="sInsBntpCd" blockSelect="false" width="300" inputType="select" disabled="true" textAlign="left" chooseOption="false" selectedData="false">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_BntpCd">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="btn_InsBntp_Search" blockSelect="false" style="height:20px" inputType="image" width="30" displayMode="label" imageSrc="/cm/images/contents/ico_btn_input_sch.png"></w2:column>
								</w2:row>
								<w2:row id="row6" style="">
									<w2:column id="gh102" blockSelect="false" width="70" inputType="text" readOnly="true" disabled="true" value="요율업종"></w2:column>
									<w2:column id="sRatoBntpObjtFlagCd" blockSelect="false" width="60" inputType="select" disabled="true" chooseOption="false" selectedData="false">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_BntpLargClsfCd">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="sRatoBntpCd" blockSelect="false" width="300" inputType="select" disabled="true" textAlign="left" chooseOption="false" defaultValue="">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_BntpCd">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="btn_RatoBntp_Search" blockSelect="false" style="height:20px" inputType="image" width="30" displayMode="label" imageSrc="/cm/images/contents/ico_btn_input_sch.png"></w2:column>
								</w2:row>
							</w2:gBody>
						</w2:gridView>
					</xf:group>
				</xf:group>
				<!-- group:e -->
			</xf:group>
			
			<xf:group id="" style="position:relative; top:25px;" class="rightarea">
				<!-- group:s -->
				<xf:group id="" style="" class="section">
					<xf:group class="w2tb tb mt25" id="" style="" tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup">
							<xf:group style="width:90.00px;" tagname="col"></xf:group>
							<xf:group style="width:160.00px;" tagname="col"></xf:group>
							<xf:group style="width:90.00px;" tagname="col"></xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" style="" tagname="th">건물구조</xf:group>
							<xf:group class="w2tb_td" style="" tagname="td">
								<xf:group class="input_btn icon sch" style="">
									<xf:input id="Edt_sBuldgStrt" ref="" style="" readOnly="true" toolTip="javascript:Edt_sBuldgStrt.getValue()"></xf:input>
									<w2:anchor class="" ev:onclick="scwin.lfn_sBuldgStrt_onClick" ev:onkeydown="scwin.lfn_sBuldgStrt_OnKeyDown" id="btn_Search_Search" outerDiv="" style="">
										<xf:label><![CDATA[저장]]></xf:label>
										</w2:anchor>
									</xf:group>
								</xf:group>
								<xf:group class="w2tb_th" tagname="th">건물급수</xf:group>
								<xf:group class="w2tb_td" tagname="td">
									<xf:select1 appearance="minimal" class="sty_ipt_form" disabled="true" emptyItem="true" id="cmb_BuldgStrtGradCd" ref="data:Ds_Prprt.sBuldgStrtGradCd" style="width:70px" dataType="own" embeddedInput="true">
						                <xf:choices>
						                    <xf:itemset nodeset="data:DsWs_BuldgStrtGradCd">
						                        <xf:label ref="sHnglCdName"></xf:label>
						                        <xf:value ref="sCd"></xf:value>
						                    </xf:itemset>
						                </xf:choices>
						            </xf:select1>
								</xf:group>
							</xf:group>
						<xf:group tagname="tr" style=""><xf:group class="w2tb_th" tagname="th">층수(지상)</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input id="nBuldgGrodFlct" style="width:120px;text-align:right;" ref="data:Ds_Prprt.nBuldgGrodFlct" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
								<w2:textbox class="" id="" label="층" style="" tagname="span"></w2:textbox>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">층수(지하)</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input id="nBuldgUndgFlct" style="width:70px;text-align:right;" ref="data:Ds_Prprt.nBuldgUndgFlct" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
								<w2:textbox class="" id="" label="층" style="" tagname="span"></w2:textbox>
							</xf:group></xf:group><xf:group tagname="tr" style=""><xf:group class="w2tb_th" tagname="th">목적물위치</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:select1 id="cmb_GrodUndg" appearance="minimall" ref="data:Ds_Prprt.sObjctGrodUndgFlagCd" style="width:75px" renderType="native" chooseOption="true" chooseOptionLabel="-선택-">
									<xf:choices>
										<xf:itemset nodeset="data:DsWs_GrodUndg">
											<xf:label ref="sHnglCdName" />
											<xf:value ref="sCd" />
										</xf:itemset>
									</xf:choices>
								</xf:select1>
								<xf:input id="nObjctRelvFlct" style="width:40px;text-align:right;" ref="data:Ds_Prprt.nObjctRelvFlct" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
								<w2:textbox class="" id="" label="층" tagname="span" style=""></w2:textbox>
							</xf:group>
	<xf:group class="w2tb_th" tagname="th">가입면적(㎡)</xf:group>
	<xf:group class="w2tb_td" tagname="td">
		<xf:group class="input_btn icon prot" style="width:70px">
			<xf:input id="Edt_nInsArea" ref="data:Ds_Prprt.nInsArea" style="width:70px;text-align:right;"></xf:input>
			<w2:anchor class="" ev:onclick="scwin.lfn_nInsArea_onClick" ev:onkeydown="scwin.lfn_nInsArea_OnKeyDown" id="btn_nInsArea" outerDiv="" style="">
				<xf:label><![CDATA[저장]]></xf:label>
			</w2:anchor>
		</xf:group>
	</xf:group></xf:group></xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
			
			<!-- group:s -->
		<xf:group id="" style="position:relative; top:-10px;" class="section">
			<xf:group id="" style="" class="defaultbox">
				<w2:textbox id="" style="" class="df_tt fl" label="피보험자"></w2:textbox>
				<xf:group id="" style="" class="box_left_line fl">
					<w2:anchor id="btn_SearchCust" ev:onclick="scwin.btn_SearchCust_OnClick" class="btn_nml" outerDiv="true">
						<xf:label><![CDATA[대면고객정보]]></xf:label>
					</w2:anchor>
				</xf:group>
				<xf:group class="fr" id="" style="">
					<w2:anchor id="btnAddPibo" ev:onclick="scwin.lfn_addRow" class="btn_add" outerDiv="false" style="visibility:hidden;">
						<xf:label><![CDATA[보상한도]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btnDelPibo" ev:onclick="scwin.lfn_deleteRow" class="btn_del ml3" outerDiv="false" style="visibility:hidden;">
						<xf:label><![CDATA[보험료계산]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
	
			<w2:gridView id="Grd_Pibo" dataList="Ds_Pibo" noResultMessageVisible="false" 
				autoFit="allColumn" scrollByColumn="false" useShiftKey="true"
				editModeEvent="onClick" ignoreCellClick="false"
				rowStatusHeaderValue="상태" rowNumWidth="10" rowStatusWidth="20"
				class="cm_grid" style="height:73px"
				ev:oncellclick="scwin.Grd_Pibo_OnCellClick"
				ev:onkeydown="scwin.Grd_Pibo_OnKeyDown"
				ev:oneditkeyup="scwin.Grd_Pibo_OnChar"
				ev:oncellindexchange="scwin.Grd_Pibo_OnCellPosChanged"
				ev:onviewchange="scwin.Grd_Pibo_OnKillFocus">
				<w2:header id="" style="">
					<w2:row id="" style="">
						<w2:column id="gh101" blockSelect="false" style="height:20px;" width="40" inputType="text" value="선택" displayMode="label"></w2:column>
						<w2:column id="gh102" blockSelect="false" style="height:20px;" width="90" inputType="text" value="구분" displayMode="label"></w2:column>
						<w2:column id="gh103" blockSelect="false" style="height:20px;" width="160" inputType="text" value="주민번호" displayMode="label" colSpan="2"></w2:column>
						<w2:column id="gh104" blockSelect="false" style="height:20px;" width="110" inputType="text" value="성명" displayMode="label"></w2:column>
						<w2:column id="gh105" blockSelect="false" style="height:20px;" width="70" inputType="text" value="나이" displayMode="label"></w2:column>
						<w2:column id="gh106" blockSelect="false" style="height:20px;" width="105" inputType="text" value="주피와관계" displayMode="label"></w2:column>
						<w2:column id="gh107" blockSelect="false" style="height:20px;" width="150" inputType="text" value="직업" displayMode="label" colSpan="2"></w2:column>
						<w2:column id="gh108" blockSelect="false" style="height:20px;" width="70" inputType="text" value="급수" displayMode="label"></w2:column>
						<w2:column id="gh109" blockSelect="false" style="height:20px;" width="90" inputType="text" value="운전용도" displayMode="label"></w2:column>
						<w2:column id="gh110" blockSelect="false" style="height:20px;" width="115" inputType="text" value="보장보험료" displayMode="label"></w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="" style="">
					<w2:row id="" style="">
						<w2:column id="sel" blockSelect="false" width="30" inputType="checkbox" displayMode="label" valueType="other" trueValue="1" falseValue="0"></w2:column>
						<w2:column id="sInrpsFlagCd" blockSelect="false" width="90" inputType="select" dataType="own" chooseOption="false" defaultValue="1">
							<w2:choices>
								<w2:itemset nodeset="data:DsWs_FlagCd">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column id="sInrpsCd" blockSelect="false" width="135" inputType="text" maxLength="13" displayFormat="######-#######"></w2:column>
						<w2:column id="btn_GridRow_Search" blockSelect="false" style="height:20px" inputType="image" width="25" displayMode="label" imageSrc="/cm/images/contents/ico_btn_input_sch.png"></w2:column>
						<w2:column id="sInrpsName" blockSelect="false" width="110" inputType="text" displayMode="label" readOnly="true"></w2:column>
						<w2:column id="nInrpsAge" blockSelect="false" width="70" inputType="text" displayMode="label" readOnly="true"></w2:column>
						<w2:column id="sMinsrRelnCd" dataType="own" blockSelect="false" width="90" inputType="select" selectedData="true" chooseOption="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_MinsrReln">
									<w2:label ref="sName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column> 
						<w2:column id="sJobName" blockSelect="false" width="150" inputType="text" displayMode="label" readOnly="true"></w2:column>
						<w2:column id="btn_Job_Search" blockSelect="false" style="height:20px" inputType="image" width="19" displayMode="label" imageSrc="/cm/images/contents/ico_btn_input_sch.png"></w2:column>
						<w2:column id="sJobGradCd" blockSelect="false" width="70" inputType="select" displayMode="label" readOnly="true">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_Grade">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column id="sDrveFlagCd" blockSelect="false" width="90" inputType="select" dataType="own" chooseOption="false">
							<w2:choices>
								<w2:itemset nodeset="data:DsWs_Drive">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column id="nGrntPrem" blockSelect="false" width="115" inputType="text" displayMode="label"  readOnly="true" textAlign="right" displayFormat="###,###,###,###,###,###"></w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>
		</xf:group>
		<!-- group:e -->
		
		<xf:group id="body_main" style="position:relative; top:2px;" class="layout_7_3 ">
			<xf:group id="left_main" style="" class="leftarea">
				<!-- group:s -->
				<xf:group id="" style="" class="section">
					<xf:group id="" style="" class="defaultbox">
						<w2:textbox id="" style="" class="df_tt fl" label="특약사항"></w2:textbox>
						<w2:anchor id="btn_View" outerDiv="false" class="fl btn_expand" style="" ev:onclick="scwin.btn_View_onclick">
						    <xf:label>확대</xf:label>
						</w2:anchor>
						<xf:group id="" style="" class="fl ml20">
							<xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="" displayMode="label" ev:onviewchange="scwin.lfn_PlanChanged_Async" id="cmb_Plan"
								optionOrder="" ref="data:Ds_Prprt.sApplPlanCd" style="width:150px" submenuSize="" renderType="native" ev:onblur="scwin.lfn_OnKillFocus_OnChanged">
								<xf:choices>
				    				<xf:itemset nodeset="data:DsWs_Plan">
				    					<xf:label ref="sPlanName" />
				    					<xf:value ref="sPlanCd" />
				    				</xf:itemset>
				    			</xf:choices>
							</xf:select1>
							<w2:anchor class="btn_nml1" ev:onclick="scwin.btn_MyPlanView_onclick" id="btn_MyPlanView" outerDiv="true" style="">
								<xf:label><![CDATA[플랜조회]]></xf:label>
							</w2:anchor>
							<w2:anchor class="btn_nml1" ev:onclick="scwin.btn_MyPlanReg_onclick_Async" id="btn_MyPlanReg" outerDiv="true" style="">
								<xf:label><![CDATA[플랜등록]]></xf:label>
							</w2:anchor>
						</xf:group>
						<xf:group id="" style="" class="fr">
							<w2:anchor id="btn_Buldg" ev:onclick="scwin.fn_Buldg" class="btn_nml1" outerDiv="true">
								<xf:label><![CDATA[건물가액추정]]></xf:label>
							</w2:anchor>
							<w2:anchor id="btn_CalcPrem" ev:onclick="scwin.btn_CalcPrem_OnClick_Async" class="btn_blue bul" outerDiv="true">
								<xf:label><![CDATA[보험료계산]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<w2:gridView id="grd_sTrty" dataList="Ds_Trty" noResultMessageVisible="false" 
						autoFit="allColumn" scrollByColumn="false" useShiftKey="true" 
						gnoreCellClick="false" rowStatusHeaderValue="상태"
						class="cm_grid" style="height:228px;" 
						rowNumWidth="10" rowStatusWidth="20" 
						unformatOnPaste="true"
						ev:onheaderclick="scwin.lfn_trtyOnHeadClick" ev:oncellclick="scwin.lfn_Trty_OnCellClick">
						<w2:header id="" style="">
								<w2:row id="" style="">
									<w2:column id="gh101" blockSelect="false" style="height:20px;" width="30" inputType="text" value="" displayMode="label"></w2:column>
									<w2:column id="gh102" blockSelect="false" style="height:20px;" width="50" inputType="text" value="구분" displayMode="label"></w2:column>
									<w2:column id="gh103" blockSelect="false" style="height:20px;" width="165" inputType="text" value="특약" displayMode="label"></w2:column>
									<w2:column id="gh104" blockSelect="false" style="height:20px;" width="40" inputType="text" value="상세" displayMode="label"></w2:column>
									<w2:column id="gh105" blockSelect="false" style="height:20px;" width="100" inputType="text" value="보험기간" displayMode="label"></w2:column>
									<w2:column id="gh106" blockSelect="false" style="height:20px;" width="85" inputType="text" value="납입기간" displayMode="label"></w2:column>
									<w2:column id="gh107" blockSelect="false" style="height:20px;" width="150" inputType="text" value="가입금액" displayMode="label"></w2:column>
									<w2:column id="gh108" blockSelect="false" style="height:20px;" width="130" inputType="text" value="보장보험료" displayMode="label"></w2:column>
									<w2:column id="gh109" blockSelect="false" style="height:20px;" width="30" inputType="text" value="FORMATTER" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh110" blockSelect="false" style="height:20px;" width="30" inputType="text" value="TrtyFlagCd" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh111" blockSelect="false" style="height:20px;" width="30" inputType="text" value="sScrnIndcYn" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh112" blockSelect="false" style="height:20px;" width="30" inputType="text" value="sTrtyCd" displayMode="label" hidden="true"></w2:column>
								</w2:row>
							</w2:header>
							<w2:gBody id="" style="">
								<w2:row id="" style="">
									<w2:column id="chk" blockSelect="false" style="" width="30" inputType="checkbox" displayMode="label" defaultValue="0" falseValue="0" trueValue="1"></w2:column>
									<w2:column id="BascSlctFlagCd_H" blockSelect="false" style="" width="50" inputType="text" displayMode="label" readOnly="true"></w2:column>
									<w2:column id="TrtyHnglAbbName" blockSelect="false" style="" width="165" inputType="text" displayMode="label" textAlign="left" readOnly="true"></w2:column>
									<w2:column id="Trtygp" blockSelect="false" style="" inputType="text" width="40" displayMode="label" readOnly="true" displayFormatter="scwin.lfn_btn_Detail_Check"></w2:column>
									<w2:column id="sInsurTermCd" blockSelect="false" style="" width="100" inputType="select" dataType="own" chooseOption="false" readOnly="true" selectedData="false">
										<w2:choices>
											<w2:itemset nodeset="data:lk_TrtyTerm">
												<w2:label ref="sInsurTermName"></w2:label>
												<w2:value ref="nInsurTermCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="sPaymTermCd" blockSelect="false" style="" width="85" inputType="select" dataType="own" chooseOption="false" readOnly="true" selectedData="false">
										<w2:choices>
											<w2:itemset nodeset="data:lk_TrtyTerm">
												<w2:label ref="sPaymTermName"></w2:label>
												<w2:value ref="nPaymTermCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="nTrtyInsAmt" blockSelect="false" style="" width="150" inputType="select" dataType="own"  chooseOption="false" selectedData="false" textAlign="right">
										<w2:choices>
											<w2:itemset nodeset="data:lk_InsAmt">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="nGrntPrem" blockSelect="false" style="" width="130" inputType="text" displayMode="label" readOnly="true" textAlign="right" displayFormat="###,###,###,###,###,###"></w2:column>
									<w2:column id="fFormatter" blockSelect="false" style="" width="30" expression="scwin.ExprDis(display('chk'), display('TrtyFlagCd'), display('sScrnIndcYn'), display('sTrtyCd'), rowIndex())" inputType="expression" readOnly="true"></w2:column>
									<w2:column blockSelect="false" id="TrtyFlagCd" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="sScrnIndcYn" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="sTrtyCd" style="" inputType="text" width="30" displayMode="label"></w2:column>
								</w2:row>
							</w2:gBody>
					</w2:gridView>

				</xf:group>
				<!-- group:e -->
			</xf:group>
	
			<xf:group class="rightarea" id="right_main" style="">
				<xf:group class="section" id="" style="">
					<xf:group class="defaultbox" id="" style="">
						<w2:textbox class="df_tt fl" id=""
							label="보상내용 및 한도" style="">
						</w2:textbox>
					</xf:group>
					<xf:group class="txtbox" id=""
						style="height:65px;">
						<w2:textbox class="txt" id="txtTrtyInfo" label="" style=""></w2:textbox>
					</xf:group>
					<xf:group class="w2tb tb mb0" id="" style="position:relative; top:-5px;"
						tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup">
							<xf:group style="width:100.00px;"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
							<xf:group style="width:75.00px;"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group id="group1" style="" tagname="tr">
							<xf:group class="w2tb_th" style=""
								tagname="th">
								최소보험료
							</xf:group>
							<xf:group class="w2tb_td" style=""
								tagname="td">
								<xf:input disabled="true" id="medt_nMinPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nMinPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">
								최대보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true" id="medt_nMaxPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nMaxPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">보장보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input id="medt_nGrntPrem" style="text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nGrntPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">적립보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true" id="medt_nAccuPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nAccuPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">할인보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input id="medt_nDcPrem" style="text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nDcPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">적용보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true" id="medt_nApplPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nApplPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">영업보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<xf:group class="input_btn icon" style="">
									<xf:input id="medt_nBussPrem" ref="data:Ds_LTIDA00.nBussPrem" style="text-align:right;" displayFormat="###,###,###,###,###,###" ev:onfocus="scwin.medt_nBussPrem_onfocus" ev:onblur="scwin.medt_nBussPrem_onblur" dataType="number"></xf:input>
									<w2:anchor class="" ev:onclick="scwin.lfn_calSave_onClick_Async" id="btn_Input_Save" outerDiv="" style="" >
										<xf:label><![CDATA[저장]]></xf:label>
									</w2:anchor>
								</xf:group>
							</xf:group>
						</xf:group>
						<xf:group id="Static0" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">추가납입보험료</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<xf:group class="input_btn icon" style="">
									<xf:input id="medt_nAddPaymPrem" style="width:103px;text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nAddPaymPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
								</xf:group>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">예상환급금</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<xf:input disabled="true" id="medit_nExptEndRetrnAmt" style="width:103px;text-align:right;" ref="data:Ds_LTIDA00.nExptEndRetrnAmt" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
								<xf:input disabled="true" id="medt_nExptEndRtnrt" style="width:50px;text-align:right;" ref="data:Ds_LTIDA00.nExptEndRtnrt" dataType="number"></xf:input>
								<w2:textbox class="txt_bw" id="" label="%" tagname="span" style=""></w2:textbox>
							</xf:group>
						</xf:group>
					</xf:group>
				</xf:group>

			</xf:group>
		</xf:group>
	
		<!-- group:s -->
	   	<xf:group id="" style="min-height:0px;" class="section">
	   		<xf:group id="" style="" class="defaultbox last">
	   			<xf:group id="" style="" class="fl">
	   				<w2:anchor id="btn_Medical" ev:onclick="scwin.fn_Medical" class="btn_nml" outerDiv="true">
    					<xf:label><![CDATA[사전조회]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_Insu" ev:onclick="scwin.fn_insuDetail" class="btn_nml" outerDiv="true">
    					<xf:label><![CDATA[인수제한사유]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_SummaryPrem" ev:onclick="scwin.fn_summary" class="btn_nml" outerDiv="true">
    					<xf:label><![CDATA[보험료 요약]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_PrintAgmt" ev:onclick="scwin.openPrint" class="btn_nml" disabled="true" outerDiv="true">
    					<xf:label><![CDATA[가입설계서]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_HwanGup" ev:onclick="scwin.lfn_hwangup" class="btn_nml" outerDiv="true">
    					<xf:label><![CDATA[예상환급금]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_PrintInfo" ev:onclick="scwin.fn_printInfo" class="btn_nml" disabled="true" outerDiv="true">
    					<xf:label><![CDATA[안내문발송]]></xf:label>
    				</w2:anchor>
    				<w2:anchor id="btn_Moni" ev:onclick="scwin.lfn_Moni" class="btn_nml" disabled="true" outerDiv="true">
    					<xf:label><![CDATA[모니터링]]></xf:label>
    				</w2:anchor>
	   			</xf:group>
	   			<xf:group id="" style="" class="fr">
	   				<w2:anchor id="btn_Copy" ev:onclick="scwin.btn_Copy_OnClick_Async" class="btn_nml1 bul" outerDiv="true">
						<xf:label><![CDATA[복사]]></xf:label>
					</w2:anchor>
					<w2:anchor id="Btn_next" ev:onclick="scwin.lfn_next_Async" class="btn_nml1 bul" outerDiv="true">
						<xf:label><![CDATA[다음]]></xf:label>
					</w2:anchor>
					<w2:anchor id="Btn_goChung" style="display:none;" ev:onclick="scwin.lfn_Btn_goChung_OnClick" class="btn_nml1 bul" outerDiv="true"><xf:label><![CDATA[청약]]></xf:label></w2:anchor>
	   			</xf:group>
	   		</xf:group>
	   	</xf:group>
		<!-- group:e -->
		
	</body>
</html>