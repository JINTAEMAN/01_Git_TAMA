<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection>
				<w2:dataList baseNode="list" id="Ds_Year"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="CODE"
							name="CODE">
						</w2:column>
						<w2:column dataType="text" id="TEXT"
							name="TEXT">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<CODE></CODE>
							<TEXT><![CDATA[====]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2012]]></CODE>
							<TEXT><![CDATA[2012]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2013]]></CODE>
							<TEXT><![CDATA[2013]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2014]]></CODE>
							<TEXT><![CDATA[2014]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2015]]></CODE>
							<TEXT><![CDATA[2015]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2016]]></CODE>
							<TEXT><![CDATA[2016]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2017]]></CODE>
							<TEXT><![CDATA[2017]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2018]]></CODE>
							<TEXT><![CDATA[2018]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2019]]></CODE>
							<TEXT><![CDATA[2019]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2020]]></CODE>
							<TEXT><![CDATA[2020]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[2021]]></CODE>
							<TEXT><![CDATA[2021]]></TEXT>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Month"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="CODE"
							name="CODE">
						</w2:column>
						<w2:column dataType="text" id="TEXT"
							name="TEXT">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<CODE></CODE>
							<TEXT><![CDATA[==]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[01]]></CODE>
							<TEXT><![CDATA[01]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[02]]></CODE>
							<TEXT><![CDATA[02]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[03]]></CODE>
							<TEXT><![CDATA[03]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[04]]></CODE>
							<TEXT><![CDATA[04]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[05]]></CODE>
							<TEXT><![CDATA[05]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[06]]></CODE>
							<TEXT><![CDATA[06]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[07]]></CODE>
							<TEXT><![CDATA[07]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[08]]></CODE>
							<TEXT><![CDATA[08]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[09]]></CODE>
							<TEXT><![CDATA[09]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[10]]></CODE>
							<TEXT><![CDATA[10]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[11]]></CODE>
							<TEXT><![CDATA[11]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[12]]></CODE>
							<TEXT><![CDATA[12]]></TEXT>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_AcctNoList"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sAcctNoName" name="name1"
							dataType="text">
						</w2:column>
						<w2:column id="sBankCodeName" name="name2"
							dataType="text">
						</w2:column>
						<w2:column id="sBankCode" name="name3"
							dataType="text">
						</w2:column>
						<w2:column id="sAcctNo" name="name4"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="ds_AccCardReq"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sApplyNo"
							name="sApplyNo">
						</w2:column>
						<w2:column dataType="text" id="sCardNo"
							name="sCardNo">
						</w2:column>
						<w2:column dataType="text" id="sCardOwner"
							name="sCardOwner">
						</w2:column>
						<w2:column dataType="text" id="sCardOwnerID"
							name="sCardOwnerID">
						</w2:column>
						<w2:column dataType="text" id="nReqAmt"
							name="nReqAmt">
						</w2:column>
						<w2:column dataType="text" id="sReqAgnt"
							name="sReqAgnt">
						</w2:column>
						<w2:column dataType="text" id="sReqAgntName"
							name="sReqAgntName">
						</w2:column>
						<w2:column dataType="text" id="sBeginDate"
							name="sBeginDate">
						</w2:column>
						<w2:column dataType="text" id="sValidThru"
							name="sValidThru">
						</w2:column>
						<w2:column dataType="text" id="gsRspCode"
							name="gsRspCode">
						</w2:column>
						<w2:column dataType="text" id="gsAdmitNo"
							name="gsAdmitNo">
						</w2:column>
						<w2:column dataType="text" id="gnReqCnt"
							name="gnReqCnt">
						</w2:column>
						<w2:column dataType="text" id="sDoerUser"
							name="sDoerUser">
						</w2:column>
						<w2:column dataType="text" id="sInsrdID"
							name="sInsrdID">
						</w2:column>
						<w2:column dataType="text" id="sPolHolderID"
							name="sPolHolderID">
						</w2:column>
						<w2:column dataType="text" id="sInsType"
							name="sInsType">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="ds_AccTransReq"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sApplyType"
							name="sApplyType">
						</w2:column>
						<w2:column dataType="text" id="sApplyYM"
							name="sApplyYM">
						</w2:column>
						<w2:column dataType="text" id="sApplySer"
							name="sApplySer">
						</w2:column>
						<w2:column dataType="text" id="sOutBankCode"
							name="sOutBankCode">
						</w2:column>
						<w2:column dataType="text" id="sOutAcctNo"
							name="sOutAcctNo">
						</w2:column>
						<w2:column dataType="text" id="sDepoOwnerID"
							name="sDepoOwnerID">
						</w2:column>
						<w2:column dataType="text" id="sDepoName"
							name="sDepoName">
						</w2:column>
						<w2:column dataType="text" id="nRectPrem"
							name="nRectPrem">
						</w2:column>
						<w2:column dataType="text" id="sAgnt"
							name="sAgnt">
						</w2:column>
						<w2:column dataType="text" id="sDoerUser"
							name="sDoerUser">
						</w2:column>
						<w2:column dataType="text" id="sFaceSalesYN"
							name="sFaceSalesYN">
						</w2:column>
						<w2:column dataType="text" id="sAgmInfoType"
							name="sAgmInfoType">
						</w2:column>
						<w2:column dataType="text" id="sAcctFlag"
							name="sAcctFlag">
						</w2:column>
						<w2:column dataType="text" id="sLoanNo"
							name="sLoanNo">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Email"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="CODE"
							name="CODE">
						</w2:column>
						<w2:column dataType="text" id="TEXT"
							name="TEXT">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<CODE></CODE>
							<TEXT><![CDATA[====]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[hanmail.net]]></CODE>
							<TEXT><![CDATA[hanmail.net]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[paran.com]]></CODE>
							<TEXT><![CDATA[paran.com]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[naver.com]]></CODE>
							<TEXT><![CDATA[naver.com]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[hotmail.com]]></CODE>
							<TEXT><![CDATA[hotmail.com]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[dreamwiz.com]]></CODE>
							<TEXT><![CDATA[dreamwiz.com]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[gmail.com]]></CODE>
							<TEXT><![CDATA[gmail.com]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[input]]></CODE>
							<TEXT><![CDATA[직접입력]]></TEXT>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_RecvComm"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sDpsrCd"
							name="sDpsrCd">
						</w2:column>
						<w2:column dataType="text" id="sDpsrName"
							name="sDpsrName">
						</w2:column>
						<w2:column dataType="text" id="sDoer"
							name="sDoer">
						</w2:column>
						<w2:column dataType="text" id="nRecpPrem"
							name="nRecpPrem">
						</w2:column>
						<w2:column dataType="text" id="cashFlag"
							name="cashFlag">
						</w2:column>
						<w2:column dataType="text" id="transFlag"
							name="transFlag">
						</w2:column>
						<w2:column dataType="text" id="cardFlag"
							name="cardFlag">
						</w2:column>
						<w2:column dataType="text" id="phoneFlag"
							name="phoneFlag">
						</w2:column>
						<w2:column dataType="text" id="sBizCat"
							name="sBizCat">
						</w2:column>
						<w2:column dataType="text" id="sProcCat"
							name="sProcCat">
						</w2:column>
						<w2:column dataType="text" id="sEmail"
							name="sEmail">
						</w2:column>
						<w2:column dataType="text" id="sElecNtltRvYn"
							name="sElecNtltRvYn">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIFA01"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="nDlSeqno"
							name="nDlSeqno">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd">
						</w2:column>
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymCyclCd"
							name="sPaymCyclCd">
						</w2:column>
						<w2:column dataType="text" id="sRecvWdrcFlagCd"
							name="sRecvWdrcFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sDlFlagCd"
							name="sDlFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sDlDate"
							name="sDlDate">
						</w2:column>
						<w2:column dataType="text" id="sAchvDate"
							name="sAchvDate">
						</w2:column>
						<w2:column dataType="text" id="sStndDate"
							name="sStndDate">
						</w2:column>
						<w2:column dataType="text" id="nDlAmt"
							name="nDlAmt">
						</w2:column>
						<w2:column dataType="text" id="sRecpNo"
							name="sRecpNo">
						</w2:column>
						<w2:column dataType="text" id="nPaymCt"
							name="nPaymCt">
						</w2:column>
						<w2:column dataType="text" id="nRecpPrem"
							name="nRecpPrem">
						</w2:column>
						<w2:column dataType="text" id="nReviIntAmt"
							name="nReviIntAmt">
						</w2:column>
						<w2:column dataType="text" id="nPpayDcAmt"
							name="nPpayDcAmt">
						</w2:column>
						<w2:column dataType="text" id="nGroupDcAmt"
							name="nGroupDcAmt">
						</w2:column>
						<w2:column dataType="text" id="sThcpAcctBankCd"
							name="sThcpAcctBankCd">
						</w2:column>
						<w2:column dataType="text"
							id="sNonAcctThcpAcctNo" name="sNonAcctThcpAcctNo">
						</w2:column>
						<w2:column dataType="text"
							id="nNonAcctThcpAcctRvamt" name="nNonAcctThcpAcctRvamt">
						</w2:column>
						<w2:column dataType="text"
							id="sRealHmsRecvBankAcctNo" name="sRealHmsRecvBankAcctNo">
						</w2:column>
						<w2:column dataType="text"
							id="sRealHmsRecvBankCd" name="sRealHmsRecvBankCd">
						</w2:column>
						<w2:column dataType="text"
							id="nRealHmsRecvRvamt" name="nRealHmsRecvRvamt">
						</w2:column>
						<w2:column dataType="text" id="nCashDlAmt"
							name="nCashDlAmt">
						</w2:column>
						<w2:column dataType="text" id="sCardNo1"
							name="sCardNo1">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt1"
							name="nCardDlAmt1">
						</w2:column>
						<w2:column dataType="text" id="sCardNo2"
							name="sCardNo2">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt2"
							name="nCardDlAmt2">
						</w2:column>
						<w2:column dataType="text" id="sCardNo3"
							name="sCardNo3">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt3"
							name="nCardDlAmt3">
						</w2:column>
						<w2:column dataType="text" id="nEtcDlAmt"
							name="nEtcDlAmt">
						</w2:column>
						<w2:column dataType="text" id="sMntpFlgcd"
							name="sMntpFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCmMetd"
							name="sCmMetd">
						</w2:column>
						<w2:column dataType="text" id="nRtnCt"
							name="nRtnCt">
						</w2:column>
						<w2:column dataType="text" id="nRtnPrem"
							name="nRtnPrem">
						</w2:column>
						<w2:column dataType="text" id="nCnclInt"
							name="nCnclInt">
						</w2:column>
						<w2:column dataType="text" id="nRtnAmt"
							name="nRtnAmt">
						</w2:column>
						<w2:column dataType="text" id="nDuctAmt"
							name="nDuctAmt">
						</w2:column>
						<w2:column dataType="text" id="sPyplcSelfFlagCd"
							name="sPyplcSelfFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sPyplcFlgcd"
							name="sPyplcFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sPyplcCd"
							name="sPyplcCd">
						</w2:column>
						<w2:column dataType="text" id="sPyplcName"
							name="sPyplcName">
						</w2:column>
						<w2:column dataType="text" id="sPymMetd"
							name="sPymMetd">
						</w2:column>
						<w2:column dataType="text" id="sPymBankCd"
							name="sPymBankCd">
						</w2:column>
						<w2:column dataType="text" id="sPymAcctNo"
							name="sPymAcctNo">
						</w2:column>
						<w2:column dataType="text" id="sDpsrName"
							name="sDpsrName">
						</w2:column>
						<w2:column dataType="text" id="sDpsrCd"
							name="sDpsrCd">
						</w2:column>
						<w2:column dataType="text" id="sPymResnCd"
							name="sPymResnCd">
						</w2:column>
						<w2:column dataType="text" id="nTotPaymPrem"
							name="nTotPaymPrem">
						</w2:column>
						<w2:column dataType="text" id="sDlBefoCrStatCd"
							name="sDlBefoCrStatCd">
						</w2:column>
						<w2:column dataType="text" id="sDlBecrStatFlgcd"
							name="sDlBecrStatFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="sDlBefoFinalPaymMthy" name="sDlBefoFinalPaymMthy">
						</w2:column>
						<w2:column dataType="text"
							id="nDlBefoFinalPaymSeq" name="nDlBefoFinalPaymSeq">
						</w2:column>
						<w2:column dataType="text"
							id="nDlBefoCrStatSeqno" name="nDlBefoCrStatSeqno">
						</w2:column>
						<w2:column dataType="text" id="sDlAftrCrStatCd"
							name="sDlAftrCrStatCd">
						</w2:column>
						<w2:column dataType="text"
							id="sDlAftrCrStatFlgcd" name="sDlAftrCrStatFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="sDlAftrFinalPaymMthy" name="sDlAftrFinalPaymMthy">
						</w2:column>
						<w2:column dataType="text"
							id="nDlAftrFinalPaymSeq" name="nDlAftrFinalPaymSeq">
						</w2:column>
						<w2:column dataType="text"
							id="nDlAftrCrStatSeqno" name="nDlAftrCrStatSeqno">
						</w2:column>
						<w2:column dataType="text" id="sIssuYn"
							name="sIssuYn">
						</w2:column>
						<w2:column dataType="text" id="sDoerCentrCd"
							name="sDoerCentrCd">
						</w2:column>
						<w2:column dataType="text" id="sDoerTeamCd"
							name="sDoerTeamCd">
						</w2:column>
						<w2:column dataType="text" id="sDoerGroupCd"
							name="sDoerGroupCd">
						</w2:column>
						<w2:column dataType="text" id="sDoerPartCd"
							name="sDoerPartCd">
						</w2:column>
						<w2:column dataType="text" id="sDoer"
							name="sDoer">
						</w2:column>
						<w2:column dataType="text" id="sCmpCentrCd"
							name="sCmpCentrCd">
						</w2:column>
						<w2:column dataType="text" id="sCmpTeamCd"
							name="sCmpTeamCd">
						</w2:column>
						<w2:column dataType="text" id="sCmpGroupCd"
							name="sCmpGroupCd">
						</w2:column>
						<w2:column dataType="text" id="sCmpPartCd"
							name="sCmpPartCd">
						</w2:column>
						<w2:column dataType="text" id="sCmp"
							name="sCmp">
						</w2:column>
						<w2:column dataType="text"
							id="sDlvrRecvRqstDate" name="sDlvrRecvRqstDate">
						</w2:column>
						<w2:column dataType="text"
							id="sDlvrRecvRqstFlagCd" name="sDlvrRecvRqstFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="nDlvrRecvRqstSeqno" name="nDlvrRecvRqstSeqno">
						</w2:column>
						<w2:column dataType="text"
							id="sDlvrRecvDcsnDate" name="sDlvrRecvDcsnDate">
						</w2:column>
						<w2:column dataType="text" id="sAcctDate"
							name="sAcctDate">
						</w2:column>
						<w2:column dataType="text" id="sRecvBrch"
							name="sRecvBrch">
						</w2:column>
						<w2:column dataType="text" id="sRecvNo"
							name="sRecvNo">
						</w2:column>
						<w2:column dataType="text" id="sCmsCd"
							name="sCmsCd">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate">
						</w2:column>
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate">
						</w2:column>
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row></w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIFA02"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="nDlSeqno"
							name="nDlSeqno">
						</w2:column>
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sRecvWdrcFlagCd"
							name="sRecvWdrcFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nPaymSeq"
							name="nPaymSeq">
						</w2:column>
						<w2:column dataType="text" id="sPaymDudyPrsn"
							name="sPaymDudyPrsn">
						</w2:column>
						<w2:column dataType="text" id="sPaymMthy"
							name="sPaymMthy">
						</w2:column>
						<w2:column dataType="text" id="sPaymCyclCd"
							name="sPaymCyclCd">
						</w2:column>
						<w2:column dataType="text" id="sRecvStatFlag"
							name="sRecvStatFlag">
						</w2:column>
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nBussPrem"
							name="nBussPrem">
						</w2:column>
						<w2:column dataType="text" id="nAddPaymPrem"
							name="nAddPaymPrem">
						</w2:column>
						<w2:column dataType="text" id="nPaymPrem"
							name="nPaymPrem">
						</w2:column>
						<w2:column dataType="text" id="nReviIntAmt"
							name="nReviIntAmt">
						</w2:column>
						<w2:column dataType="text" id="nArreDays"
							name="nArreDays">
						</w2:column>
						<w2:column dataType="text" id="nPpayDcAmt"
							name="nPpayDcAmt">
						</w2:column>
						<w2:column dataType="text" id="nPpayDays"
							name="nPpayDays">
						</w2:column>
						<w2:column dataType="text" id="nWdraCnclIntAmt"
							name="nWdraCnclIntAmt">
						</w2:column>
						<w2:column dataType="text" id="nWdraCnclDays"
							name="nWdraCnclDays">
						</w2:column>
						<w2:column dataType="text" id="sRecpDate"
							name="sRecpDate">
						</w2:column>
						<w2:column dataType="text" id="sAchvDate"
							name="sAchvDate">
						</w2:column>
						<w2:column dataType="text" id="nRecpPrem"
							name="nRecpPrem">
						</w2:column>
						<w2:column dataType="text" id="nRealRecpPrem"
							name="nRealRecpPrem">
						</w2:column>
						<w2:column dataType="text" id="nRtnDlSeqno"
							name="nRtnDlSeqno">
						</w2:column>
						<w2:column dataType="text" id="nRtnSeqno"
							name="nRtnSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate">
						</w2:column>
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate">
						</w2:column>
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row></w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIEA00"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="PaymTermNm"
							name="PaymTermNm">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="InsurTermNm"
							name="InsurTermNm">
						</w2:column>
						<w2:column dataType="text" id="sCrStatCd"
							name="sCrStatCd">
						</w2:column>
						<w2:column dataType="text" id="CrStatNm"
							name="CrStatNm">
						</w2:column>
						<w2:column dataType="text" id="sChngDlngDate"
							name="sChngDlngDate">
						</w2:column>
						<w2:column dataType="text" id="sFinalPaymMthy"
							name="sFinalPaymMthy">
						</w2:column>
						<w2:column dataType="number" id="nFinalPaymSeq"
							name="nFinalPaymSeq">
						</w2:column>
						<w2:column dataType="text" id="sPaymCyclCd"
							name="sPaymCyclCd">
						</w2:column>
						<w2:column dataType="text" id="PaymCyclNm"
							name="PaymCyclNm">
						</w2:column>
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd">
						</w2:column>
						<w2:column dataType="text" id="GdNm"
							name="GdNm">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sCrNo0"
							name="sCrNo0">
						</w2:column>
						<w2:column id="sEmailClasYn" name="sEmailClasYn"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_OutBankCode"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="CODE"
							name="CODE">
						</w2:column>
						<w2:column dataType="text" id="TEXT"
							name="TEXT">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<CODE></CODE>
							<TEXT><![CDATA[선택]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[004]]></CODE>
							<TEXT><![CDATA[국민]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[005]]></CODE>
							<TEXT><![CDATA[외환]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[011]]></CODE>
							<TEXT><![CDATA[농협]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[026]]></CODE>
							<TEXT><![CDATA[신한]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[020]]></CODE>
							<TEXT><![CDATA[우리]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[032]]></CODE>
							<TEXT><![CDATA[부산]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[081]]></CODE>
							<TEXT><![CDATA[하나]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[031]]></CODE>
							<TEXT><![CDATA[대구]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[021]]></CODE>
							<TEXT><![CDATA[조흥]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[003]]></CODE>
							<TEXT><![CDATA[기업]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[023]]></CODE>
							<TEXT><![CDATA[스탠다드차타드(구 제일)]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[034]]></CODE>
							<TEXT><![CDATA[광주]]></TEXT>
						</w2:row>
						<w2:row>
							<CODE><![CDATA[037]]></CODE>
							<TEXT><![CDATA[전북]]></TEXT>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Default"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_rcpt"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="delete_Ds_FTREQ091"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_ACCAB02"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sReqDate"
							name="sReqDate">
						</w2:column>
						<w2:column dataType="text" id="sCardNo"
							name="sCardNo">
						</w2:column>
						<w2:column dataType="text" id="nReqCnt"
							name="nReqCnt">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_ACCAE01"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sDealDate"
							name="sDealDate">
						</w2:column>
						<w2:column dataType="text" id="sOutAcctNo"
							name="sOutAcctNo">
						</w2:column>
						<w2:column dataType="text" id="sDepoSeq"
							name="sDepoSeq">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_RecvSpec"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_RecvDlngSpec"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sThcpAcctBankCd"
							name="sThcpAcctBankCd">
						</w2:column>
						<w2:column dataType="text"
							id="sNonAcctThcpAcctNo" name="sNonAcctThcpAcctNo">
						</w2:column>
						<w2:column dataType="text"
							id="nNonAcctThcpAcctRvamt" name="nNonAcctThcpAcctRvamt">
						</w2:column>
						<w2:column dataType="text"
							id="sRealHmsRecvBankAcctNo" name="sRealHmsRecvBankAcctNo">
						</w2:column>
						<w2:column dataType="text"
							id="sRealHmsRecvBankCd" name="sRealHmsRecvBankCd">
						</w2:column>
						<w2:column dataType="text"
							id="nRealHmsRecvRvamt" name="nRealHmsRecvRvamt">
						</w2:column>
						<w2:column dataType="text" id="sHpNo"
							name="sHpNo">
						</w2:column>
						<w2:column dataType="text" id="sHpCmmc"
							name="sHpCmmc">
						</w2:column>
						<w2:column dataType="text" id="nHpAmt"
							name="nHpAmt">
						</w2:column>
						<w2:column dataType="text" id="nCashDlAmt"
							name="nCashDlAmt">
						</w2:column>
						<w2:column dataType="text" id="sCardNo1"
							name="sCardNo1">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt1"
							name="nCardDlAmt1">
						</w2:column>
						<w2:column dataType="text" id="sCardNo2"
							name="sCardNo2">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt2"
							name="nCardDlAmt2">
						</w2:column>
						<w2:column dataType="text" id="sCardNo3"
							name="sCardNo3">
						</w2:column>
						<w2:column dataType="text" id="nCardDlAmt3"
							name="nCardDlAmt3">
						</w2:column>
						<w2:column dataType="text" id="nEtcDlAmt"
							name="nEtcDlAmt">
						</w2:column>
						<w2:column dataType="text" id="sMntpFlgcd"
							name="sMntpFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sDpsrName"
							name="sDpsrName">
						</w2:column>
						<w2:column dataType="text" id="sDpsrCd"
							name="sDpsrCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIFA02"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_cmmc"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="code"
							name="code">
						</w2:column>
						<w2:column dataType="text" id="TEXT"
							name="TEXT">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<code></code>
							<TEXT><![CDATA[- 선택 -]]></TEXT>
						</w2:row>
						<w2:row>
							<code><![CDATA[SKT]]></code>
							<TEXT><![CDATA[SKT]]></TEXT>
						</w2:row>
						<w2:row>
							<code><![CDATA[KTF]]></code>
							<TEXT><![CDATA[KT]]></TEXT>
						</w2:row>
						<w2:row>
							<code><![CDATA[LGT]]></code>
							<TEXT><![CDATA[LGT]]></TEXT>
						</w2:row>
						<w2:row>
							<code><![CDATA[CJH]]></code>
							<TEXT><![CDATA[KT 알뜰폰]]></TEXT>
						</w2:row>
						<w2:row>
							<code><![CDATA[KCT]]></code>
							<TEXT><![CDATA[SKT 알뜰폰]]></TEXT>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsPhoneNo1"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCode"
							name="sCode">
						</w2:column>
						<w2:column dataType="text" id="sText"
							name="sText">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<sCode></sCode>
							<sText><![CDATA[-선택-]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[010]]></sCode>
							<sText><![CDATA[010]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[011]]></sCode>
							<sText><![CDATA[011]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[016]]></sCode>
							<sText><![CDATA[016]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[017]]></sCode>
							<sText><![CDATA[017]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[018]]></sCode>
							<sText><![CDATA[018]]></sText>
						</w2:row>
						<w2:row>
							<sCode><![CDATA[019]]></sCode>
							<sText><![CDATA[019]]></sText>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_ACCAH01"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCellDealNo"
							name="sCellDealNo">
						</w2:column>
						<w2:column dataType="text" id="nRectPrem"
							name="nRectPrem">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIFA03"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="sAcctFlag"
							name="sAcctFlag">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sAcctKind"
							name="sAcctKind">
						</w2:column>
						<w2:column dataType="text" id="sPayrNo"
							name="sPayrNo">
						</w2:column>
						<w2:column dataType="text" id="sTrnfAsmtDate"
							name="sTrnfAsmtDate">
						</w2:column>
						<w2:column dataType="text" id="sBankCd"
							name="sBankCd">
						</w2:column>
						<w2:column dataType="text" id="sAcctNo"
							name="sAcctNo">
						</w2:column>
						<w2:column dataType="text"
							id="sCardValdYearMnth" name="sCardValdYearMnth">
						</w2:column>
						<w2:column dataType="text" id="sDpsrName"
							name="sDpsrName">
						</w2:column>
						<w2:column dataType="text" id="sDpsrCd"
							name="sDpsrCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnFlag"
							name="sCrtorRelnFlag">
						</w2:column>
						<w2:column dataType="text" id="sOpnApplDate"
							name="sOpnApplDate">
						</w2:column>
						<w2:column dataType="text" id="sRecpDate"
							name="sRecpDate">
						</w2:column>
						<w2:column dataType="text" id="sAcctRgstStatCd"
							name="sAcctRgstStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate">
						</w2:column>
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate">
						</w2:column>
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms">
						</w2:column>
						<w2:column dataType="text" id="sCmMetd"
							name="sCmMetd">
						</w2:column>
						<w2:column dataType="text" id="sCardValdYear"
							name="sCardValdYear">
						</w2:column>
						<w2:column dataType="text" id="sCardValdMnth"
							name="sCardValdMnth">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sRecvCrtorRelCd"
							name="sRecvCrtorRelCd">
						</w2:column>
						<w2:column dataType="text" id="sRecvCrtorTelNo"
							name="sRecvCrtorTelNo">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<nCrChngNo></nCrChngNo>
							<sAcctFlag></sAcctFlag>
							<sAcctKind></sAcctKind>
							<sAcctNo></sAcctNo>
							<sAcctRgstStatCd></sAcctRgstStatCd>
							<sBankCd></sBankCd>
							<sCardValdMnth></sCardValdMnth>
							<sCardValdYear></sCardValdYear>
							<sCardValdYearMnth></sCardValdYearMnth>
							<sCmMetd></sCmMetd>
							<sCrNo></sCrNo>
							<sCrtorRelnFlag></sCrtorRelnFlag>
							<sDpsrCd></sDpsrCd>
							<sDpsrName></sDpsrName>
							<sHomeTel1></sHomeTel1>
							<sHomeTel2></sHomeTel2>
							<sHomeTel3></sHomeTel3>
							<sInptDate></sInptDate>
							<sInptDler></sInptDler>
							<sInptDlerIP></sInptDlerIP>
							<sInptHms></sInptHms>
							<sMdfcDate></sMdfcDate>
							<sMdfcDler></sMdfcDler>
							<sMdfcDlerIP></sMdfcDlerIP>
							<sMdfcHms></sMdfcHms>
							<sOpnApplDate></sOpnApplDate>
							<sPayrNo></sPayrNo>
							<sPlanNo></sPlanNo>
							<sRecpDate></sRecpDate>
							<sRecvCrtorRelCd></sRecvCrtorRelCd>
							<sRecvCrtorTelNo></sRecvCrtorTelNo>
							<sTrnfAsmtDate></sTrnfAsmtDate>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_CrtorDpsrReln"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sHnglCdName" name="name1"
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="name2"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA50"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="sItemCd"
							name="sItemCd">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn1"
							name="sExplAgreYn1">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn2"
							name="sExplAgreYn2">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn3"
							name="sExplAgreYn3">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn4"
							name="sExplAgreYn4">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn5"
							name="sExplAgreYn5">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn6"
							name="sExplAgreYn6">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn7"
							name="sExplAgreYn7">
						</w2:column>
						<w2:column dataType="text" id="sExplAgreYn8"
							name="sExplAgreYn8">
						</w2:column>
						<w2:column dataType="text" id="sCnclAgreYn"
							name="sCnclAgreYn">
						</w2:column>
						<w2:column dataType="text" id="s32AgreYn"
							name="s32AgreYn">
						</w2:column>
						<w2:column dataType="text" id="s33AgreYn"
							name="s33AgreYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate">
						</w2:column>
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate">
						</w2:column>
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms">
						</w2:column>
						<w2:column dataType="text" id="sPlanNoOri"
							name="sPlanNoOri">
						</w2:column>
						<w2:column dataType="text" id="sDpsrName"
							name="sDpsrName">
						</w2:column>
						<w2:column dataType="text" id="sDpsrCd"
							name="sDpsrCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_RecvCrtorRel"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCd"
							name="sCd">
						</w2:column>
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<sCd></sCd>
							<sHnglCdName><![CDATA[- 선택 -]]></sHnglCdName>
						</w2:row>
						<w2:row>
							<sCd><![CDATA[10]]></sCd>
							<sHnglCdName><![CDATA[배우자]]></sHnglCdName>
						</w2:row>
						<w2:row>
							<sCd><![CDATA[20]]></sCd>
							<sHnglCdName><![CDATA[부모]]></sHnglCdName>
						</w2:row>
						<w2:row>
							<sCd><![CDATA[30]]></sCd>
							<sHnglCdName><![CDATA[자녀]]></sHnglCdName>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="ds_code"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning_send"
					repeatNode="map" userData2="//*/ACCBA02">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_WarnigSendSMS"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_AcctNoList"
					repeatNode="map" userData2="//*/vector/data/ACCAD01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_VirtualAcctNo"
					repeatNode="map" userData2="//*/ACCAD01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_WarnigSendSMS_0"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIEA00"
					repeatNode="map" userData2="//*/LTIEA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CardBinCode"
					repeatNode="map" userData2="//*/ACCAB10">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning_recvSpecSave"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_recvSpecSave"
					repeatNode="map" userData2="//*/LTIEA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIFA01"
					repeatNode="map" userData2="//*/LTIFA31">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_ACCAH01"
					repeatNode="map" userData2="//*/ACCAH01/ACCAH01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_ACCAB02"
					repeatNode="map" userData2="//*/data/vector/data/ACCAB02">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_ACCAE01"
					repeatNode="map"
					userData2="//*/hashtable/data[@hashkey='ACCAE01']/ACCAE01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_ACCBA01"
					repeatNode="map" userData2="//*/data/ACCBA01/ACCBA01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning_0"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning_LapsCnclCrCnt"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LapsCnclCrCnt"
					repeatNode="map" userData2="//*/LTIEA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_AgencyHistory"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CrtorDpsrReln"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_RecvCrtorRel"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CrntAcct"
					repeatNode="map" userData2="//*/LTIEA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIDA50"
					repeatNode="map" userData2="//*/CUSAA35">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_SendTax"
					repeatNode="map" userData2="//*/TAX0020">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_SendTaxList"
					repeatNode="map" userData2="//*/vector/data/TAX0200">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CustNo"
					repeatNode="map" userData2="//*/LTI0000">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Auth"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_RecvClprSameYn"
					repeatNode="map" userData2="//*/LTIDA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CardRecvYn"
					repeatNode="map" userData2="//*/LTIFA01">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Warning_Im"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIDB05"
					repeatNode="map" userData2="//*/LTIDB05">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_List"
					repeatNode="map" userData2="//*/vector/data/CUSAA35">
				</w2:dataList>
				<w2:dataList id="DS_SAVEEMAILINFO" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sBizCode" name="sBizCode"
							dataType="text">
						</w2:column>
						<w2:column id="xslPath" name="xslPath"
							dataType="text">
						</w2:column>
						<w2:column id="sCustNo" name="sCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sDmCode" name="sDmCode"
							dataType="text">
						</w2:column>
						<w2:column id="sTargetDate" name="sTargetDate"
							dataType="text">
						</w2:column>
						<w2:column id="sUserID" name="sUserID"
							dataType="text">
						</w2:column>
						<w2:column id="sFromName" name="sFromName"
							dataType="text">
						</w2:column>
						<w2:column id="sFromEmail" name="sFromEmail"
							dataType="text">
						</w2:column>
						<w2:column id="sToName" name="sToName"
							dataType="text">
						</w2:column>
						<w2:column id="sToEmail" name="sToEmail"
							dataType="text">
						</w2:column>
						<w2:column id="sFileName" name="sFileName"
							dataType="text">
						</w2:column>
						<w2:column id="sContents" name="sContents"
							dataType="text">
						</w2:column>
						<w2:column id="sContactSerial"
							name="sContactSerial" dataType="text">
						</w2:column>
						<w2:column id="sRelkey" name="sRelkey"
							dataType="text">
						</w2:column>
						<w2:column id="sRelkeyType" name="sRelkeyType"
							dataType="text">
						</w2:column>
						<w2:column id="sBodyHTML" name="sBodyHTML"
							dataType="text">
						</w2:column>
						<w2:column id="sLoginName" name="sLoginName"
							dataType="text">
						</w2:column>
						<w2:column id="sSecureFlag" name="sSecureFlag"
							dataType="text">
						</w2:column>
						<w2:column id="sSecurePWD" name="sSecurePWD"
							dataType="text">
						</w2:column>
						<w2:column id="sApplyType" name="sApplyType"
							dataType="text">
						</w2:column>
						<w2:column id="sApplyKind" name="sApplyKind"
							dataType="text">
						</w2:column>
						<w2:column id="sApplySer" name="sApplySer"
							dataType="text">
						</w2:column>
						<w2:column id="sCheckSecureFlag"
							name="sCheckSecureFlag" dataType="text">
						</w2:column>
						<w2:column id="sAction" name="sAction"
							dataType="text">
						</w2:column>
						<w2:column id="nChgNum" name="nChgNum"
							dataType="number">
						</w2:column>
						<w2:column id="nEndorseNo" name="nEndorseNo"
							dataType="text">
						</w2:column>
						<w2:column id="sPsnGroupFlgcd"
							name="sPsnGroupFlgcd" dataType="text">
						</w2:column>
						<w2:column id="sGdCd" name="sGdCd"
							dataType="text">
						</w2:column>
						<w2:column id="sRecpNo" name="sRecpNo"
							dataType="text">
						</w2:column>
						<w2:column id="sDepartName" name="sDepartName"
							dataType="text">
						</w2:column>
						<w2:column id="nBussPrem" name="nBussPrem"
							dataType="text">
						</w2:column>
						<w2:column id="sGdCdNm" name="sGdCdNm"
							dataType="text">
						</w2:column>
						<w2:column id="sPlanCd" name="sPlanCd"
							dataType="text">
						</w2:column>
						<w2:column id="sMailContFlag"
							name="sMailContFlag" dataType="text">
						</w2:column>
						<w2:column id="sCallDate" name="sCallDate"
							dataType="text">
						</w2:column>
						<w2:column id="sSrtDate" name="sSrtDate"
							dataType="text">
						</w2:column>
						<w2:column id="sEndDate" name="sEndDate"
							dataType="text">
						</w2:column>
						<w2:column id="sIssuYear" name="sIssuYear"
							dataType="text">
						</w2:column>
						<w2:column id="sRealCustNo" name="sRealCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sInsurStrtdate"
							name="sInsurStrtdate" dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="DS_SAVEEMAILINFO1" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sBizCode" name="sBizCode"
							dataType="text">
						</w2:column>
						<w2:column id="xslPath" name="xslPath"
							dataType="text">
						</w2:column>
						<w2:column id="sCustNo" name="sCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sDmCode" name="sDmCode"
							dataType="text">
						</w2:column>
						<w2:column id="sTargetDate" name="sTargetDate"
							dataType="text">
						</w2:column>
						<w2:column id="sUserID" name="sUserID"
							dataType="text">
						</w2:column>
						<w2:column id="sFromName" name="sFromName"
							dataType="text">
						</w2:column>
						<w2:column id="sFromEmail" name="sFromEmail"
							dataType="text">
						</w2:column>
						<w2:column id="sToName" name="sToName"
							dataType="text">
						</w2:column>
						<w2:column id="sToEmail" name="sToEmail"
							dataType="text">
						</w2:column>
						<w2:column id="sFileName" name="sFileName"
							dataType="text">
						</w2:column>
						<w2:column id="sContents" name="sContents"
							dataType="text">
						</w2:column>
						<w2:column id="sContactSerial"
							name="sContactSerial" dataType="text">
						</w2:column>
						<w2:column id="sRelkey" name="sRelkey"
							dataType="text">
						</w2:column>
						<w2:column id="sRelkeyType" name="sRelkeyType"
							dataType="text">
						</w2:column>
						<w2:column id="sBodyHTML" name="sBodyHTML"
							dataType="text">
						</w2:column>
						<w2:column id="sLoginName" name="sLoginName"
							dataType="text">
						</w2:column>
						<w2:column id="sSecureFlag" name="sSecureFlag"
							dataType="text">
						</w2:column>
						<w2:column id="sSecurePWD" name="sSecurePWD"
							dataType="text">
						</w2:column>
						<w2:column id="sApplyType" name="sApplyType"
							dataType="text">
						</w2:column>
						<w2:column id="sApplyKind" name="sApplyKind"
							dataType="text">
						</w2:column>
						<w2:column id="sApplySer" name="sApplySer"
							dataType="text">
						</w2:column>
						<w2:column id="sCheckSecureFlag"
							name="sCheckSecureFlag" dataType="text">
						</w2:column>
						<w2:column id="sAction" name="sAction"
							dataType="text">
						</w2:column>
						<w2:column id="nChgNum" name="nChgNum"
							dataType="number">
						</w2:column>
						<w2:column id="nEndorseNo" name="nEndorseNo"
							dataType="text">
						</w2:column>
						<w2:column id="sPsnGroupFlgcd"
							name="sPsnGroupFlgcd" dataType="text">
						</w2:column>
						<w2:column id="sGdCd" name="sGdCd"
							dataType="text">
						</w2:column>
						<w2:column id="sRecpNo" name="sRecpNo"
							dataType="text">
						</w2:column>
						<w2:column id="sDepartName" name="sDepartName"
							dataType="text">
						</w2:column>
						<w2:column id="nBussPrem" name="nBussPrem"
							dataType="text">
						</w2:column>
						<w2:column id="sGdCdNm" name="sGdCdNm"
							dataType="text">
						</w2:column>
						<w2:column id="sPlanCd" name="sPlanCd"
							dataType="text">
						</w2:column>
						<w2:column id="sMailContFlag"
							name="sMailContFlag" dataType="text">
						</w2:column>
						<w2:column id="sCallDate" name="sCallDate"
							dataType="text">
						</w2:column>
						<w2:column id="sSrtDate" name="sSrtDate"
							dataType="text">
						</w2:column>
						<w2:column id="sEndDate" name="sEndDate"
							dataType="text">
						</w2:column>
						<w2:column id="sIssuYear" name="sIssuYear"
							dataType="text">
						</w2:column>
						<w2:column id="sRealCustNo" name="sRealCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sInsurStrtdate"
							name="sInsurStrtdate" dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="dataList3" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Ds_SAVEFAXINFO_SaveWarning"
					baseNode="list" saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_ChkMoni" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
			</w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>
			
		</xf:model>
 <script src="/cm/js/convertJs/Global_Script.js"/>
 <script src="/cm/js/convertJs/comm_Webservice.js"/>
 <script src="/cm/js/convertJs/LongTerm_Script.js"/>
 <script src="/cm/js/convertJs/GrdPassword_Script.js"/>	
		<script type="javascript"><![CDATA[
/***************************************************************************
 * 프로그램번호   : F040_Div1
 * 프로그램명     : 입금안내
 * 파일명         : F040_Div1.xml
 * 프로그램 내용  : 입금안내의 입력부분
 * 관련 프로그램  : 
 * 작성자         : 홍춘기
 * 작성일         : 2010-11-04
 * 저작권         : Copyright ⓒ 2004. the K 손해보험㈜. All Right Reserved.
 * 변경내역       : 2014.07.18 재반영
 * [N1410-00326] 2014.11.03;백승철;장기연금보험 수납 프로그램 수정
 ****************************************************************************/
 //2017-10-14 구종식 1차수정
// <script src="/cm/js/common.js"/>
// <script src="/cm/js/val_lib.js"/>
// <script src="/cm/js/util.js"/>
// <script src="/cm/js/transSub.js"/>
// <script src="/cm/js/callService.js"/>
// <script src="/cm/js/gds.js"/>
// <script src="/cm/js/convertJs/conv.js"/>
// <script src="/cm/js/convertJs/Global_Script.js"/>
// <script src="/cm/js/convertJs/comm_Webservice.js"/>
// <script src="/cm/js/convertJs/LongTerm_Script.js"/>
// <script src="/cm/js/convertJs/GrdPassword_Script.js"/>
var collType = "0";//수납금종
var transStat = "";//실시간 수납이체 결과
var sToday = "";//현재 시간
//validation 용 변수
var cashFlag = false;//무통장 입금 사용여부
var transFlag = false;//실시간 수납이체 사용여부
var cardFlag = false;//신용카드 사용여부
var sRecvCardFlag = false;//제3자 신용카드 사용여부
var phoneFlag = false;//휴대폰 사용여부
var sDlngYn = false;
var sRtmSta = "";//실시간 수납이체 무응답 처리용 변수
var searchID = "";//청약내용 조회시 계좌조회에 이용되는 취급자번호*/
var sCrNo = "";// 계약번호
var sBizCat = "";// 업무구분 : 1 초회수납(청약), 2 계속수납(계속분), 3 변경수납, 5 보험계약대출취소및환급, 6 상환이자
var sProcCat = "";
var sPlanNo = "";// 설계번호
var nCrChngNo = "";// 변경번호
var sCrtorCd = "";// 계약자코드
var sCrtorName = "";// 계약자명
var nRecpPrem;// 영수보험료
//var sDoer = "";
var sDpsrCd = "";// 예금주번호
var sDpsrName = "";// 예금주명
var getSysDate;// 서버시간
var sDate;
var sTime;
var nPaymCt;// 입금횟수
var sRecpDate;//요청일
var sBizTyp = "";
var sYym = "";
var sSeq = "";
var sDoerDuty;
var sReqAgnt;//수납요청자 (대리점 계약일 경우 상담원이 수납요청처리시 수납요청자를 대리점으로 지정)
var sReqAgntName;
var sReqAgntUser;
//var sDoerUser;
var sCellDealNo = "";//휴대폰 거래번호
var sDepoOwnerID = "";
var sDepoName = "";
var sPlanNoTemp = "";// 임시설계번호
var descrFlag = false;
var sLoanNo = "";
// TAB에서 실행할경우 아래의 메소드를 강제 실행해 줄것--> 계약정보 조회하는 메소드임
// getDptCrData()
var sAgncYn = "N";
var sSaleMoniFlag = "0";//모니터링 확인값
var sMoniFlag = "";
//cbs 추가
var Div_B200 = ""; //div_b200.getWindow();

//var sAnntSvLimitCheckYn = false;	// 청약 연금저축한도 체크 여부 - 장기보험고도화
//---------------------------------------------------------------------------
// function 명 : init
// 내용        : popup화면이 아닌 TAB또는 DIV로 사용될시 제일 먼저 호출해야함
//---------------------------------------------------------------------------
scwin.lfn_Init = function() {
    //입금선택란
    nSumPrem.setValue("");
    nPayAmt.setValue("");
    nMarginAmt.setValue("");
    Div3_chk_AutoTrnfAcctSame.setValue(0);
    Div4_chk_AutoTrnfCrdtCardSame.setValue(0);
    scwin.initAmt("all");
    scwin.componentEnable("all");
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    if (sDate >= "20160607") {
        wconv.filter(Ds_OutBankCode, "CODE != 005'",true);
    }
    if (sDate >= "20170102") {
        wconv.filter(Ds_OutBankCode, "CODE != '230'",true);
    }
    if (sDate >= "20171128") {
        wconv.filter(Ds_OutBankCode, "CODE != '053'",true);
    }
    // 2018 상품개정
    if((parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2120") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2312") || (parent.Ds_LTIDA00.getCellData(0, "sGdCd") == "2122") ||
       (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2126") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2313") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2128")){
		btn_moni.setStyle("display", "");
	}else{
		btn_moni.setStyle("display", "none");
	}
};

//**************************************************************************************************
// doInit
//
// @parameter :
// @description : 화면 로드시 초기화 함수
//               청약번호 셋팅
//               무통장 계좌 정보조회
//               기본정보조회
//**************************************************************************************************
scwin.doInit = function(obj) {
    collType = "0";
    transStat = "";
    transFlag = "";
    cashFlag = false; //무통장 입금 사용여부
    transFlag = false; //실시간 수납이체 사용여부
    cardFlag = false; //신용카드 사용여부
    phoneFlag = false; //휴대폰 사용여부
    sBizCat = Ds_RecvComm.getCellData(0, "sBizCat"); // 업무구분 : 1 초회수납(청약), 2 계속수납(계속분), 3 변경수납, 4 기타수납
    sProcCat = Ds_RecvComm.getCellData(0, "sProcCat");
    sLoanNo = Ds_RecvComm.getCellData(0, "sLoanNo");
    scwin.lfn_getCommonCodes(); // 코드값 셋팅	
    //5000014(장기보험업무팀), 32014(장기보험상담원) 권한만 사용가능
    if (nfn_checkAuthByID( "ds_code", util.getGdsValue("gUserID"), "5000014") || //장기업무
        nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "32014")) {
        //CSR 상담원
        //계속P에서만 사용
        if (sBizCat == "2") {
            Div2_chk_PrevAcctYN.setStyle("visibility", "visible");
        } else {
            Div2_chk_PrevAcctYN.setStyle("visibility", "hidden");
        }
    } else {
        Div2_chk_PrevAcctYN.setStyle("visibility", "visible");
    }


    //lfn_scrrnSet(sBizCat);
    if (sBizCat == "1") {
        // 청약 연금저축 한도 체크 여부 초기화 - 장기보험고도화
        //		sAnntSvLimitCheckYn = false;
        // 연금저축가능여부(연금저축한도체크여부) 초기화 - 장기보험고도화
        // 입금안내탭 선택시 초기화하고 한도 다시 체크
        parent.sAnntSvAvaYn = false;
        btn_Save.setValue("완전판매확인");
        Div0.setStyle("display", "none");
        //대면 계약일경우 셋팅. 
        if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
            btn_ExplDutyAgre.setStyle("visibility", "hidden"); //설명의무 버튼 안보이게 처리.
            Div4_btn_PerAgree.setStyle("visibility", "hidden"); //개인신용정보동의 버튼 안보이게 처리.
        } else {
            btn_ExplDutyAgre.setStyle("visibility", "visible");
            Div4_btn_PerAgree.setStyle("visibility", "visible");
        }


        //email약관발송
        Div1.setStyle("display", "");
        //Div1.Top = 338;
        if(parent.Ds_LTIDA00.getCellData(0, "sElecNtltRvYn") == "Y"){
			Div1_chk_sElecNtltRvY.setValue("1");
		}
		
        var sEmail = Ds_RecvComm.getCellData(0, "sEmail");
        if (wconv.length(sEmail) > 0) {
            Div1_chk_sEmailClasYn.setValue("N");
            Div1_chk_sEmailClasYn.setDisabled(false);
            Div1_edt_sEmail.setValue(sEmail);
            Div1_edt_sEmail.setDisabled(false);
            if(parent.Ds_LTIDA00.getCellData(0, "sEmailClasYn") == "Y"){
				Div1_chk_sEmailClasYn.setValue("Y");
			}
            if (parent.Ds_LTIDA00.getCellData(0, "sGdCd") == "2812" ||
            	parent.Ds_LTIDA00.getCellData(0, "sGdCd") == "2815") {	// 2018 상품개정
                Div1_chk_sEmailClasYn.setValue("Y");
                Div1_chk_sEmailClasYn.setDisabled(false);
                Div1_edt_sEmail.setValue(sEmail);
                Div1_edt_sEmail.setDisabled(false);
            }
        } else {
            Div1_chk_sEmailClasYn.setValue("N");
            Div1_chk_sEmailClasYn.setDisabled(true);
            Div1_edt_sEmail.setValue("");
            Div1_edt_sEmail.setDisabled(true);
            if(parent.Ds_LTIDA00.getCellData(0, "sEmailClasYn") == "Y"){
				Div1_chk_sEmailClasYn.setValue("Y");
			}
        }
    } else {
        btn_Save.setValue("저장");
        btn_ExplDutyAgre.setStyle("visibility", "hidden");
        Div0.setStyle("display", "");

        //email약관발송
        Div1.setStyle("display", "none");
    }
    sCrNo = Ds_RecvComm.getCellData(0, "sCrNo");
    //if (sCrNo == "" || sCrNo == null) {
    if (util.isNull(sCrNo)) {
        wprom.alert("계약번호(설계번호)가 존재하지 않습니다. 확인해 주십시요");
        scwin.componentDisable("all");
        return;
    }
    wconv.clear(Ds_RecvDlngSpec);
    util.appendRow(Ds_RecvDlngSpec);
    Ds_RecvDlngSpec.setRowPosition(0, false);
    
    wconv.clear(Ds_LTIFA01);
    util.appendRow(Ds_LTIFA01);
    Ds_LTIFA01.setRowPosition(0, false);
    
    sCrNo = Ds_RecvComm.getCellData(0, "sCrNo"); // 설계번호
    sPlanNo = Ds_RecvComm.getCellData(0, "sPlanNo"); // 설계번호
    nCrChngNo = Ds_RecvComm.getCellData(0, "nCrChngNo"); // 변경번호
    //sDpsrCd    = Ds_RecvComm.GetColumn(0,"sDpsrCd"); 		// 예금주번호
    //sDpsrName  = Ds_RecvComm.GetColumn(0,"sDpsrName");		// 예금주명
    sCrtorCd = Ds_RecvComm.getCellData(0, "sCrtorCd"); // 계약자번호
    sCrtorName = Ds_RecvComm.getCellData(0, "sCrtorName"); // 계약자명
    //sDoer      = Ds_RecvComm.GetColumn(0,"sDoer");
    nRecpPrem = Ds_RecvComm.getCellData(0, "nRecpPrem"); // 영수보험료	
    sRecpDate = Ds_RecvComm.getCellData(0, "sRecpDate");
    sDepoOwnerID = sCrtorCd;
    sDepoName = sCrtorName;

    //sKeyNo = mod01400.tab01401.Ds_save.GetColumn(0,'sKeyNo');
    //sPolicyNo = mod01400.tab01401.sBizCode.Value;
    // 입력값 Check
    if (sBizCat == "") {
        wprom.alert("업무구분이 입력되지 않았습니다.");
    } else {
        if (sBizCat == "1" && sPlanNo == "") {
            wprom.alert("초회수납시 설계번호는 필수 입력사항입니다.");
        }
        if (sBizCat == "1") {
            sCrNo = sPlanNo;
        }
        if (sBizCat == "2" && sCrNo == "") {
            wprom.alert("계속분 수납시 계약번호는 필수 입력사항입니다.");
        }
        if (sBizCat == "3" && sCrNo == "") {
            wprom.alert("변경분 수납시 계약번호는 필수 입력사항입니다.");
        }
        if (sBizCat == "3" && nCrChngNo == "") {
            wprom.alert("변경분 수납시 변경번호는 필수 입력사항입니다.");
        }
        if (wconv.toNumber(nRecpPrem) <= 0) {
            wprom.alert("영수보험료는 필수 입력사항입니다.");
        }

        //if(sDoer == "" ){
        //   alert("취급자는 필수 입력사항입니다.");
        //}
        if (util.getGdsValue("gUserID") == "") {
            wprom.alert("처리자는 필수 입력사항입니다.");
        }
    }
    nSumPrem.setValue(nRecpPrem); //보험료
    // 계약사항 조회
    scwin.getDptCrData();
    sBizTyp = wconv.substr(sPlanNo, 0, 1);
    sYym = wconv.substr(sPlanNo, 1, 4);
    sSeq = wconv.substr(sPlanNo, 5, 7);


    // 무통장 및 실시간 수납이체 정보 조회(재무회계모듈)
    scwin.getListAcctNoByApplyNo();

    // 금액 계산
    scwin.calcPremAmt();

    // 화면컨트롤 배서입금에 금액이 5천원 이하일때만 휴대폰 결재 활성화	
    if (sBizCat == "1") {} else if ((sBizCat == "2" && sProcCat == "2")) {
        //계속P 추가납 || //2015.07.21(N1507-00255) : sBizCat == "4" && sProcCat == "1"추가
        //[N1410-00326] 2014.11.03;백승철;장기연금보험 수납 프로그램 수정
        //(장기저축성보험, 연금저축보험) 장기보험인수(권한코드 : 22040), 장기보험상담원(권한코드 : 32014) 권한을 부여받은 직원에 한하여  추가납입 시 카드이체가 가능하도록 프로그램 수정
        if ((Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") && 
           ((nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "22040") == true || 
             nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "32014") == true))) {
            scwin.componentEnable("3");
        } else {
            scwin.componentDisable("3");
        }
        scwin.componentDisable("4");
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true); //부활
    } else if (sBizCat == "4" && sProcCat == "1") {
        if ((nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "22040") == true || 
             nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "32014") == true)) {
            scwin.componentEnable("3");
        } else {
            scwin.componentDisable("3");
        }
    } else if (sBizCat == "3") {
        if (wconv.toNumber(nRecpPrem) <= 5000) {
            scwin.componentEnable("4");
        } else {
            scwin.componentDisable("4");
        }
    } else if (sBizCat == "5") {
        // 보험계약대출취소및입금
        //Ds_AcctNoList.Filter("sAcctNoName='선택'||");
        //	Ds_AcctNoList.SetColumn(0, "sAcctNo", "");
        //Ds_AcctNoList.SetColumn(0, "sAcctNoName", "선택");
        // 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
        scwin.componentEnable("1");
        scwin.componentEnable("1");
        scwin.componentDisable("3");
        scwin.componentDisable("4");
        Div3_chk_AutoTrnfAcctSame.setDisabled(true);
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
    } else if (sBizCat == "6") {
        scwin.componentEnable("1");
        scwin.componentEnable("2");
        // 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
        scwin.componentDisable("3");
        scwin.componentDisable("4");
    } else {
        scwin.componentDisable("4");
    }


    //저축성 보험이고 계속분일 경우 카드수납 불가 처리
    //저축성 보험이고 초회납에 일시납인 경우 카드 수납 불가 처리.
    // 장기보험고도화 - 연금저축
    // 저축성 보험 초회납 연납인 경우 카드 수납 불가 처리 (연금저축) (by.안준영차장)
    // 상품유형구분코드-sGdTypeFlgCd-3-저축보험
    if (((Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") && sBizCat == "2") || //    (sBizCat == "2") )||((Ds_RecvComm.GetColumn(0,"sGdTypeFlgCd") == "3") && (sBizCat == "1") && (Ds_LTIEA00.GetColumn(0,"sPaymCyclCd")=="99"))){	// 장기보험고도화
        //    (sBizCat == "2") )||((Ds_RecvComm.GetColumn(0,"sGdTypeFlgCd") == "3") && (sBizCat == "1") && (Ds_LTIEA00.GetColumn(0,"sPaymCyclCd")=="99"))){	// 장기보험고도화
        ((Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") && (sBizCat == "1") && (Ds_LTIEA00.getCellData(0, "sPaymCyclCd") == "99")) || // 장기보험고도화
        ((Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") && (sBizCat == "1") && (Ds_LTIEA00.getCellData(0, "sPaymCyclCd") == "01"))) {
        // 장기보험고도화
        // 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰   
        //2015.07.21(N1507-00255) : sBizCat == "4" 추가
        if ((Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") && (sBizCat == "2") && 
            ((nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "22040") || 
              nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "32014"))) //장기보험 인수 권한 ) {  	
        ) {
            scwin.componentDisable("3");
        }
        scwin.componentDisable("4");
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
    }
    if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
        // 대리점일때 버튼 감추기.(3자통화 버튼 감추거나 disable 처리)
        btn_IvrInput1.setDisabled(true);
        btn_IvrInput2.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
        btn_IvrInput4.setDisabled(true);
    }
    if (((sBizCat == "2")) && ((sProcCat == "1")) && (nfn_checkAuthByID("DsWs_Auth", util.getGdsValue("gUserID"), "34024") == true)) {
        scwin.componentDisable("2");
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_getCommonCodes
// 내용        : 허용값 조회
//---------------------------------------------------------------------------
scwin.lfn_getCommonCodes = function() {
    var temp = "";
    wconv.clear(warning);
    //warning.DataObject = DOBJ_Rule1.ID;
    gfn_getCommonCodes("Ds_CrtorDpsrReln DsWs_RecvCrtorRel"
                     , "CrPrtrRole RecvCrtorRelCd"
                     , "Div4_cmb_sCrtorRelnFlag Div4_cmb_sRecvCrtorRelFlag"
                     , "N S");


    // 오류처리
    if (warning.getRowCount() != 0) {
        wprom.alert(warning.getCellData(0, "msg"));
        return;
    }
    
    util.jSonDsCreate(Ds_CrtorDpsrReln, DsWs_CrtorDpsrReln.getID());
    wconv.filter(Ds_CrtorDpsrReln, "sCd==10||sCd==20||sCd==40", true);
    //대면 청약인 경우 제3자 수납 제외 (초회 경우만 처리)
    if (parent.sScanObjtYn == "Y" && sBizCat == "1") {
        wconv.filter(Ds_CrtorDpsrReln, "sCd==10||sCd==20", true);
    }
};

//**************************************************************************************************
// getListAcctNoByApplyNo
//
// @parameter :
// @description : 무통장 계좌 정보조회
//**************************************************************************************************
scwin.getListAcctNoByApplyNo = function() {
    var callName = "selectListAcctNoByApplyNo";
    if (sBizCat == "5" || sBizCat == "6") {
        // 대출(환입, 상환) 가상계좌만 출력
        callName = "selectListVirtualAcctNoByApplyNo";
    }
    wconv.clear(DsWs_AcctNoList);
    
    //SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    //SOBJ_Accounting.WSDL = gWsdlBasis;
    //var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCollTask", callName, "", "");
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", callName);
	MethodObj.setId(callName);
	
    //gfn_SetParam(MethodObj, "sApplyType", "");
    //gfn_SetParam(MethodObj, "sApplyYM", "");
    //gfn_SetParam(MethodObj, "sApplySer", "");
    MethodObj.setParam("sApplyType", sBizTyp);
    MethodObj.setParam("sApplyYM", sYym);
    MethodObj.setParam("sApplySer", sSeq);

    //2017.07.25 [N1707-00121] 배서 입금화면 가상계좌 활성화 요청
    var sPsnGroupFlgcd = Ds_LTIEA00.getCellData(0, "sPsnGroupFlgcd");
    if (sBizCat == "2") {
        //2.계속수납(계속분)
        MethodObj.setParam("sUserID", util.getGdsValue("gUserID")); //로그인자의 가상계좌
    } else {
        if (sBizCat == "3" && ((sPsnGroupFlgcd == "20" || sPsnGroupFlgcd == "21"))) {
            //3.변경분 수납이고 (20.단체취급계약(계약자) 또는 21.단체취급계약(피보험자))의 경우
            MethodObj.setParam("sUserID", sReqAgnt); //취급자의 가상계좌
        } else {
            MethodObj.setParam("sUserID", sReqAgnt); //취급자의 가상계좌
        }
    }




    //2017.07.25 [N1707-00121] 배서 입금화면 가상계좌 활성화 요청
    if (sBizCat == "3" && ((sPsnGroupFlgcd == "20" || sPsnGroupFlgcd == "21"))) {
        //3.변경분 수납이고 (20.단체취급계약(계약자) 또는 21.단체취급계약(피보험자))의 경우
        MethodObj.setParam("sPolHolderID", ""); //가상계좌 추가
    } else {
        MethodObj.setParam("sPolHolderID", Ds_LTIEA00.getCellData(0, "sGroupCrAdmNo"));
    }


    /*
    if(sDoer == null || sDoer == "") {
    	//alert("로그인 사번으로 계좌조회 : [" + gUserID + "]");
    	gfn_SetParam(MethodObj, "sUserID", gUserID);
    } else {
    	//alert("취급자 사번으로 계좌조회 : [" + searchID + "]");
    	gfn_SetParam(MethodObj, "sUserID", sDoer);
    }
    */
    //trace("sApplyType  : " + sBizTyp);
    //trace("sApplyYM  : " + sYym);
    //trace("sSeq  : " + sSeq);
    //trace("sPolHolderID  : " + Ds_LTIEA00.GetColumn(0, "sGroupCrAdmNo"));
    //trace("sUserID  : " + gUserID);
    //var result = gfn_CallService(SOBJ_Accounting, DOBJ_getAcctNoList, MethodObj);
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/vector/data/ACCAD01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	
    wconv.clear(Ds_AcctNoList);
	util.jSonDsCreate(_tranSync.getDsJson("ACCAD01"), "DsWs_AcctNoList");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다. [AccountingCollTask."+callName+"]");
        return;
    }
    
    Ds_AcctNoList.setJSON(DsWs_AcctNoList.getAllJSON());
    var insRow = util.insertRow(Ds_AcctNoList, 0);
    Ds_AcctNoList.setCellData(0, "sAcctNo", "");
    Ds_AcctNoList.setCellData(0, "sAcctNoName", "선택");
    Div2_sAcctNo.setSelectedIndex(0); //trace(Ds_AcctNoList.SaveXML());
    //trace(replace(gfn_XmlEncoder(DOBJ_getAcctNoList.Value), "><", ">\n<"));
};

//**************************************************************************************************
// getVirtualAcctNoByApplyNo
//
// @parameter :
// @description : 로그인 사원의 사용할 수 있는 가상 무통장입금계좌 조회
//**************************************************************************************************
scwin.getVirtualAcctNoByApplyNo = function() {
    wconv.clear(DsWs_VirtualAcctNo);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCollTask", "selectVirtualAcctNoByApplyNo", "", "");
    gfn_SetParam(MethodObj, "sApplyType", sBizTyp);
    gfn_SetParam(MethodObj, "sApplyYM", sYym);
    gfn_SetParam(MethodObj, "sApplySer", sSeq);
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_getVirtualAcctNo, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "selectVirtualAcctNoByApplyNo");
	MethodObj.setId("selectVirtualAcctNoByApplyNo");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam( "sApplyType", sBizTyp);
    MethodObj.setParam( "sApplyYM", sYym);
    MethodObj.setParam( "sApplySer", sSeq);	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/ACCAD01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("ACCAD01"), "DsWs_VirtualAcctNo");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다. [AccountingCollTask.selectVirtualAcctNoByApplyNo]");
        return;
    }
    Ds_AcctNoList.insertRow();
	Ds_AcctNoList.setRowJSON(Ds_AcctNoList.getRowCount()-1, DsWs_Trty.getRowJSON(0), false);
    Div2_sAcctNo.setSelectedIndex(Ds_AcctNoList.getRowCount()-1);
};

//**************************************************************************************************
// Btn_CardRequest_OnClick
//
// @parameter :
// @description : 카드승인요청팝업을 오픈, 승인 요청전에 제3자 승인인 경우 데이터 저장처리.
//**************************************************************************************************
scwin.Btn_CardRequest_OnClick = function(obj) {
    var promise = Promise.resolve();
    if (!scwin.lfn_ImagJugmCpltYn()) {
        // 이미지심사(대면)
        return false;
    }

    // 청약 연금저축한도 체크 - 장기보험고도화
    /*	if (lfn_AnntSvLimitCheck("승인요청")) {
    	   return;
    	}	*/
    // 청약 연금저축 한도 체크
    //보험나이 체크
    if (sBizCat == "1" && scwin.lfn_checkInsurAge()) {
        return;
    }
    if (sBizCat == "1") {
    	//cbs 추가 사업방법서분류코드(sBunsMetdDocuClsfCd)가 연금(7)인 경우만 확인
    	if (parent.Ds_LTIDA00.getCellData(0, "sBunsMetdDocuClsfCd") == "7") {
	        if (parent.scwin.lfn_AnntSvLimitCheck(3, Div4_btnCardReq.getValue())) {
	            return;
	        }
	    }
    }



    //N1609-00176:장기보험 보험료 입금 관련 프로그램 개발(계속보험료 입금 및 입금방법 변경_보험료 카드납입)
    //저축보험의 경우 20161001 이후 청약은 현대, NH농협카드만 결제 가능
    if (Ds_RecvComm.getCellData(0, "sGdTypeFlgCd") == "3") {
        if (Ds_LTIEA00.getCellData(0, "sInsurStrtdate") >= "20161201") {
            if (!scwin.lfn_chkCardRecvYn()) {
                wprom.alert("저축성 보험은 " + Div4_edt_cardName.getValue() + " 카드로 납입할 수 없습니다.");
                return;
            }
        } else {
            //alert(Ds_LTIEA00.GetColumn(0, "sCrNo"));
            if (!scwin.getCardRecvYn(Ds_LTIEA00.getCellData(0, "sCrNo"))) {
                if (!scwin.lfn_chkCardRecvYn()) {
                    wprom.alert("저축성 보험은 " + Div4_edt_cardName.getValue() + " 카드로 납입할 수 없습니다.");
                    return;
                }
            }
        }
    }
    var ServiceId = "btnCardReq"; //this.getID();
    gfn_getServerTime();
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);
    if (ServiceId == "btnCardReq") {
        if (Div4_sAdmitNo.getValue() != "") {
            wprom.alert("이미 카드승인이 완료되었습니다.");
            return;
        }
    }
    if (nMarginAmt.getValue() < 0) {
        wprom.alert("결제하실 금액을 초과하셨습니다.");
        return;
    }
    if (sBizCat == "1") {
        if (Div1_chk_sElecNtltRvY.getValue() == "0" && Div1_chk_sElecNtltRvN.getValue() == "0") {
            wprom.alert("전자적 방법으로  계약안내자료 수령 동의 여부 란에 체크하여주십시오.");
            return false;
        }
    }


    //설명의무동의 체크
    if (scwin.lfn_descrFlagYn()) {
        scwin.lnf_btn_ExplDutyAgre_OnClick();
        return;
    }
    wconv.clear(ds_AccCardReq);
    util.appendRow(ds_AccCardReq);
    ds_AccCardReq.setCellData(0, "sApplyNo", sPlanNo);
    if (Ds_LTIFA03.getCellData(0, "sCrtorRelnFlag") > "10") //계약자일경우만 기본값 전달.
    {
        ds_AccCardReq.setCellData(0, "sCardOwner", Ds_LTIFA03.getCellData(0, "sDpsrName"));
        ds_AccCardReq.setCellData(0, "sCardOwnerID", Ds_LTIFA03.getCellData(0, "sDpsrCd"));
    } else {
        ds_AccCardReq.setCellData(0, "sCardOwner", sDepoName);
        ds_AccCardReq.setCellData(0, "sCardOwnerID", sDepoOwnerID);
    }

    //카드 수납시 주민번호 확인.N1405-00037
  	if(ds_AccCardReq.getCellData(0, "sCardOwnerID").indexOf("A") == 7){
        ds_AccCardReq.setCellData(0, "sCardOwnerID", scwin.lfn_getRealNo(ds_AccCardReq.getCellData(0, "sCardOwnerID")));
    }
    ds_AccCardReq.setCellData(0, "sReqAgnt", sReqAgnt);
    ds_AccCardReq.setCellData(0, "sDoerUser", sReqAgntUser);
    ds_AccCardReq.setCellData(0, "sReqAgntName", sReqAgntName); //gUserINSWAVESESSIONID);	
    ds_AccCardReq.setCellData(0, "sBeginDate", Ds_LTIEA00.getCellData(0, "sInsurStrtdate"));
    ds_AccCardReq.setCellData(0, "gsRspCode", "");
    ds_AccCardReq.setCellData(0, "gsAdmitNo", "");
    ds_AccCardReq.setCellData(0, "gnReqCnt", "");
    //alert(nReqAmt.Value);
    if (ServiceId == "btnCardReq") {
        if (Div4_sCardNo.getValue() == "") {
            wprom.alert("카드번호를 입력해주세요");
            Div4_sCardNo.focus();
            return;
        } else if (Div4_nReqAmt.getValue() == "") {
            wprom.alert("승인금액을 입력해주세요");
            Div4_nReqAmt.focus();
            return; //N1501-00372:장기연금보험 배서프로그램 수정(금액변경 1000->50)
            //} else if(toNumber(Div4.nReqAmt.Value) < 1000) {
        } else if (wconv.toNumber(Div4_nReqAmt.getValue()) < 10) {
            wprom.alert("승인금액은 10원 이상부터 가능합니다");
            Div4_nReqAmt.focus();
            return;
        } else if (Div4_sValidThruYYYY.getValue() == "") {
            wprom.alert("카드 유효기간을 입력해주세요");
            Div4_sValidThruYYYY.focus();
            return;
        } else if (Div4_sValidThruMM.getValue() == "") {
            wprom.alert("카드 유효기간을 입력해주세요");
            Div4_sValidThruMM.focus();
            return;
        } else if (ds_AccCardReq.getCellData(0, "sCardOwnerID") == "") {
            wprom.alert("카드소유자 주민번호를 확인해 주세요");
            Div4_msk_sDpsrCd.focus();
            return;
        } else if (ds_AccCardReq.getCellData(0, "sCardOwner") == "") {
            wprom.alert("카드소유자명을 확인해 주세요");
            Div4_edt_sDpsrName.focus();
            return;
        } else if (Ds_LTIFA03.getCellData(0, "sCrtorRelnFlag") == "40") {
            scwin.lfn_selectAgreYn(); // 신용정보 동의 확인
            if (Ds_LTIFA03.getCellData(0, "sDpsrCd") == Ds_LTIEA00.getCellData(0, "sCrtorCd")) {} else if (sRecvCardFlag == false) {
                wprom.alert("개인신용정보 동의를 해주시기 바랍니다.");
                return;
            }
        }
        var sValidThruYm = Div4_sValidThruYYYY.getValue() + "" + Div4_sValidThruMM.getValue();
        if (parseInt(sValidThruYm) < parseInt(wconv.substr(sDate, 0, 6))) {
            wprom.alert("카드 유효기간이 초과되었습니다.");
            Div4_sValidThruYYYY.focus();
            return;
        }
        ds_AccCardReq.setCellData(0, "sCardNo", Ds_LTIFA01.getCellData(0, "sCardNo1"));
        ds_AccCardReq.setCellData(0, "nReqAmt", Div4_nReqAmt.getValue());
        ds_AccCardReq.setCellData(0, "sValidThru", Div4_sValidThruYYYY.getValue() + Div4_sValidThruMM.getValue());
    } else {
        return;
    }
    ds_AccCardReq.setCellData(0, "sPolHolderID", Ds_LTIEA00.getCellData(0, "sCrtorCd"));
    ds_AccCardReq.setCellData(0, "sInsrdID", Ds_LTIEA00.getCellData(0, "sInrpsCd"));
    ds_AccCardReq.setCellData(0, "sInsType", Ds_LTIEA00.getCellData(0, "sGdCd"));

    //trace("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>> \n" + ds_AccCardReq.SaveXML());	
    // 소유자와 취급자가 같은 경우 처리할수 없음.(단 계약자가 소유자와 같은 경우 처리가능)
    var sDoerRegistrationNo = "";
    var ssDpsrCdChk = "";
    var ssCrtorCd = "";
    ssDpsrCdChk = Ds_LTIFA03.getCellData(0, "sDpsrCd"); //제3자의 주민번호
    sDoerRegistrationNo = Ds_LTIEA00.getCellData(0, "sDoerRegistrationNo"); //취급자의 주민번호
    ssCrtorCd = Ds_LTIEA00.getCellData(0, "sCrtorCd"); // 계약자의 주민번호
    /*
    if(ssCrtorCd != sDoerRegistrationNo){	
       if(ssDpsrCdChk == sDoerRegistrationNo){
    	
    		alert("모집인과 보험료 입금자는 동일할 수 없습니다.");
    		return false;
    	}
    }
    */
    //var arg = "idx=" + ServiceId;
    //arg += " flag=101";
    promise = promise.then(function(rtnVal) {
        //  분납 101
        var indata = {};
        var pObj = {"ds_AccCardReq" : ds_AccCardReq};
        indata.idx = ServiceId;
        indata.flag = "101";
        var popInfo = {
       			title : "카드승인요청",
				width : 780,
				height : 720,        
        		indata : indata,
        		parentObject : pObj
        };
        return wprom.popupOpen("/ui/cbso/CBSO023P.xml", popInfo);//arg, 656, 376);
    });
    promise = promise.then(function(result) {
        //trace("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~>> " + result);	
        //승인후 승인 카드 입력 행을 disable
        if (result == "btnCardReq") {
            Div4_sAdmitNo.setValue(ds_AccCardReq.getCellData(0, "gsAdmitNo"));
            Div4_nReqCnt.setValue(ds_AccCardReq.getCellData(0, "gnReqCnt"));
            console.log("gsRspCode" + ds_AccCardReq.getCellData(0, "gsRspCode"));
            // 카드종류 SET
			if(ds_AccCardReq.getCellData(0, "gsRspCode") == "0000" || ds_AccCardReq.getCellData(0, "gsRspCode") == "D" ) {
                cardFlag = true;
                scwin.componentDisable("31");
            }
        }



        //승인후 차액이 0원일때는 신용카드 입력 전체 disable
        if (nMarginAmt.getValue() == "0" && cardFlag == true) {
            //componentDisable("3");
            scwin.componentDisable("all");
            btn_ExplDutyAgre.setDisabled(false);
            btn_Save.setDisabled(false);
            Div3_chk_AutoTrnfAcctSame.setDisabled(true); // Value = 0;
            Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true); //.Value = 0;
            scwin.lfn_enableEmail(true);
            scwin.lfn_recvStnby();
        }
    });
    return promise;
};

scwin.btn_hpReq_OnClick = function(obj) {
    var promise = Promise.resolve();
    if (wconv.length(Div0_cmb_phone1.getValue()) == 0 || wconv.length(Div0_edt_phone2.getValue()) == 0 || wconv.length(Div0_edt_phone3.getValue()) == 0) {
        wprom.alert("휴대폰 번호를 입력해주세요.");
        Div0_cmb_phone1.focus();
        return false;
    }
    if (wconv.length(Div0_cmb_cmmc.getValue()) == 0) {
        wprom.alert("통신사를 선택하십시오.");
        Div0_cmb_cmmc.focus();
        return false;
    }
    if (wconv.toNumber(Div0_msk_nHpAmt.getValue()) < 10 || wconv.toNumber(Div0_msk_nHpAmt.getValue()) > 5000) {
        wprom.alert("금액은 10원 부터 5,000원 이하 입니다.");
        Div0_msk_nHpAmt.focus();
        return false;
    }
    var sHpNo = Div0_edt_phone1.getValue() + Div0_edt_phone2.getValue() + Div0_edt_phone3.getValue();
    //Ds_RecvDlngSpec.SetColumn(Ds_RecvDlngSpec.row, "sHpNo"	, sHpNo);
    //Ds_RecvDlngSpec.SetColumn(Ds_RecvDlngSpec.row, "sHpCmmc"	, Div0.cmb_cmmc.Value);
    //Ds_RecvDlngSpec.SetColumn(Ds_RecvDlngSpec.row, "sHpAmt"	, Div0.msk_nHpAmt.Value);
    //Ds_RecvDlngSpec.SetColumn(Ds_RecvDlngSpec.row, "nEtcDlAmt"	, Div0.msk_nHpAmt.Value);
    // if(ParseInt(nMarginAmt.Value) == 0){
    //	doReceiptProc(btn_Save);
    // }
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);
    var realCrtorCd = scwin.lfn_getRealNo(sCrtorCd);
    var params = {};
    params.pApplyType=sBizTyp; //청약번호 
    params.pApplyYM=sYym;
    params.pApplySer=sSeq;
    params.pCellPhoneOwner=sCrtorName; // 휴대폰 가입자명
    params.pCellPhoneOwnerID=realCrtorCd; // 휴대폰  가입자 주민번호
    params.pCustCom=Div0_cmb_cmmc.getValue(); //통신사 
    params.pCellPhoneNo1=Div0_cmb_phone1.getValue(); // 휴대폰 번호
    params.pCellPhoneNo2=Div0_edt_phone2.getValue(); // 휴대폰 번호
    params.pCellPhoneNo3=Div0_edt_phone3.getValue(); // 휴대폰 번호
    params.pReqAmt=Div0_msk_nHpAmt.getValue(); // 승인요청금액
    params.pBeginDate=sDate; // 책임개시일 
    params.pReqAgnt=sReqAgnt;
    params.pDoerUser=sReqAgntUser;
    params.pReqAgntName=sReqAgntName;
    promise = promise.then(function(rtnVal) {
    	var popInfo = {
				"width"     : 760,
				"height"    : 510,  
				"indata"    : params,
				"title"     : "휴대폰 승인요청",
				"callback"  : ""
    	};
        //trace(params);
        return wprom.popupOpen("/ui/cbso/CBSO024P.xml", popInfo);//params, 700, 450);
    });
    promise = promise.then(function(result) {
        if (wconv.length(result) != 0) {
            arrUser = result.split( "^");
            Div0_edt_phoneResult.setValue(arrUser[0]); //sPhoneRspCode.Value = arrUser[0];
            Div0_edt_sHpAdmitNo.setValue(arrUser[1]); //sPhoneAdmitNo.Value = arrUser[1];
            sCellDealNo = arrUser[2];
            if (Div0_edt_phoneResult.getValue() == "0000") {
                scwin.componentDisable("all");
                btn_Save.setDisabled(false);
            }
        }
    });
    return promise;
};

//**************************************************************************************************
// getCardName
//
// @parameter : ojb1 : 카드명 edit field, obj2 : 카드번호 mask field
// @description : 카드 명칭 조회 및 SET
//**************************************************************************************************
scwin.getCardName = function(obj1, obj2, obj3) {
    wconv.clear(DsWs_CardBinCode);
    //alert("1111" + substr(obj.Value,0,6));
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCardTask", "selectCardBinInfo", "", "");
    var sColumnId = "";
    if (obj2.id == "sCardNo") {
        sColumnId = "sCardNo1";
    }
    gfn_SetParam(MethodObj, "sCardBinCode", wconv.substr(obj2.getValue(), 0, 6));
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardBinCode, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCardTask", "selectCardBinInfo");
	MethodObj.setId("selectCardBinInfo");
    var sColumnId = "";
    if (obj2.id == "sCardNo") {
        sColumnId = "sCardNo1";
    }
    MethodObj.setParam( "sCardBinCode", wconv.substr(obj2.getValue(), 0, 6));
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/ACCAB10");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB10"), "DsWs_CardBinCode");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_CardBinCode");
	util.setRowPosition(DsWs_CardBinCode, 0);
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다. [AccountingCardTask.selectCardBinInfo]");
        return;
    }
    if (DsWs_CardBinCode.getCellData(0, "result") != "0") {
        //wconv.trace("DsWs_CardBinCode:" + wconv.saveXml(DsWs_CardBinCode));
        obj1.setValue(DsWs_CardBinCode.getCellData(0, "sCardComName"));
        obj3.setValue(DsWs_CardBinCode.getCellData(0, "sCardCom"));
    } else {
        wprom.alert("카드번호가 잘못입력되었습니다. 확인하십시오.");
        obj1.setValue("");
        obj3.setValue("");
        obj2.focus();
    }
};

//**************************************************************************************************
// Btn_CollTrans_OnClick
//
// @parameter :
// @description : 수납이체요청팝업을 오픈
//**************************************************************************************************
scwin.Btn_CollTrans_OnClick = function(obj) {
    var promise = Promise.resolve();
    if (!scwin.lfn_ImagJugmCpltYn()) {
        // 이미지심사(대면)
        return false;
    }

    if (!scwin.lfn_chkRecvDlngAuthYn()) {
         //수납처리권한여부(대면)
        return false;
    }

	// 2018 상품개정
	if(sBizCat == "1" && 
	   ((parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2120") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2126") ||
	    (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2312") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2313") ||
	    (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2122") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2128"))){
		if(sSaleMoniFlag != "1"){        // 완전판매모니터링 신청 화면으로
			alert("완전판매모니터링 신청 후 진행하세요.");
			return false;
		}
	}
	
    // 청약 연금저축한도 체크
    /*	if (lfn_AnntSvLimitCheck("이체요청")) {
    	   return;
    	}	*/
    //보험나이 체크
    if (sBizCat == "1" && scwin.lfn_checkInsurAge()) {
        return;
    }


    // 청약 연금저축 한도 체크
    if (sBizCat == "1") {
    	//cbs 추가 사업방법서분류코드(sBunsMetdDocuClsfCd)가 연금(7)인 경우만 확인
    	if (parent.Ds_LTIDA00.getCellData(0, "sBunsMetdDocuClsfCd") == "7") {
        	if (parent.scwin.lfn_AnntSvLimitCheck(3, Div3_btn_CollTrans.getValue())) {
            	return;
        	}
        }
    }
    if (sBizCat == "1") {
        if (Div1_chk_sElecNtltRvY.getValue() == "0" && Div1_chk_sElecNtltRvN.getValue() == "0") {
            wprom.alert("전자적 방법으로  계약안내자료 수령 동의 여부 란에 체크하여주십시오.");
            return false;
        }
    }


    //설명의무동의 체크
    if (scwin.lfn_descrFlagYn()) {
        scwin.lnf_btn_ExplDutyAgre_OnClick();
        return;
    }
    gfn_getServerTime();
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);
    if (Div3_sOutBankCode.getValue() == "" || Div3_sOutBankCode.getValue() == null) {
        wprom.alert("출금은행을 선택해주세요");
        return;
    } else if (Div3_sOutAcctNo.getValue() == "" || Div3_sOutAcctNo.getValue() == null) {
        wprom.alert("출금계좌를 입력해주세요");
        return;
    } else if (Div3_nTransAmt.getValue() == "" || Div3_nTransAmt.getValue() == null) {
        wprom.alert("이체금액을 입력해주세요");
        return;
    } else if (wconv.toNumber(nMarginAmt.getValue()) < 0) {
        wprom.alert("결제하실 금액을 초과하셨습니다.");
        return;
    }
    if (wconv.toNumber(Div3_nTransAmt.getValue()) < 0) {
        wprom.alert("0원이하의 금액은 이체 할 수 없습니다.");
        return;
    }
    
    wconv.clear(ds_AccTransReq);
    util.appendRow(ds_AccTransReq);
    ds_AccTransReq.setCellData(0, "sApplyType", sBizTyp); //청약번호구분
    ds_AccTransReq.setCellData(0, "sApplyYM", sYym); //청약번호년도(상품코드)
    ds_AccTransReq.setCellData(0, "sApplySer", sSeq); //청약번호SEQ	
    ds_AccTransReq.setCellData(0, "sOutBankCode", Div3_sOutBankCode.getValue()); //은행번호	
    ds_AccTransReq.setCellData(0, "sOutAcctNo", Ds_LTIFA01.getCellData(0, "sRealHmsRecvBankAcctNo")); //출금계좌번호
    //실시간  수납시 주민번호 확인.N1405-00037
	if(sDepoOwnerID.indexOf("A") == 7){
        sDepoOwnerID = scwin.lfn_getRealNo(sDepoOwnerID);
    }
    ds_AccTransReq.setCellData(0, "sDepoOwnerID", sDepoOwnerID); //예금주코드(계약자코드)
    ds_AccTransReq.setCellData(0, "sDepoName", sDepoName); // 계약자명
    ds_AccTransReq.setCellData(0, "nRectPrem", Div3_nTransAmt.getValue()); //출금금액
    ds_AccTransReq.setCellData(0, "sAgnt", sReqAgnt); //취급자
    ds_AccTransReq.setCellData(0, "sDoerUser", sReqAgntUser);
    ds_AccTransReq.setCellData(0, "sReturn", "");
    ds_AccTransReq.setCellData(0, "sFaceSalesYN", util.getGdsValue("gFaceSalesYN"));
    if (sBizCat == "1") {
        if (util.getGdsValue("gFaceSalesYN") == "Y") {
            ds_AccTransReq.setCellData(0, "sAgmInfoType", "1");
        } else {
            ds_AccTransReq.setCellData(0, "sAgmInfoType", "4");
        }
    } else {
        ds_AccTransReq.setCellData(0, "sAgmInfoType", "4");
    }
    if (sBizCat == "5" || sBizCat == "6") {
        ds_AccTransReq.setCellData(0, "sAcctFlag", "2");
        ds_AccTransReq.setCellData(0, "sLoanNo", sLoanNo);
    } else {
        ds_AccTransReq.setCellData(0, "sAcctFlag", "1");
    }
    promise = promise.then(function(rtnVal) {
        //trace("1 ==========================================  " + ds_AccTransReq.SaveXML());
		var indata  = { };
		var pObj = {"ds_AccTransReq" : ds_AccTransReq};			
		var popInfo = {
			"width"     : 750,
			"height"    : 280,  
			"indata"    : indata,
			"title"     : "수납이체요청",
			"parentObject" : pObj
		};        
        return wprom.popupOpen("/ui/cbso/CBSO016P.xml", popInfo);//"", 656, 376);
    });
    promise = promise.then(function(rtnValue) {
        //trace("2 ==========================================  " + ds_AccTransReq.SaveXML());
        //실시간 수납이체 성공시 (혹은 무응답 시) 입력창 disable
		transStat = rtnValue;
	
        if (transStat == "Y") {
            //componentDisable("2");
            scwin.componentDisable("all");
            btn_ExplDutyAgre.setDisabled(false);
            btn_Save.setDisabled(false);
            Div3_chk_AutoTrnfAcctSame.setDisabled(true); // Value = 0;
            Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true); //.Value = 0;
            scwin.lfn_enableEmail(true);
            scwin.lfn_recvStnby();
        } else if (transStat == "N") {
            scwin.componentDisable("2");
            Div3_chk_AutoTrnfAcctSame.setDisabled(true); //.Value = 0;
            Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true); //.Value = 0;
        }
    });
    return promise;
};

//**************************************************************************************************
// chkCollType
//
// @parameter :
// @description : 수납 금종 체크
//                1 : 무통장입금
//                2 : 신용카드
//                3 : 복합금종
//                4 : 실시간 수납이체
//**************************************************************************************************
scwin.chkCollType = function() {
    var multiCnt = 0; //복합금종 체크용
    collType = "0";
    cashFlag = false;
    sRtmSta = "";
    if ((Div2_sAcctNo.getValue() != "" && Div2_sAcctNo.getValue() != null) || (Div2_nCashAmt.getValue() != "" && Div2_nCashAmt.getValue() != "0") /* || sPayPlanDate.Value != ""*/ ) {
        collType = "1";
        cashFlag = true; //무통장 입금 사용 셋팅
        multiCnt++;
    }
    if (transStat == "Y") {
        collType = "4";
        transFlag = true; //실시간 수납이체 사용 셋팅
        multiCnt++;
    }
    if (transStat == "N") {
        collType = "4";
        transFlag = true; //실시간 수납이체 무응답의경우(수납대기까지만 처리함)
        sRtmSta = "N";
        multiCnt++;
    }
    if (Div4_sAdmitNo.getValue() != "") {
        collType = "2";
        cardFlag = true; //신용카드 사용 셋팅
        multiCnt++;
    }
    if (Div0_edt_sHpAdmitNo.getValue() != "") {
        collType = "9";
        phoneFlag = true;
        multiCnt++;
    }
    if (multiCnt > 1) {
        collType = "3"; //1개이상 금종 사용시 복합금종처리
    }
};

//**************************************************************************************************
// calcPremAmt
//
// @parameter :
// @description : 보험 입금액 계산
//                모든 금액을 합한 후 입금액 계싼
//**************************************************************************************************
scwin.calcPremAmt = function(obj, nChar, bShift, bCtrl, bAlt, nLLParam, nHLParam) {
    var payAmt = 0; //입금액 합계
    var marginAmt = 0; //차액
//    payAmt += Currency(Div2_nCashAmt.getValue());
//    payAmt += Currency(Div3_nTransAmt.getValue());
//    payAmt += Currency(Div4_nReqAmt.getValue());
//    payAmt += Currency(Div0_msk_nHpAmt.getValue());
    
    payAmt += wconv.toNumber(Div2_nCashAmt.getValue());
    payAmt += wconv.toNumber(Div3_nTransAmt.getValue());
    payAmt += wconv.toNumber(Div4_nReqAmt.getValue());
    payAmt += wconv.toNumber(Div0_msk_nHpAmt.getValue());
    nPayAmt.setValue(payAmt);
    //nMarginAmt.setValue(Currency(nSumPrem.getValue()) - Currency(nPayAmt.getValue())); //Ds_RecvDlngSpec
    nMarginAmt.setValue(wconv.toNumber(nSumPrem.getValue()) - wconv.toNumber(nPayAmt.getValue())); //Ds_RecvDlngSpec
};

//**************************************************************************************************
// doReceiptProc
//
// @parameter :
// @description : 완전판매버튼 처리 프로세스
//**************************************************************************************************
scwin.doReceiptProc_Async = function() { //완료
	util.eventAsyncCall(this, scwin.doReceiptProc, arguments);
};

scwin.doReceiptProc = function(obj) {
	if (util.isNull(obj)) {
		obj = btn_Save;
	}

    if (!scwin.lfn_ImagJugmCpltYn()) {
        // 이미지심사(대면)
        return false;
    }

	//2018 상품개정 - 2126,2313,2128
	if(sBizCat == "1" && 
	   ((parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2120") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2126") ||
	    (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2312") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2313") ||
	    (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2122") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2128"))){
		if(sSaleMoniFlag != "1"){        // 완전판매모니터링 신청 화면으로
			alert("완전판매모니터링 신청 후 진행하세요.");
			return false;
		}
		
		//완전판매모니터링 2차 검증
		if(!scwin.lfn_ChkMoni()){ // 수납처리권한여부(대면)
			alert("완전판매모니터링 신청 후 진행하세요.");
			return false;
		}
	}
	
    //2014.07.28 추가 By SDJ (N1407-00216)
    //Start 무통장입금시 피보험자 상령일 계산
    scwin.chkCollType();
    if (sBizCat == "1" && cashFlag && scwin.lfn_checkInsurAge()) {
        return;
    }


    //End
    // 연금저축한도 체크 - 장기보험고도화
    /*	if (lfn_AnntSvLimitCheck("무통장입금")) {
    	   return;
    	}	*/
    // 청약 연금저축 한도 체크
    if (sBizCat == "1") {
        // 무통장입금일때
        //cbs 추가 사업방법서분류코드(sBunsMetdDocuClsfCd)가 연금(7)인 경우만 확인
    	if (parent.Ds_LTIDA00.getCellData(0, "sBunsMetdDocuClsfCd") == "7") {
        	if (parent.scwin.lfn_AnntSvLimitCheck(3, obj.getValue())) {
            	return;
        	}
        }
    }



    // 완전판매버튼클릭시 삭제 후 데이터 생성 위해서 - 지급개시일 관련해서
    var sDeleteYn = "N";
    //	if (sBizCat == "1" && Ds_LTIEA00.GetColumn(0,"sBunsMetdDocuClsfCd") == "7") {
    //		sDeleteYn = "Y";
    //	}

	if(sBizCat != "1" || (sBizCat == "1" && descrFlag) ){
        //transaction(obj.id, "NewGen::getServerTime.jsp", "", "gDs_ServerTime=output", "", "doReceiptProc_callback");
        gfn_getServerTime();
    	scwin.doReceiptProc_callback("btn_Save","0","");
        //Div_B200.scwin.setExptRtnAmt(
        scwin.setExptRtnAmt(
        							 Ds_LTIEA00.getCellData(0, "sPlanNo"), 
        							 Ds_LTIEA00.getCellData(0, "sPsnGroupFlgcd"), 
        							 Ds_LTIEA00.getCellData(0, "sBunsMetdDocuClsfCd"), 
        							 //Ds_LTIEA00.GetColumn(0,"nRealInsurTerm"),
						             //Ds_LTIEA00.GetColumn(0,"nRealPaymTerm"),
						             sDeleteYn);
    } else {
        if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
            scwin.lfn_PassExplDuty();
            //transaction(obj.id, "NewGen::getServerTime.jsp", "", "gDs_ServerTime=output", "", "doReceiptProc_callback");
            gfn_getServerTime();
    		scwin.doReceiptProc_callback("btn_Save","0","");
            //Div_B200.scwin.setExptRtnAmt(
            scwin.setExptRtnAmt(
            							 Ds_LTIEA00.getCellData(0, "sPlanNo"), 
            							 Ds_LTIEA00.getCellData(0, "sPsnGroupFlgcd"), 
            							 Ds_LTIEA00.getCellData(0, "sBunsMetdDocuClsfCd"), 
            							 //Ds_LTIEA00.GetColumn(0,"nRealInsurTerm"),
                						 //Ds_LTIEA00.GetColumn(0,"nRealPaymTerm"),
                						 sDeleteYn);
        } else {
            wprom.alert("설명의무동의 후에 완전판매확인이 가능합니다.");
        }
    }
};

//** 완전판매버튼 callback() *************************************************************************
scwin.doReceiptProc_callback = function(ServiceId, errorCd, errorMsg) {
    if (ServiceId == "Button3") {
        // 이체요청
        if (errorCd != 0) {
            wprom.alert("errorCd:::[" + errorCd + "] errorMsg:::[" + errorMsg + "]");
        } else {
            getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday");
        }
    }

    //수납금종 체크
    scwin.chkCollType();
    //trace("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> [" + nMarginAmt.Value + "]");
    if (collType == "0") {
        wprom.alert("입금방법을 선택해주세요");
        return;
    } else if (nMarginAmt.getValue() == "" || nMarginAmt.getValue() != "0") {
        // 차액이 0원일때만 완전 판매가 가능
        wprom.alert("입금금액을 확인해주세요");
        return;
    }
    var sNonAcctBankCd = "";

    //무통장 입력 사항 체크
    if (cashFlag) {
        if (Div2_sAcctNo.getValue() == "") {
            wprom.alert("무통장 입금은행 / 계좌번호를 선택해주세요");
            return;
        } else if (Div2_nCashAmt.getValue() == "") {
            wprom.alert("무통장 입금금액을 입력해주세요");
            Div2_nCashAmt.focus();
            return;
        } else if (wconv.toNumber(Div2_nCashAmt.getValue()) < 1) {
            wprom.alert("무통장 입금금액을 확인해주세요");
            Div2_nCashAmt.focus();
            return;
            /**} else if(sPayPlanDate.Value == "") {
                    	alert("입금예정일을 선택해주세요");
                    	return;*/
        }
        var sBankCodeOri = Ds_AcctNoList.getCellData(Div2_sAcctNo.getSelectedIndex(), "sBankCode");
        if (wconv.length(sBankCodeOri) >= 3) {
            sNonAcctBankCd = wconv.substr(sBankCodeOri, 0, 3);
        }
    }

    //실시간 수납이체 / 이체승인여부 체크
    if (transFlag) {
        if (Div3_sOutBankCode.getValue() == "") {
            wprom.alert("출금은행을 선택해주세요");
            return;
        } else if (Ds_LTIFA01.getCellData(0, "sRealHmsRecvBankAcctNo") == "") {
            wprom.alert("계좌번호를 입력해주세요");
            Div3_sOutAcctNo.focus();
            return;
        } else if (Div3_nTransAmt.getValue() == "") {
            wprom.alert("이체금액을 입력해주세요");
            Div3_nTransAmt.focus();
            return;
        }
    } else {
        if (Div3_nTransAmt.getValue() != "" && Div3_nTransAmt.getValue() != "0") {
            wprom.alert("실시간 수납이체 처리가 완료되지 않았습니다.\n이체요청을 확인하세요");
            Div3_nTransAmt.focus();
            return;
        }
    }

    //신용카드 입력사항 / 승인여부 체크
    if (cardFlag) {
        if (Div4_sAdmitNo.getValue() == "") {
            if (Div4_nReqAmt.getValue() != "" && Div4_nReqAmt.getValue() != "0") {
                wprom.alert("카드승인 처리가 완료되지 않았습니다.\n승인요청을 확인하세요");
                Div4_nReqAmt.focus();
                return;
            }
        }
    } else {
        if (Div4_nReqAmt.getValue() != "" && Div4_nReqAmt.getValue() != "0") {
            wprom.alert("카드승인 처리가 완료되지 않았습니다.\n승인요청을 확인하세요");
            Div4_nReqAmt.focus();
            return;
        }
    }

    //<-- 신용카드 결제 시
    if (collType == "2") {
        wconv.clear(Ds_ACCAB02);
        if (Div4_sAdmitNo.getValue() != "") {
            util.appendRow(Ds_ACCAB02);
            //alert("1111 : " + Ds_ACCAB02.GetLastRow());
            Ds_ACCAB02.setCellData(wconv.getLastRow(Ds_ACCAB02), "sReqDate", sDate);
            Ds_ACCAB02.setCellData(wconv.getLastRow(Ds_ACCAB02), "sCardNo", Ds_LTIFA01.getCellData(0, "sCardNo1"));
            Ds_ACCAB02.setCellData(wconv.getLastRow(Ds_ACCAB02), "nReqCnt", Div4_nReqCnt.getValue());
        }
    }

    //-->
    //<-- 실시간 수납이체시
    if (collType == "4") {
        wconv.clear(Ds_ACCAE01);
        util.appendRow(Ds_ACCAE01);
        Ds_ACCAE01.setCellData(0, "sDealDate", sDate);
        Ds_ACCAE01.setCellData(0, "sOutAcctNo", Ds_LTIFA01.getCellData(0, "sRealHmsRecvBankAcctNo"));
        Ds_ACCAE01.setCellData(0, "sDepoSeq", "");
    }
    if (collType == "9") {
        wconv.clear(Ds_ACCAH01);
        util.appendRow(Ds_ACCAH01);
        Ds_ACCAH01.setCellData(0, "sCellDealNo", sCellDealNo);
        Ds_ACCAH01.setCellData(0, "nRectPrem", Div0_msk_nHpAmt.getValue());
    }
    util.insertColumn(Ds_RecvComm, [["sEmailClasYn","sEmailClasYn","text"],["sElecNtltRvYn","sElecNtltRvYn","text"],
    								["sElecNtAgreDate","sElecNtAgreDate","text"]]);

    /*
    if(sBizCat == "1" && Div1..Value == "Y" && length(trim(Div1.edt_sEmail.TEXT)) == 0){
    	Div1.edt_sEmail.SetFocus();
    	alert("email 주소를 입력하지 않았습니다.");
    	return false;
    	
    }else */
    if (sBizCat == "1") {
        if (Div1_chk_sElecNtltRvY.getValue() == "0" && Div1_chk_sElecNtltRvN.getValue() == "0") {
            wprom.alert("전자적 방법으로  계약안내자료 수령 동의 여부 란에 체크하여주십시오.");
            return false;
        }
        if (Div1_chk_sElecNtltRvY.getValue() == "1") {
            Ds_RecvComm.setCellData(0, "sElecNtltRvYn", "Y");
            Ds_RecvComm.setCellData(0, "sElecNtAgreDate", sDate);
        } else if (Div1_chk_sElecNtltRvN.getValue() == "1") {
            Ds_RecvComm.setCellData(0, "sElecNtltRvYn", "N");
            Ds_RecvComm.setCellData(0, "sElecNtAgreDate", "");
        }
    }
    
    if (sBizCat == "1" && !cashFlag && Div1_chk_sEmailClasYn.getValue() == "N" && wconv.length(Div1_edt_sEmail.getValue()) != 0) {
        // && length(Div1.edt_sEmail.TEXT) <> 0
        var rslt = confirm("email 약관 전송을 체크하지 않으셨습니다. 체크를 하고 진행하시겠습니까?"); /*return wprom.confirm(가이드참조)*/
        if (rslt == 0) {
            //취소
            Div1_chk_sEmailClasYn.setValue("N");
            Ds_RecvComm.setCellData(0, "sEmailClasYn", "N");
        } else {
            //확인
            if (wconv.length(Div1_edt_sEmail.getValue()) == 0) {
                Div1_chk_sEmailClasYn.setValue("Y");
                return false;
            } else if (scwin.lfn_chkEmail()) {
                Div1_chk_sEmailClasYn.setValue("Y");
                return false;
            }
            Div1_chk_sEmailClasYn.setValue("Y");
            Ds_RecvComm.setCellData(0, "sEmailClasYn", "Y");
            Ds_RecvComm.setCellData(0, "sEmail", Div1_edt_sEmail.getValue());
        }
    } else if (sBizCat == "1" && Div1_chk_sEmailClasYn.getValue() == "Y" && wconv.length(Div1_edt_sEmail.getValue()) != 0) {
        if (scwin.lfn_chkEmail()) {
            return false;
        }
        Ds_RecvComm.setCellData(0, "sEmailClasYn", "Y");
        Ds_RecvComm.setCellData(0, "sEmail", Div1_edt_sEmail.getValue());
    } else {
        Ds_RecvComm.setCellData(0, "sEmailClasYn", "N");
    }
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);
    // 로그인사원id, 로그인사원ip
    util.insertColumn(Ds_RecvComm, [["sUserID","sUserID","text"],["sUserIP","sUserIP","text"]]);
    Ds_RecvComm.setCellData(0, "sUserID", util.getGdsValue("gUserID")); // 로그인사원id
    Ds_RecvComm.setCellData(0, "sUserIP", util.getGdsValue("gUserIP")); // 로그인사원ip
	//무통장 입금 사용여부,실시간 수납이체 사용여부,신용카드 사용여부,휴대폰 사용여부
    util.insertColumn(Ds_RecvComm, [["cashFlag","cashFlag","text"],["transFlag","transFlag","text"],
    								["cardFlag","cardFlag","text"],["phoneFlag","phoneFlag","text"]]);
    //Ds_RecvComm.AddColumn("sRtmSta");   //실시간 수납이체 무응답 처리용 변수
    Ds_RecvComm.setCellData(0, "cashFlag", wconv.toString(cashFlag));
    Ds_RecvComm.setCellData(0, "transFlag", wconv.toString(transFlag));
    Ds_RecvComm.setCellData(0, "cardFlag", wconv.toString(cardFlag));
    Ds_RecvComm.setCellData(0, "phoneFlag", wconv.toString(phoneFlag));
    //무통장당사계좌번호,무통장당사계좌번호,무통장당사계좌입금액
    //실시간수납은행계좌번호,실시간수납은행코드,실시간수납입금액,현금거래금액
    //카드번호1,카드번호1,기타거래금액
    //실시간수납이체 예금주명,실시간수납이체 예금주주,무통장전월회계여부
    util.insertColumn(Ds_RecvComm, [
        ["sThcpAcctBankCd","sThcpAcctBankCd","text"],["sNonAcctThcpAcctNo","sNonAcctThcpAcctNo","text"],
        ["nNonAcctThcpAcctRvamt","nNonAcctThcpAcctRvamt","text"],
        ["sRealHmsRecvBankAcctNo","sRealHmsRecvBankAcctNo","text"],["sRealHmsRecvBankCd","sRealHmsRecvBankCd","text"],
        ["nRealHmsRecvRvamt","nRealHmsRecvRvamt","text"],["nCashDlAmt","nCashDlAmt","text"],
        ["sCardNo1","sCardNo1","text"],["nCardDlAmt1","nCardDlAmt1","text"],["nEtcDlAmt","nEtcDlAmt","text"],
        ["sRealDpsrName","sRealDpsrName","text"],["sRealDpsrCd","sRealDpsrCd","text"],["sNonAcctPrevAcctYN","sNonAcctPrevAcctYN","text"]]);
    //sThcpAcctBankCd
    Ds_RecvComm.setCellData(0, "sThcpAcctBankCd", sNonAcctBankCd); //은행코드
    Ds_RecvComm.setCellData(0, "sNonAcctThcpAcctNo", Div2_sAcctNo.getValue().replace("-", "")); //무통장당사계좌번호
    Ds_RecvComm.setCellData(0, "nNonAcctThcpAcctRvamt", Div2_nCashAmt.getValue()); //무통장당사계좌입금액
    Ds_RecvComm.setCellData(0, "sRealHmsRecvBankAcctNo", Ds_LTIFA01.getCellData(0, "sRealHmsRecvBankAcctNo")); //실시간수납은행계좌번호
    Ds_RecvComm.setCellData(0, "sRealHmsRecvBankCd", Div3_sOutBankCode.getValue()); //실시간수납은행코드
    if (Div3_chk_AutoTrnfAcctSame.getValue() == "1" && Div3_sOutBankCode.getValue() == "011") {
        Ds_RecvComm.setCellData(0, "sRealHmsRecvBankCd", Ds_LTIEA00.getCellData(0, "sBankCd")); //실시간수납은행코드
    }
    Ds_RecvComm.setCellData(0, "nRealHmsRecvRvamt", Div3_nTransAmt.getValue()); //실시간수납입금액
    Ds_RecvComm.setCellData(0, "sRealDpsrName", ds_AccTransReq.getCellData(0, "sDepoName")); //실시간수납이체 예금주명
    Ds_RecvComm.setCellData(0, "sRealDpsrCd", ds_AccTransReq.getCellData(0, "sDepoOwnerID")); //실시간수납이체 예금주주민번호
    Ds_RecvComm.setCellData(0, "nCashDlAmt", parseInt(wconv.convNumber(Div2_nCashAmt.getValue())) + parseInt(wconv.convNumber(Div3_nTransAmt.getValue()))); //현금거래금액
    Ds_RecvComm.setCellData(0, "sCardNo1", Ds_LTIFA01.getCellData(0, "sCardNo1")); //카드번호1
    Ds_RecvComm.setCellData(0, "nCardDlAmt1", Div4_nReqAmt.getValue()); //카드거래금액1
    Ds_RecvComm.setCellData(0, "nEtcDlAmt", Div0_msk_nHpAmt.getValue()); //기타거래금액
    Ds_RecvComm.setCellData(0, "nTotPaymPrem", Ds_RecvDlngSpec.getCellData(0, "nTotPaymPrem")); //총납입보험료
    if (Div2_chk_PrevAcctYN.getValue() == true) {
        Ds_RecvComm.setCellData(0, "sNonAcctPrevAcctYN", "Y"); //
    } else {
        Ds_RecvComm.setCellData(0, "sNonAcctPrevAcctYN", "N"); //
    }
    wconv.clear(warning);
    //warning_send.Clear();
    wconv.clear(DsWs_recvSpecSave);
    /*
    SOBJ_Send.WSDL = gds.gWsdlBasis;
    var MethodObj = SOBJ_Send.CreateMethodObj("perform");

    //trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   " + Ds_RecvComm.SaveXML());
    //데이터 전송용 해쉬테이블 xml 작성
    setHeader("hashtable", "com.inswave.longterm.dpt.rec.task.FAF040Task", "recvSpecSave");
    addSingleData("RecvComm", "RecvComm", Ds_RecvComm, "RecvComm");
    addVectorData("ACCAB02", "ACCAB02", Ds_ACCAB02); //신용카드 
    addSingleData("ACCAE01", "ACCAE01", Ds_ACCAE01, "ACCAE01"); //수납이체시
    addSingleData("ACCAH01", "ACCAH01", Ds_ACCAH01, "ACCAH01"); //휴대폰 소액결제
    setTail("hashtable");


    //trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>휴대폰>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   " + ACCAH01.SaveXML());
    //trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>신용카드>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   " + Ds_ACCAB02.SaveXML());
    //trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>수납이체시>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   " + Ds_ACCAE01.SaveXML());
    SOBJ_Send.CreateObj("in0");
    MethodObj.in0 = insertStr;
    gfn_CallService(SOBJ_Send, DOBJ_Send, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF040Task", "recvSpecSave");
	MethodObj.setId("recvSpecSave");
	
    MethodObj.addSingleData("RecvComm", "RecvComm", "Ds_RecvComm:A");//, "RecvComm");
    MethodObj.addVectorData("ACCAB02", "ACCAB02", "Ds_ACCAB02:A"); //신용카드 
    MethodObj.addSingleData("ACCAE01", "ACCAE01", "Ds_ACCAE01:A");//, "ACCAE01"); //수납이체시
    MethodObj.addSingleData("ACCAH01", "ACCAH01", "Ds_ACCAH01:A");//, "ACCAH01"); //휴대폰 소액결제
	MethodObj.setUrl("/contract/CBSC019SController.do");  	// 서버단 호출 URL (수납 확정)    
	MethodObj.setXPath("//*/LTIEA00");	// XPath
	MethodObj.addXPath("//WARNING");	// XPath
	MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
	MethodObj.sync();					// 동기 처리[기본(async:비동기)]
	MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>
	
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_recvSpecSave");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning_recvSpecSave");
    
    if (warning_recvSpecSave.getRowCount() != 0) {
        // 오류처리
        wprom.alert(warning_recvSpecSave.getCellData(0, "msg"));
        return;
    } else {
        sPlanProgRankCd = DsWs_recvSpecSave.getCellData(0, "sPlanProgRankCd");

        // 수납대기, 수납확정 상태확인
        if (sBizCat == "1") {
        	//*********************** 		
			//비대면일때만
			if(parent.Ds_LTIDA00.getCellData(0,"sScanObjtYn") == "N" && Div1_chk_sEmailClasYn.getValue() == "Y" && sMoniFlag == "M") {
				//cbs cr 비대면인경우 로직 제외	
//				parent.scwin.lfn_RtnAmt();
//				parent.scwin.lfn_RenwlPrem();
//					
//				var result = setEmailInfo();    // 상품 설명서
//				var result1 = setEmailInfo1();  // 가입 설계서 일체
//				if(!result){
//					return false;
//				}			
//				if(!result1){
//					return false;
//				}
			}
			
            //trace("*********************** Ds_LTIEA00 ***********************\n" + Ds_LTIEA00.SaveXML());
            //수납대기 확정 여부
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                //gfn_insertAgencyHistory(SODJ_AgencyHistory, DODJ_AgencyHistory, "DsWs_AgencyHistory", sPlanNo, sCrtorCd, "4");
                gfn_insertAgencyHistory("DsWs_AgencyHistory", sPlanNo, Ds_LTIEA00.getCellData(0, "sCrtorCd"), Ds_LTIEA00.getCellData(0, "sGdCdName"), "5");
                parent.scwin.saveHistory("5"); // 이력 저장(심사) >> 대기:4, 확정:5
                wprom.alert("계약번호 " + DsWs_recvSpecSave.getCellData(0, "sCrNo") + "으로 보관되었습니다.");
            } else {
                gfn_insertAgencyHistory("DsWs_AgencyHistory", sPlanNo, Ds_LTIEA00.getCellData(0, "sCrtorCd"), Ds_LTIEA00.getCellData(0, "sGdCdName"), "4");

                // 이력 저장(심사)
                parent.scwin.saveHistory("4");
                wprom.alert("수납대기 상태로 저장완료 되었습니다.");
            }
            Div1_chk_sEmailClasYn.setDisabled(true);
            Div1_edt_sEmail.setDisabled(true);
            //Div1.chk_sElecNtltRvY.Enable = false;
            //Div1.chk_sElecNtltRvN.Enable = false;
            //설계진행상태코드
            parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", DsWs_recvSpecSave.getCellData(0, "sPlanProgRankCd"));
        } else if (sBizCat == "4") {
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                wprom.alert("부활 보험료 입금이 완료 되었습니다.");
            } else {
                wprom.alert("부활 수납대기 상태로 저장완료 되었습니다.");
            }
        } else if (sBizCat == "6") {
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                wprom.alert("대출상환(이자) 입금이 완료 되었습니다.");
            } else {
                wprom.alert("대출상환(이자) 수납대기 상태로 저장완료 되었습니다.");
            }
        } else if (sBizCat == "2" && sProcCat == "1") {
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                wprom.alert("계속보험료 입금이 완료 되었습니다.");
            } else {
                wprom.alert("계속보험료 수납대기 상태로 저장완료 되었습니다.");
            }
        } else if (sBizCat == "2" && sProcCat == "2") {
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                wprom.alert("추가납입 보험료 입금이 완료 되었습니다.");
            } else {
                wprom.alert("추가납입 보험료 수납대기 상태로 저장완료 되었습니다.");
            }
        } else if (sBizCat == "3") {
            if (DsWs_recvSpecSave.getCellData(0, "sRecvStnbyStatCd") == "5") {
                wprom.alert("변경 보험료 입금이 완료 되었습니다.");
            } else {
                wprom.alert("변경 보험료 수납대기 상태로 저장완료 되었습니다.");
            }
        }
        scwin.componentDisable("all");

        //CMS 코드리턴시 CMS 안내팝업
        if (wconv.length(wconv.trim(DsWs_recvSpecSave.getCellData(0, "sCmsCd"))) != 0) {
            Div2_sCmsCod.setDisabled(false);
            Div2_sCmsCod.setValue(DsWs_recvSpecSave.getCellData(0, "sCmsCd"));
            wprom.alert("CMS 코드는 [" + DsWs_recvSpecSave.getCellData(0, "sCmsCd") + "] 입니다.");
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : getDptCrData
// 내용        : 계약기본조회 Event처리
//---------------------------------------------------------------------------
scwin.getDptCrData = function() {
    wconv.clear(warning);
    wconv.clear(Ds_LTIEA00);
    wconv.clear(DsWs_LTIEA00);
    // Ds_LTIFA01.ClearData();
    wconv.clear(DsWs_LTIFA01);
    wconv.clear(DsWs_ACCBA01); // 재무수납대기
    wconv.clear(DsWs_ACCAE01); // 수납이체
    wconv.clear(DsWs_ACCAB02); // 카드승인
    wconv.clear(DsWs_ACCAH01); // 휴대폰소액결제
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    warning.DataObject = DOBJ_DataSearch.ID;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData", "", "");
    gfn_SetParam(MethodObj, "sScrnId", "F040");
    gfn_SetParam(MethodObj, "sBizCat", sBizCat);
    var sPlanNoSeqcYn;
    if (sBizCat == "1") {
        gfn_SetParam(MethodObj, "sCrNo", sCrNo);
    } else if (sBizCat == "3") {
        gfn_SetParam(MethodObj, "sCrNo", sPlanNo);
    } else if (sBizCat == "4") {
        gfn_SetParam(MethodObj, "sCrNo", sPlanNo); //}else if(sBizCat == "5" || sBizCat == "6"){
        //	gfn_SetParam(MethodObj, "sCrNo", sCrNo );
    } else {
        sPlanNoSeqcYn = "Y";
        gfn_SetParam(MethodObj, "sPlanNoSeqcYn", sPlanNoSeqcYn); //설계번호 채번여부
        gfn_SetParam(MethodObj, "sCrNo", sCrNo);
        gfn_SetParam(MethodObj, "sRecpDate", sRecpDate);
    }
    gfn_CallService(SOBJ_Search, DOBJ_DataSearch, MethodObj);
	*/
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData");
	MethodObj.setId("getDptCrData");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam("sScrnId", "F040");
    MethodObj.setParam("sBizCat", sBizCat);
    var sPlanNoSeqcYn;
    if (sBizCat == "1") {
        MethodObj.setParam("sCrNo", sCrNo);
    } else if (sBizCat == "3") {
        MethodObj.setParam("sCrNo", sPlanNo);
    } else if (sBizCat == "4") {
        MethodObj.setParam("sCrNo", sPlanNo); //}else if(sBizCat == "5" || sBizCat == "6"){
        //	MethodObj.setParam( "sCrNo", sCrNo );
    } else {
        sPlanNoSeqcYn = "Y";
        MethodObj.setParam("sPlanNoSeqcYn", sPlanNoSeqcYn); //설계번호 채번여부
        MethodObj.setParam("sCrNo", sCrNo);
        MethodObj.setParam("sRecpDate", sRecpDate);
    }
	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIEA00");
	MethodObj.addXPath("//*/LTIFA31");
	MethodObj.addXPath("//*/data/ACCBA01/ACCBA01");
	MethodObj.addXPath("//*/hashtable/data[@hashkey='ACCAE01']/ACCAE01");
	MethodObj.addXPath("//*/data/vector/data/ACCAB02");
	MethodObj.addXPath("//*/ACCAH01/ACCAH01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_LTIEA00");
	util.jSonDsCreate(_tranSync.getDsJson("LTIFA31"), "DsWs_LTIFA01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCBA01"), "DsWs_ACCBA01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAE01"), "DsWs_ACCAE01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB02"), "DsWs_ACCAB02");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAH01"), "DsWs_ACCAH01");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning");

    //trace(replace(gfn_XmlEncoder(DOBJ_DataSearch.Value), "><", ">\n<"));
    //trace(DsWs_ACCAB02.SaveXML());
    //trace(Ds_LTIFA03.SaveXML());
    // 오류처리
    if (warning.getRowCount() != 0) {
        wprom.alert(warning.getCellData(0, "msg"));
        return;
    }

    // 출력 data move
    util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "Ds_LTIEA00");
    if (parseInt(DsWs_LTIFA01.getCellData(0, "result")) > 0) {
        wconv.copy(Ds_LTIFA01, DsWs_LTIFA01);
        Ds_LTIFA01.setRowPosition(0, false);
    } else {
        scwin.initAmt("all");
    }
    if (sPlanNoSeqcYn == "Y") {
        sPlanNo = Ds_LTIEA00.getCellData(0, "sPlanNo");
        Ds_RecvComm.setCellData(0, "sPlanNo", sPlanNo);
    }
    sDoerDuty = Ds_LTIEA00.getCellData(0, "sDuty");
    if (sBizCat != "1" && ((sDoerDuty == "30" || sDoerDuty == "33" || sDoerDuty == "35"))) {
        //약관대출(원리금, 이자)상환
        //N1310-00124:보험계약대출시스템 개발 요청
        if (sBizCat == "5" || sBizCat == "6") {
            gfn_getEmpName(util.getGdsValue("gDoer"));
            sReqAgnt = util.getGdsValue("gDoer"); //취급자
            sReqAgntName = gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"); //취급자
            sReqAgntUser = util.getGdsValue("gDoerUser");
        } else {
            sReqAgnt = Ds_LTIEA00.getCellData(0, "sDoer"); //취급자
            sReqAgntName = Ds_LTIEA00.getCellData(0, "sDoerName"); //취급자명
            sReqAgntUser = Ds_LTIEA00.getCellData(0, "sDoerUser");
        }
    } else if (sBizCat == "1" && parent.edt_sDoer.getValue() != null) {
        //2016.06.15 안준영차장요청으로 직책제거
        sReqAgnt = Ds_LTIEA00.getCellData(0, "sDoer"); //취급자
        sReqAgntName = Ds_LTIEA00.getCellData(0, "sDoerName"); //취급자명
        sReqAgntUser = Ds_LTIEA00.getCellData(0, "sDoerUser");
    } else {
    	gfn_getEmpName(util.getGdsValue("gDoer"));
        sReqAgnt = util.getGdsValue("gDoer");//취급자
		sReqAgntName = gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName");//취급자
		sReqAgntUser = util.getGdsValue("gDoerUser");
    }

    //trace("==============================>>>> sDoerDuty : " + sDoerDuty  + "\t gDoer :" + gDoer + "\t sReqAgnt :" + sReqAgnt + "\t sReqAgntName : " + sReqAgntName + "\t sReqAgntUser : " + sReqAgntUser);
    //보험 입금액 계산
    scwin.calcPremAmt(Div2_nCashAmt);
    scwin._getDptCrData();
};

//---------------------------------------------------------------------------
// function 명 : _getDptCrData
// 내용        : 계약조회후 상태에 따른 화면 컨트롤
//---------------------------------------------------------------------------
scwin._getDptCrData = function() {
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);

    // 수납대기상태일경우 입금불가(화면 Disable)
    sPlanProgRankCd = Ds_LTIEA00.getCellData(0, "sPlanProgRankCd");
    var sCmMetd = Ds_LTIEA00.getCellData(0, "sCmMetd");
    Div3_chk_AutoTrnfAcctSame.setDisabled(true);
    Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);

    /* 2016.11.30(N1610-00080)
    var sPsnGroupFlgcd = Ds_LTIEA00.GetColumn(0,"sPsnGroupFlgcd");
    if(sBizCat == "3" && (sPsnGroupFlgcd == "20" || sPsnGroupFlgcd == "21")){
    	Div2.Visible = true;
    	Div2.Enable = true;
    	Div2.Top = 57;
    	
    	Div3.Visible = false;
    	Div4.Visible = false;
    	Div0.Visible = false;
    	
    	btn_Save.Enable = true;
    }*/
    if (parseInt(sPlanProgRankCd) == 90) {
        //alert("해당계약은 수납대기 상태입니다.");
        scwin.componentDisable("all");
        if (wconv.length(Div2_sCmsCod.getValue()) != 0) {
            Div2_sCmsCod.setDisabled(false);
        }


        /* 2016.11.30(N1610-00080)
        var sPsnGroupFlgcd = Ds_LTIEA00.GetColumn(0,"sPsnGroupFlgcd");
        if(sBizCat == "3" && (sPsnGroupFlgcd == "20" || sPsnGroupFlgcd == "21")){
		
        	Div2.Visible = true;
        	Div2.Enable = true;
        	Div2.Top = 57;
        	
        	Div3.Visible = false;
        	Div4.Visible = false;
        	Div0.Visible = false;
        	btn_Save.Enable = false;
        }*/
        if (sBizCat != "2" && DsWs_ACCBA01.getRowCount() == 0) {} else {
            return;
        }
    } else if (sBizCat == "1" && parseInt(sPlanProgRankCd) == 0) {
        console.log("청약완료건입니다.");
        scwin.componentDisable("all");
        return;
    } else {
        if (sCmMetd == "03") {
            Div3_chk_AutoTrnfAcctSame.setDisabled(true);
            Div4_chk_AutoTrnfCrdtCardSame.setDisabled(false);
        } else if (sCmMetd == "05") {
            var sBankCd = Ds_LTIEA00.getCellData(0, "sBankCd");
            if (sBankCd == "012") {
                sBankCd = "011";
            }
            var nBCdRow = wconv.findRow(Ds_OutBankCode, "CODE", sBankCd);
            if (nBCdRow != -1) {
                Div3_chk_AutoTrnfAcctSame.setDisabled(false);
                Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
            }
        }
    }
    var sPsnGroupFlgcd = Ds_LTIEA00.getCellData(0, "sPsnGroupFlgcd");
    var sScanObjtYn = Ds_LTIEA00.getCellData(0, "sScanObjtYn");
    if (sPsnGroupFlgcd == "10") {
        //개인단체 구분. 10 개인, 20,21 단체
        //trace("sScanObjtYn : " + sScanObjtYn);
        if (sScanObjtYn == "Y") {
            scwin.componentDisable("all");
            scwin.componentEnable("1");
            scwin.componentEnable("2");
            scwin.componentEnable("3"); //대면 카드이체 추가 (20130128 LDH)
            scwin.componentEnable("4"); //대면 휴대폰결제  추가 (201401204 SDJ) N1412-00028
            if (sCmMetd == "03") {
                Div3_chk_AutoTrnfAcctSame.setDisabled(true);
                Div4_chk_AutoTrnfCrdtCardSame.setDisabled(false);
            } else if (sCmMetd == "05") {
                var sBankCd = Ds_LTIEA00.getCellData(0, "sBankCd");
                if (sBankCd == "012") {
                    sBankCd = "011";
                }
                var nBCdRow = wconv.findRow(Ds_OutBankCode, "CODE", sBankCd);
                if (nBCdRow != -1) {
                    Div3_chk_AutoTrnfAcctSame.setDisabled(false);
                    Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
                }
            }
        }
    } else if (sPsnGroupFlgcd == "20") {
        scwin.componentDisable("all");
        scwin.componentEnable("1");
        if (sPsnGroupFlgcd == "20") {
            scwin.componentEnable("2");
        }
        var sBankCd = Ds_LTIEA00.getCellData(0, "sBankCd");
        var nBCdRow = wconv.findRow(Ds_OutBankCode, "CODE", sBankCd);
        if (nBCdRow != -1) {
            Div3_chk_AutoTrnfAcctSame.setDisabled(false);
            Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
        }
        if (sBizCat == "1") {
        } else if (sBizCat == "3") {
            Div2.setStyle("display", "");
            Div2.setDisabled(false);
            //Div2.Top = 57;
            Div3.setStyle("display", "none");
            Div4.setStyle("display", "none");
            Div0.setStyle("display", "none");
        }
        btn_Save.setDisabled(false);
        btn_ExplDutyAgre.setDisabled(false);
    } else if (sPsnGroupFlgcd == "21") {
        if (sScanObjtYn == "Y") {
            scwin.componentDisable("all");
            scwin.componentEnable("1");
            scwin.componentEnable("2");
            scwin.componentEnable("3"); //대면 카드이체 추가 (20130128 LDH)
            if (sCmMetd == "03") {
                Div3_chk_AutoTrnfAcctSame.setDisabled(true);
                Div4_chk_AutoTrnfCrdtCardSame.setDisabled(false);
            } else if (sCmMetd == "05") {
                var sBankCd = Ds_LTIEA00.getCellData(0, "sBankCd");
                if (sBankCd == "012") {
                    sBankCd = "011";
                }
                var nBCdRow = wconv.findRow(Ds_OutBankCode, "CODE", sBankCd);
                if (nBCdRow != -1) {
                    Div3_chk_AutoTrnfAcctSame.setDisabled(false);
                    Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
                }
            }
        }
    }
    var sScanObjtYn = Ds_LTIEA00.getCellData(0, "sScanObjtYn");
    var sSsrtDate = Ds_LTIEA00.getCellData(0, "sSsrtDate");
    var sPlanNo = Ds_LTIEA00.getCellData(0, "sPlanNo");

    /*if (sBizCat == "1" && ParseInt(Ds_LTIEA00.GetColumn(0,"nDiffBussDays")) > 15){
    	alert("청약일자로부터 15영업일 이내 입금가능합니다.");
    	componentDisable("all");
    	return;	
    }*/
    if (sBizCat == "1" && wconv.mid(sDate, 0, 6) != wconv.mid(sSsrtDate, 0, 6)) {
        wprom.alert("월마감이 지난 청약입니다.");
        scwin.componentDisable("all");
        return;
    }
    if (sBizCat == "5") {
        // all : 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
        // 31 : 신용카드 1번, 32 : 신용카드 2번, 33 : 신용카드 3번
        scwin.componentEnable("2");
        scwin.componentDisable("3");
        scwin.componentDisable("4");
    }
    if (sBizCat == "6") {
        // all : 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
        // 31 : 신용카드 1번, 32 : 신용카드 2번, 33 : 신용카드 3번
        scwin.componentEnable("2");
        scwin.componentDisable("3");
        scwin.componentDisable("4");
    }


    //if (sBizCat == "1" || sBizCat == "3" || sBizCat == "4"){
    // DsWs_ACCAE01 수납이체
    // 카드이체시.. 조회값 셋팅 LDh
    if (sCmMetd == "03") {
        //Ds_LTIFA03.SetColumn(0,"sCrtorRelnFlag",Ds_LTIEA00.GetColumn(0,"sCrtorRelnFlag"));//sCrtorRelnFlag   
        //Ds_LTIFA03.SetColumn(0,"sRecvCrtorRelCd",Ds_LTIEA00.GetColumn(0,"sRecvCrtorRelCd"));//sRecvCrtorRelCd
        Ds_LTIFA03.setCellData(0, "sDpsrCd", DsWs_ACCAB02.getCellData(0, "sCardOwnerID")); //sDpsrCd (0)
        Ds_LTIFA03.setCellData(0, "sDpsrName", DsWs_ACCAB02.getCellData(0, "sCardOwner")); //sDpsrName (0)
        //Ds_LTIFA03.SetColumn(0,"sRecvCrtorTelNo",Ds_LTIEA00.GetColumn(0,"sRecvCrtorTelNo"));//sRecvCrtorTelNo	
        if (DsWs_ACCAB02.getRowCount() == 0) // 회계 관련 데이터가 전혀 없는 경우 계속분  데이터를 기초값으로 셋팅
        {
            Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", Ds_LTIEA00.getCellData(0, "sCrtorRelnFlag")); //sCrtorRelnFlag   
            Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_LTIEA00.getCellData(0, "sRecvCrtorRelCd")); //sRecvCrtorRelCd
            Ds_LTIFA03.setCellData(0, "sDpsrCd", Ds_LTIEA00.getCellData(0, "sDpsrCd")); //sDpsrCd (0)
            Ds_LTIFA03.setCellData(0, "sDpsrName", Ds_LTIEA00.getCellData(0, "sDpsrName")); //sDpsrName (0)	
            Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", Ds_LTIEA00.getCellData(0, "sRecvCrtorTelNo")); //sRecvCrtorTelNo	
        } else {
            // trace("카드이체시 조회값 셋팅 납입동의 조회ldh ");
            scwin.lfn_selectAgreYn(); // 납입동의 조회
            // 계약자 번호 // 피보험자 번호 //기타 
            if ((DsWs_ACCAB02.getCellData(0, "sCardOwnerID") == Ds_LTIEA00.getCellData(0, "sCrtorCd"))) {
                Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "10"); //계약자
            } else if ((DsWs_ACCAB02.getCellData(0, "sCardOwnerID") == Ds_LTIEA00.getCellData(0, "sInrpsCd"))) {
                Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "20"); //피보험자
            } else {
                Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "40"); //기타
            }
            Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", Ds_LTIEA00.getCellData(0, "sCrtorRelnFlag")); //sCrtorRelnFlag  
            Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_LTIDA50.getCellData(0, "sCrtorRelCd")); //sRecvCrtorRelCd
            Ds_LTIFA03.setCellData(0, "sDpsrCd", DsWs_ACCAB02.getCellData(0, "sCardOwnerID")); //sDpsrCd (0)
            Ds_LTIFA03.setCellData(0, "sDpsrName", DsWs_ACCAB02.getCellData(0, "sCardOwner")); //sDpsrName (0)
            Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", Ds_LTIDA50.getCellData(0, "sTelNo")); //sRecvCrtorTelNo				
        }
    }
    //trace("***************************************************************************************************>>>> "+ DsWs_ACCAE01.SaveXML());	
    //trace("***************************************************************************************************>>>> "+ DsWs_ACCAE01.getRowCountCount());
    if (DsWs_ACCAE01.getRowCount() > 0 && DsWs_ACCAE01.getCellData(0, "nOutAmt") > 0 && DsWs_ACCAE01.getCellData(0, "sOutAcctNo") != "") {
        //Div3.sOutAcctNo.Value = DsWs_ACCAE01.GetColumn(0, "sOutAcctNo");
        Ds_LTIFA01.setCellData(0, "sRealHmsRecvBankAcctNo", DsWs_ACCAE01.getCellData(0, "sOutAcctNo"));
        Div3_nTransAmt.setValue(DsWs_ACCAE01.getCellData(0, "nOutAmt"));
        Div3_sOutBankCode.setValue(DsWs_ACCAE01.getCellData(0, "sOutBankCode"));
        scwin.calcPremAmt(Div3_nTransAmt);
        scwin.componentDisable("all");
        btn_Save.setDisabled(false);
        btn_ExplDutyAgre.setDisabled(false);
        //Div1.chk_sEmailClasYn.Enable = false;
        //Div1.edt_sEmail.Enable = false;
        //lfn_sEmailChk();
        scwin.lfn_enableEmail(true);
        transStat = "Y";
    }



    // DsWs_ACCAB02 카드승인 sRspCode
    if (DsWs_ACCAB02.getRowCount() > 0 && ((DsWs_ACCAB02.getCellData(0, "sRspCode") == "0000" || DsWs_ACCAB02.getCellData(0, "sRspCode") == "D"))) {
        //Div4.sCardNo.Value = DsWs_ACCAB02.GetColumn(0, "sCardNo");
        Ds_LTIFA01.setCellData(0, "sCardNo1", DsWs_ACCAB02.getCellData(0, "sCardNo"));
        scwin.lfn_cardYearSetting(wconv.substr(DsWs_ACCAB02.getCellData(0, "sValidThru"), 0, 4)); //카드년도 셋팅		
        Div4_sValidThruYYYY.setValue(wconv.substr(DsWs_ACCAB02.getCellData(0, "sValidThru"), 0, 4));
        Div4_sValidThruMM.setValue(wconv.substr(DsWs_ACCAB02.getCellData(0, "sValidThru"), 4, 2));
        Div4_nReqAmt.setValue(DsWs_ACCAB02.getCellData(0, "nReqAmt"));
        Div4_edt_cardName.setValue(DsWs_ACCAB02.getCellData(0, "sIssueCardComName"));
        Div4_sAdmitNo.setValue(DsWs_ACCAB02.getCellData(0, "sAdmitNo"));
        Div4_nReqCnt.setValue(DsWs_ACCAB02.getCellData(0, "nReqCnt"));
        sDate = DsWs_ACCAB02.getCellData(0, "sReqDate");
        scwin.calcPremAmt(Div4_nReqAmt);
        scwin.componentDisable("all");
        btn_Save.setDisabled(false);
        btn_ExplDutyAgre.setDisabled(false);
        //Div1.chk_sEmailClasYn.Enable = true;
        //lfn_sEmailChk();
        scwin.lfn_enableEmail(true);
    }



    // DsWs_ACCAH01 휴대폰소액결제
    if (DsWs_ACCAH01.getRowCount() > 0) {
        Div0_edt_sHpAdmitNo.setValue(DsWs_ACCAH01.getCellData(0, "sCellDealNo"));
        Div0_msk_nHpAmt.setValue(DsWs_ACCAH01.getCellData(0, "nRectPrem"));
        Div0_cmb_phone1.setValue(DsWs_ACCAH01.getCellData(0, "sCellPhoneNo1"));
        Div0_edt_phone2.setValue(DsWs_ACCAH01.getCellData(0, "sCellPhoneNo2"));
        Div0_edt_phone3.setValue(DsWs_ACCAH01.getCellData(0, "sCellPhoneNo3"));
        Div0_cmb_cmmc.setValue(DsWs_ACCAH01.getCellData(0, "sCustCom"));
        scwin.calcPremAmt(Div0_msk_nHpAmt);
        scwin.componentDisable("all");
        btn_Save.setDisabled(false);
        //Div1.chk_sEmailClasYn.Enable = true;
        //lfn_sEmailChk();
        scwin.lfn_enableEmail(true);
    }


    //}
    if (DsWs_ACCBA01.getRowCount() > 0) {
        // DsWs_ACCBA01 재무수납대기
        scwin.componentDisable("all");
        return;
    }
    scwin.lfn_exceptCheck(); //예외처리.
};

//**************************************************************************************************
// Button7_OnClick
//
// @parameter :
// @description : SMS전송 팝업오픈
//**************************************************************************************************
scwin.Button7_OnClick = function(e) {
    var promise = Promise.resolve();
    promise = promise.then(function(rtnVal) {
	    var indata = {};
	    indata.pCustNo=sCrtorCd;
	    var popInfo = {
       			title : "문자메세지전송",
				width : 905,
				height : 690,
				indata : indata
		};
        return wprom.popupOpen("/ui/cbso/CBSO011P.xml", popInfo);//sArg, -1, -1, "TaskBar=true Resize=true", -1, -1); 
        //arg, -1, -1, "TaskBar=true Resize=true", -1, -1);
    });
    return promise;
};

//**************************************************************************************************
// setBankCode
//
// @parameter :
// @description : 무통장 입금은행 / 계좌선택시 은행 코드 ds에 셋팅
//**************************************************************************************************
scwin.setBankCode = function(info) {
    scwin.initAmt("2"); //실시간수납이체 초기화
    scwin.initAmt("3"); //카드수납란 초기화
    scwin.initAmt("4"); //휴대폰 초기화
    gfn_getServerTime();
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sDate = wconv.mid(getSysDate, 0, 8);
    sTime = wconv.mid(getSysDate, 8, 6);
    scwin.setCashReqAmt(this);
    if (wconv.length(info.newValue) == 0) {
        //Div1.chk_sEmailClasYn.Value = "N";
        Div1_chk_sEmailClasYn.setDisabled(false);
        Div1_edt_sEmail.setDisabled(false);
    } else {
        Div1_chk_sEmailClasYn.setValue("N");
        Div1_chk_sEmailClasYn.setDisabled(true);
        Div1_edt_sEmail.setDisabled(true);
    }
    if (Ds_LTIEA00.getCellData(0, "sScanObjtYn") == "Y") {
        //대면일 경우 은행코드 선택후 btn_Save 활성화. 
        btn_Save.setDisabled(false);
    }
};

//**************************************************************************************************
// setCashReqAmt
//
// @parameter :
// @description : 무통장 입금 은행 / 계좌선택시 현재 잔액을 금액에 자동으로 셋팅
//**************************************************************************************************
scwin.setCashReqAmt = function(obj, strPreText, strPostText) {
    if (Div2_sAcctNo.getValue() != null && Div2_sAcctNo.getValue() != "") {
        if (nMarginAmt.getValue() != "" && nMarginAmt.getValue() != "0") {
            Div2_nCashAmt.setValue(nMarginAmt.getValue());
        }
    }

    //보험 입금액 계산
    scwin.calcPremAmt(Div2_nCashAmt);
};

//**************************************************************************************************
// setTransReqAmt
//
// @parameter :
// @description : 실시간 수납이체 은행선택시 현재 잔액을 이체 금액에 자동으로 셋팅
//**************************************************************************************************
scwin.setTransReqAmt = function(info){ 
    scwin.initAmt("1"); //무통장입금 초기화
    //initAmt("2");  //실시간수납이체 초기화
    scwin.initAmt("3"); //카드수납란 초기화
    scwin.initAmt("4"); //휴대폰 초기화
    if (this.getValue() != null && this.getValue() != "") {
        if (nMarginAmt.getValue() != "" && nMarginAmt.getValue() > "0") {
            Div3_nTransAmt.setValue(nMarginAmt.getValue());
        } else {
            Div3_nTransAmt.setValue("");
        }
    } else {
        Div3_nTransAmt.setValue("");
    }


    //보험 입금액 계산
    scwin.calcPremAmt(Div3_nTransAmt.getValue());
    //trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> [" + Div3.nTransAmt.Value+ "]");
    scwin.lfn_enableEmail(true);
};

//**************************************************************************************************
// setTransReqAmt
//
// @parameter :
// @description : 카드번호 입력시 현재 잔액을 승인 금액에 자동으로 셋팅
//**************************************************************************************************
scwin.setCardReqAmt = function(obj, strPreText, strPostText) {
    var sCardNoValue = this.getValue();
    var sValidThruYYYYValue;
    var sValidThruMMValue;
    var nReqAmtValue;
    scwin.initAmt("1"); //무통장입금 초기화
    scwin.initAmt("2"); //실시간수납이체 초기화
    //initAmt("3");    //카드수납란 초기화
    scwin.initAmt("4"); //휴대폰 초기화
    if (this.getID() == "Div4_sCardNo") {
        //initAmt("31");    //카드수납1란 초기화
        scwin.initAmt("32"); //카드수납2란 초기화
        scwin.initAmt("33"); //카드수납2란 초기화
    } else if (this.getID() == "Div4_sCardNo2") {
        scwin.initAmt("31"); //카드수납1란 초기화
        //initAmt("32");    //카드수납2란 초기화
        scwin.initAmt("33"); //카드수납2란 초기화
    } else if (this.getID() == "Div4_sCardNo3") {
        scwin.initAmt("31"); //카드수납1란 초기화
        scwin.initAmt("32"); //카드수납2란 초기화
        //initAmt("33");    //카드수납2란 초기화
    }
    if (wconv.length(sCardNoValue) >= 13) {
        if (nMarginAmt.getValue() != "" && nMarginAmt.getValue() != "0") {
            if (this.getID() == "Div4_sCardNo") {
                Div4_nReqAmt.setValue(nMarginAmt.getValue());
                scwin.getCardName(Div4_edt_cardName, this, Div4_edt_cardCode);
            } else if (this.getID() == "Div4_sCardNo2") {
                Div4_nReqAmt2.setValue(nMarginAmt.getValue());
                scwin.getCardName(Div4_edt_cardName2, this, Div4_edt_cardCode);
            } else if (this.getID() == "Div4_sCardNo3") {
                Div4_nReqAmt3.setValue(nMarginAmt.getValue());
                scwin.getCardName(Div4_edt_cardName3, this, Div4_edt_cardCode);
            }
        }
    } else {
        if (this.getID() == "Div4_sCardNo") {
            Div4_edt_cardName.setValue("");
        } else if (this.getID() == "Div4_sCardNo2") {
            Div4_edt_cardName2.setValue("");
        } else if (this.getID() == "Div4_sCardNo3") {
            Div4_edt_cardName3.setValue("");
        }
    }

    //보험 입금액 계산
    scwin.calcPremAmt(Div2_nCashAmt);
    scwin.lfn_enableEmail(true);
};

//**************************************************************************************************
// setCallData
//
// @parameter :
// @description : 완전판매 처리후 화면 이동 및 패러미터를 던짐
//**************************************************************************************************
scwin.setCallData = function() {
    //alert("setCallData");
    var sendCtrSta = "4";
    if (collType == "2" || collType == "4") {
        sendCtrSta = "5";
    }
    var sVvalue = sBizTyp + sYym + sSeq + "^" + // 청약번호
        sendCtrSta + "^" + sFromDate.Value + "^" + nSumPrem.getValue() + "^" + // 합계보험료
        sCrtorCd + "^" + // 피보험자코드
        sCrtorName; // 피보험자명
    //alert("sVvalue = "+sVvalue);
    UserNotify(0, sVvalue);
};

//**************************************************************************************************
// setTransStat
//
// @parameter :
// @description : 실시간 수납이체 여부 셋팅(팝업에서 호출하는 함수)
//                Y : 실시간 수납이체 승인 성공
//                N : 실시간 수납이체 실패
//**************************************************************************************************
scwin.setTransStat = function(value) {
    transStat = getValue();
};

//**************************************************************************************************
// componentDisable
//
// @parameter :
// @description : 컴포넌트 disable용 함수
//                all : 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
//                31 : 신용카드 1번, 32 : 신용카드 2번, 33 : 신용카드 3번
//                
//**************************************************************************************************
scwin.componentDisable = function(value) {
    if (value == "1" || value == "all") {
        Div2_sAcctNo.setDisabled(true);
        //btnVirtualAcct.Enable = false;
        Div2_nCashAmt.setDisabled(true);
        //sPayPlanDate.Enable = false;
        Div2_sCmsCod.setDisabled(false);
        Div2_sCmsCod.setReadOnly(true);
        //Div2_sCmsCod.BKColor = "#EDECEB";
        Div2_chk_PrevAcctYN.setDisabled(true);
    }
    if (value == "2" || value == "all") {
        Div3_sOutBankCode.setDisabled(true);
        Div3_sOutAcctNo.setDisabled(true);
        Div3_nTransAmt.setDisabled(true);
        Div3_btn_CollTrans.setDisabled(true);
        btn_IvrInput1.setDisabled(true);
    }
    if (value == "31" || value == "3" || value == "all") {
        Div4_sCardNo.setDisabled(false);
        Div4_sCardNo.setReadOnly(true);
        //Div4_sCardNo.BKColor = "#EDECEB";
        Div4_cmb_sCrtorRelnFlag.setDisabled(true);
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(true);
        Div4_msk_sDpsrCd.setDisabled(true);
        Div4_edt_sDpsrName.setDisabled(true);
        Div4_edt_sHomeTel1.setDisabled(true);
        Div4_btn_PerAgree.setDisabled(true);
        Div4_sValidThruYYYY.setDisabled(true);
        Div4_sValidThruMM.setDisabled(true);
        Div4_nReqAmt.setDisabled(true);
        Div4_btnCardReq.setDisabled(true);
        Div4_edt_cardName.setDisabled(true);
        btn_IvrInput2.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
        btn_IvrInput4.setDisabled(true);
    }
    if (value == "4" || value == "all") {
        Div0_btn_hpReq.setDisabled(true);
        Div0_msk_nHpAmt.setDisabled(true);
        Div0_cmb_cmmc.setDisabled(true);
        Div0_cmb_phone1.setDisabled(true);
        Div0_edt_phone2.setDisabled(true);
        Div0_edt_phone3.setDisabled(true);
    }
    if (value == "all") {
        Div3_chk_AutoTrnfAcctSame.setDisabled(true);
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
        btn_Save.setDisabled(true);
        //btn_ExplDutyAgre.Enable = false;
        // 2018 상품개정
        if (parent.Ds_LTIDA00.getCellData(0, "sGdCd") == "2812" || parent.Ds_LTIDA00.getCellData(0, "sGdCd") == "2815") {} else {
            Div1_chk_sEmailClasYn.setDisabled(true);
            Div1_edt_sEmail.setDisabled(true);
        }
    }
};

//**************************************************************************************************
// componentEnable
//
// @parameter :
// @description : 컴포넌트 Enable 함수
//                all : 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드
//                31 : 신용카드 1번, 32 : 신용카드 2번, 33 : 신용카드 3번
//**************************************************************************************************
scwin.componentEnable = function(value) {
    if (value == "1" || value == "all") {
        Div2_sAcctNo.setDisabled(false);
        //btnVirtualAcct.Enable = true;
        //Div2.nCashAmt.Enable = true;
        //sPayPlanDate.Enable = true;
        Div2_sCmsCod.setDisabled(false);
        Div2_sCmsCod.setReadOnly(true);
        //cbs 임시 - Div2_sCmsCod.BKColor = "#EDECEB";
        Div2_chk_PrevAcctYN.setDisabled(false);
    }
    if (value == "2" || value == "all") {
        Div3_sOutBankCode.setDisabled(false);
        Div3_sOutAcctNo.setDisabled(false);
        btn_IvrInput1.setDisabled(false);
        //Div3.nTransAmt.Enable = true;
        Div3_btn_CollTrans.setDisabled(false);
        //cbs 임시
        //if (obj.getValue() == null || obj.getValue() == "") { //20171014 확인필요
        //    Div3_sOutAcctNo.setDisabled(true);
        //}
    }
    if (value == "31" || value == "3" || value == "all") {
        Div4_sCardNo.setDisabled(false);
        Div4_sCardNo.setReadOnly(false);
        //cbs 임시 - Div4_sCardNo.BKColor = "#FFFFFF";
        Div4_sValidThruYYYY.setDisabled(false);
        Div4_sValidThruMM.setDisabled(false);
        Div4_btnCardReq.setDisabled(false);
        Div4_cmb_sCrtorRelnFlag.setDisabled(false);
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(false);
        Div4_msk_sDpsrCd.setDisabled(false);
        Div4_edt_sDpsrName.setDisabled(false);
        Div4_edt_sHomeTel1.setDisabled(false);
        Div4_btn_PerAgree.setDisabled(false);
        btn_IvrInput2.setDisabled(false);
        btn_IvrInput3.setDisabled(false);
        btn_IvrInput4.setDisabled(false); //Div4.edt_cardName.Enable = true;
    }
    if (value == "4" || value == "all") {
        Div0_btn_hpReq.setDisabled(false);
        Div0_msk_nHpAmt.setDisabled(false);
        Div0_cmb_cmmc.setDisabled(false);
        Div0_cmb_phone1.setDisabled(false);
        Div0_edt_phone2.setDisabled(false);
        Div0_edt_phone3.setDisabled(false);
    }
    if (value == "all") {
        Div3_chk_AutoTrnfAcctSame.setDisabled(false);
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(false);
        btn_Save.setDisabled(false);
        Div1_chk_sEmailClasYn.setDisabled(false);
        Div1_edt_sEmail.setDisabled(false); 
        //Div1.chk_sElecNtltRvY.Enable = true;
        //Div1.chk_sElecNtltRvN.Enable = true;
    }
};

scwin.lfn_onKillFocus = function(e) {
    this.setValue(this.getValue().replace("-", ""));
    scwin.calcPremAmt();
};

scwin.chk_AutoTrnfAcctSame_OnClick = function(obj, strValue) {
    scwin.initAmt("all");
    var sBankCdValue = Ds_LTIEA00.getCellData(0, "sBankCd");

    //단위농협 >> 농협중앙회
    if (sBankCdValue == "012") {
        sBankCdValue = "011";
    }
    var sAcctNoValue = Ds_LTIEA00.getCellData(0, "sAcctNo");
    var nBCdRow = wconv.findRow(Ds_OutBankCode, "CODE", sBankCdValue);
    if (Div3_chk_AutoTrnfAcctSame.getValue() == 1) {
        Div3_sOutBankCode.setValue(sBankCdValue);
        //Div3.sOutAcctNo.Text = sAcctNoValue;
        Ds_LTIFA01.setCellData(0, "sRealHmsRecvBankAcctNo", sAcctNoValue);
        sDepoOwnerID = Ds_LTIEA00.getCellData(0, "sDpsrCd");
        sDepoName = Ds_LTIEA00.getCellData(0, "sDpsrName");
        Div3_nTransAmt.setValue(nSumPrem.getValue());
        scwin.calcPremAmt(Div3_nTransAmt);
        scwin.componentDisable("all");
        Div3_btn_CollTrans.setDisabled(false);
        //Div4.chk_AutoTrnfCrdtCardSame.Enable = false;
        Button7.setDisabled(false);
        Div3_chk_AutoTrnfAcctSame.setDisabled(false);
        btn_Save.setDisabled(false);
        btn_ExplDutyAgre.setDisabled(false);

        //Div1.chk_sEmailClasYn.Value = "Y";
        //Div1.chk_sEmailClasYn.Enable = true;
        //Div1.edt_sEmail.Enable = true;
        scwin.lfn_enableEmail(true);
    } else {
        Div3_sOutBankCode.setSelectedIndex(0);
        //Div3.sOutAcctNo.Text = "";
        Ds_LTIFA01.setCellData(0, "sRealHmsRecvBankAcctNo", "");

        //Div3.nTransAmt.Value = 0;
        //calcPremAmt(Div3.nTransAmt);
        scwin.componentEnable("all");
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(true);
        scwin.lfn_enableEmail(false);
        sDepoOwnerID = Ds_LTIEA00.getCellData(0, "sCrtorCd");
        sDepoName = Ds_LTIEA00.getCellData(0, "sCrtorName");
        Div3_nTransAmt.setValue("");
        scwin.calcPremAmt(Div3_nTransAmt);
    }
};

scwin.chk_AutoTrnfCrdtCardSame_OnClick = function(obj, strValue) {
    scwin.initAmt("all");
    if (Div4_chk_AutoTrnfCrdtCardSame.getValue() == 1) {
        scwin.componentDisable("all");

        //Div1.chk_sEmailClasYn.Value = "Y";
        //Div1.chk_sEmailClasYn.Enable = true;
        //Div1.edt_sEmail.Enable = true;
        scwin.lfn_enableEmail(true);
        Div4_chk_AutoTrnfCrdtCardSame.setDisabled(false);
        //Div3.chk_AutoTrnfAcctSame.Enable = false;
        Div4_btnCardReq.setDisabled(false);
        btn_Save.setDisabled(false);
        btn_ExplDutyAgre.setDisabled(false);
        Div4_btn_PerAgree.setDisabled(true);

        //Div4.sCardNo.Value = Ds_LTIEA00.GetColumn(0, "sAcctNo");
        Ds_LTIFA01.setCellData(0, "sCardNo1", Ds_LTIEA00.getCellData(0, "sAcctNo"));
        Div4_sValidThruYYYY.setValue(Ds_LTIEA00.getCellData(0, "sCardValdYearMnth").substr(0, 4));
        Div4_sValidThruMM.setValue(Ds_LTIEA00.getCellData(0, "sCardValdYearMnth").substr(4, 2));
        sDepoOwnerID = Ds_LTIEA00.getCellData(0, "sDpsrCd");
        sDepoName = Ds_LTIEA00.getCellData(0, "sDpsrName");
        scwin.lfn_selCard(); //카드 조회 및 셋팅
        scwin.getCardName(Div4_edt_cardName, Div4_sCardNo, Div4_edt_cardCode);
        Div4_nReqAmt.setValue(nSumPrem.getValue());
        scwin.calcPremAmt(Div4_nReqAmt);
    } else {
        scwin.componentEnable("all");
        Div3_chk_AutoTrnfAcctSame.setDisabled(true);
        scwin.lfn_enableEmail(false);
        wconv.clear(Ds_LTIFA03);
        Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", Ds_LTIEA00.getCellData(0, "sCrtorRelnFlag")); //sCrtorRelnFlag   
        Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", Ds_LTIEA00.getCellData(0, "sRecvCrtorRelCd")); //sRecvCrtorRelCd
        Ds_LTIFA03.setCellData(0, "sDpsrCd", Ds_LTIEA00.getCellData(0, "sDpsrCd")); //sDpsrCd (0)
        Ds_LTIFA03.setCellData(0, "sDpsrName", Ds_LTIEA00.getCellData(0, "sDpsrName")); //sDpsrName (0)	
        Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", Ds_LTIEA00.getCellData(0, "sRecvCrtorTelNo")); //sRecvCrtorTelNo	
        sDepoOwnerID = Ds_LTIEA00.getCellData(0, "sDpsrCd");
        sDepoName = Ds_LTIEA00.getCellData(0, "sDpsrName");
        Div4_nReqAmt.setValue("");
        scwin.calcPremAmt(Div4_nReqAmt);
    }
};

//**************************************************************************************************
// initAmt
//
// @parameter :
// @description : 컴포넌트 초기화 함수
//                all : 모든 컴포넌트, 1 : 무통장입금, 2 : 실시간 수납이체, 3 : 신용카드 4: 휴대폰
//                31 : 신용카드 1번, 32 : 신용카드 2번, 33 : 신용카드 3번
//                
//**************************************************************************************************
scwin.initAmt = function(value) {
    if (value == "1" || value == "all") {
        //무통장입금란
        Div2_sAcctNo.setSelectedIndex(0);
        Div2_nCashAmt.setValue("");
        Div2_sCmsCod.setValue("");
        Div2_chk_PrevAcctYN.setValue("0");
    }
    if (value == "2" || value == "all") {
        //실시간수납이체
        Div3_sOutBankCode.setSelectedIndex(0);
        Div3_sOutAcctNo.setValue("");
        Div3_nTransAmt.setValue("");
    }
    if (value == "31" || value == "3" || value == "all") {
        //카드수납란
        Div4_sCardNo.setValue("");
        Div4_sValidThruYYYY.setSelectedIndex(0);
        Div4_sValidThruMM.setSelectedIndex(0);
        Div4_nReqAmt.setValue("");
        Div4_edt_cardName.setValue("");
        Div4_sAdmitNo.setValue("");
        Div4_nReqCnt.setValue("");
        Div4_msk_sDpsrCd.setValue("");
        Div4_edt_sDpsrName.setValue("");
        Div4_edt_sHomeTel1.setValue("");
    }
    if (value == "4" || value == "all") {
        //휴대폰소액결재란
        Div0_cmb_phone1.setSelectedIndex(0);
        Div0_edt_phone2.setValue("");
        Div0_edt_phone3.setValue("");
        Div0_cmb_cmmc.setSelectedIndex(0);
        Div0_msk_nHpAmt.setValue("");
        Div0_edt_sHpAdmitNo.setValue("");
        Div0_edt_phoneResult.setValue("");
    }
    nPayAmt.setValue(0);
    nMarginAmt.setValue(nSumPrem.getValue());
};

//**************************************************************************************************
// chkDate
//
// @parameter :
// @description : 입금예정일 체크
//                현재일 이후로만 설정이 가능
//**************************************************************************************************
scwin.chkDate = function(obj, strOldText, strNewText) {
    gfn_getServerTime();
    getSysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    todayDate = wconv.mid(getSysDate, 0, 8);
};

scwin.lfn_Div0_cmb_phone1_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
    scwin.initAmt("1"); //무통장입금 초기화
    scwin.initAmt("2"); //실시간수납이체 초기화
    scwin.initAmt("3"); //카드수납란 초기화
    //initAmt("4");    //휴대폰 초기화
    Div0_msk_nHpAmt.setValue(nSumPrem.getValue());

    //보험 입금액 계산
    scwin.calcPremAmt(Div0_msk_nHpAmt.getValue());
};

scwin.lfn_phone_init = function() {
    /*
    	Div0.cmb_cmmc.Index = 0;
    	Div0.cmb_phone1.Index = 0;
    	Div0.edt_phone2.text = "";
    	Div0.edt_phone3.text = "";
    	Div0.msk_nHpAmt.Value = "";
    */
    scwin.initAmt("4"); //휴대폰 초기화
};

scwin.lfn_sEmailChk = function() {
    var sEmail = Ds_RecvComm.getCellData(0, "sEmail");
    if (wconv.length(sEmail) > 0) {
        Div1_chk_sEmailClasYn.setValue("N");
        Div1_chk_sEmailClasYn.setDisabled(false);
        Div1_edt_sEmail.setDisabled(false);
        Div1_edt_sEmail.setValue(sEmail);
    } else {
        Div1_chk_sEmailClasYn.setValue("N");
        Div1_chk_sEmailClasYn.setDisabled(true);
        Div1_edt_sEmail.setDisabled(true);
        Div1_edt_sEmail.setValue("");
    }
};

//화면 셋팅 (배서시에는 무통장 입금은 제외)..
//예외처리 추가. L2802000004 는 예외 처리.
scwin.lfn_scrrnSet = function(sBizCat) {
    var sCrNoTemp = Ds_RecvComm.getCellData(0, "sCrNo");
    if (sBizCat == "3" && ((sCrNoTemp = "L28020000004"))) {
        //예외처리 배서시에 무통장 입금이 가능하도록 무통장 view처리
        Div0.setStylr("display", "none");
//        var nDiv0Height = Div0.Height;
//        btn_Save.Top = btn_Save.Top - nDiv0Height; //2017.07.25 [N1707-00121] 배서 입금화면 가상계좌 활성화 요청
    } else if (sBizCat == "3" && ((sPsnGroupFlgcd == "20" || sPsnGroupFlgcd == "21"))) {
        //변경분 수납이고 (단체취급계약(계약자) 또는 단체취급계약(피보험자))의 경우, 휴대폰 소액결제 제외처리
//        btn_Save.Top = 8;
//        btn_Save.Left = btn_Save.Left - 4; //저장 버튼 위치변경
//        Button7.Left = btn_Save.Left - Button7.Width - 2; //SMS발신 버튼 위치변경
    } else if (sBizCat == "3") {
        Div2.setStylr("display", "none");
//        var nDiv2Height = Div2.Height;
//        Div0.Top = Div0.Top - nDiv2Height;
//        Div3.Top = Div3.Top - nDiv2Height;
//        Div4.Top = Div4.Top - nDiv2Height;
//        btn_Save.Top = btn_Save.Top - nDiv2Height;
//        btn_IvrInput1.Top = btn_IvrInput1.Top - nDiv2Height;
//        btn_IvrInput2.Top = btn_IvrInput2.Top - nDiv2Height;
//        btn_IvrInput3.Top = btn_IvrInput3.Top - nDiv2Height;
//        btn_IvrInput4.Top = btn_IvrInput4.Top - nDiv2Height;
    }
};

scwin.init = function() {
    //alert("F040_Div1_OnLoadCompleted()");

    //Ds_Year setting
    wconv.clear(Ds_Year);
    var sYear = wconv.substr(gfn_GetSysTime(), 0, 4);
    util.appendRow(Ds_Year);
    Ds_Year.setCellData(0, "CODE", "");
    Ds_Year.setCellData(0, "TEXT", "====");
    for (var i = 1; i < 16; i++) {
        util.appendRow(Ds_Year);
        Ds_Year.setCellData(i, "CODE", wconv.toNumber(sYear) + i - 1);
        Ds_Year.setCellData(i, "TEXT", wconv.toNumber(sYear) + i - 1);
    }
    Div4_sValidThruYYYY.setSelectedIndex(0);
    var sBizCat = parent.Ds_RecvComm.getCellData(0, "sBizCat");
    if (sBizCat == "3") {
        wconv.copy(Ds_RecvComm, parent.Ds_RecvComm);
        scwin.doInit();
        scwin.lfn_scrrnSet(sBizCat);
    }
    var sLoanNo = parent.Ds_RecvComm.getCellData(0, "sLoanNo");
    
    //cbs
    Ds_LTIFA03.setRowPosition(0, false);
    
    // 2018 상품개정
    if((parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2120") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2126") ||
       (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2312") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2313") ||
       (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2122") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2128")){
		btn_moni.setStyle("display", "");
	}else{
		btn_moni.setStyle("display", "none");
	}
    
    /*	
	//대리점인지 여부(30:대리점,33:사용인,35:TM사용인)
	if(gUserDuty == "30" || gUserDuty == "33" || gUserDuty == "35"){
		//sAgncYn = "Y";
	}
	

	var obj_list = ["Div4.sCardNo","Div4.sCardNo2","Div4.sCardNo3", "Div3.sOutAcctNo"]; //maskEdit 오브젝트 리스트
	var ds_list = ["Ds_LTIFA01","Ds_LTIFA01","Ds_LTIFA01","Ds_LTIFA01"]; //데이터셋 리스트
	var column_list = ["sCardNo1","sCardNo2","sCardNo3","sRealHmsRecvBankAcctNo"];  //실제값이 보관될 데이터셋의 컬럼
	var mask_list = ["####-####-####-####","####-####-####-####","####-####-####-####","#### #### #### ####"];  //화면에 표시될 마스크
	
	if (sAgncYn == "Y"){
		mask_list = ["####-####-####-****","####-####-####-****","####-####-####-****","#####***********"];
	}
	
	//gfn_mkEditPassWord(obj_list, ds_list , column_list , mask_list);
*/
};

scwin.lnf_btn_ExplDutyAgre_OnClick = function(obj) {
    if (sBizCat == "1") {
        if (Div1_chk_sElecNtltRvY.getValue() == "0" && Div1_chk_sElecNtltRvN.getValue() == "0") {
            wprom.alert("전자적 방법으로  계약안내자료 수령 동의 여부 란에 체크하여주십시오.");
            return false;
        }
    }
    var arg = {};
    arg.sApplyNo=sPlanNo;
    arg.sGdCd=parent.Ds_LTIDA00.getCellData(0, "sGdCd");

    //계약확정 여부
    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "00") {
        arg.sCrYn="1";
    } else {
        arg.sCrYn="0";
    }


    //피보험자 정보
    arg.sCustNo=parent.Ds_Pibo.getCellData(wconv.findRow(parent.Ds_Pibo, "sMinsrRelnCd", "10"), "sInrpsCd");
    arg.nSeqNo=parent.Ds_Pibo.getCellData(wconv.findRow(parent.Ds_Pibo, "sMinsrRelnCd", "10"), "nCstChngSeqno");
    arg.sCustName=parent.Ds_Pibo.getCellData(wconv.findRow(parent.Ds_Pibo, "sMinsrRelnCd", "10"), "sInrpsName");
    arg.sScanObjtYn=parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn");
    arg.sPsnGroupFlgcd=parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");

    //계약자정보
    arg.sCrtorCd=parent.Ds_LTIDA03.getCellData(0, "sCrtorCd");
    //arg += "nSeqNo=" + quote(Ds_LTIDA03.GetColumn(0,"nCstChngSeqno"));
    //arg += "sCustName=" + quote(Ds_LTIDA03.GetColumn(0,"sCrtorName"));
    //var result = Dialog("dpt_rec::F400_Pop.xml", arg); //modal
    var promise = Promise.resolve();
    promise = promise.then(function(){
    	//var result = Open("dpt_rec::F400_Pop.xml", arg, 728, 800, "TaskBar=true Resize=true"); // modaless
    	var popInfo = {
    		width : 728,
    		height : 800,
    		indata : arg
    	};
    	return wprom.popupOpen("/ui/cbsc/CBSC066P.xml", popInfo)
    });
    promise = promise.then(function(result){
	    if (result == "1") {
	    	descrFlag = result;
	        btn_Save.setDisabled(false); //btn_ExplDutyAgre.Enable = false;
	    }
    });
	return promise;    
};

scwin.lnf_btn_InsInrpsAgre_OnClick = function(obj) {
    var promise = Promise.resolve();
    //sApplyNo(청약번호), sAgmGvs(동의구분)
    var arg = {};
    arg.sApplyNo=sPlanNo;
    arg.sAgmGvs="10";
    promise = promise.then(function(rtnVal) {
    	var popInfo = {
    		title : "",
    		width : 800,
    		height : 800,
    		indata : arg
    	};
        return wprom.popupOpen("PROJECT_PATH_TEMP/com_pop/PriInfoAgree_Pop.xml", popInfo); 
    });
    return promise;
};

scwin.lfn_chkEmail = function() {
    var sEmail = Div1_edt_sEmail.getValue();
    var char1 = wconv.pos(sEmail, "@");
    if (wconv.length(sEmail) == 0) {
        wprom.alert("이메일 주소가 입력되지 않았습니다.");
        return false;
    } else if (char1 == -1) {
        wprom.alert("이메일 주소가 잘 못 입력되었습니다.");
        return false;
    }
};

scwin.lfn_enableEmail = function(flg) {
    var sEmail = Ds_RecvComm.getCellData(0, "sEmail");
    if (wconv.length(sEmail) > 0) {
        //Div1.chk_sEmailClasYn.value = "N";
        Div1_edt_sEmail.setDisabled(flg);
        Div1_chk_sEmailClasYn.setDisabled(flg);
        Div1_edt_sEmail.setValue(sEmail);
    } else {
        Div1_chk_sEmailClasYn.setValue("N");
        Div1_edt_sEmail.setDisabled(true);
        Div1_chk_sEmailClasYn.setDisabled(true);
        Div1_edt_sEmail.setValue("");
    }
};

scwin.lfn_recvStnby = function() {
	var pro = Promise.resolve();
	pro = pro.then(function(rv) {
		return util.winTopShowModalPromise();
	});
	pro = pro.then(function(rv) {
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    warning.DataObject = DOBJ_DataSearch.ID;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.dpt.rec.task.FAF040Task", "recvStnbySave", "", "");
    gfn_SetParam(MethodObj, "sBizCat", sBizCat);
    gfn_SetParam(MethodObj, "sPlanNo", sPlanNo);
    gfn_CallService(SOBJ_Search, DOBJ_DataSearch, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF040Task", "recvStnbySave");
	MethodObj.setId("recvStnbySave");
    MethodObj.setParam("sBizCat", sBizCat);
    MethodObj.setParam("sPlanNo", sPlanNo);
	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIEA00");
	MethodObj.addXPath("//*/LTIFA31");
	MethodObj.addXPath("//*/data/ACCBA01/ACCBA01");
	MethodObj.addXPath("//*/hashtable/data[@hashkey='ACCAE01']/ACCAE01");
	MethodObj.addXPath("//*/data/vector/data/ACCAB02");
	MethodObj.addXPath("//*/ACCAH01/ACCAH01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_LTIEA00");
	util.jSonDsCreate(_tranSync.getDsJson("LTIFA31"), "DsWs_LTIFA01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCBA01"), "DsWs_ACCBA01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAE01"), "DsWs_ACCAE01");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAB02"), "DsWs_ACCAB02");
	util.jSonDsCreate(_tranSync.getDsJson("ACCAH01"), "DsWs_ACCAH01");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning");
    
    if (warning.getRowCount() != 0) {
        wprom.alert(warning.getCellData(0, "msg"));
        return;
    } else {
        // 이력 저장(심사)
        parent.scwin.saveHistory("4");
        //trace("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 설계진행상태 update ");
        //이체 및 승인요청이 완료되었을대 완전판매 확인 팝업 LDh
        if (sBizCat == "1") {
            if (confirm("완전판매 확인을 하시겠습니까? ")) {
                scwin.doReceiptProc(btn_Save); /*return wprom.confirm(가이드참조)*/
            }
        }
    }
    });
    
    pro = pro.then(function(rv) {
 		util.winTopHideModal();
	});
	
	return pro;
};

scwin.initDescrFlag = function() {
    descrFlag = false;
    btn_ExplDutyAgre.setDisabled(false);
};

/*function lfn_LapsCnclCrSearch(sInrpsCd)
{	
	DsWs_LapsCnclCrCnt.Clear();
	SOBJ_Search.WSDL = gWsdlBasis;
	var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.psv.ens.task.EAD071Task", "selLapsCnclCrList", "", "");
	gfn_SetParam(MethodObj, "sInrpsCd", sInrpsCd);
	gfn_SetParam(MethodObj, "sSsrtScrnYn", "Y");
	gfn_SetParam(MethodObj, "sPlanNo", sPlanNo);
	
	gfn_CallService(SOBJ_Search, DOBJ_LapsCnclCrSearch, MethodObj);	
   
   //trace(replace(gfn_XmlEncoder(DOBJ_LapsCnclCrSearch.Contents), "><", ">\n<")); 
   //trace(DsWs_LapsCnclCrCnt.SaveXML());
   
	if(warning_LapsCnclCrCnt.GetCount() <> 0){
		alert(warning_LapsCnclCrCnt.GetColumn(0, "msg"));
		return;
	}
	return DsWs_LapsCnclCrCnt.GetRowCount();
	//var nCnclCrCnt = ParseInt(DsWs_LapsCnclCrCnt.GetColumn(0, "nCnclCrCnt"));
	//var nLapsCrCnt = ParseInt(DsWs_LapsCnclCrCnt.GetColumn(0, "nLapsCrCnt"));
		
	//return nCnclCrCnt + nLapsCrCnt;
}
*/
scwin.F040_Div1_OnUnloadCompleted = function(obj) {
    if (sBizCat == "1") {
        scwin.lfn_ChkClose();
        return false;
    }
};

scwin.lfn_ChkClose = function() {
    scwin.chkCollType();
    if (Div1.collType != "0" && Div1_btn_Save.Enable == true) {
        var sMsg = "";
        if (collType == "1") {
            //카드
            //sMsg = "무통장입금 입금대기 저장 전 상태입니다.\n수납확정을 하십시오.";
            wconv.close(sPlanProgRankCd);
        } else if (collType == "2") {
            //카드
            sMsg = "카드승인 후 수납확정 전 상태입니다. \n수납확정을 하십시오.";
        } else if (collType == "4") {
            //실시간 수납이체시
            sMsg = "수납이체 후 수납확정 전 상태입니다. \n수납확정을 하십시오.";
        } else if (collType == "9") {
            // 휴대폰
            sMsg = "소액결제 후 수납확정 전 상태입니다. \n수납확정을 하십시오.";
        }

        /*	
        		var bFlg = Confirm(sMsg);
        		if(bFlg == 1){
        			this.Close(sPlanProgRankCd);
        		}else{
        			return false;
        		}
        */
        wprom.alert(sMsg);
    } else {
        wconv.close(sPlanProgRankCd);
    }
};

scwin.lfn_sOutAcctNo_OnCharChanged = function(obj, strPreText, strPostText) {
    scwin.initAmt("1"); //무통장입금 초기화
    //initAmt("2");  //실시간수납이체 초기화
    scwin.initAmt("3"); //카드수납란 초기화
    scwin.initAmt("4"); //휴대폰 초기화
    scwin.calcPremAmt(Div3_nTransAmt.getValue());
};

scwin.lfn_CardImagePop = function(obj) {
    var arg = "";
    var result = open("accpopup::R801_Pop.xml", arg, 656, 376);
};

scwin.lfn_CardListByAgentPop = function(obj) {
    var arg = "";
    //var result = Dialog("accpopup::R800_Pop.xml", arg, 656, 376);	
    var result = open("accpopup::R800_Pop.xml", arg, 656, 376);
};

//**************************************************************************************************
// Div4_sCrtorRelnFlag_OnChanged
//
// @parameter :
// @description : 삼자 거래일때 후속단 화면 셋팅
//**************************************************************************************************
scwin.Div4_sCrtorRelnFlag_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
    //trace("Div4_sCrtorRelnFlag_OnChanged init" + strText.value);
    if (obj.getValue() == "init") {
        Div4_cmb_sRecvCrtorRelFlag.setValue("");
        Div4_edt_sHomeTel1.setValue("");
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(true);
        Div4_msk_sDpsrCd.setDisabled(true);
        Div4_edt_sDpsrName.setDisabled(true);
        Div4_edt_sHomeTel1.setDisabled(true);
        Div4_btn_PerAgree.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
    } else if (obj.getValue() == "10") {
        Div4_cmb_sRecvCrtorRelFlag.setValue("");
        Div4_edt_sHomeTel1.setValue("");
        Div4_msk_sDpsrCd.setValue("");
        Div4_edt_sDpsrName.setValue("");
        Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "10");
        Ds_LTIFA03.setCellData(0, "sDpsrCd", Ds_LTIEA00.getCellData(0, "sCrtorCd"));
        Ds_LTIFA03.setCellData(0, "sDpsrName", Ds_LTIEA00.getCellData(0, "sCrtorName"));
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(true);
        Div4_msk_sDpsrCd.setDisabled(true);
        Div4_edt_sDpsrName.setDisabled(true);
        Div4_edt_sHomeTel1.setDisabled(true);
        Div4_btn_PerAgree.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
    } else if (obj.getValue() == "20") {
        Div4_cmb_sRecvCrtorRelFlag.setValue("");
        Div4_edt_sHomeTel1.setValue("");
        Div4_msk_sDpsrCd.setValue("");
        Div4_edt_sDpsrName.setValue("");
        Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "20");
        Ds_LTIFA03.setCellData(0, "sDpsrCd", Ds_LTIEA00.getCellData(0, "sInrpsCd"));
        Ds_LTIFA03.setCellData(0, "sDpsrName", Ds_LTIEA00.getCellData(0, "sInrpsName"));
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(true);
        Div4_msk_sDpsrCd.setDisabled(true);
        Div4_edt_sDpsrName.setDisabled(true);
        Div4_edt_sHomeTel1.setDisabled(true);
        Div4_btn_PerAgree.setDisabled(true);
        btn_IvrInput3.setDisabled(true);
    } else if (obj.getValue() == "40") {
        Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", "40");
        Div4_msk_sDpsrCd.setValue("");
        Div4_edt_sDpsrName.setValue("");
        Div4_cmb_sRecvCrtorRelFlag.setValue("");
        Div4_msk_sDpsrCd.setDisabled(false);
        Div4_edt_sDpsrName.setDisabled(false);
        Div4_cmb_sRecvCrtorRelFlag.setDisabled(false);
        Div4_edt_sHomeTel1.show();
        Div4_edt_sHomeTel1.setDisabled(false);
        Div4_btn_PerAgree.show();
        Div4_btn_PerAgree.setDisabled(false);
        btn_IvrInput3.setDisabled(false);
    }
};

//**************************************************************************************************
// lfn_btn_PerAgree_OnClick
//
// @parameter : sPlanNo, sInrpsCd , sInrpsName 
// var arg = " sPlanNoOri=" + ; == 청약번호
// arg += " sDpsrName=" + ; == 카드 청구자
// arg += " sDpsrCd="+;   == 카드 청구자 주민번호
// arg += " sCrtorName="+; == 계약자 명
// arg += " nApplPrem="+; == 납입 보험료
// arg += " sGdCdName="+; == 상품명
// @description : 제3자 납입동의 처리하기.
//**************************************************************************************************
scwin.lfn_btn_PerAgree_OnClick = function(obj) {
    var promise = Promise.resolve();
    //sApplyNo(청약번호), sAgmGvs(동의구분)
    //납입 동의전 데이터 정상여부 체크
    if (Ds_LTIFA03.getCellData(0, "sCrtorRelnFlag") == "40") {
        if (wconv.length(Ds_LTIFA03.getCellData(0, "sRecvCrtorRelCd")) != 2) {
            wprom.alert("계약자와 관계를 확인하세요");
            Div4_cmb_sRecvCrtorRelFlag.focus();
            return;
        }
        if (wconv.length(Ds_LTIFA03.getCellData(0, "sDpsrCd")) != 13) {
            wprom.alert("소유자 번호를 확인하세요");
            Div4_msk_sDpsrCd.focus();
            return;
        }
        if (wconv.length(Ds_LTIFA03.getCellData(0, "sDpsrName")) == 0) {
            wprom.alert("소유자 이름을 확인하세요");
            Div4_edt_sDpsrName.focus();
            return;
        }
        if (wconv.length(Ds_LTIFA03.getCellData(0, "sRecvCrtorTelNo")) < 8) {
            wprom.alert("전화번호를 확인하세요");
            Div4_edt_sHomeTel1.focus();
            return;
        }

        // 유효한 전화번호 체크
        if (wconv.length(Div4.edt_sHomeTel1) > 0) {
            if (isValidPhone(Div4.edt_sHomeTel1)) {} else {
                //alert(errStr + " 무효한 번호입니다. \n재입력해 주세요");
                return false; //alert("무효");
            }
        }
    }



















    /*
    //입금자 모집인동일여부체크
    if(lfn_selectRecvClprSameYn("2") == false) {
    	alert("모집인과 보험료 입금자는 동일할 수 없습니다.");
    	return false;
    }
    */
    var arg = {};
    arg.sPlanNoOri=sPlanNo;
    arg.sDpsrName=Ds_LTIFA03.getCellData(0, "sDpsrName");
    arg.sDpsrCd=Ds_LTIFA03.getCellData(0, "sDpsrCd");
    arg.sCrtorName=Ds_LTIEA00.getCellData(0, "sCrtorName");
    arg.nApplPrem=Ds_RecvComm.getCellData(0, "nRecpPrem");
    // Ds_LTIFA01.GetColumn(0, "nCardDlAmt1")
    arg.sGdCdName=Ds_LTIEA00.getCellData(0, "sGdCdName");
    arg.sRecvCrtorRelCd=Ds_LTIFA03.getCellData(0, "sRecvCrtorRelCd");
    arg.sRecvCrtorTelNo=Ds_LTIFA03.getCellData(0, "sRecvCrtorTelNo");
    arg.sCmMetd="03";
    promise = promise.then(function(rtnVal) {
        //카드이체
        //trace("POP===========sDpsrCd===>"+sDpsrCd);
        var popInfo = {
       			title : "개인(신용)정보처리 동의",
				width : 685,
				height : 315,
				indata : arg        
        };
        return wprom.popupOpen("/ui/cbsc/CBSC011P.xml", popInfo);
    });
    promise = promise.then(function(result) {
        if (result == "1") {
            sRecvCardFlag = true;
        } else {
            sRecvCardFlag = false;
        }
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_selCard
// 내용        : 카드정보 조회
//---------------------------------------------------------------------------
scwin.lfn_selCard = function() {
console.log("=====> scwin.lfn_selCard : "+ sPlanNo);
    Ds_LTIFA03.undoAll();
    //Ds_LTIFA03.clear();
    //Ds_LTIFA03.AddRow();
    wconv.clear(DsWs_CrntAcct);
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    warning.DataObject = DOBJ_search.ID;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData", "", "");
    gfn_SetParam(MethodObj, "sBizCat", "1"); // 처리구분 : 1(청약),2(기타),3(변경)
    gfn_SetParam(MethodObj, "sCrNo", sPlanNo);
    var result = gfn_CallService(SOBJ_Search, DOBJ_search, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF041Task", "getDptCrData");
	MethodObj.setId("getDptCrData");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam( "sBizCat", "1"); // 처리구분 : 1(청약),2(기타),3(변경)
    MethodObj.setParam( "sCrNo", sPlanNo);
	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIEA00");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_CrntAcct");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    //trace(replace(gfn_XmlEncoder(DOBJ_search.Value), "><", ">\n<"));
    if (DsWs_CrntAcct.getRowCount() > 0) {
        Ds_LTIFA03.setCellData(0, "sCrtorRelnFlag", DsWs_CrntAcct.getCellData(0, "sCrtorRelnFlag"));
        Ds_LTIFA03.setCellData(0, "sRecvCrtorRelCd", DsWs_CrntAcct.getCellData(0, "sRecvCrtorRelCd"));
        Ds_LTIFA03.setCellData(0, "sDpsrCd", DsWs_CrntAcct.getCellData(0, "sDpsrCd"));
        Ds_LTIFA03.setCellData(0, "sDpsrName", DsWs_CrntAcct.getCellData(0, "sDpsrName"));
        Ds_LTIFA03.setCellData(0, "sRecvCrtorTelNo", DsWs_CrntAcct.getCellData(0, "sRecvCrtorTelNo"));
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_selectAgreYn
// 내용        : 납입동의가 되었는지 확인 조회 쿼리
//---------------------------------------------------------------------------
scwin.lfn_selectAgreYn = function() {
    wconv.clear(DsWs_LTIDA50); //리스트 내용삭제
    Ds_LTIDA50.removeAll();
    var sDpsrCd;
    var sCrtorRelnFlag;
    var sCmMetdt;
    /*
    SOBJ_select.WSDL = gds.gWsdlBasis; // 서비스 Obj WSDC 설정
    var MethodObj = gfn_CreateMethodObj(SOBJ_select, "com.inswave.longterm.dpt.rec.task.FAF400Task", "selectRecvAgreYn", "", "");
    sDpsrCd = Ds_LTIFA03.getCellData(0, "sDpsrCd");
    sCrtorRelnFlag = Ds_LTIFA03.getCellData(0, "sCrtorRelnFlag");

    //2014.09.25 By SDJ (N1408-00240)
    //대면일경우 보험료3자동의는 동의서확인화면에서 모두 자동이체로 세팅했기에..
    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && parent.Ds_LTIDA00.getCellData(0, "sCrNoType") == "M") {
        sCmMetdt = "05";
    } else {
        sCmMetdt = "03";
    }
    gfn_SetParam(MethodObj, "sPlanNo", sPlanNo);
    gfn_SetParam(MethodObj, "sCustNo", sDpsrCd);
    gfn_SetParam(MethodObj, "sCmMetd", sCmMetdt);
    var result = gfn_CallService(SOBJ_select, DOBJ_select2, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF400Task", "selectRecvAgreYn");
	MethodObj.setId("getAgentList");
	//MethodObj.setParam("sAgentCode", gUserID);
    sDpsrCd = Ds_LTIFA03.getCellData(0, "sDpsrCd");
    sCrtorRelnFlag = Ds_LTIFA03.getCellData(0, "sCrtorRelnFlag");
    //2014.09.25 By SDJ (N1408-00240)
    //대면일경우 보험료3자동의는 동의서확인화면에서 모두 자동이체로 세팅했기에..
    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && parent.Ds_LTIDA00.getCellData(0, "sCrNoType") == "M") {
        sCmMetdt = "05";
    } else {
        sCmMetdt = "03";
    }
    MethodObj.setParam( "sPlanNo", sPlanNo);
    MethodObj.setParam( "sCustNo", sDpsrCd);
    MethodObj.setParam( "sCmMetd", sCmMetdt);
	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/CUSAA35");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("CUSAA35"), "DsWs_LTIDA50");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    //wconv.trace(replace(gfn_XmlEncoder(DOBJ_select2.getValue()), "><", ">\n<"));
    if (DsWs_LTIDA50.getCellData(0, "result") == 0) {
        sRecvCardFlag = false;
    } else {
        wconv.copy(Ds_LTIDA50, DsWs_LTIDA50);
        sRecvCardFlag = true;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_exceptCheck()
// 내용        : 예외처리
//---------------------------------------------------------------------------
scwin.lfn_exceptCheck = function() {
    //trace(Ds_LTIEA00.SaveXML());
    // 자동이체시 기타 이체일경우는 계속분 데이터를 가져올수 없게 처리함.
    if (Ds_LTIEA00.getCellData(0, "sCmMetd") == "05" && Ds_LTIEA00.getCellData(0, "sCrtorRelnFlag") == "40") {
        Div3_chk_AutoTrnfAcctSame.setDisabled(true);
    }


    // 카드수납  기타 이체일경우만 개인신용정보 동의 활성화
    if (Ds_LTIEA00.getCellData(0, "sCmMetd") == "03" && Ds_LTIEA00.getCellData(0, "sCrtorRelnFlag") == "40") {
        Div4_btn_PerAgree.setDisabled(false);
    } else {
        Div4_btn_PerAgree.setDisabled(true);
    }
};

//---------------------------------------------------------------------------
// function 명 : Btn_IVR_OnClick
// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
// param 
// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
// 2: lfn_IVR_CallBack (콜백 함수명)
// 3 : ""  (콜백 받는 변수명 1)
// 4 : nRow (콜백 받는 변수명 2)
//---------------------------------------------------------------------------
scwin.Btn_IVR_OnClick = function(obj, nRow) {
    switch (obj) {
        case btn_IvrInput1:
            ivrOpenPop("A", "", "lfn_IVR_CallBack", "btn_IvrInput1", "0");
            // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호, V : 유효기간)
            break;
        case btn_IvrInput2:
            ivrOpenPop("C", "", "lfn_IVR_CallBack", "btn_IvrInput2", "0");
            // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호, V : 유효기간)
            break;
        case btn_IvrInput3:
            ivrOpenPop("J", "", "lfn_IVR_CallBack", "btn_IvrInput3", "0");
            // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호, V : 유효기간)
            break;
        case btn_IvrInput4:
            ivrOpenPop("V", "", "lfn_IVR_CallBack", "btn_IvrInput4", "0");
            // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호, V : 유효기간)
            break;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_IVR_CallBack
// 내용        :  IVR 콜백함수
//---------------------------------------------------------------------------
scwin.lfn_IVR_CallBack = function(id, nRow, val) {
    if (wconv.length(val) > 0) {
        switch (id) {
            case "btn_IvrInput1":
                Div3_sOutAcctNo.setValue(val);
                break;
            case "btn_IvrInput2":
                Div4_sCardNo.setValue(val);
                break;
            case "btn_IvrInput3":
                Div4_msk_sDpsrCd.setValue(val);
                break;
            case "btn_IvrInput4":
                console.log(val);
                var MM = wconv.substr(val, 0, 2);
                consloe.log(MM);
                var YY = "20" + wconv.substr(val, 2, 4);
                console.log(YY);
                Div4_sValidThruYYYY.setValue(YY);
                Div4_sValidThruMM.setValue(MM);
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_PassExplDuty
// 내용        :  대면일 경우 설명의무 동의 자동처리.
//---------------------------------------------------------------------------
scwin.lfn_PassExplDuty = function() {
	/*
    SOBJ_select.WSDL = gds.gWsdlBasis; // 서비스 Obj WSDC 설정
    var MethodObj = gfn_CreateMethodObj(SOBJ_select, "com.inswave.longterm.dpt.rec.task.FAF400Task", "insertImgeAfterAgreYn", "", "");
    gfn_SetParam(MethodObj, "sPlanNo", sPlanNo);
    var result = gfn_CallService(SOBJ_select, DOBJ_Send_Image, MethodObj);
    */
   	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF400Task", "insertImgeAfterAgreYn");
	MethodObj.setId("insertImgeAfterAgreYn");
    MethodObj.setParam( "sPlanNo", sPlanNo);
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
};

//---------------------------------------------------------------------------
// function 명 : lfn_cardYearSetting
// 내용        :  카드 과거 년도 셋팅(20140422)
//---------------------------------------------------------------------------
scwin.lfn_cardYearSetting = function(Year) {
    if (wconv.findRow(Ds_Year, "CODE", Year) < 0) {
        util.appendRow(Ds_Year);
        Ds_Year.setCellData(0, "CODE", Year);
        Ds_Year.setCellData(0, "TEXT", Year);
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_getRealNo
// 내용        : 실주민번호 조회
//---------------------------------------------------------------------------
scwin.lfn_getRealNo = function(sCustKeyNo) {
    wconv.clear(DsWs_CustNo);
    /*
    SOBJ_Obj.WSDL = gds.gWsdlBasis;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Obj, "com.inswave.longterm.com.com.task.AXR300Task", "selectRealCustNo", "", "");
    gfn_SetParam(MethodObj, "sCustKeyNo", sCustKeyNo);
    gfn_CallService(SOBJ_Obj, DOBJ_Obj, MethodObj);
    */
   	var MethodObj = new callService("com.inswave.longterm.com.com.task.AXR300Task", "selectRealCustNo");
	MethodObj.setId("selectRealCustNo");
    MethodObj.setParam("sCustKeyNo", sCustKeyNo);
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTI0000");
	MethodObj.setXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	
	util.jSonDsCreate(_tranSync.getDsJson("//*/LTI0000"), "DsWs_CustNo");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    if (DsWs_CustNo.getRowCount() > 0 && wconv.length(DsWs_CustNo.getCellData(0, "sRealCustNo")) > 0) {
        return DsWs_CustNo.getCellData(0, "sRealCustNo");
    } else {
        return sCustKeyNo;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_descrFlagYn
// 내용        : 설명의무 동의 여부 체크 
//---------------------------------------------------------------------------
scwin.lfn_descrFlagYn = function() {
    if (sBizCat != "1" || (sBizCat == "1" && descrFlag)) {} else {
        if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {} else {
            wprom.alert("설명의무동의를 하시기 바랍니다.");
            return true;
        }
    }
    return false;
};

//---------------------------------------------------------------------------
// function 명 : lfn_checkInsurAge
// 내용        : 상령일(보험나이) 체크
//---------------------------------------------------------------------------
scwin.lfn_checkInsurAge = function() {
    sToday = wconv.substr(gfn_GetSysTime(), 0, 8);
    if (sPlanNo == "M20160142022" || sPlanNo == "M20160141396" || sPlanNo == "M20160153570" || sPlanNo == "M20170122007" || sPlanNo == "M20170118590" ) {
        console.log("N1610-00153 M20160142022");
    } else {
        for (var j = 0; j < parent.Ds_Pibo.getRowCount(); j++) {
            if (parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "21") {
                if (parent.Ds_Pibo.getCellData(j, "nGroupInrpsAge") != gfn_getInsAge(parent.Ds_Pibo.getCellData(j, "sGroupInrpsCd"), sToday)) {
                    wprom.alert("피보험자(" + parent.Ds_Pibo.getCellData(j, "sGroupInrpsName") + ")의" + " 보험나이(상령일)가 변경되었으니 \n재청약을 하시기 바랍니다.(" + parent.Ds_Pibo.getCellData(j, "nGroupInrpsAge") + ":" + gfn_getInsAge(parent.Ds_Pibo.getCellData(j, "sGroupInrpsCd"), sToday) + ")");
                    return true;
                }
            } else {
                if (parent.Ds_Pibo.getCellData(j, "nInrpsAge") != gfn_getInsAge(parent.Ds_Pibo.getCellData(j, "sInrpsCd"), sToday)) {
                    wprom.alert("피보험자(" + parent.Ds_Pibo.getCellData(j, "sInrpsName") + ")의" + " 보험나이(상령일)가 변경되었으니 \n재청약을 하시기 바랍니다.(" + parent.Ds_Pibo.getCellData(j, "nInrpsAge") + ":" + gfn_getInsAge(parent.Ds_Pibo.getCellData(j, "sInrpsCd"), sToday) + ")");
                    return true;
                }
            }
        }
    }
    return false;
};

//---------------------------------------------------------------------------
// function 명 : btn_SearchCust_OnClick
// 내용        : 스마트폰앱고객 버튼클릭시 처리
//---------------------------------------------------------------------------
scwin.btn_SearchCust_OnClick = function(obj) {
    var promise = Promise.resolve();
    var arg = {"sUserID" : util.getGdsValue("gUserID")};
    promise = promise.then(function(rtnVal) {
    	var popinfo= {
    		title : "",
    		width : 800,
    		height : 550,
    		indata : arg
    	};
        return wprom.popupOpen("PROJECT_PATH_TEMP/com_pop/LongDirectChPop.xml", popInfo);//arg, 800, 550);
    });
    promise = promise.then(function(result) {
        args = result.split( "^", true);
        if (wconv.bound(args) > 2) {
            Div4_msk_sDpsrCd.setValue(wconv.trim(args[2]));
        }
    });
    return promise;
};

//---------------------------------------------------------------------------
// function 명 : lfn_selectRecvClprSameYn
// 내용        : 입금자 모집인동일여부체크
//---------------------------------------------------------------------------
scwin.lfn_selectRecvClprSameYn = function(varCollType) {
    console.log("lfn_selectRecvClprSameYn");
    wconv.clear(DsWs_RecvClprSameYn);
    var sDpsrCd;
    var sCmMetd;
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis; // 서비스 Obj WSDC 설정
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.ssr.pln.task.DBB040Task", "selectRecvClprSameYn", "", "");
    if (varCollType == "2") {
        //카드입금
        sDpsrCd = Div4_Ds_LTIFA03.GetColumn(0, "sDpsrCd");
    }
    gfn_SetParam(MethodObj, "sDpsrCd", sDpsrCd);
    if (sBizCat == "1") {
        gfn_SetParam(MethodObj, "sPlanNo", sPlanNo);
        gfn_SetParam(MethodObj, "sCrNo", "");
    } else {
        gfn_SetParam(MethodObj, "sPlanNo", "");
        gfn_SetParam(MethodObj, "sCrNo", sCrNo);
    }
    gfn_CallService(SOBJ_Search, DOBJ_Search, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB040Task", "selectRecvClprSameYn");
	MethodObj.setId("selectRecvClprSameYn");
	//MethodObj.setParam("sAgentCode", gUserID);
    if (varCollType == "2") {
        //카드입금
        sDpsrCd = Div4_Ds_LTIFA03.getCellData(0, "sDpsrCd");
    }
    MethodObj.setParam( "sDpsrCd", sDpsrCd);
    if (sBizCat == "1") {
        MethodObj.setParam( "sPlanNo", sPlanNo);
        MethodObj.setParam( "sCrNo", "");
    } else {
        MethodObj.setParam( "sPlanNo", "");
        MethodObj.setParam( "sCrNo", sCrNo);
    }	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIEA00");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_RecvClprSameYn");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
	util.setCompBindRefresh("DsWs_RecvClprSameYn");
	util.setRowPosition(DsWs_RecvClprSameYn, 0);
    
    if (wconv.length(DsWs_Warning.getCellData(0, "msg")) > 0) {
        wprom.alert(DsWs_Warning.getCellData(0, "msg"));
        return false;
    } else {
        console.log("sRecvClprSameYn : " + DsWs_RecvClprSameYn.getCellData(0, "sRecvClprSameYn"));
        if (DsWs_RecvClprSameYn.getRowCount() > 0 && DsWs_RecvClprSameYn.getCellData(0, "sRecvClprSameYn") == "Y") {
            return false;
        } else {
            return true;
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_chkRecvDlngAuthYn
// 내용        : 수납처리권한여부
//---------------------------------------------------------------------------
scwin.lfn_chkRecvDlngAuthYn = function() {
    /* 대면일경우 해당권한만 처리가능(실시간이체시 자동이체 계좌와 다를경우)
    수납권한코드 : 22030,34014
    메세지 : "대면채널은 영업관리자에 한하여 수납확정 가능합니다"
    */
    console.log("Auth : " + nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "22030"));
    console.log("sPlanNo : " + sPlanNo);
    if (sBizCat == "1" && parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
        if (Div3_chk_AutoTrnfAcctSame.getValue() == "0") {
            if (nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "22030") || 
                nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34014") || 
                nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34024") || 
                nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "21013")) {
                return true;
            } else {
                wprom.alert("대면채널은 영업관리자에 한하여 수납확정 가능합니다.");
                return false;
            }
        }
    }
    return true;
};

//---------------------------------------------------------------------------
// function 명 : lfn_chkCardRecvYn
// 내용        : 카드수납가능여부
//---------------------------------------------------------------------------
scwin.lfn_chkCardRecvYn = function() {
    //현대(0008), NH농협(0015) 이외 카드납 불가 처리
    if ((Div4_edt_cardCode.getValue() != "0008") && (Div4_edt_cardCode.getValue() != "0015")) {
        return false;
    }

    //전카드사 카드납 불가로 변경.20161201
    return false;
};

//**************************************************************************************************
// getCardRecvYn
//
// @parameter : sCrNo
// @description : 카드납입 이력 여부
//**************************************************************************************************
scwin.getCardRecvYn = function(sCrNo) {
    wconv.clear(DsWs_CardRecvYn);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "com.inswave.longterm.dpt.rec.task.FAF041Task", "getCardRecvYn", "", "");
    gfn_SetParam(MethodObj, "sCrNo", sCrNo);
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CardRecvYn, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.dpt.rec.task.FAF041Task", "getCardRecvYn");
	MethodObj.setId("getCardRecvYn");
	MethodObj.setParam("sCrNo", sCrNo);
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIFA01");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("LTIFA01"), "DsWs_CardRecvYn");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_CardRecvYn");
	util.setRowPosition(DsWs_CardRecvYn, 0);
    
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다.[FAF041Task.getCardRecvYn]");
        return false;
    }
    if (DsWs_CardRecvYn.getCellData(0, "result") != "0") {
        //wconv.trace(wconv.saveXml(DsWs_CardRecvYn));
        if (DsWs_CardRecvYn.getCellData(0, "sCardRecvYn") == "Y") {
            return true;
        } else {
            return false;
        }
    } else {
        wprom.alert("이전 입금내역이 없습니다. 확인하십시오.");
        return false;
    }
};

//---------------------------------------------------------------------------
// function 명 : Div1_chk_sElecNtltRvY_OnClick
// 내용        : 동의함
//---------------------------------------------------------------------------
scwin.Div1_chk_sElecNtltRvY_OnClick = function(obj, strValue) {
    if (Div1_chk_sElecNtltRvY.getValue() == "1") {
        Div1_chk_sElecNtltRvN.setValue("0");
    }
};

//---------------------------------------------------------------------------
// function 명 : Div1_chk_sElecNtltRvN_OnClick
// 내용        : 동의안함
//---------------------------------------------------------------------------
scwin.Div1_chk_sElecNtltRvN_OnClick = function(obj, strValue) {
    if (Div1_chk_sElecNtltRvN.getValue() == "1") {
        Div1_chk_sElecNtltRvY.setValue("0");
    }
};
//---------------------------------------------------------------------------
// function 명 : lfn_ImagJugmCpltYn
// 내용        : 이미지심사완료여부
//---------------------------------------------------------------------------
scwin.lfn_ImagJugmCpltYn = function() {
    //대면계약의 경우 이미지 심사 완료 여부 확인 (ldh)
    var ImagJugmYn = false;
    
    if (sBizCat == "1" && parent.sScanObjtYn == "Y") {
        //계약체결 동의가 되었는지 확인.(상품소개 포함(04만 체크))
        if (scwin.lfn_selectPriInfoAgreeList()) {
            return false;
        }

        //이미지심사완료여부확인
        ImagJugmYn = scwin.lfn_selectImageJugm();
        if (!ImagJugmYn) {
            //	alert("이미지 심사처리가 완료되지 않았습니다");
            return false;
        }
    }
    return true;
};

//---------------------------------------------------------------------------
// function 명 : lfn_selectImageJugm
// 내용        : 이미지 서류심사 통과 유무 체크 
// 
//---------------------------------------------------------------------------
scwin.lfn_selectImageJugm = function() {
    wconv.clear(DsWs_LTIDB05);
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.ssr.pln.task.DBB060Task", "selImageJugmPass", "", "");
    gfn_SetParam(MethodObj, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호
    gfn_SetParam(MethodObj, "sImagClsfCd", "JCA10001"); //이미지분류코드
    gfn_SetParam(MethodObj, "sSsrtDate", parent.Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일자
    gfn_CallService(SOBJ_Search, DOBJ_ImageJugm, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB060Task", "selImageJugmPass");
	MethodObj.setId("selImageJugmPass");
    MethodObj.setParam("sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호
    MethodObj.setParam("sImagClsfCd", "JCA10001"); //이미지분류코드
    MethodObj.setParam("sSsrtDate", parent.Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일자
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIDB05");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("LTIDB05"), "DsWs_LTIDB05");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning_Im");
	util.setCompBindRefresh("DsWs_LTIDB05");
	util.setRowPosition(DsWs_LTIDB05, 0);
    
    if (DsWs_Warning_Im.getRowCount() != 0) {
        wprom.alert(DsWs_Warning_Im.getCellData(0, "msg"));
        return false;
    }
    if (DsWs_LTIDB05.getCellData(0, "ImagJugmResltYn") == "Y") {
        return true;
    } else {
        wprom.alert(DsWs_Warning_Im.getCellData(0, "msg"));
        return false;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_selectPriInfoAgreeList
// 내용        : 계약체결이행동의 대상자 리스트 
// sCustNo(주민번호), sApplyNo = sPlanNo
//---------------------------------------------------------------------------
scwin.lfn_selectPriInfoAgreeList = function() {
    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
        wconv.clear(DsWs_List);
        /*
        SOBJ_select.WSDL = gds.gWsdlBasis; // 서비스 Obj WSDC 설정
        var MethodObj = gfn_CreateMethodObj(SOBJ_select, "com.inswave.customer.task.CustTask", "selectPriInfoAgreeList", 0, 0);
        gfn_SetParam(MethodObj, "sApplyNo", parent.Ds_LTIDA03.getCellData(0, "sPlanNo"));
        gfn_SetParam(MethodObj, "sAgmGvs", "10");
        var result = gfn_CallService(SOBJ_select, DOBJ_select, MethodObj);
		*/
		var MethodObj = new callService("com.inswave.customer.task.CustTask", "selectPriInfoAgreeList");
		MethodObj.setId("selectPriInfoAgreeList");
        MethodObj.setParam( "sApplyNo", parent.Ds_LTIDA03.getCellData(0, "sPlanNo"));
        MethodObj.setParam( "sAgmGvs", "10");
		
		MethodObj.setUrl("/contract/CBSC019SController.do");
		MethodObj.setXPath("//*/vector/data/CUSAA35");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		util.jSonDsCreate(_tranSync.getDsJson("CUSAA35"), "DsWs_List");
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
		
        //trace(replace(gfn_XmlEncoder(DOBJ_select.Value), "><", ">\n<"));
        //trace("LDH" + DsWs_List.savexml());
        var sName = "";
        var resultpia = "N";
        var sPsnGroupFlgcd = Ds_LTIEA00.getCellData(0,"sPsnGroupFlgcd");
        if (DsWs_List.getRowCount() > 0) {
            //Y값은 반드시 있고 N값은 전혀 없어야 함.
            if (wconv.findRow(DsWs_List, "sCUSAA35AgmYn", "N") < 0 && 
               ((wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y") < 0 || 
                 wconv.length(DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y"), "sCUSAA04ExpireDate")) < 1))) {
                resultpia = "N";
            }
            if (wconv.findRow(DsWs_List, "sCUSAA35AgmYn", "N") > -1) {
                sName = DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA35AgmYn", "N"), "sName") + "님의 동의서 확인에서 계약체결 이행동의를 확인하세요";
                resultpia = "Y"; // needto 동의 
            }
            if (sPsnGroupFlgcd != "21") {
                if (wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y") > -1 && wconv.length(DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y"), "sCUSAA04ExpireDate")) > 0 && DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y"), "sCustType") < "11") {
                    sName = DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04Expired", "Y"), "sName") + "님의 동의서 확인에서 상품소개 동의를 확인하세요";
                    resultpia = "Y"; // needto 동의 
                }
                if (wconv.findRow(DsWs_List, "sCUSAA04AgmYn", "") > -1 && DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04AgmYn", ""), "sCustType") < "11") {
                    sName = DsWs_List.getCellData(wconv.findRow(DsWs_List, "sCUSAA04AgmYn", ""), "sName") + "님의 동의서 확인에서 상품소개 동의를 확인하세요";
                    //trace("aa");
                    resultpia = "Y"; // needto 동의 
                }
            }
            //wconv.trace("resultpia : " + resultpia);
        } else {
            sName = "계약체결 이행동의를 확인하세요";
            resultpia = "Y"; // needto data가 없는 경우도 동의 필요.
        }

        if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && resultpia == "Y"){
            //대면 계약의 경우.
            wprom.alert(sName);
            return true;
        } else if (resultpia == "Y") {
            wprom.alert("계약체결 이행동의를 확인하세요");
            return true;
        }
    } else {
        //wconv.trace("비대면 계약요약에서 체크");
    }
    return false;
};

scwin.btn_moni_OnClick = function() {
	// 2018 상품개정
	if((parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2120") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2126") ||
	   (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2312") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2313") ||
	   (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2122") || (parent.Ds_LTIDA00.getCellData(0,"sGdCd") == "2128")){
		scwin.lfn_SaleMoni();
	}else{
		alert("현재 에듀플러스와 운전자 보험상품만 적용됩니다.");
	}
}

//---------------------------------------------------------------------------
// function 명 : lfn_SaleMoni
// 내용        : 완전판매모니터링 신청
//---------------------------------------------------------------------------
scwin.lfn_SaleMoni = function(obj)
{
	var promise = Promise.resolve();
	
	var sBizCatCrNo = parent.Ds_LTIDA00.getCellData(0, "sCrNo");
	var sNonAcctNo = Div2_sCmsCod.getValue();
	
	var indata = {};
	indata["sPlanNo"] = parent.Ds_LTIDA00.getCellData(0, "sPlanNo");
	indata["sCrNo"] = sBizCatCrNo;
	indata["sNonAcctNo"] = sNonAcctNo;
	
	promise = promise.then(function(rtnVal) {
        var popInfo = {
       			title : "완전판매모니터링 신청",
				width : 700,
				height : 700,        
        		indata : indata
        };
        return wprom.popupOpen("/ui/cbsc/CBSC176P.xml", popInfo);
    });
    promise = promise.then(function(result) {
        var arrRst = wconv.split(result, "^");
		
		sMoniFlag = arrRst[0];
		if(sMoniFlag == "C" || sMoniFlag == "M"){
			sSaleMoniFlag = "1";
		}else{
			sSaleMoniFlag = "0";
		}
   	});
};

//  E-Mail 정보 셋팅.
scwin.setEmailInfo = function() {
	console.log("==> scwin.setEmailInfo 비대면호출");
	return;
};

//  E-Mail 정보 셋팅.
scwin.setEmailInfo1 = function(){
	console.log("==> scwin.setEmailInfo1 비대면호출");
	return;
};

scwin.lfn_ChkMoni = function() {
	wconv.clear(DsWs_ChkMoni);
/*	
	SOBJ_MONI.WSDL = gWsdlBasis;	
	var MethodObj = gfn_CreateMethodObj(SOBJ_MONI, "com.inswave.longterm.psv.ens.task.EAD010Task", "selectMoniYN", "", "");
	
	gfn_SetParam(MethodObj, "sPlanNo", parent.medt_PlanNo.Value);
	
	var result = gfn_CallService(SOBJ_MONI, DOBJ_MONI, MethodObj);
	
	if( result == false ){
		alert("웹서비스 이상입니다.");
		return false;
	}
*/
	var MethodObj = new callService("com.inswave.longterm.psv.ens.task.EAD010Task", "selectMoniYN");
	MethodObj.setId("selectMoniYN");
	MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue());
	MethodObj.setParam("sAgmGvs", "10");
	
	MethodObj.setUrl("/contract/CBSC019SController.do");
	MethodObj.setXPath("//*/LTIDA25");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning_Im");
	util.jSonDsCreate(_tranSync.getDsJson("LTIDA25"), "DsWs_ChkMoni");
	
	if(DsWs_Warning_Im.getRowCount() > 0 && wconv.length(DsWs_Warning_Im.getCellData(0,"msg")) > 0) {
		alert(DsWs_Warning_Im.getCellData(0,"msg"));	
		return false;
	} else {
		if(DsWs_ChkMoni.getCellData(0, "sMoniYN") == "N"){	
			return false;
		}
	}
	
	return true;	
};

/* ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
+------------------------------------------------// script 종료 //------------------------------------------------------------+
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ */
]]></script>
	</head>
	<body>

		<xf:group id="Shape0" style="" class="section">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="입금선택"
					style="">
				</w2:textbox>
				<xf:group class="fl ml20" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.Button7_OnClick" id="Button7" outerDiv="true">
						<xf:label><![CDATA[SMS 발신]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
			<xf:group id="" style="" class="w2tb tb" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:120px;" tagname="col"></xf:group>
					<xf:group style="width:160px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:160px;" tagname="col"></xf:group>
					<xf:group style="width:120px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						결재하실금액
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="nSumPrem" ref=""
							style="width:120px;text-align: right" displayFormat="###,###,###,###" dataType="number">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;height: 23px;width:20px;top:6px;">
						</w2:textbox>
					</xf:group>
					<xf:group style="" class="w2tb_th" tagname="th">
						입금액합계
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">

						<xf:input disabled="true" id="nPayAmt" ref=""
							style="width:120px;text-align: right" displayFormat="###,###,###,###">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;height: 23px;width:20px;top:6px;">
						</w2:textbox>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						차액
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="nMarginAmt" ref=""
							style="width:120px;text-align: right;" displayFormat="###,###,###,###" dataType="number">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;height: 23px;width:20px;top:6px;">
						</w2:textbox>
					</xf:group>
				</xf:group>
			</xf:group>

		</xf:group>
		<xf:group class="section mt10" id="Div2" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="무통장입금"
					style="">
				</w2:textbox>
				<xf:group class="fl ml20" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">
					<xf:select appearance="full" cols=""
						id="Div2_chk_PrevAcctYN" rows="1" selectedindex="-1" style=""
						class="">
						<xf:choices>
							<xf:item>
								<xf:label><![CDATA[전월회계여부]]></xf:label>
								<xf:value><![CDATA[]]></xf:value>
							</xf:item>
						</xf:choices>
					</xf:select>
					<w2:textbox label="*타은행 거래시에는 가상계좌를 안내하세요."
						id="Div2_Static29"
						style="position: relative;width: 240px;height: 23px;text-align:right;"
						class="ml10 txt_blue fr">
					</w2:textbox>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:300px;" tagname="col"></xf:group>
					<xf:group style="width:240px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						무통장&amp;nbsp;입금은행&amp;nbsp;/&amp;nbsp;계좌번호
					</xf:group>
					<xf:group class="w2tb_th" style="text-align: center"
						tagname="td">
						금액
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">CMS코드<w2:attributes>
							<w2:colspan>4</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes></xf:group>
				</xf:group>
				<xf:group style="text-align: center;" tagname="tr">
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.setBankCode"
							id="Div2_sAcctNo" optionOrder=""
							ref="data:Ds_LTIFA01.sNonAcctThcpAcctNo" renderType="native"
							style="" submenuSize="">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_AcctNoList">
									<xf:label ref="sAcctNoName"></xf:label>
									<xf:value ref="sAcctNo"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="Div2_nCashAmt"
							ref="data:Ds_LTIFA01.nNonAcctThcpAcctRvamt" style="width:200px;text-align: right"
							ev:onblur="scwin.lfn_onKillFocus" displayFormat="###,###,###,###">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;width:20px;height: 23px;top:6px;">
						</w2:textbox>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>4</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:input class="fl" disabled=""
							id="Div2_sCmsCod" ref="data:Ds_LTIFA01.sCmsCd" style="">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<xf:group class="section mt10" id="Div3" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="실시간 수납이체"
					style="">
				</w2:textbox>
				<xf:group class="fl ml20" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">
					<xf:select appearance="full" class="" cols=""
						id="Div3_chk_AutoTrnfAcctSame" rows="1" selectedindex="-1"
						style="" ev:onchange="scwin.chk_AutoTrnfAcctSame_OnClick"
						falseValue="0">
						<xf:choices>
							<xf:item>
								<xf:label><![CDATA[자동이체 계좌와 동일]]></xf:label>
								<xf:value><![CDATA[1]]></xf:value>
							</xf:item>
						</xf:choices>
					</xf:select>
				</xf:group>
			</xf:group>

			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:300px;" tagname="col"></xf:group>
					<xf:group style="width:240px;" tagname="col"></xf:group>
					<xf:group style="width:250px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						출금은행
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="td">
						계좌번호
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						이체금액

					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						이체요청

					</xf:group>
				</xf:group>
				<xf:group style="text-align: center;" tagname="tr">
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.setTransReqAmt"
							id="Div3_sOutBankCode" optionOrder=""
							ref="data:Ds_LTIFA01.sRealHmsRecvBankCd" renderType="native"
							style="" submenuSize="">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_OutBankCode">
									<xf:label ref="TEXT"></xf:label>
									<xf:value ref="CODE"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_td" style=""
						tagname="td">
						<xf:group class="" style="">
							<xf:input disabled="" id="Div3_sOutAcctNo"
								ref="data:Ds_LTIFA01.sRealHmsRecvBankAcctNo" style="" maxlength="16">
							</xf:input>
							<w2:anchor class="" disabled=""
								ev:onclick="" id="btn_IvrInput1" outerDiv="" style="display : none;">
								<xf:label><![CDATA[저장]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="Div3_nTransAmt"
							ref="data:Ds_LTIFA01.nRealHmsRecvRvamt" style="width:170px;text-align: right;"
							ev:onblur="scwin.lfn_onKillFocus" displayFormat="###,###,###,###">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;width:20px;height: 23px;top:6px;">
						</w2:textbox>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:anchor class="btn_nml1 bul"
							ev:onclick="scwin.Btn_CollTrans_OnClick" id="Div3_btn_CollTrans"
							outerDiv="true" style="">
							<xf:label><![CDATA[이체요청]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>



		<xf:group class="section mt10" id="Div4" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="카드입금"
					style="">
				</w2:textbox>
				<xf:group class="fl ml5" id="" style="">
					<w2:textbox class="" id="" label="(제휴카드 이미지 조회)"
						style="position: relative;width: 165px;height: 20px; cursor: pointer; display:inline; border-bottom: 1px solid #666;display : none;"
						ev:onclick="scwin.lfn_CardImagePop">
					</w2:textbox>
					<w2:textbox class="ml10" id="" label="(무이자카드조회)"
						style="position: relative;width: 100px;height: 20px; cursor: pointer; display:inline; border-bottom: 1px solid #666; display : none;"
						ev:onclick="scwin.lfn_CardListByAgentPop">
					</w2:textbox>
				</xf:group>
				<xf:group class="fl ml5" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">
					<xf:input class="" disabled="true" id="Div4_edt_cardCode" ref=""
						style="width:120px;display: none;">
					</xf:input>
					<xf:select appearance="full" class="ml10" cols=""
						id="Div4_chk_AutoTrnfCrdtCardSame" rows="1" selectedindex="-1"
						style="" ev:onchange="scwin.chk_AutoTrnfCrdtCardSame_OnClick" falseValue="0">
						<xf:choices>
							<xf:item>
								<xf:label><![CDATA[카드이체와 동일]]></xf:label>
								<xf:value><![CDATA[1]]></xf:value>
							</xf:item>
						</xf:choices>
					</xf:select>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:50px;" tagname="col"></xf:group>
					<xf:group style="width:160px;" tagname="col"></xf:group>
					<xf:group style="width:130px;" tagname="col"></xf:group>
					<xf:group style="width:150px;" tagname="col"></xf:group>
					<xf:group style="width:90px;" tagname="col"></xf:group>
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						카드
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="td">
						카드번호
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						유효기간
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인금액
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인요청
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="td">
						카드종류
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인번호
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인요청회차
					</xf:group>
				</xf:group>
				<xf:group style="text-align: center;" tagname="tr">
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:textbox id="" label="1)" style=""></w2:textbox>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">


						<xf:group style="" id=""
							class="">
							<xf:input disabled="true" id="Div4_sCardNo"
								ref="data:Ds_LTIFA01.sCardNo1" style="" displayFormat="####-####-####-####" maxlength="16" ev:onviewchange="scwin.setCardReqAmt">
							</xf:input>
							<w2:anchor outerDiv="" style="display : none;"
								id="btn_IvrInput2">
								<xf:label><![CDATA[Insert Text]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:group class="" style="">
							<xf:select1 allOption=""
								appearance="minimal" chooseOption="" direction="auto"
								disabled="" disabledClass="" displayMode="label"
								ev:onviewchange="" id="Div4_sValidThruYYYY" optionOrder=""
								ref="" renderType="native" style="width:55px;" submenuSize="">
								<xf:choices>
									<xf:itemset
										nodeset="data:Ds_Year">
										<xf:label ref="TEXT"></xf:label>
										<xf:value ref="CODE"></xf:value>
									</xf:itemset>
								</xf:choices>
							</xf:select1>
							<xf:select1 allOption=""
								appearance="minimal" chooseOption="" direction="auto"
								disabled="" disabledClass="" displayMode="label"
								ev:onviewchange="" id="Div4_sValidThruMM" optionOrder="" ref=""
								renderType="native" style="width:40px;" submenuSize="">
								<xf:choices>
									<xf:itemset
										nodeset="data:Ds_Month">
										<xf:label ref="TEXT"></xf:label>
										<xf:value ref="CODE"></xf:value>
									</xf:itemset>
								</xf:choices>
							</xf:select1>
							<w2:anchor class="" disabled=""
								ev:onclick="" id="btn_IvrInput4" outerDiv="" style="display : none;">
								<xf:label><![CDATA[저장]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="Div4_nReqAmt"
							ref="data:Ds_LTIFA01.nCardDlAmt1" style="text-align: right;"
							ev:onblur="scwin.lfn_onKillFocus" displayFormat="###,###,###,###">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:anchor class="btn_nml1 bul"
							ev:onclick="scwin.Btn_CardRequest_OnClick" id="Div4_btnCardReq"
							outerDiv="true" style="">
							<xf:label><![CDATA[승인요청]]></xf:label>
						</w2:anchor>
					</xf:group>
					<xf:group class="w2tb_td" style="text-align:center;"
						tagname="td">
						<xf:input disabled="true" id="Div4_edt_cardName"
							ref="" style="">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="Div4_sAdmitNo"
							ref="" style="">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input class="fl" disabled="true"
							id="Div4_nReqCnt" ref="" style="">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:130px;" tagname="col"></xf:group>
					<xf:group style="width:120px;" tagname="col"></xf:group>
					<xf:group style="width:120px;" tagname="col"></xf:group>
					<xf:group style="width:120px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						카드소유자구분
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.Div4_sCrtorRelnFlag_OnChanged"
							id="Div4_cmb_sCrtorRelnFlag" optionOrder=""
							ref="data:Ds_LTIFA03.sCrtorRelnFlag" renderType="native" style=""
							submenuSize="">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_CrtorDpsrReln">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						계약자와의&amp;nbsp;관계
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange=""
							id="Div4_cmb_sRecvCrtorRelFlag" optionOrder=""
							ref="data:Ds_LTIFA03.sRecvCrtorRelCd" renderType="native"
							style="" submenuSize="">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_RecvCrtorRel">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						소유자
						<xf:image id="image1"
							src="/cm/images/inc/input_win.png"
							style="position: relative;width:13px;height:13px;top:-1px;"
							ev:onclick="scwin.btn_SearchCust_OnClick">
						</xf:image>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:group class="" style="">
							<xf:group class=""
								style="">
								<xf:input disabled=""
									id="Div4_msk_sDpsrCd" ref="data:Ds_LTIFA03.sDpsrCd"
									style="float:left;width:120px;" displayFormat="######-#######">
								</xf:input>
								<w2:anchor class="" disabled=""
									ev:onclick="" id="btn_IvrInput3" outerDiv=""
									style="position:relative;float:left;display : none;">
									<xf:label><![CDATA[저장]]></xf:label>
								</w2:anchor>
								<xf:input disabled=""
									id="Div4_edt_sDpsrName" ref="data:Ds_LTIFA03.sDpsrName"
									style="float:left;width:140px;">
								</xf:input>
							</xf:group>
						</xf:group>
					</xf:group>
				</xf:group>
				<xf:group style="height:20px;" tagname="tr">
					<xf:group class="w2tb_th" tagname="th">
						카드소유자&amp;nbsp;전화번호
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>5</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:input class="fl" disabled=""
							id="Div4_edt_sHomeTel1" ref="data:Ds_LTIFA03.sRecvCrtorTelNo"
							style="width:170px;" maxlength="15">
						</xf:input>
						<w2:anchor class="btn_nml1 bul fr"
							ev:onclick="scwin.lfn_btn_PerAgree_OnClick"
							id="Div4_btn_PerAgree" outerDiv="true" style="">
							<xf:label><![CDATA[개인신용정보동의]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<xf:group class="section mt10" id="Div0" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="휴대폰 소액결제"
					style="">
				</w2:textbox>
				<xf:group class="fl ml5" id="" style=""></xf:group>
				<xf:group class="fl ml5" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">

				</xf:group>
				<w2:textbox class="ml10 txt_blue fr" id=""
					label="*휴대폰 소액결재는 배서처리 및 단일금종만 입금처리 가능"
					style="position: relative;width: 340px;height: 23px;text-align:right">
				</w2:textbox>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="width:130px;" tagname="col"></xf:group>
					<xf:group style="width:170px;" tagname="col"></xf:group>
					<xf:group style="width:150px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						휴대폰번호
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						통신사
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인금액
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인요청
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="td">
						승인번호
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" style="text-align:center;"
						tagname="th">
						승인결과
					</xf:group>
				</xf:group>
				<xf:group style="text-align: center;" tagname="tr">
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:group class="" id="" style="">
							<xf:select1 allOption=""
								appearance="minimal" chooseOption="" direction="auto"
								disabled="" disabledClass="" displayMode="label"
								ev:onviewchange="scwin.lfn_Div0_cmb_phone1_OnChanged"
								id="Div0_cmb_phone1" optionOrder="" ref="" renderType="native"
								style="width:60px;" submenuSize="">
								<xf:choices>
									<xf:itemset
										nodeset="data:DsPhoneNo1">
										<xf:label ref="sText"></xf:label>
										<xf:value ref="sCode"></xf:value>
									</xf:itemset>
								</xf:choices>
							</xf:select1>
							<w2:textbox class="" id="" label="-"
								style="" tagname="span">
							</w2:textbox>
							<xf:input disabled="" id="Div0_edt_phone2"
								style="width:50px" maxlength="4">
							</xf:input>
							<w2:textbox class="" id="" label="-"
								style="" tagname="span">
							</w2:textbox>
							<xf:input disabled="" id="Div0_edt_phone3"
								style="width:50px" maxlength="4">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:group class="input_btn icon tel" style="">


						</xf:group>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="" id="Div0_cmb_cmmc"
							optionOrder="" ref="" renderType="native" style=""
							submenuSize="">
							<xf:choices>
								<xf:itemset nodeset="data:Ds_cmmc">
									<xf:label ref="TEXT"></xf:label>
									<xf:value ref="code"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="Div0_msk_nHpAmt"
							ref="" style="width:110px;text-align: right;" displayFormat="###,###,###,###">
						</xf:input>
						<w2:textbox id="" label="원"
							style="position: relative;width:20px;height: 23px;top:6px;">
						</w2:textbox>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:anchor class="btn_nml1 bul"
							ev:onclick="scwin.btn_hpReq_OnClick" id="Div0_btn_hpReq"
							outerDiv="true" style="">
							<xf:label><![CDATA[승인요청]]></xf:label>
						</w2:anchor>
					</xf:group>
					<xf:group class="w2tb_td" style="text-align:center;"
						tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:input disabled="true"
							id="Div0_edt_sHpAdmitNo" ref="" style="">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true"
							id="Div0_edt_phoneResult" ref="" style="">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>

		</xf:group>
		<w2:wframe id="div_b200" style="height:10px;position: relative;width:10px;overflow-y: hidden;" initScript="" src="/ui/cbsc/CBSC080S.xml" scope="false"></w2:wframe>
		<xf:group class="section mt10" id="Div1" style="">
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="width:440px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="height: 45px;" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						전자적&amp;nbsp;방법
						<br />
						안내자료&amp;nbsp;수정

					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:textbox id=""
							label="보험계약안내 자료를 이메일 등의 전자적인 방법으로 수령하시는 것에 동의하십니까?"
							style="position: relative;width:100%;height: 23px;top:-5px;line-height:20px;">
						</w2:textbox>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:select appearance="full" class="" cols=""
							id="Div1_chk_sElecNtltRvY" rows="" selectedindex="-1" style=""
							falseValue="0" ev:onchange=""
							ev:oncheckboxclick="scwin.Div1_chk_sElecNtltRvY_OnClick">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[동의함  ]]></xf:label>
									<xf:value><![CDATA[1]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select>
						<xf:select appearance="full" class="ml0" cols=""
							id="Div1_chk_sElecNtltRvN" rows="" selectedindex="-1" style=""
							falseValue="0"
							ev:oncheckboxclick="scwin.Div1_chk_sElecNtltRvN_OnClick">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[동의안함]]></xf:label>
									<xf:value><![CDATA[1]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						eMail
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="" id="Div1_edt_sEmail"
							ref="" style="">
						</xf:input>
						<xf:select appearance="full" class="ml0" cols=""
							id="Div1_chk_sEmailClasYn" rows="2" selectedindex="-1"
							style="position:relative;top:2px;" falseValue="N">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[e-Mail 약관]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<xf:group class="section" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<xf:group class="fl ml20" id="" style=""></xf:group>
				<xf:group class="fr" id="" style="">
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.lnf_btn_InsInrpsAgre_OnClick"
						id="btn_InsInrpsAgre" outerDiv="true" style="display : none;">
						<xf:label><![CDATA[다수피보험자동의]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.lnf_btn_ExplDutyAgre_OnClick"
						id="btn_ExplDutyAgre" outerDiv="true" style="">
						<xf:label><![CDATA[설명의무동의]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.doReceiptProc_Async" id="btn_Save" outerDiv="true"
						style="">
						<xf:label><![CDATA[저장]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.btn_moni_OnClick" id="btn_moni" outerDiv="true"
						style="">
						<xf:label><![CDATA[완전판매모니터링]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
		</xf:group>

	</body>
</html>