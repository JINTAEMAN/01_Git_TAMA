<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">	
	<head>
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataList baseNode="list" id="DsWs_CmCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sClsfCd"
							name="sClsfCd">
						</w2:column>
						<w2:column dataType="text" id="sCdType"
							name="sCdType">
						</w2:column>
						<w2:column dataType="text" id="sCd"
							name="sCd">
						</w2:column>
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:linkedDataList id="DsWs_AddrFlag"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AddrFlag"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_Reln" bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="CrtorRelnCd"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_RlnmCnfmRgcr"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="RlnmCnfmRgcr"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_AqamtChnlCd"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AqamtChnlCd"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:dataList baseNode="list" id="DsWs_FlagCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType"
							name="sCdType" />
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName" />
						<w2:column dataType="text" id="sCd" name="sCd" />
						<w2:column dataType="text" id="sCdTypeName"
							name="sCdTypeName" />
						<w2:column dataType="text" id="sEngCdName"
							name="sEngCdName" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Drive"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType"
							name="sCdType" />
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName" />
						<w2:column dataType="text" id="sCd" name="sCd" />
						<w2:column dataType="text" id="sCdTypeName"
							name="sCdTypeName" />
						<w2:column dataType="text" id="sEngCdName"
							name="sEngCdName" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CrtorRelnCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType"
							name="sCdType" />
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName" />
						<w2:column dataType="text" id="sCd" name="sCd" />
						<w2:column dataType="text" id="sCdTypeName"
							name="sCdTypeName" />
						<w2:column dataType="text" id="sEngCdName"
							name="sEngCdName" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_InsurTerm"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="sInsurTermName"
							name="sInsurTermName" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sPaymTermName"
							name="sPaymTermName" />
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_PaymTerm"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="sInsurTermName"
							name="sInsurTermName" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sPaymTermName"
							name="sPaymTermName" />
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Dsws_InsAmt"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sCdAttrValue" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sHnglCdName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="" dataType="text"></w2:column>
						<w2:column id="sEngCdName" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_PaymCycl"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sGdCd" name="" dataType="text"></w2:column>
						<w2:column id="sPaymCyclName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymCyclCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="DsWs_Others" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sGolfYn"
							name="sGolfYn" />
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn" />
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn" />
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno" />
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Warning"
					repeatNode="map" userData2="//*/WARNING">
					<w2:columnInfo>
						<w2:column dataType="text" id="timestamp"
							name="timestamp" />
						<w2:column dataType="text" id="detail"
							name="detail" />
						<w2:column dataType="text" id="level"
							name="level" />
						<w2:column dataType="text" id="msg" name="msg" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Trty"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='multi']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="RenwlUseCrFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyObjtFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PytrMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag4" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag5" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sResvAmtKey" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurStrtdate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGnrzCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BascSlctFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag3" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag2" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag1" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FirstInsurTermApplYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlCyclCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sScrnIndcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrpsDoubInsImprYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyObjtFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nGrntPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyInsAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPaymAge" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMainTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd11" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd10" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag3_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyHnglAbbName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcHms" name=""
							dataType="text">
						</w2:column>
						<w2:column id="Trtygp_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPs1CmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag4_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyTypeCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InsAvaDrveCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRealInsurTerm" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag1_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag2_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PronCmpsTrtyYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyOrdr" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sCnclExtnEndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyStatCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PmmiInsurFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlUseCrFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sAutoRenwlAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRealPaymTerm" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGdCd" name="" dataType="text"></w2:column>
						<w2:column id="TrtyTypeCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="DrveFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FirstInsurTermApplYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="SwHsHldGdsTrtyYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyUserDefnName_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sStndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptHms" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPronCmpsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PmmiInsurFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PremCalcFomlFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrpsDoubInsImprYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="GrntAccuFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PremCalcFomlFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nEndAge" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlAvaYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BussInsAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDler" name=""
							dataType="text">
						</w2:column>
						<w2:column id="Trtygp" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nCrChngNo" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nCnclRtnrt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PronCmpsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPkgCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PytrMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FxamtCmpsFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRenwlSeq" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurEndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPsnPrprtGroupFlgcd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag5_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="GrntAccuFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDlerIP" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sBascSlctFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="chk" name="" dataType="text"></w2:column>
						<w2:column id="nAccuPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPlanNo" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTotCmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="n1AccdCmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGrntAccuFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtmPytrMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtmPytrMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlTrtyCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nSelfChamt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDlerIP" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BascSlctFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyUserDefnName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="DrveFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlCyclCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nSeqno" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPsnPrprtGroupSeqno" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd1" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nExptGrntBussPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPmmiInsurFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BussInsAvaYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FxamtCmpsFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGroupCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd6" name=""
							dataType="text">
						</w2:column>
						<w2:column id="SwHsHldGdsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd7" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InsAvaDrveCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd8" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd9" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd2" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd3" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd4" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPreGrntPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlUseCrFlgcd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd5" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sFinalRenwlDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sAutoRenwlCyclCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sSubTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyTypeCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDler" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Trty"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="chk"
							name="chk">
						</w2:column>
						<w2:column dataType="text" id="sBascSlctFlagCd"
							name="sBascSlctFlagCd">
						</w2:column>
						<w2:column dataType="text" id="BascSlctFlagCd_H"
							name="BascSlctFlagCd_H">
						</w2:column>
						<w2:column dataType="text" id="sTrtyName"
							name="sTrtyName">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="nTrtyOrdr"
							name="nTrtyOrdr">
						</w2:column>
						<w2:column dataType="text" id="sScrnIndcYn"
							name="sScrnIndcYn">
						</w2:column>
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd">
						</w2:column>
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd">
						</w2:column>
						<w2:column dataType="text" id="sAutoRenwlAvaYn"
							name="sAutoRenwlAvaYn">
						</w2:column>
						<w2:column dataType="text" id="sAutoRenwlCyclCd"
							name="sAutoRenwlCyclCd">
						</w2:column>
						<w2:column dataType="text" id="nTrtyInsAmt"
							name="nTrtyInsAmt">
						</w2:column>
						<w2:column dataType="text" id="nSelfChamt"
							name="nSelfChamt">
						</w2:column>
						<w2:column dataType="text" id="sGrntAccuFlagCd"
							name="sGrntAccuFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem">
						</w2:column>
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem">
						</w2:column>
						<w2:column dataType="text" id="nRiskPrem"
							name="nRiskPrem">
						</w2:column>
						<w2:column dataType="text" id="nTrtyPrem"
							name="nTrtyPrem">
						</w2:column>
						<w2:column dataType="text" id="nRenwlSeq"
							name="nRenwlSeq">
						</w2:column>
						<w2:column dataType="text" id="sRenwlYn"
							name="sRenwlYn">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sTrtyStatCd"
							name="sTrtyStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="TrtyTypeCd"
							name="TrtyTypeCd">
						</w2:column>
						<w2:column dataType="text" id="TrtyFlagCd"
							name="TrtyFlagCd">
						</w2:column>
						<w2:column dataType="text" id="BascSlctFlagCd"
							name="BascSlctFlagCd">
						</w2:column>
						<w2:column dataType="text" id="AutoRenwlAvaYn"
							name="AutoRenwlAvaYn">
						</w2:column>
						<w2:column dataType="text" id="GrntAccuFlagCd"
							name="GrntAccuFlagCd">
						</w2:column>
						<w2:column dataType="text" id="AutoRenwlCyclCd"
							name="AutoRenwlCyclCd">
						</w2:column>
						<w2:column dataType="text" id="PmmiInsurFlagCd"
							name="PmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="RenwlUseCrFlagCd"
							name="RenwlUseCrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="PronCmpsTrtyYn"
							name="PronCmpsTrtyYn">
						</w2:column>
						<w2:column dataType="text" id="sPronCmpsTrtyYn"
							name="sPronCmpsTrtyYn">
						</w2:column>
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sResvAmtKey"
							name="sResvAmtKey">
						</w2:column>
						<w2:column dataType="text" id="FxamtCmpsFlag"
							name="FxamtCmpsFlag">
						</w2:column>
						<w2:column dataType="text" id="InsAvaDrveCd"
							name="InsAvaDrveCd">
						</w2:column>
						<w2:column dataType="text" id="RenwlTrtyCd"
							name="RenwlTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="DrveFlag"
							name="DrveFlag">
						</w2:column>
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="TrtyHnglAbbName"
							name="TrtyHnglAbbName">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo"
					repeatNode="map" ev:oncelldatachange="">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsSexFlag"
							name="sInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sJobGradCd"
							name="sJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nInrpsAge"
							name="nInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sPftbpFlagCd"
							name="sPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text" id="sRqstYnName"
							name="sRqstYnName">
						</w2:column>
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt">
						</w2:column>
						<w2:column dataType="text"
							id="sOthrInsurCntName" name="sOthrInsurCntName">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYnName"
							name="sSubCvrgeYnName">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYnName"
							name="sDgnsObjtYnName">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn">
						</w2:column>
						<w2:column dataType="text" id="sMNumCrInsAgreYn"
							name="sMNumCrInsAgreYn">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nManAge"
							name="nManAge">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_PiboBackup"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsSexFlag"
							name="sInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sJobGradCd"
							name="sJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nInrpsAge"
							name="nInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sPftbpFlagCd"
							name="sPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text" id="sRqstYnName"
							name="sRqstYnName">
						</w2:column>
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt">
						</w2:column>
						<w2:column dataType="text"
							id="sOthrInsurCntName" name="sOthrInsurCntName">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYnName"
							name="sSubCvrgeYnName">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYnName"
							name="sDgnsObjtYnName">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn">
						</w2:column>
						<w2:column dataType="text" id="sMNumCrInsAgreYn"
							name="sMNumCrInsAgreYn">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nManAge"
							name="nManAge">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsSexFlag"
							name="sInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sJobGradCd"
							name="sJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nInrpsAge"
							name="nInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sPftbpFlagCd"
							name="sPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text" id="sRqstYnName"
							name="sRqstYnName">
						</w2:column>
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt">
						</w2:column>
						<w2:column dataType="text"
							id="sOthrInsurCntName" name="sOthrInsurCntName">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYnName"
							name="sSubCvrgeYnName">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYnName"
							name="sDgnsObjtYnName">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn">
						</w2:column>
						<w2:column dataType="text" id="sMNumCrInsAgreYn"
							name="sMNumCrInsAgreYn">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nManAge"
							name="nManAge">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA03"
					repeatNode="map" ev:oncelldatachange="">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sCrtorFlgcd"
							name="sCrtorFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="nCrtorAge"
							name="nCrtorAge">
						</w2:column>
						<w2:column dataType="text" id="sCrtorSexFlag"
							name="sCrtorSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCstId"
							name="sCrtorCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpRelnCd"
							name="sEndPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCd"
							name="sEndPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpName"
							name="sEndPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCntad"
							name="sEndPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntFlagCd"
							name="sAsmtAgntFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntRelnCd"
							name="sAsmtAgntRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCd"
							name="sAsmtAgntCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntName"
							name="sAsmtAgntName">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCntad"
							name="sAsmtAgntCntad">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCd"
							name="sInsurPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpName"
							name="sInsurPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCntad"
							name="sInsurPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sZip1"
							name="sZip1">
						</w2:column>
						<w2:column dataType="text" id="sZip2"
							name="sZip2">
						</w2:column>
						<w2:column dataType="text" id="sAdrs1"
							name="sAdrs1">
						</w2:column>
						<w2:column dataType="text" id="sAdrsAdd"
							name="sAdrsAdd">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel1"
							name="sOfficeTel1">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel2"
							name="sOfficeTel2">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel3"
							name="sOfficeTel3">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone1"
							name="sCellPhone1">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone2"
							name="sCellPhone2">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone3"
							name="sCellPhone3">
						</w2:column>
						<w2:column dataType="text" id="sFax1"
							name="sFax1">
						</w2:column>
						<w2:column dataType="text" id="sFax2"
							name="sFax2">
						</w2:column>
						<w2:column dataType="text" id="sFax3"
							name="sFax3">
						</w2:column>
						<w2:column dataType="text" id="sEmail1"
							name="sEmail1">
						</w2:column>
						<w2:column dataType="text" id="RvadAddr"
							name="RvadAddr">
						</w2:column>
						<w2:column dataType="text" id="sEnntmPftbpYn"
							name="sEnntmPftbpYn">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntYn"
							name="sAsmtAgntYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmRgcr"
							name="sRlnmCnfmRgcr">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmDate"
							name="sRlnmCnfmDate">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfm"
							name="sRlnmCnfm">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row></w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA03_Tmp"
					repeatNode="map" ev:oncelldatachange="">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sCrtorFlgcd"
							name="sCrtorFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="nCrtorAge"
							name="nCrtorAge">
						</w2:column>
						<w2:column dataType="text" id="sCrtorSexFlag"
							name="sCrtorSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCstId"
							name="sCrtorCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpRelnCd"
							name="sEndPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCd"
							name="sEndPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpName"
							name="sEndPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCntad"
							name="sEndPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntFlagCd"
							name="sAsmtAgntFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntRelnCd"
							name="sAsmtAgntRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCd"
							name="sAsmtAgntCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntName"
							name="sAsmtAgntName">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCntad"
							name="sAsmtAgntCntad">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCd"
							name="sInsurPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpName"
							name="sInsurPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCntad"
							name="sInsurPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sZip1"
							name="sZip1">
						</w2:column>
						<w2:column dataType="text" id="sZip2"
							name="sZip2">
						</w2:column>
						<w2:column dataType="text" id="sAdrs1"
							name="sAdrs1">
						</w2:column>
						<w2:column dataType="text" id="sAdrsAdd"
							name="sAdrsAdd">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel1"
							name="sOfficeTel1">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel2"
							name="sOfficeTel2">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel3"
							name="sOfficeTel3">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone1"
							name="sCellPhone1">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone2"
							name="sCellPhone2">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone3"
							name="sCellPhone3">
						</w2:column>
						<w2:column dataType="text" id="sFax1"
							name="sFax1">
						</w2:column>
						<w2:column dataType="text" id="sFax2"
							name="sFax2">
						</w2:column>
						<w2:column dataType="text" id="sFax3"
							name="sFax3">
						</w2:column>
						<w2:column dataType="text" id="sEmail1"
							name="sEmail1">
						</w2:column>
						<w2:column dataType="text" id="RvadAddr"
							name="RvadAddr">
						</w2:column>
						<w2:column dataType="text" id="sEnntmPftbpYn"
							name="sEnntmPftbpYn">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntYn"
							name="sAsmtAgntYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmRgcr"
							name="sRlnmCnfmRgcr">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmDate"
							name="sRlnmCnfmDate">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfm"
							name="sRlnmCnfm">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row></w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA15"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCcndFlagCd"
							name="sCcndFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sCcndFlagName"
							name="sCcndFlagName">
						</w2:column>
						<w2:column dataType="text" id="sCcndResno"
							name="sCcndResno">
						</w2:column>
						<w2:column dataType="text" id="sCcndName"
							name="sCcndName">
						</w2:column>
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="sTrtyName"
							name="sTrtyName">
						</w2:column>
						<w2:column dataType="text" id="sJugmAuthCd"
							name="sJugmAuthCd">
						</w2:column>
						<w2:column dataType="text" id="sJugmAuthName"
							name="sJugmAuthName">
						</w2:column>
						<w2:column dataType="text" id="sJugmGradName"
							name="sJugmGradName">
						</w2:column>
						<w2:column dataType="text" id="sJugmCont"
							name="sJugmCont">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sConuObjtYn"
							name="sConuObjtYn">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nOthrInsurSeqno"
							name="nOthrInsurSeqno">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsSeqno"
							name="nGroupInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sRqstCd"
							name="sRqstCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="Ds_long_mPlr" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sCustNo" name="sCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sCstId" name="sCstId"
							dataType="text">
						</w2:column>
						<w2:column id="nSeqNo" name="nSeqNo"
							dataType="text">
						</w2:column>
						<w2:column id="sName" name="sName"
							dataType="text">
						</w2:column>
						<w2:column id="sCustType" name="sCustType"
							dataType="text">
						</w2:column>
						<w2:column id="sClass" name="sClass"
							dataType="text">
						</w2:column>
						<w2:column id="sMarry" name="sMarry"
							dataType="text">
						</w2:column>
						<w2:column id="sJobCode" name="sJobCode"
							dataType="text">
						</w2:column>
						<w2:column id="sJobName" name="sJobName"
							dataType="text">
						</w2:column>
						<w2:column id="sDrvCls" name="sDrvCls"
							dataType="text">
						</w2:column>
						<w2:column id="sJobCls" name="sJobCls"
							dataType="text">
						</w2:column>
						<w2:column id="nHomAdrsChangeNo"
							name="nHomAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sHomZco" name="sHomZco"
							dataType="text">
						</w2:column>
						<w2:column id="sHomAdr1" name="sHomAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sHomAdr2" name="sHomAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="nCrpAdrsChangeNo"
							name="nCrpAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sCrpZco" name="sCrpZco"
							dataType="text">
						</w2:column>
						<w2:column id="sCrpAdr1" name="sCrpAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sCrpAdr2" name="sCrpAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="nEtcAdrsChangeNo"
							name="nEtcAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sEtcZco" name="sEtcZco"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcAdr1" name="sEtcAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcAdr2" name="sEtcAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrsType" name="sAdrsType"
							dataType="text">
						</w2:column>
						<w2:column id="nAdrsChangeNo"
							name="nAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sAdrsZco" name="sAdrsZco"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrs1" name="sAdrs1"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrs2" name="sAdrs2"
							dataType="text">
						</w2:column>
						<w2:column id="sDMAdrsTyp" name="sDMAdrsTyp"
							dataType="text">
						</w2:column>
						<w2:column id="nTelChangeNo" name="nTelChangeNo"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel1" name="sHomeTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel2" name="sHomeTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel3" name="sHomeTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel1" name="sOfficeTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel2" name="sOfficeTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel3" name="sOfficeTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone1" name="sCellPhone1"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone2" name="sCellPhone2"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone3" name="sCellPhone3"
							dataType="text">
						</w2:column>
						<w2:column id="sFax1" name="sFax1"
							dataType="text">
						</w2:column>
						<w2:column id="sFax2" name="sFax2"
							dataType="text">
						</w2:column>
						<w2:column id="sFax3" name="sFax3"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcType" name="sEtcType"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel1" name="sEtcTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel2" name="sEtcTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel3" name="sEtcTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sEmail1" name="sEmail1"
							dataType="text">
						</w2:column>
						<w2:column id="sEmail2" name="sEmail2"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="Ds_CrtorCd" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sCrtorCd" name="sCrtorCd"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDA00" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDA03" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDA15" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="ds_code_YN" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="value" name="name1"
							dataType="text">
						</w2:column>
						<w2:column id="text" name="name2"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<text><![CDATA[-선택-]]></text>
						</w2:row>
						<w2:row>
							<value><![CDATA[Y]]></value>
							<text><![CDATA[Y]]></text>
						</w2:row>
						<w2:row>
							<text><![CDATA[N]]></text>
							<value><![CDATA[N]]></value>
						</w2:row>
					</w2:data>
				</w2:dataList>
			</w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>			
		</xf:model>
	<script src="/cm/js/convertJs/Global_Script.js"/>
	<script src="/cm/js/convertJs/comm_Webservice.js"/>
	<script src="/cm/js/convertJs/LongTerm_Script.js"/>
	<script src="/cm/js/convertJs/NewGen_Script.js"/>
	<script src="/cm/js/convertJs/Marine_Script.js"/>		
	<script type="javascript"><![CDATA[
    /*
 	 *===================================File description================================================
 	 * 파일명 : CBSC044S.xml
 	 * 프로그램명 : 단체청약설계_청약사항입력
 	 * 설 명 : 
 	 * 작성자 : KMJ
 	 * 작성일 : 2017.10.19
 	 *
 	 * 수정일자       수정자        수정내용
 	 *==================================================
 	 * 2017.10.19		  KMJ		  신규개발
 	 *====================================================================================================
	 */

	var gsSysDate;			// global 현재일자
	var gUserID; 			// global 사용자 ID
	var gUserEmpName; 	    // global 사용자명 
	var gUserDepartCode;	// global 소속부서코드
	var gUserIP;			// global 사용자IP
	//체크 플래그
	var modifyFlag = false;
	// 피보험자 체크 플래그 
	var piboCheckFlag = false;
	//세금우대체크
	var sTaxPrfrFlag = "0";
	//세금우대한도 잔여액
	var nTaxPrfrLmitRemnAmt = 0;	
	//**********************************************************
	// 메인에서 호출 초기화 
	//**********************************************************
	scwin.fn_Init = function() {
		gfn_getServerTime();//서버시간
		gsSysDate = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);		
		gUserID 		= util.getGdsValue("gUserID");    					// global 사용자 ID
		gUserEmpName 	= util.getGdsValue("gUserEmpName");    				// global 부서명
		gUserIP			= util.getGdsValue("gUserIP");						// global 사용자IP
		
//	    wconv.copy(DsWs_CrtorRelnCd, parent.DsWs_CrtorRelnCd); //계약자관계(수익자)(공통)
		DsWs_CrtorRelnCd.setJSON(parent.DsWs_CrtorRelnCd.getAllJSON());	//계약자관계(수익자)(공통)

	    //계약자정보가 있으면 계약자 정보를 복사한다.
	    if (parent.Ds_LTIDA03.getRowCount() > 0) {
	        scwin.lfn_Search(); //초기입력일경우
	    } else {
	        //공통코드호출
			scwin.lfn_commCodeSetting(); 	
	        	        
	        //cbs - insertRow -> Choose Option 사용
	        //취득경로
	//        var insRow = util.insertRow(DsWs_AqamtChnlCd, 0);
	//        DsWs_AqamtChnlCd.setCellData(0, "sCd", "");
	//        DsWs_AqamtChnlCd.setCellData(0, "sHnglCdName", "- 선택 -");
	        cmb_AqamtChnlCd.setSelectedIndex(0);
		        
	        //우편수령구분콤보 비활성화 처리
	        cmb_sMailRvadAddrFlagCd.setDisabled(true);
	        if (parent.Ds_LTIDA03.getRowCount() > 0) {
	        	util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON(),true);	//계약자정보 
	        	util.setCompBindRefresh(Ds_LTIDA03.getID());
				util.setRowPosition(Ds_LTIDA03, 0);
	        }
	
	        //대상고객,취득경로
	        cmb_CrPrtrRole.setValue("10");
	        cmb_AqamtChnlCd.setValue("");
	    }
		
	    //세금우대상품여부가 n일경우 세금우대 비활성화
	    var sTaxPrfrGdYn = parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrGdYn");
	    if (sTaxPrfrGdYn == "N") {
	        cmb_sTaxPrfrYn.setDisabled(true);
	        cmb_sTaxPrfrYn.setValue(sTaxPrfrGdYn);
	    }
		
	    //고객구분코드(공통) 
	    DsWs_FlagCd.setJSON(parent.DsWs_FlagCd.getAllJSON());	
	    // 운전자급수코드(공통)
	    DsWs_Drive.setJSON(parent.DsWs_Drive.getAllJSON());	

	    //인수제한사항copy
	    Ds_LTIDA15.setJSON(parent.Ds_LTIDA15.getAllJSON());	
	    
	    //특약정보 복사
	    //보험기간코드(공통)	
        DsWs_InsurTerm.setJSON(parent.DsWs_InsurTerm.getAllJSON());	
        util.setCompBindRefresh(DsWs_InsurTerm.getID());	    
		util.setRowPosition(DsWs_InsurTerm, 0);	
        //납입기간코드(공통)
	    DsWs_PaymTerm.setJSON(parent.DsWs_PaymTerm.getAllJSON());	
	    util.setCompBindRefresh(DsWs_PaymTerm.getID());	    
		util.setRowPosition(DsWs_PaymTerm, 0);	
		//특약정보
	    util.copyM(Ds_Trty, parent.Ds_Trty.getAllJSON(),true);	
    	util.setCompBindRefresh(Ds_Trty.getID());	    
		util.setRowPosition(Ds_Trty, 0);	
	    //가입금액(공통)
	    Dsws_InsAmt.setJSON(parent.Dsws_InsAmt.getAllJSON());	
		util.setCompBindRefresh(Dsws_InsAmt.getID());	    
		util.setRowPosition(Dsws_InsAmt, 0);	
/*	    parent.util.insertColumn(parent.Ds_Pibo, [["sRqstYn", "sRqstYn", "text"], 
	    									      ["sRqstYnName", "sRqstYnName", "text"]]);    									
		parent.util.setCompBindRefresh(parent.Ds_Pibo.getID());
*/	   

	    //계약자mask 세팅
		scwin.medt_sCrtorCd_onviewchange();
	    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {	  
	    	/* st_CmmcMeanCncl.Visible = true; 
	    	cmb_CmmcMeanCnclYn.Visible = true;*/      
	        cmb_CmmcMeanCnclYn.setStyle("display", "");
        	cmb_CmmcMeanCnclYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sCmmcMeanCnclAgreYn"));
	        
	    } else {
	    	/* st_CmmcMeanCncl.Visible = false;
			cmb_CmmcMeanCnclYn.Visible = false;*/
        	cmb_CmmcMeanCnclYn.setStyle("display", "none");
	    }
	

	    ///////////////////////////////////////////////////////////////////////////////// 
	    //피보험자Detail
    	    
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "getPibo_Detail", 0, 0);
		MethodObj.setId("getPibo_Detail");
		MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setHashTable();   // 저장할 때
			
	    parent.Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    //계약기본사항을 담는다
		util.dataListCloneCopy(parent.Ds_LTIDA00, "pDs_LTIDA00", "0");
		MethodObj.addSingleData("LTIDA00", "LTIDA00", "pDs_LTIDA00:A"); // 계약기본사항정보		    
	    //피보험자사항 담는다
	    util.dataListCloneCopy(parent.Ds_Pibo, "pDs_Pibo", "0");
	    MethodObj.addVectorData("vLTIDA01", "vLTIDA01", "pDs_Pibo:A"); //피보험자사항
	    
	    MethodObj.setXPath("//*/vector/data/OTHER");
		MethodObj.addXPath("//WARNING");
//		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send(); 
	
		wconv.clear(DsWs_Warning);
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning", "Y");
		if (DsWs_Warning.getRowCount() != 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} 
		else {
		    wconv.clear(DsWs_Others);			
			util.jSonDsCreate(_tranSync.getDsJson("OTHER"), "DsWs_Others", "Y");
	        for (var i = 0; i < DsWs_Others.getRowCount(); i++) {
	            var nFindRow = wconv.findRow(parent.Ds_Pibo, "nInrpsSeqno", DsWs_Others.getCellData(i, "nInrpsSeqno"));
	            //cbs nFindRow가 있는 경우만 수행
	            if (nFindRow > -1) {
	  	            parent.Ds_Pibo.setCellData(nFindRow, "sRqstYn", DsWs_Others.getCellData(i, "sRqstYn"));
				}
	        }
	    }

	    //피보험자 정보 복사
	    wconv.clear(Ds_Pibo);
    	util.copyM(Ds_Pibo, parent.Ds_Pibo.getAllJSON(),true);
    	util.setCompBindRefresh(Ds_Pibo.getID());	    
		util.setRowPosition(Ds_Pibo, 0);	

	    //피보험자 화면 입력여부check
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        scwin.fn_subCheck(i);
	    }

	    ///////////////////////////////////////////////////////////////////////////////// 
	    //특약 체크된것과 화면출력특약만 화면에 보여줌
//	    wconv.filter(Ds_Trty, "pos(chk, '1') >== 0 && pos(sScrnIndcYn, 'Y') >= 0");
    	wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >= 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0 ");
	    
	    //피보험자성명필드추가
	    util.insertColumn(Ds_Trty, [["sGroupInrpsName", "sGroupInrpsName", "text"]]);
		util.setCompBindRefresh(Ds_Trty.getID());	    
		util.setRowPosition(Ds_Trty, 0);	
	    //체크된 피보험자명 삽입
	    Ds_Trty.setCellData(0, "sGroupInrpsName", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sGroupInrpsName"));
	    
	    //통신수단해지 동의와 수익자 약정 기본값 셋팅
	    parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCmmcMeanCnclAgreYn", "sCmmcMeanCnclAgreYn","text"], 
	    									          ["sInsurPftbpAsmtYn", "sInsurPftbpAsmtYn", "text"] ]);
		parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
		parent.util.setRowPosition(parent.Ds_LTIDA00, 0);

		// 수익자약정 
	    if (wconv.length(cmb_AsmtYn.getValue()) < 1) {
	   //     cmb_AsmtYn.setSelectedIndex(2);
	        cmb_AsmtYn.setValue("N");
	        parent.Ds_LTIDA00.setCellData(0, "sInsurPftbpAsmtYn", cmb_AsmtYn.getValue());
	    }
	    
	    if (wconv.length(cmb_CmmcMeanCnclYn.getValue()) < 1) {
	     //   cmb_CmmcMeanCnclYn.setSelectedIndex(1);
	        cmb_CmmcMeanCnclYn.setValue("Y");
	        parent.Ds_LTIDA00.setCellData(0, "sCmmcMeanCnclAgreYn", cmb_CmmcMeanCnclYn.getValue());
	    }

	};	
	
	//**********************************************************
	// 공통 코드호출
	//**********************************************************
	scwin.lfn_commCodeSetting = function() {
//      gfn_getCommonCodes(SOBJ, DOBJ_AddrFlag, "DsWs_AddrFlag DsWs_AqamtChnlCd", "AddrFlag AqamtChnlCd", "cmb_sMailRvadAddrFlagCd cmb_AqamtChnlCd", "S");
	
		//json 데이터를 가져와서 DataSet에 바인딩 해준다
	    var json = gfn_getJsonCommonCode("AddrFlag AqamtChnlCd");
	    if(json != null){
	    	//alert(JSON.stringify(json));
	    	DsWs_CmCd.setJSON(json, false);
	    }
	};	
	
	//**********************************************************
	// 계약자mask 세팅
	//**********************************************************
	scwin.medt_sCrtorCd_onviewchange = function(info) {  	
    	//계약자코드		
		var sCrtorCd = medt_sCrtorCd.getValue(); 
//		var oldValue = info.oldValue;
 //   	var newValue = info.newValue;
  //  	if(oldValue != newValue){
    		if(wconv.length(sCrtorCd) == 10){
				if(isBizRegNo(sCrtorCd)){
					medt_sCrtorCd.setDisplayFormat("###-##-#####");
				}else{
					medt_sCrtorCd.setDisplayFormat("######-#######");
				}
			}
			else {
				medt_sCrtorCd.setDisplayFormat("######-#######");
			}
	//	}
	};
	
	//**********************************************************
	// 계약자코드 에디트박스 키다운이벤트 
	//**********************************************************	
	scwin.medt_sCrtorCd_onkeydown = function(e) {
		// 엔터키
		if(e.keyCode == 13) {
			// 고객등록 화면 팝업 
			scwin.lfn_searchCust();
		}	
	};
	
	//**********************************************************
	// 계약자 정보를 조회/ 인수심사건이 있는지 조회
	//**********************************************************
	scwin.lfn_Search = function() {
	    //계약자코드 바인딩
	//    medt_sCrtorCd.setRef("data:Ds_LTIDA03.sCrtorCd");
	    //우편수령구분 바인딩
//	    cmb_sMailRvadAddrFlagCd.setRef("data:Ds_LTIDA03.sMailRvadAddrFlagCd");   
	
	    //공통코드호출
	    //gfn_getCommonCodes(SOBJ, DOBJ_AddrFlag, "DsWs_AddrFlag DsWs_AqamtChnlCd", "AddrFlag AqamtChnlCd", "cmb_sMailRvadAddrFlagCd cmb_AqamtChnlCd", "S");
		scwin.lfn_commCodeSetting(); 
		
        //cbs - insertRow -> Choose Option 사용
        //취득경로
//        var insRow = util.insertRow(DsWs_AqamtChnlCd, 0);
//        DsWs_AqamtChnlCd.setCellData(0, "sCd", "");
//        DsWs_AqamtChnlCd.setCellData(0, "sHnglCdName", "- 선택 -");
        cmb_AqamtChnlCd.setSelectedIndex(0);
	
	    //계약자정보 복사
//	    wconv.copy(Dsws_InsAmt, parent.Dsws_InsAmt);
	    Dsws_InsAmt.setJSON(parent.Dsws_InsAmt.getAllJSON());	//계약자정보 
	    
//	    wconv.copy(Ds_LTIDA03, parent.Ds_LTIDA03); //계약자정보  
	    util.copyM(Ds_LTIDA03,parent.Ds_LTIDA03.getAllJSON(),true);	//계약자정보 
	    util.setCompBindRefresh(Ds_LTIDA03.getID());
		util.setRowPosition(Ds_LTIDA03, 0);

	    //만기수익자여부처리
	    if (wconv.length(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd")) > 0) {
	        edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
	    } else {
	        edt_sEnntmPftbpYn.setValue("선택안됨");
	    }
		
	    //지정대리인여부처리
	    if (wconv.length(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd")) > 0) {
	        edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
	    } else {
	        edt_sAsmtAgntYn.setValue("선택안됨");
	    }
		
	    //세금우대여부처리
	    cmb_sTaxPrfrYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn"));
	
	    //세금우대조회버튼 활성/비활성처리
	    if (cmb_sTaxPrfrYn.getValue() == "N") {
	        btn_TaxSearch.setDisabled(true);
	    } else {
	        btn_TaxSearch.setDisabled(false);
	    }	
	
	    //대상고객,취득경로
	    if (!util.isNull(parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole"))) {
	        cmb_CrPrtrRole.setValue(parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole"));
	    } else {
	        cmb_CrPrtrRole.setValue("10");
	        
			// 인서트컬럼
	        parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCrPrtrRole", "sCrPrtrRole", "text"] ]);
	        parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
	        parent.Ds_LTIDA00.setRowPosition(0, false);	        
	        parent.Ds_LTIDA00.setCellData(0, "sCrPrtrRole", cmb_CrPrtrRole.getValue());
	    }
	    if (!util.isNull(parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd"))) {
	        cmb_AqamtChnlCd.setValue(parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd"));
	    }

	    //인수제한건 출력	
	    edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());
	
	    //인수심사상태 출력
	    btn_Insu.setDisabled(true);
	    if (wconv.substr(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd"), 0, 1) == "5") {
	        edt_Insu.setValue(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankName"));
	        //51 심사대상일경우
	        if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "51") {
	            //인수요청버튼 활성화
	            btn_Insu.setDisabled(false);
	        }
	    }
	};

	//**********************************************************
	// 피보험자 그리드 셀클릭 이벤트 발생 
	//**********************************************************
	scwin.grd_Pibo_oncellclick = function(row,col) {
		var promise = Promise.resolve();
		
		var colId = grd_Pibo.getColumnID(col);	
		switch(colId) {
		case "sel":// 피보험자 선택 
			//현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	        /*for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (i != row && Ds_Pibo.getCellData(i, "sel") == "1" && !piboCheckFlag) {
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(i, "sel", "0");
	                break;
	            }
	        }
	
	        //피보험자에 해당하는 특약사항을 조회한다.
	        if (Ds_Pibo.getCellData(row, "sel") == "1" && !piboCheckFlag) {
	            scwin.lfn_searchPiboTrty(row);
	        } else {
	            if (!piboCheckFlag) {
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "1");
	            } else {
	                piboCheckFlag = false;
	            }
	        }*/
	        //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (i != row && Ds_Pibo.getCellData(i, "sel") == "1") {
	//                piboCheckFlag = true;
	                Ds_Pibo.setCellData(i, "sel", "0");
	                break;
	            }
	        }
	
	        //피보험자에 해당하는 특약사항을 조회한다.
	        if (Ds_Pibo.getCellData(row, "sel") == "1") {
	            scwin.lfn_searchPiboTrty(row);
	        } else {
	                Ds_Pibo.setCellData(row, "sel", "1");
	           
	        }
			break;
		// 주민번호 클릭시 피보험자 누적[B290_Pop] 화면 팝업
		case "sGroupInrpsCd":
			var indata = { "sRow" : row };		
			var pObj = { "Ds_Pibo": Ds_Pibo					 // 부모창 피보험자 정보 Ds Set 
						 ,"Ds_LTIDA00" : parent.Ds_LTIDA00   // 부모창 보험 기본사항 정보 Ds Set  --> sJobName
			};
				
		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
								"width"     : 1113,
								"height"    : 692,  
								"indata"    : indata,
								"parentObject": pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트  // 수정(추가) 2017.11.02, by 진태만 
								"title"     : "피보험자 누적"
							  };
				return wprom.popupOpen("/ui/cbsc/CBSC128P.xml", popInfo);				
			});
			break;
		// 고지사항 클릭시 피보험자고지사항[B230_Pop] 화면팝업
		case "sRqstYnName":
			var indata = {};	
			indata["sRqstYn"] = Ds_Pibo.getCellData(row, "sRqstYn");//고지사항입력여부
			if(wconv.length(parent.Tab_Step1.DsWs_PrdAttr.getCellData(0,"NotcGdFlag"))>0)
			{
				indata["sNotcGdFlag"] = parent.Tab_Step1.DsWs_PrdAttr.getCellData(0,"NotcGdFlag");
			}
			else {
				indata["sNotcGdFlag"] = "00"; //고지상품구분(운전구분을 고지상품구분으로 대체)
			}
			indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sGroupInrpsCd");		//피보험자코드
			indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sGroupInrpsName");	//성명
			indata["sCrtorRelnName"] = grd_Pibo.getCellDisplayData(row, "sCrtorRelnCd");
			indata["sPlanNo"] = parent.medt_PlanNo.getValue();	//설계번호
			indata["sPsnGroupFlgcd"] = parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");//개인단체구분
			indata["nPsnGroupSeqno"] = Ds_Pibo.getCellData(row, "nInrpsSeqno");//seq
			indata["sSsrtDate"] = parent.Ds_LTIDA00.getCellData(0,"sSsrtDate");//청약일자
			indata["sDrveFlagCd"] = Ds_Pibo.getCellData(row, "sDrveFlagCd");//운전구분
			indata["sJobName"] = Ds_Pibo.getCellData(row, "sJobName");//운전구분
			indata["sGdCd"] = parent.Tab_Step1.DsWs_PrdAttr.getCellData(0,"GdCd"); //상품코드 2014.11.25 By SDJ (N1408-00032) 간병보험 적용을 위해 추가			
			//저축상품 여부
			var sSvtYn = "N";
			if(parent.DsWs_PrdAttr.getCellData(0,"GdFlgcd") == "2"){
				sSvtYn = "Y";
			}
			indata["sSvtYn"] = sSvtYn;		
			var pObj = { 	"Ds_Pibo" : Ds_Pibo,      // 피보험자 정보 Ds 
   							"Ds_LTIDA00" : parent.Ds_LTIDA00   // 보험 기본사항 정보 Ds  
  						}; 
 		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
						"width"     : 876,
						"height"    : 865,  
						"indata"    : indata,
						"parentObject": pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트  // 수정(추가) 2017.11.02, by 진태만 
						"title"     : "피보험자고지사항"
				};
                return wprom.popupOpen("/ui/cbsc/CBSC129P.xml", popInfo);				
			});
			promise = promise.then(function(rtnVal) {
                var rtnValue = wprom.getReturnData();
                if (!mfn_IsEmpty(rtnValue)) {
                    Ds_Pibo.setCellData(row, "sRqstYn", rtnValue);
                    if (wconv.length(rtnValue) > 0) {
                        btn_Insu.setDisabled(true);
                        parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
                    }
                }
			});
			break;
		//사망수익자 클릭시 
		case "sPftbpName":
			var indata = {};
            //만기시수익자, 사망시수익자, 지정대리인 구분자 
            indata["fAgntFlag"] = "ed_Dead";
            //계약자/피보험자관계
            indata["sRelnCd"] = Ds_Pibo.getCellData(row, "sPftbpInrpsRelnCd");
            //수익자코드(주민번호)
            indata["sCd"] = Ds_Pibo.getCellData(row, "sPftbpCd");
            //성명
            indata["sName"] = Ds_Pibo.getCellData(row, "sPftbpName");
            //연락처
            indata["sTelno"] = Ds_Pibo.getCellData(row, "sPftbpTelno");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sGroupInrpsCd");
            //계약자/피보험자 성명
            indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sGroupInrpsName");
            indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
            if (Ds_Pibo.getCellData(row, "sRpstInrpsFlag") == "1") {
            	// 주소
	            indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
	            // 주소추가
	            indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");           
	            indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
	            indata["sPftbpAddFlag"] = Ds_Pibo.getCellData(row, "sPftbpMailAddFlag");
	            indata["nPftbpChngSeq"] = Ds_Pibo.getCellData(row, "nPftbpMailChngSeq");
	            indata["sPftbpAddr"] = Ds_Pibo.getCellData(row, "sPftbpAddr");
	            indata["fAgntFlagIdx"] = row;
	            	            
	            // 수익자등록[B110_Pop] 화면팝업 CBSC069P
	            var promise = Promise.resolve();
			    promise = promise.then(function(rtnVal) {
			    	var popInfo = {
						"width"     : 664,
						"height"    : 162,  
						"indata"    : indata,
						"parentObject" : pObj,
						"title"     : "수익자등록"
					};
	                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);			
				});	
				promise = promise.then(function(rv) {
					var rtnValue = wprom.getReturnData();
	      			if (wconv.length(rtnValue) != 0) {
	      				scwin.lfn_B110_CallBack(rtnValue);
	          		}	
	          	});			            
            }
            else {
            	indata["sPftbpAddFlag"] = Ds_Pibo.getCellData(row, "sPftbpMailAddFlag");
	            indata["nPftbpChngSeq"] = Ds_Pibo.getCellData(row, "nPftbpMailChngSeq");
	            indata["sPftbpAddr"] = Ds_Pibo.getCellData(row, "sPftbpAddr");
	            indata["fAgntFlagIdx"] = row;
          
            	// 수익자등록[B111_Pop] 화면팝업 CBSC070P
            	var promise = Promise.resolve();
			    promise = promise.then(function(rtnVal) {
			    	var popInfo = {
						"width"     : 613,
						"height"    : 154,  
						"indata"    : indata,
						"parentObject" : pObj,
						"title"     : "수익자등록"
					};
	                return wprom.popupOpen("/ui/cbsc/CBSC070P.xml", popInfo);
					
				});
				promise = promise.then(function(rv) {
					var rtnValue = wprom.getReturnData();
	      			if (wconv.length(rtnValue) != 0) {
	      				scwin.lfn_B111_CallBack(rtnValue);
	          		}	
	          	});			
			}
			break;
		//사망외수익자 클릭시 수익자등록[B111_Pop] 화면팝업 CBSC070P
		case "sXcptPftbpName":
			var indata = {};
			//만기시수익자, 사망시수익자, 지정대리인, 사망외수익자 구분자 
            indata["fAgntFlag"] = "ed_Xcpt";
            //계약자/피보험자관계
            indata["sRelnCd"] = Ds_Pibo.getCellData(row, "sXcptPftbpInrpsRelnCd");
            //수익자코드(주민번호)
            indata["sCd"] = Ds_Pibo.getCellData(row, "sXcptPftbpCd");
            //성명
            indata["sName"] = Ds_Pibo.getCellData(row, "sXcptPftbpName");
            //연락처
            indata["sTelno"] = Ds_Pibo.getCellData(row, "sXcptPftbpTelno");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sGroupInrpsCd");
            //계약자/피보험자 성명
            indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sGroupInrpsName");
            indata["sXcptPftbpAddFlag"] = Ds_Pibo.getCellData(row, "sXcptPftbpMailAddFlag");
            indata["nXcptPftbpChngSeq"] = Ds_Pibo.getCellData(row, "nXcptPftbpMailChngSeq");
            indata["sXcptPftbpAddr"] = Ds_Pibo.getCellData(row, "sXcptPftbpAddr");
            indata["sAddrFlgcd"] = Ds_LTIDA03.getCellData(row, "sMailRvadAddrFlagCd");
            indata["nAddrChngSeq"] = Ds_LTIDA03.getCellData(row, "nMailRvadChngSeq");
            indata["sMaildress"] = edt_RvadAddr.getValue();
            indata["sMaildressFlag"] = cmb_sMailRvadAddrFlagCd.getValue();
            indata["fAgntFlagIdx"] = row;
			indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
			var promise = Promise.resolve();
		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
					"width"     : 613,
					"height"    : 154,  
					"indata"    : indata,
					"parentObject" : pObj,
					"title"     : "수익자등록"
				};
                return wprom.popupOpen("/ui/cbsc/CBSC070P.xml", popInfo);
				
			});
			promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				console.log("===> rtnValue edt_sEnntmPftbpYn" + rtnValue);
      				scwin.lfn_B111_CallBack(rtnValue);
          		}	
          	});
			break;
		default:
            break;
		} // end switch
		
		promise = promise.then(function(rtnVal) {
        	scwin.fn_subCheck(row);
	    });
	    return promise;
	};
	
	//**********************************************************
	// 피보험자 서브화면 입력여부 check
	//**********************************************************
	scwin.fn_subCheck = function(nRow) {
	    //고지사항사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sRqstYn")) > 0) {
	        Ds_Pibo.setCellData(nRow, "sRqstYnName", "완료");
	    } else {
	        Ds_Pibo.setCellData(nRow, "sRqstYnName", "미입력");
	    }
	
	    //사망수익자사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sPftbpName")) > 0) {
	    	;
	    } else {
	        Ds_Pibo.setCellData(nRow, "sPftbpName", "법정상속인");
	    }

	    //사망외수익자사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sXcptPftbpName")) > 0) {
	    	;
	    } else {
	        Ds_Pibo.setCellData(nRow, "sXcptPftbpName", "선택");
	    }
	};
	
	
	//**********************************************************
	// 피보험자 데이터셋 셀데이터 체인지 이벤트 발생 
	//**********************************************************
	scwin.lfn_Pibo_OnColumnChanged = function(info) {
		var colId = info.colID;
		var row = info.rowIndex;
		
		// 피보험자체크시 특약정보 조회	
		var promise = Promise.resolve();
	    if (colId == "sel") {
	        promise = promise.then(function(rtnVal) {	        			    	
		    	//현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
		        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
		            if (i != row && Ds_Pibo.getCellData(i, "sel") == "1" && !piboCheckFlag) {
		                piboCheckFlag = true;
		                Ds_Pibo.setCellData(i, "sel", "0");
		                break;
		            }
		        }
		
		        //피보험자에 해당하는 특약사항을 조회한다.
		        if (Ds_Pibo.getCellData(row, "sel") == "1" && !piboCheckFlag) {
		            scwin.lfn_searchPiboTrty(row);
		        } else {
		            if (!piboCheckFlag) {
		                piboCheckFlag = true;
		                Ds_Pibo.setCellData(row, "sel", "1");
		            } else {
		                piboCheckFlag = false;
		            }
		        }
	        });
	     
	    }
	    
	    return promise;
	};
	
	//**********************************************************
	// 피보험자에 해당하는 특약정보를 조회한다.
	//**********************************************************	
	scwin.lfn_searchPiboTrty = function(nRow) {    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
	    MethodObj.setId("getPiboTrty");
	    
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    MethodObj.setParam("sGdCd", parent.Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", parent.Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", parent.Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
	        MethodObj.setParam("sPlanCd", parent.Tab_Step1.cmb_Plan.getValue()); //플랜코드
	    } else {
	        MethodObj.setParam("sPlanCd", Ds_Pibo.getCellData(nRow, "sApplPlanCd")); //플랜코드
	    }
	    MethodObj.setParam("sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));//개인단체구분코드
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sGroupInrpsCd")); //피보험자주민번호
        MethodObj.setParam("nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno"));//일련번호

	    MethodObj.setUrl("/contract/CBSC042MController.do");
	    //보험기간 
		MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		//납입기간
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		//특약 
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    //특약중 화면출력특약만 화면에 보여줌    	
		wconv.clear(DsWs_Warning);
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");
		if (DsWs_Warning.getRowCount() != 0) {
		        alert(DsWs_Warning.getCellData(0, "msg"));
		        return;
		}
		else{
			wconv.clear(DsWs_InsurTerm);
			wconv.clear(DsWs_PaymTerm);
			wconv.clear(DsWs_Trty);
	       	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y");	// dataset 데이터
		    util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");	// dataset 데이터
		    util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"),"DsWs_Trty", "Y");	// dataset 데이터
		
			//특약세팅
			util.copyM(Ds_Trty, DsWs_Trty.getAllJSON(),true);	
			
			//특약 체크된것과 화면출력특약만 화면에 보여줌
     		Ds_Trty.removeColumnFilterAll();
       		wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >= 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	
			//피보험자성명필드추가
			util.insertColumn(Ds_Trty, [["sGroupInrpsName", 		"sGroupInrpsName", 		"text"]]);
			//체크된 피보험자명 삽입
			Ds_Trty.setCellData(0, "sGroupInrpsName", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel","1"), "sGroupInrpsName"));
			util.setCompBindRefresh(Ds_Trty.getID());
			util.setRowPosition(Ds_Trty, 0);
		}
		
		//피보험자 체크박스 플래그 초기화
//		piboCheckFlag = false;
		
	};	
	
	//**********************************************************
	// 고객팝업
	//**********************************************************
	scwin.lfn_searchCust = function(e) {
		var pro = Promise.resolve();
	    var result;
	    var parentInfo = "";
	
	    wconv.clear(Ds_long_mPlr);
	    this_sCrtorCd = medt_sCrtorCd.getValue();
	
	    //계약자번호 입력여부체크
	    if (mfn_IsEmpty(this_sCrtorCd)) {
	        wprom.alertF("계약자번호를 입력하세요.", {}, medt_sCrtorCd);
	        return false;
	    } else {
	        //사업자체크
	        if (this_sCrtorCd.length == 10) {
	            if (!isBizRegNo(this_sCrtorCd)) {
	                wprom.alertF("사업자번호를 정확히 입력하세요.", {}, medt_sCrtorCd);
	                return false;
	            }
	        } else {
	            if (!checkPersonID(this_sCrtorCd)) {
	                wprom.alert("계약자번호가 올바르지 않습니다."); 
	                //				medt_sCrtorCd.SetFocus();
	                //				return false;						
	            }
	        }
	    }
	    wconv.clear(Ds_long_mPlr);
	    if (wconv.length(this_sCrtorCd) == 10) {
	        //법인화면 오픈  
	        //107-86-24985
	        if (Ds_LTIDA03.getRowCount() > 0 && 
	            wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0 && 
        		(Ds_LTIDA03.getCellData(0, "sCrtorCd") == this_sCrtorCd)){
 	            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
	            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
	            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
            	parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        } else {	            
	            parentInfo += "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += "2^"; //고객유형 내국인
	            parentInfo += "^"; //주소구분코드 자택
	            parentInfo += "^"; //주소변경회차
	            parentInfo += "^"; //전화회차
	            parentInfo += "^"; //발송지주소구분
	            parentInfo += "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        }
console.log("====parentInfo \n"+parentInfo);
	        //대면/비대면체크  Y:  대면 , N : 비대면
	        pro = pro.then(function(rv) {
	        	var indata = {"parentInfo": parentInfo,
			                   "screenId": "long"
			                  };
				var pObj = {"Ds_long_mPlr": Ds_long_mPlr, 
				            "Ds_LTIDA00": parent.Ds_LTIDA00 
				            };
				var popInfo = {
					"width"     : 817,
					"height"    : 518,  
					"indata"    : indata,
					"title"     : "법인고객 등록",
					"parentObject" : pObj
				};
				return wprom.popupOpen("/ui/cbso/CBSO012P.xml", popInfo);
	        });
	        pro = pro.then(function(rv) {
	            //세금우대 미가입으로 변경
	            cmb_sTaxPrfrYn.setValue("N");
	            scwin.lfn_TaxChange();
	        });
	    } else {
	        if (Ds_LTIDA03.getRowCount() > 0 && wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0  
	        		 && (Ds_LTIDA03.getCellData(0, "sCrtorCd") == this_sCrtorCd)){	
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
	            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
	            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        } else {
	            parentInfo += "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += "1^"; //고객유형 내국인
	            parentInfo += "^"; //주소구분코드 자택
	            parentInfo += "^"; //주소변경회차
	            parentInfo += "^"; //전화회차
	            parentInfo += "^"; //발송지주소구분
	            parentInfo += "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        }
	
			pro = pro.then(function(rv) {
				var indata  = {"parentInfo" : parentInfo,
				               "screenId" : "long",
				               "sStandDate" : parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"),
				               "fAgntFlagPop" : "",
				               "sPlanNo" : parent.medt_PlanNo.getValue(),
				               "sHandlerID" : parent.scwin.lfn_GetDoerUser(),
				               "sScanObjtYn" : parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn")
				               };
				
				var popInfo = {
					"width"     : 800,
					"height"    : 580,  
					"indata"    : indata,
					"title"     : "개인고객등록"
				};
				
				return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);
			});
						
			pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
	
				if (rtnValue.Ds_long_mPlr != "") {
					Ds_long_mPlr.setJSON(rtnValue.Ds_long_mPlr);
				}
			});
	    }
	    
	    pro = pro.then(function(rv) {
	        if (Ds_long_mPlr.getRowCount() > 0) {
	            if (parent.sAgncYn != "Y") {
	                //계약자코드 바인딩
	                medt_sCrtorCd.setRef("data:Ds_LTIDA03.sCrtorCd");
	            }
	
	            //우편수령구분 바인딩
	            cmb_sMailRvadAddrFlagCd.setRef("data:Ds_LTIDA03.sMailRvadAddrFlagCd");
	
	            //초기화
	            Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호                 
	            Ds_LTIDA03.setCellData(0, "nCrChngNo", "0"); //계약변경번호             
	            Ds_LTIDA03.setCellData(0, "sCrtorFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //계약자구분코드           
	            Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //계약자코드               
	            Ds_LTIDA03.setCellData(0, "sCrtorName", Ds_long_mPlr.getCellData(0, "sName")); //계약자명                 
	            // 사업자가 아닌 경우에만 나이와 성별 구하기 
	            if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) != 10){
		            Ds_LTIDA03.setCellData(0, "nCrtorAge", gfn_getInsAge(Ds_LTIDA03.getCellData(0, "sCrtorCd"), parent.Ds_LTIDA00.getCellData(0, "sSsrtDate"))); //계약자연령               
		            Ds_LTIDA03.setCellData(0, "sCrtorSexFlag", scwin.lfn_getSex(Ds_LTIDA03.getCellData(0, "sCrtorCd"))); //계약자성별구분           
	            }
	            Ds_LTIDA03.setCellData(0, "sCrtorCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //계약자고객ID             
	            Ds_LTIDA03.setCellData(0, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
	            Ds_LTIDA03.setCellData(0, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
	            Ds_LTIDA03.setCellData(0, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
	            Ds_LTIDA03.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
	            Ds_LTIDA03.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
	            Ds_LTIDA03.setCellData(0, "sMailRvadAddrFlagCd", Ds_long_mPlr.getCellData(0, "sDMAdrsTyp")); //우편물수령처주소구분코드 
	            Ds_LTIDA03.setCellData(0, "nMailRvadChngSeq", Ds_long_mPlr.getCellData(0, "nAdrsChangeNo")); //우편물수령처변경회차     
	            Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드     
	            Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
	            Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
	            Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
	            Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처         
	            Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드       
	            Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
	            Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
	            Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명        가     
	            Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처 		 
	            Ds_LTIDA03.setCellData(0, "sZip1", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 0, 3)); //우편번호
	            Ds_LTIDA03.setCellData(0, "sZip2", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 3, 3)); //우편번호
	            Ds_LTIDA03.setCellData(0, "sAdrs1", Ds_long_mPlr.getCellData(0, "sHomAdr1")); //집주소
	            Ds_LTIDA03.setCellData(0, "sAdrsAdd", Ds_long_mPlr.getCellData(0, "sHomAdr2")); //집주소
	            Ds_LTIDA03.setCellData(0, "sHomeTel1", Ds_long_mPlr.getCellData(0, "sHomeTel1")); //집전화번호
	            Ds_LTIDA03.setCellData(0, "sHomeTel2", Ds_long_mPlr.getCellData(0, "sHomeTel2")); //집전화번호
	            Ds_LTIDA03.setCellData(0, "sHomeTel3", Ds_long_mPlr.getCellData(0, "sHomeTel3")); //집전화번호
	            Ds_LTIDA03.setCellData(0, "sOfficeTel1", Ds_long_mPlr.getCellData(0, "sOfficeTel1")); //사무실전화번호
	            Ds_LTIDA03.setCellData(0, "sOfficeTel2", Ds_long_mPlr.getCellData(0, "sOfficeTel2")); //사무실전화번호
	            Ds_LTIDA03.setCellData(0, "sOfficeTel3", Ds_long_mPlr.getCellData(0, "sOfficeTel3")); //사무실전화번호
	            Ds_LTIDA03.setCellData(0, "sCellPhone1", Ds_long_mPlr.getCellData(0, "sCellPhone1")); //핸드폰번호
	            Ds_LTIDA03.setCellData(0, "sCellPhone2", Ds_long_mPlr.getCellData(0, "sCellPhone2")); //핸드폰번호
	            Ds_LTIDA03.setCellData(0, "sCellPhone3", Ds_long_mPlr.getCellData(0, "sCellPhone3")); //핸드폰번호
	            Ds_LTIDA03.setCellData(0, "sFax1", Ds_long_mPlr.getCellData(0, "sFax1")); //fax번호
	            Ds_LTIDA03.setCellData(0, "sFax2", Ds_long_mPlr.getCellData(0, "sFax2")); //fax번호
	            Ds_LTIDA03.setCellData(0, "sFax3", Ds_long_mPlr.getCellData(0, "sFax3")); //fax번호
	            Ds_LTIDA03.setCellData(0, "sEmail1", Ds_long_mPlr.getCellData(0, "sEmail1")); //이메일
	            Ds_LTIDA03.setCellData(0, "RvadAddr", Ds_long_mPlr.getCellData(0, "sAdrs1") + " " + Ds_long_mPlr.getCellData(0, "sAdrs2")); //우편물수령처주소
	            Ds_LTIDA03.setCellData(0, "sEnntmPftbpYn", "N"); //만기수익자입력상태
//	            Ds_LTIDA03.setCellData(0, "sAsmtAgntYn", "N"); //지정대리인입력상태	
//	            Ds_LTIDA03.setCellData(0, "sInsurPftbpYn", "N"); //보험수익자입력상태
	            // B330_Div2  없는 로직 개인 참조 CBSC017S
	            /*
	            //피보험자, 계약자동일할때 피보험자 주소, 전화번호 update
				// ASIS는 sInrpsCd 로 비교하나 단체인경우에는 sGroupInrpsCd와 비교하도록 수정
//	            if (Ds_Pibo.getCellData(0, "sInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
	            if (Ds_Pibo.getCellData(0, "sGroupInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
	                Ds_Pibo.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
	                Ds_Pibo.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
	            }
	            if (parent.sAgncYn == "Y") {
	                Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd"));
	            }*/
	            
	            
	            //cbs 추가
	            parent.scwin.lfn_set_Tab_Info("S2", "T1");
	            
	            util.setCompBindRefresh(Ds_LTIDA03.getID());
	            util.setRowPosition(Ds_LTIDA03, 0);
	        }
	    });
	    	    
	    return;
	};
	
	//**********************************************************
	// 세금우대선택시 세금우대가입한도조회팝업버튼 활성/비활성처리
	//**********************************************************	
	scwin.lfn_TaxChange = function() {
		var this_sCrtorCd = medt_sCrtorCd.getValue();
		/* 주석처리 B330_Div2에 Ds_CrtorCd 데이터셋 미존재 
		if(parent.sAgncYn == "Y"){
			this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
		}*/
		
		var sTaxPrfrYn = cmb_sTaxPrfrYn.getValue();
		if(sTaxPrfrYn == "Y" && length(this_sCrtorCd) == 10){
			alert("법인은 세금우대를 가입할 수 없습니다.");
			cmb_sTaxPrfrYn.setValue("N");
		}
		
		if(sTaxPrfrYn == "N"){
			btn_TaxSearch.setDisabled(true);
		}else{
			btn_TaxSearch.setDisabled(false);
		}
	};
	
	//**********************************************************
	// 성별을 체크한다.
	//**********************************************************
	scwin.lfn_getSex = function(val) {
	    if ("1|3|5|7".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "1";
	    } else if ("2|4|6|8".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "2";
	    } else {
	        return "";
	    }
	};
	
	
	//**********************************************************
	// 만기수익자 에디트박스 클릭이벤트 
	//**********************************************************
	scwin.edt_sEnntmPftbpYn_onclick = function(e) {
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorName")) == 0){
			alert("계약자를 선택하세요");
			cmb_sTaxPrfrYn.setValue("N");
			btn_TaxSearch.setDisabled(true);
			return;
		}
	
		var promise = Promise.resolve();
	    
		// 수익자 등록 팝업화면 호출	
		var indata = {};
	    //만기시수익자, 사망시수익자, 지정대리인 구분자 
       	indata["fAgntFlag"] = "ed_Mangi";
       	//계약자/피보험자관계
       	indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd");
	    //수익자코드(주민번호)
	    indata["sCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCd");
        //성명
        indata["sName"] = Ds_LTIDA03.getCellData(0, "sEndPftbpName");
        //연락처
        indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCntad");
        //계약자/피보험자코드(주민번호)
        indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd");
        //계약자/피보험자 성명
        indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName");
        //주소
        indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
        //주소추가
        indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");    
        //발송지주소구분       
        indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        //집전화번호
        indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
        indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
        indata["sOfficeTel1"] = Ds_LTIDA03.getCellData(0, "sOfficeTel1");
        indata["sOfficeTel2"] = Ds_LTIDA03.getCellData(0, "sOfficeTel2");
        indata["sOfficeTel3"] = Ds_LTIDA03.getCellData(0, "sOfficeTel3");
		indata["sCellPhone1"] = Ds_LTIDA03.getCellData(0, "sCellPhone1");
        indata["sCellPhone2"] = Ds_LTIDA03.getCellData(0, "sCellPhone2");
        indata["sCellPhone3"] = Ds_LTIDA03.getCellData(0, "sCellPhone3");  
                    
        indata["sEndPftbpAddFlag"] = Ds_LTIDA03.getCellData(0, "sEndPftbpMailAddFlag");
        indata["nEndPftbpChngSeq"] = Ds_LTIDA03.getCellData(0, "nEndPftbpChngSeq");
        indata["sEndPftbpAddr"] = Ds_LTIDA03.getCellData(0, "sEndPftbpAddr");
        indata["sMaildress"] = Ds_LTIDA03.getCellData(0, "RvadAddr");
        indata["sMaildressFlag"] = cmb_sMailRvadAddrFlagCd.getValue();
        indata["sAddrFlgcd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        indata["nAddrChngSeq"] = Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq");
        indata["fAgntFlagIdx"] = 0;
        indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
        
        var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00}; 
	    promise = promise.then(function(rtnVal) {
	    	var popInfo = {
				"width"     : 664,
				"height"    : 162,  
 		        "indata"    : indata,
//            "callback"  : scwin.popupCallback,
				"parentObject" : pObj,
				"title"     : "수익자등록"
			};
            return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
		});
		
		promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
     		if (wconv.length(rtnValue) != 0) {
     			scwin.lfn_B110_CallBack(rtnValue);
         	}	
		});
	};
	
	//**********************************************************
	// 지정대리인 에디트박스 클릭이벤트 
	//**********************************************************
	scwin.edt_sAsmtAgntYn_onclick = function(e) {
		var promise = Promise.resolve();
		
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorName")) == 0){
			alert("계약자를 선택하세요");
			cmb_sTaxPrfrYn.setValue("N");
			btn_TaxSearch.setDisabled(true);
			return;
		}
	    
	    if(Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sGroupInrpsCd")){
			alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
			return;
		}
	
		if(Ds_Pibo.getRowCount()  > 1){
			alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
			return;
		}
			
		// 수익자 등록 팝업화면 호출	
		var indata = {};
	    //만기시수익자, 사망시수익자, 지정대리인 구분자 
       	indata["fAgntFlag"] = "ed_Proxy";
       	//계약자/피보험자관계
       	indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd");
	    //수익자코드(주민번호)
	    indata["sCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCd");
        //성명
        indata["sName"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntName");
        //연락처
        indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad");
        //계약자/피보험자코드(주민번호)
        indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd");
        //계약자/피보험자 성명
        indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName");
        //주소
        indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
        //주소추가
        indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");    
        //발송지주소구분       
        indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        //집전화번호
        indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
        indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
                    
        indata["sAsmtAgntMailAddFlag"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntMailAddFlag");
        indata["nAsmtAgntMailChngSeq"] = Ds_LTIDA03.getCellData(0, "nAsmtAgntMailChngSeq");
        indata["sAsmtAgntAddr"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntAddr");
        indata["fAgntFlagIdx"] = 0;
		indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
		
        var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
         
	    promise = promise.then(function(rtnVal) {
	    	var popInfo = {
				"width"     : 664,
				"height"    : 162,  
                "indata"    : indata,
				"parentObject" : pObj,
//              "callback"  : scwin.popupCallback,
				"title"     : "수익자등록"
			};
	        return wprom.popupOpen("/ui/cbsc/CBSC070P.xml", popInfo);
	    });	
	    
		promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
    		if (wconv.length(rtnValue) != 0) {
    			scwin.lfn_B110_CallBack(rtnValue);
        	}	
        });	    
	};
	
	
	//**********************************************************
	// 세금우대선택시 세금우대가입한도조회팝업버튼 활성/비활성처리
	//**********************************************************
	scwin.cmb_sTaxPrfrYn_onviewchange = function(info) {
		var oldValue = info.oldValue;
    	var newValue = info.newValue;
    	if(oldValue != newValue) {	
			var sCrtorCd = medt_sCrtorCd.getValue();
			var sTaxPrfrYn = cmb_sTaxPrfrYn.getValue();
			if(parent.sAgncYn == "Y"){
				sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
			}
		
			if(sTaxPrfrYn == "Y" && wconv.length(sCrtorCd) == 10){
				wprom.alert("법인은 세금우대를 가입할 수 없습니다.");
				cmb_sTaxPrfrYn.setValue("N");
			}
			
			if(sTaxPrfrYn == "N"){
				btn_TaxSearch.setDisabled(true);
				
			}else{
				btn_TaxSearch.setDisabled(false);
			}
		}
		
	};
	
	//**********************************************************
	// 즉시고위험고객 버튼 클릭이벤트 
	//**********************************************************
	scwin.btn_RiskInfo_onclick = function() {
		//  CBSC099P 즉시 고위험 고객 진태만
		var popInfo = {
			"width"     : 557,
			"height"    : 527,  
            "indata"    : "", //indata,
			"title"     : "즉시 고위험 고객"
		};
        return wprom.popupOpen("/ui/cbsc/CBSC099P.xml", popInfo);	
	};
	
	//**********************************************************
	// 금융거래제한대상자 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_Watch_onclick = function() {
		// CBSC033P 금융거래제한대상자 진태만
		var popInfo = {
			"width"     : 652,
			"height"    : 526,  
            "indata"    : "", //indata,
			"title"     : "금융거래제한대상자"
		};
		
        return wprom.popupOpen("/ui/cbsc/CBSC033P.xml", popInfo);	
	};
	
	//**********************************************************
	// 안내문발송 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_PrintInfo_onclick = function() {
		var promise = Promise.resolve();
		
		if(wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) != 0 
			&& wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 51){		
			wprom.alert("계약자를 저장해주세요");
			return;
		}
		
		var sSvtYn = "N";
		if(parent.DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2"){
			sSvtYn = "Y";
		}
		
		var indata = {};
		var sPlanNo = parent.medt_PlanNo.getValue();	
		
		indata["sPlanNo"] = sPlanNo;
       	indata["sPsnGroupFlgcd"] = "21";
       	indata["sGdCd"] = parent.edt_sGdCd.getValue();
       	indata["sGdCdNm"] = parent.edt_sGdCdNm.getValue();
       	indata["sPlanProgRankCd"] = parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
       	indata["sSrdoIssuDate"] = parent.Ds_LTIDA00.getCellData(0, "sSrdoIssuDate");
       	indata["sSvtYn"] = sSvtYn;
       	indata["tab"] = "2";
       	
     	var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
		        	 "Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds Set 				
		            }; 	// 자식으로 보낼 부모 Ds OBJECT 리스트
       	
		// CBSC101P 증명서발급 진태만
		promise = promise.then(function(rtnVal) {
			var popInfo = {"width":677,
	    	                "height":208,
	    	                "indata":indata,
     	                    "parentObject" : pObj,// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
			    		    "title"     : "증명서발급"
	    	              };
	    	return wprom.popupOpen("/ui/cbsc/CBSC101P.xml", popInfo); 
		});
		
		promise = promise.then(function(rtnVal) {
			var rtnValue = wprom.getReturnData();
			console.log("====CBSC101P promise close \n"+JSON.stringify(rtnValue));
			if (!mfn_IsEmpty(rtnValue)) {
                DsWs_LTIDA00.setCellData(0, "sSrdoIssuDate", rtnValue);
                parent.Ds_LTIDA00.setCellData(0, "sSrdoIssuDate", rtnValue);
            }

            //청약서발행건은 재산출 / 수정 금지
			if(parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && wconv.length(parent.Ds_LTIDA00.getCellData(0,"sSrdoIssuDate")) > 0){
                parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", false);
                parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", false);
            }	
			
		});	
			
	};
	
	//**********************************************************
	// 가입설계서 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_PrintSulgye_onclick = function() {
		// 팝업화면 호출이 아니고 리포트 직접 호출 추후 작업
		var promise = Promise.resolve();
		if(wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 51){
			wprom.alert("계약자를 저장해주세요");
			return;
		}
		
		/*
		var indata = {};
		var sDmCode = "";
		var sPsnGroupFlgcd = parent.Ds_LTIDA00.getCellData(0,"sPsnGroupFlgcd");
		var sPlanNo = parent.medt_PlanNo.getValue();
		var sGdCd = parent.edt_sGdCd.getValue();
		
		// ASIS는 tab2 에는 Ds_LTIDA00없는데 접근하려함. parent.Ds_LTIDA00로 수정
		//if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y"){
		if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y"){
			indata["sOdiId"] = "B621_Rep";
			indata["sDmCode"] = "L120";
		}else{			
			indata["sOdiId"] = "B400_Rep";
			indata["sDmCode"] = "L002";
		}
			
		indata["sPlanNo"] = sPlanNo;
       	indata["sPsnGroupFlgcd"] = sPsnGroupFlgcd;
       	indata["sGdCd"] = sGdCd;
			
		// CBSC108P 청약발행물 구종식
		promise = promise.then(function(rtnVal) {
			var popInfo = {"width":928,
	    	                "height":688,
	    	                "indata":indata,
//	    	                "callback"  : scwin.popupCallback,
			    		    "title"     : "청약발행물"
	    	              };
	    	return wprom.popupOpen("/ui/cbsc/CBSC108P.xml", popInfo); 
		});*/
		
		
		var indata = {};
		var sDmCode = "";
		var sPsnGroupFlgcd = parent.Ds_LTIDA00.getCellData(0,"sPsnGroupFlgcd");
		var sPlanNo = parent.medt_PlanNo.getValue();
		var sGdCd = parent.edt_sGdCd.getValue();
		
		var reportInfo  = {};
	    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y"){
			reportInfo.rptName = "longterm/B621_Rep";
		}else{
			//reportInfo.rptName = "longterm/B400_Rep";
			alert("출력할수 없습니다.");
	        	return;
		}	

		reportInfo.dataType       = "xml";
//		reportInfo.taskValue      = "com.inswave.longterm.psv.ens.task.EBE250Task";
//		reportInfo.actionValue    = "printB400_RepV01";
		reportInfo.taskValue      = "com.inswave.longterm.psv.ens.task.EBE200Task";
		reportInfo.actionValue    = "printB621_RepV01";

		reportInfo.sInterfaceType = "Y";
		reportInfo.gUserID        = util.getGdsValue("gUserID");
		reportInfo.setParam       = [ "sPlanNo|"+ sPlanNo //설계번호
		                             ,"sPsnGroupFlgcd|"+ sPsnGroupFlgcd
		                             ,"sGdCd|"+ sGdCd];
/*		reportInfo.sFormParam     = [ "sPlanNo|"+ sPlanNo //설계번호
		                             ,"sPsnGroupFlgcd|"+ sPsnGroupFlgcd
		                             ,"sGdCd|"+ sGdCd];      */           
		reportInfo.title          = "가입설계서";
	
		wprom.reportOpen(reportInfo);
		
	};
	
	//**********************************************************
	// 인수제한사항 버튼 클릭이벤트 
	//**********************************************************		
	scwin.btn_InsuDetail_onclick = function() {
		// CBSC085P 인수제한사유조회[B080_Pop] 진태만 
		var pObj = {	"Ds_LTIDA00" : parent.Ds_LTIDA00,
						"Ds_LTIDA03" : Ds_LTIDA03,
						"Ds_LTIDA15" : Ds_LTIDA15,
						"Ds_Pibo"    : Ds_Pibo, 					// 피보험자 정보 Ds Set 
						"medt_PlanNo" : parent.medt_PlanNo,
						"edt_sGdCdNm" : parent.edt_sGdCdNm};
						
		var popInfo = {
			"width"     : 842,
			"height"    : 480,  
//	    	"indata": "",//indata,
			parentObject : pObj,
			"title"     : "인수제한사유조회"
		};
        return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);		
	};
	
	//**********************************************************
	// 인수심사요청 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_Insu_onclick = function() {
		var promise = Promise.resolve();
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "sRqstYn") != "Y") {
	            wprom.alert("고지사항 미입력 계약입니다. 고지사항 입력 후 인수심사 신청바랍니다.");
	            return;
	        }
	    }
	    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20") {
	        wprom.alert("다음버튼을 눌러 청약사항을 저장 후 인수심사 신청 바랍니다.");
	        return;
	    }
	    
	    var indata = {};
	    indata["sPlanNo"] = parent.medt_PlanNo.getValue();
	    indata["rqstFlag"] = "52"; //요청승인구분(52:인수요청  56:인수승인)
	    // asis sOnlySrarch 에 define 되어있는부분없음
	    indata["sOnlySrarch"] = ""; //sOnlySrarch; 
	    
	    // CBSC006P FATACA 본인정보 확인 ssr_sst::B170_Pop.xml 이경일
	    promise = promise.then(function(rtnVal) {
	        var popInfo = {
			"width"     : 730,
			"height"    : 730,  
			"indata"    : indata,
			"title"     : "인수심의결재"
			};
	        return wprom.popupOpen("/ui/cbsc/CBSC165P.xml", popInfo);
	    });
	    
	    promise = promise.then(function(rtnVal) {
		    var rtnValue = wprom.getReturnData();
	        if (wconv.length(rtnValue) != 0) {
	            var rqstRetArr = rtnValue.split("^");
	            if (rqstRetArr[0] == "52") {
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "52");
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사요청");
	                edt_Insu.setValue("심사요청");
	
	                //2011.04.26 김상운 추가(메인화면 품의결과 화면 표시)
	                parent.Ds_LTIDA00.setCellData(0, "sConuResltCd", "11");
	                parent.scwin.lfn_setConuReslt();
	                //cbs object미존재 it확인
	                //edt_sPlanProgRankCd.setValue(rqstRetArr[1]); //요청승인구분명
	                edt_UdrtkLmitCnt.setValue(rqstRetArr[2]); //제한건수
	                //화면비활성처리
	                //parent.lfn_ComponentEnable(parent.Tab_Step2, "", false);	
	                parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", false);
	
	                // 이력 저장(심사)
	                parent.scwin.saveHistory("3");
	            } 
        
	        }
	    });
	};
	
	//**********************************************************
	// 다음 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_Next_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_Next_onclick, arguments);
	};
	
	scwin.btn_Next_onclick = function() {
		//밸리데이션 체크
	    if (scwin.lfn_ValidationCheck(true)) {
	        return;
	    }

	    //설계번호
	    if (wconv.length(parent.medt_PlanNo.getValue()) > 0) {
	        Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	    }	
	
	    //계약자자변경체크
	    fLTIDA03_Flag = scwin.lfn_DataChangeCheck(Ds_LTIDA03, Ds_LTIDA03_Tmp, "");
	
	    //계약변경번호
	    Ds_LTIDA03.setCellData(0, "nCrChngNo", "0");
	
	    //세금우대여부를 Ds_LTIDA03 dataset에 추가로 저장한다.
	    util.insertColumn(Ds_LTIDA03, [ ["sTaxPrfrYn", "sTaxPrfrYn", "text"],
	    								["sInptDler", "sInptDler", "text"],
	    								["sInptDlerIP", "sInptDlerIP", "text"] ]);
	    								
	    util.setCompBindRefresh(Ds_LTIDA03.getID());
   	    Ds_LTIDA03.setRowPosition(0, false);
	    								
	    //세금우대여부                                 
	    Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", cmb_sTaxPrfrYn.getValue());	
	    //입력처리자
	    Ds_LTIDA03.setCellData(0, "sInptDler", gUserID);
	    //입력처리자IP
	    Ds_LTIDA03.setCellData(0, "sInptDlerIP", gUserIP);
	
	    //피보험자변경체크(수익자)
//	    fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "");
 		//선택된 피보험자만 처리
	    wconv.clear(Ds_Pibo_Tmp);
	    fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "");
    	
	    //인수요청, 인수승인일대 보관하지 않는다.
	    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "52" || 
	        parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "56" || 
	        parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "53" || 
	        parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "46" || 
	        parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "49" || 
	        wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 60) {
	        //	if(modifyFlag){	
	        //초기화
	        Ds_LTIDA03.setCellData(0, "execFlag", "");
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            Ds_Pibo.setCellData(i, "execFlag", "");
	        }
	        var flag = parent.scwin.lfn_TabChanging(1, 2);
            if (flag) {
            	parent.scwin.lfn_Tab_Focus(2);
                //parent.scwin.scwin.Tab_Req_onclick(); //다음으로이동
            }
	    } 
	    else {
	    	scwin.lfn_save();
	    }
	};
	
	
	//**********************************************************
	// 필수값 입력 여부 체크
	//**********************************************************	
	scwin.lfn_ValidationCheck = function(fGubunFlag) {
		var validFlag = false;
		//변경여부 초기화
		modifyFlag = false;
		if(!fGubunFlag) {
			fGubunFlag = false;
		}
		
		//계약자 밸리데이션체크
		validFlag = scwin.lfn_LTIDA03_ValidationCheck(Ds_LTIDA03, fGubunFlag);
		
		//피보험자 밸리데이션체크
		if(!validFlag){
			validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
		}
		
		//대면계약의 경우 필수값 체크 
		if(parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y"){
		   if(wconv.length(cmb_CmmcMeanCnclYn.getValue())<1 ){
				validFlag = true;
				wprom.alertF("통신수단해지동의 여부를 확인하세요", {}, cmb_CmmcMeanCnclYn);
			}
		}
	
		//수익자 동의 여부 필수값 체크 
		if(wconv.length(cmb_AsmtYn.getValue())<1 ){
			validFlag = true;
			wprom.alertF("수익자 약정 여부를 확인하세요", {}, cmb_AsmtYn);
		}
	
		//대상고객 필수값 체크 
		if(wconv.length(cmb_CrPrtrRole.getValue())<1 && cmb_CrPrtrRole.getDisabled() == false){
			validFlag = true;
			wprom.alertF("대상고객 값이 없습니다.", {}, cmb_CrPrtrRole);
		}
		
		//취득경로 필수값 체크 
		if(wconv.length(cmb_AqamtChnlCd.getValue())<1  && cmb_AqamtChnlCd.getDisabled() == false){
			validFlag = true;
			wprom.alertF("취득경로 값이 없습니다.", {}, cmb_AqamtChnlCd);
		}
		
		return validFlag;			
	};
	
	//**********************************************************
	// 계약자 필수값 입력 여부 체크
	//**********************************************************
	scwin.lfn_LTIDA03_ValidationCheck = function(obj, fGubunFlag) {
		//계약자코드 바인딩
/*		Ds_LTIDA03.setCellData(0, "sCrtorCd", medt_sCrtorCd.getValue());
		//medt_sCrtorCd.BindDataset = "Ds_LTIDA03";	
		medt_sCrtorCd.setRef("Ds_LTIDA03.sCrtorCd"); */
		
		//설계번호
		if(wconv.length(parent.medt_PlanNo.getValue()) == 0 && fGubunFlag){
			wprom.alert("설계번호가 없습니다.");
			return true;
		}
	
		//계약자구분코드
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorFlgcd")) && fGubunFlag){
			//medt_sCrtorCd.BindDataset = "";	
			medt_sCrtorCd.setRef(""); 
			wprom.alert("계약자구분코드가 없습니다.");
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sCrtorFlgcd");
		
		//계약자코드
		if(fGubunFlag){
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorCd"))){
				wprom.alert("계약자코드가 없습니다.");
				return true;
			}else{	
				//사업자체크
				if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) == 10){
					if(!isBizRegNo(Ds_LTIDA03.getCellData(0, "sCrtorCd"))){
						wprom.alertF("사업자번호를 정확히 입력하세요.", {}, medt_sCrtorCd);
                    	return true;						
					}
				}		
			}
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sCrtorCd");
		
		//계약자명
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorName")) && fGubunFlag){
			wprom.alert("계약자명이 없습니다.");
			return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sCrtorName");
		
		
		// 사업자가 아닌 경우에 체크 
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) != 10){
			//계약자연령
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nCrtorAge")) && fGubunFlag){
				wprom.alert("계약자연령이 없습니다.");
				return true;
			}
			scwin.lfn_CompChangeCheck(obj, 0, "nCrtorAge");	
			
			//계약자성별구분
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorSexFlag")) && fGubunFlag){
				wprom.alert("계약자성별구분이 없습니다.");
				return true;
			}	
			scwin.lfn_CompChangeCheck(obj, 0, "sCrtorSexFlag");
			
			//고객구분코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCstFlgcd")) && fGubunFlag){
				wprom.alert("고객구분코드가 없습니다.");
				return true;
			}	
			scwin.lfn_CompChangeCheck(obj, 0, "sCstFlgcd");						
		}
		
		//주소구분코드
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAddrFlgcd")) && fGubunFlag){
			wprom.alert("주소구분코드가 없습니다.");
			return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sAddrFlgcd");
		
		//주소변경회차
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nAddrChngSeq")) && fGubunFlag){
			wprom.alert("주소변경회차가 없습니다.");
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "nAddrChngSeq");
		
		//전화번호변경회차
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nTelnoChngSeq")) && fGubunFlag){
			wprom.alert("전화번호변경회차가 없습니다.");
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "nTelnoChngSeq");
		//우편물수령처주소구분코드
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd")) && fGubunFlag){
			wprom.alert("우편물수령처주소구분코드가 없습니다.");
			return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sMailRvadAddrFlagCd");
		//우편물수령처변경회차
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) && fGubunFlag){
			wprom.alert("우편물수령처변경회차가 없습니다.");
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "nMailRvadChngSeq");		
		//우편번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sZip1")) && fGubunFlag){
			wprom.alertF("우편번호가 없습니다.", {}, edt_sZip1);
			return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sZip1");
		//우편번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sZip2")) && fGubunFlag){
			wprom.alertF("우편번호가 없습니다.", {}, edt_sZip2);
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sZip2");
		//자택주소
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAdrs1")) && fGubunFlag){
			wprom.alertF("자택주소가 없습니다.", {}, edt_sAdrs1);
			return true;
		}		
		scwin.lfn_CompChangeCheck(obj, 0, "sAdrs1");
		//자택주소
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAdrsAdd")) && fGubunFlag){
			wprom.alertF("자택주소가 없습니다.", {}, edt_sAdrsAdd);
			return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sAdrsAdd");
		var telCheck = false;
		//자택전화번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sHomeTel1")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("자택전화번호가 없습니다.");
			//edt_sHomeTel1.SetFocus();
			//return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel1");
		//자택전화번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sHomeTel2")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("자택전화번호가 없습니다.");
			//edt_sHomeTel2.SetFocus();
			//return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel2");
		//자택전화번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sHomeTel3")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("자택전화번호가 없습니다.");
			//edt_sHomeTel3.SetFocus();
			//return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel3");

		//핸드폰번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCellPhone1")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("핸드폰번호가 없습니다.");
			//edt_sCellPhone1.SetFocus();
			//return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone1");
		//핸드폰번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCellPhone2")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("핸드폰번호가 없습니다.");
			//edt_sCellPhone2.SetFocus();
			//return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone2");
		//핸드폰번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCellPhone3")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("핸드폰번호가 없습니다.");
			//edt_sCellPhone3.SetFocus();
			//return true;
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone3");	
		//사무실전호번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sOfficeTel1")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("사무실전호번호가 없습니다.");
			//edt_sOfficeTel1.SetFocus();
			//return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel1");
		//사무실전호번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sOfficeTel2")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("사무실전호번호가 없습니다.");
			//edt_sOfficeTel2.SetFocus();
			//return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel2");
		//사무실전호번호
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sOfficeTel3")) && fGubunFlag){
			telCheck = true;
			//wprom.alert("사무실전호번호가 없습니다.");
			//edt_sOfficeTel3.SetFocus();
			//return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel3");
	
		//우편물수령처
		if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "RvadAddr")) && fGubunFlag){
			wprom.alertF("우편물수령처가 없습니다.", {}, edt_RvadAddr);
			return true;
		}	
		scwin.lfn_CompChangeCheck(obj, 0, "RvadAddr");
		//만기시수익자가 선택된경우
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd")) > 0){
			//만기시수익자구분코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd"))){
				wprom.alert("만기시수익자가 없습니다.");
				return true;
			}
			//만기수익자관계코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd"))){
				wprom.alert("만기수익자관계코드가 없습니다.");
				return true;
			}	
			//만기수익자코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpCd"))){
				wprom.alert("만기수익자코드가 없습니다.");
				return true;
			}	
			//만기수익자명
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpName"))){
				wprom.alert("만기수익자명이 없습니다.");
				return true;
			}	
			//만기수익자연락처
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpCntad"))){
				wprom.alert("만기수익자연락처가 없습니다.");
				return true;
			}						
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sEnntmPftbpFlagCd");
		//지정대리인이 선택된경우
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd")) > 0){
			//지정대리인구분코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd"))){
				wprom.alert("지정대리인구분코드가 없습니다.");
				return true;
			}
			//지정대리인관계코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd"))){
				wprom.alert("지정대리인관계코드가 없습니다.");
				return true;
			}	
			//지정대리인코드
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntCd"))){
				wprom.alert("지정대리인코드가 없습니다.");
				return true;
			}	
			//지정대리인명
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"))){
				wprom.alert("지정대리인명이 없습니다.");
				return true;
			}	
			//지정대리인연락처
			if(mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad"))){
				wprom.alert("지정대리인연락처가 없습니다.");
				return true;
			}						
		}
		scwin.lfn_CompChangeCheck(obj, 0, "sAsmtAgntFlagCd");
		//세금우대체크는 세금우대한도잔여액을 실시간으로 조회해서 비교해봐야 하므로 task에서 체크한다.
		var sTaxPrfrYn = cmb_sTaxPrfrYn.getValue();
		if(sTaxPrfrYn == "Y"){
		    if(sTaxPrfrFlag != "1"){
				wprom.alert("세금우대한도를 조회하세요.");
				return true;
		    }else{
				//총가입금액이 세금우대한도잔여액보다 작아야지만 세금우대 가입할수 있다.
				//세금우대한도잔여액 nTaxPrfrLmitRemnAmt
				//wprom.alert("총가입금액이 세금우대한도잔여액을 초과했습니다 \n 세금우대가입할수 없습니다.");
				//cmb_sTaxPrfrYn.Value = "N";
				//return true;
			}
		}
		//세금우대변경체크
		if(sTaxPrfrYn != parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn")){
			modifyFlag = true;
		}
	};
	
	//**********************************************************
	// 계약자 필수값 입력 여부 체크
	//**********************************************************
	scwin.lfn_CompChangeCheck = function(obj, i, colID) {
	    //변경여부체크
	    if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
	        modifyFlag = true; 
	    } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
	        modifyFlag = true; 
	    }
	};
	
	//**********************************************************
	// 피보험자 밸리데이션체크
	//**********************************************************
	scwin.lfn_Pibo_ValidationCheck = function(obj) {
		var validFlag = false; 
		if(Ds_Pibo.getRowCount() > 0){		
			for(var i=0 ; i < Ds_Pibo.getRowCount(); i++){
				if(validFlag){
					break;
				}
	
				if(Ds_Pibo.getCellData(i, "sRpstInrpsFlag") == "1"){
					if((!mfn_IsEmpty(Ds_Pibo.getCellData(i, "sPftbpCd"))) &&
					   (mfn_IsEmpty(Ds_Pibo.getCellData(i, "sPftbpMailAddFlag")))){
						wprom.alert("대표 피보험자의 사망수익자 고객등록을 하세요.");
						//Object(Ds_Pibo.getCellData(i, colID)).SetFocus();
						validFlag = true;
						break;
					}
	
					/* B111_Pop에서 우편물수령관련 정보를 입력받지않으므로 
					   확인후 주석처리함 20171101 
					if((!mfn_IsEmpty(Ds_Pibo.getCellData(i, "sXcptPftbpCd"))) &&
					   (mfn_IsEmpty(Ds_Pibo.getCellData(i, "sXcptPftbpMailAddFlag")))){
						wprom.alert("대표 피보험자의 사망외수익자 고객등록을 하세요.");
						//Object(obj.getCellData(i, colID)).SetFocus();
						validFlag = true;
						break;
					}*/
				}
				
				for(var j=0 ; j < Ds_Pibo.getTotalCol(); j++){
					//colID = obj.GetColID(obj.GetColIDXbyorder(j));
					var colID = Ds_Pibo.getColumnID(j);
					//수익자피보험자관계코드
					if(colID == "sPftbpInrpsRelnCd"){
						scwin.lfn_CompChangeCheck(obj, i, colID);		
					//수익자코드
					}else if(colID == "sGroupInrpsName"){
						scwin.lfn_CompChangeCheck(obj, i, colID);		
					//수익자명
					}else if(colID == "sPftbpName"){
						scwin.lfn_CompChangeCheck(obj, i, colID);		
					//수익자전화번호
					}else if(colID == "sPftbpTelno"){
						scwin.lfn_CompChangeCheck(obj, i, colID);							
					//고지사항입력여부
					}else if(colID == "sRqstYn"){
	
						//계피상이와 상관없이 무조건 고지사항 미입력 계약 확인 N1405-00326
						//if(sameCrtorInrps){
							if (Ds_Pibo.getCellData(i, colID) != "Y"){
								wprom.alert("고지사항미입력 계약입니다.");
								grd_Pibo.setFocusedCell(i , 8, true);
								validFlag = true;
							}
						//}
						
						scwin.lfn_CompChangeCheck(obj, i, colID);
					//계약자와의 관계s
					}else if(colID == "sCrtorRelnCd"){
/*						// 계약자와의관계를 피고용인이 아닌 것을 선택후 저장해도 피고용인으로 올라와서 
						// 체크로직 주석처리 서비스에서 피고용인(20)으로 하드코딩하는게 아닌지.. (2017.1.13)
						if (Ds_Pibo.getCellData(i, colID) == "10"){
							// ASIS는 sInrpsCd 로 비교하나 단체인경우에는 sGroupInrpsCd와 비교하도록 수정
//							if (Ds_Pibo.getCellData(i, "sInrpsCd") != Ds_LTIDA03.getCellData(0,"sCrtorCd")){
							if (Ds_Pibo.getCellData(i, "sGroupInrpsCd") != Ds_LTIDA03.getCellData(0,"sCrtorCd")){
								wprom.alert("계약자관계를 확인하십시요.");
								validFlag =  true;						
							}
	
						}else{
							// ASIS는 sInrpsCd 로 비교하나 단체인경우에는 sGroupInrpsCd와 비교하도록 수정
//							if (Ds_Pibo.getCellData(i, "sInrpsCd") == Ds_LTIDA03.getCellData(0,"sCrtorCd")){
							if (Ds_Pibo.getCellData(i, "sGroupInrpsCd") == Ds_LTIDA03.getCellData(0,"sCrtorCd")){
								wprom.alert("계약자관계를 확인하십시요.");
								validFlag =  true;						
							}
						}*/
						scwin.lfn_CompChangeCheck(obj, i, colID);
					
					}else if(colID == "sRqstYn"){
						//고지사항입력여부
						scwin.lfn_CompChangeCheck(obj, i, colID);
					}					
				}
			}
		}
		
		return validFlag;
	};
	
	//**********************************************************
	// dataset 변경여부 체크
	//**********************************************************
	scwin.lfn_DataChangeCheck = function(obj, newObj, chk) {
//		newObj.removeAll();
		wconv.clear(newObj);
	    obj = util.insertColumn(obj, [["execFlag", "execFlag", "text"]]);
	    util.setCompBindRefresh(obj.getID());
//	    util.setRowPosition(obj, 0);
	    newObj = util.insertColumn(newObj, [["execFlag", "execFlag", "text"]]);
	    util.setCompBindRefresh(newObj.getID());
//	    util.setRowPosition(newObj, 0);
	    var execFlag = "";
	    var cnt = 0;
	    var changeFlag = false;
				

        //그리드에서 insert,update구분
        for (var i = 0; i < obj.getRowCount(); i++) {
            //trace(i+"==GetRowType=="+obj.GetRowType(i));
            execFlag = "";
            if (obj.getRowStatus(i) == "I") {
                execFlag = "I";
            } else if (obj.getRowStatus(i) == "U") {
                execFlag = "U";
            }
            obj.setCellData(i, "execFlag", execFlag);
            newObj.insertRow(cnt);
            //newObj.CopyRow(cnt++, obj, i); //trace("newObj입력=="+newObj.savexml());		
            newObj.setRowJSON(cnt++, obj.getRowJSON(i));		
        }

        //그리드에서 delete 구분
        for (var i = 0; i < obj.getDeletedData(); i++) {
            //trace(obj.GetRowType(i)+"=="+i+"="+obj.GetTotalRowType(i)+"==cnt="+cnt);
            newObj.insertRow(cnt);
            for (var j = 0; j < obj.getTotalCol(); j++) {
                if (obj.getColumnID(j) == "execFlag") {
                    newObj.setCellData(cnt, obj.getColumnID(j), "D");
	            } else {
	                newObj.setCellData(cnt, obj.getColumnID(j), obj.getCellData(i, obj.getColumnID(j)));
	            }
            }
            cnt++;
        } 
	    
	    if (newObj.getTotalCol() > 0) {
	        changeFlag = true;
	    }
	
	    //trace("obj=="+obj.savexml());
	    //trace("newObj=="+newObj.savexml());
	    return changeFlag;
	};
	
	//**********************************************************
	// 계약자 정보를 저장한다.
	//**********************************************************	
	scwin.lfn_save = function() {		
	    util.insertColumn(Ds_LTIDA03, [["gUserEmpName","gUserEmpName","text"], 
	                                   ["nRealPaymTerm","nRealPaymTerm","text"], 
	                                   ["sPaymCyclCd", "sPaymCyclCd","text"],
	                                   ["nApplPrem","nApplPrem","text"]]);	                                   
	    //로그인명			
		Ds_LTIDA03.setCellData(0, "gUserEmpName", gUserEmpName);
 		//계약정보에서 담음
		//실남입기간
		Ds_LTIDA03.setCellData(0, "nRealPaymTerm", parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm"));
		//납입주기
		Ds_LTIDA03.setCellData(0, "sPaymCyclCd", parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd"));
		//적용보험료
		Ds_LTIDA03.setCellData(0, "nApplPrem", parent.Ds_LTIDA00.getCellData(0, "nApplPrem"));
	    util.setCompBindRefresh(Ds_LTIDA03.getID());
	    util.setRowPosition(Ds_LTIDA03, 0);	

        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB350Task", "setCrtor", 0, 0);
		MethodObj.setId("setCrtor");
		MethodObj.setUrl("/contract/CBSC042MController.do");
    				
		util.dataListCloneCopy(parent.Ds_LTIDA00, "pDs_LTIDA00", "0");
		MethodObj.addSingleData("LTIDA00", "LTIDA00", "pDs_LTIDA00:A"); // 계약기본사항정보
	    MethodObj.addSingleData("CrtorData", "CrtorData", "Ds_LTIDA03:A"); // 계약자정보
//	    MethodObj.addSingleData("LTIDA51", "LTIDA51", "Ds_LTIDA51:A"); // 비과세 정보
		/*if(Ds_Pibo_Tmp.getRowCount() > 0){		
			MethodObj.addVectorData("vLTIDA12", "LTIDA12", "Ds_Pibo_Tmp:A");//변경된 피보험자정보가 있으면 담음
		}else{
			MethodObj.addVectorData("vLTIDA12", "LTIDA12", "Ds_Pibo:A");//피보험자정보가 있으면 담음	
		}*/	
		
		MethodObj.addVectorData("vLTIDA12", "LTIDA12", "Ds_Pibo:A");//피보험자정보가 있으면 담음	
		
	    MethodObj.setHashTable();   // 저장할 때

		// DsWs_LTIDA00
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
		// DsWs_LTIDA15
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
		// DsWs_LTIDA03
		MethodObj.addXPath("//hashtable/data[@hashkey='CrtorData']/CrtorData");
		MethodObj.addXPath("//WARNING");	        
		MethodObj.setXPathDs();		
		MethodObj.sync();
		MethodObj.send(); 
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");					
		if(DsWs_Warning.getRowCount() != 0) {
			alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} else {
			wconv.clear(DsWs_LTIDA00);
			wconv.clear(DsWs_LTIDA03);
			wconv.clear(DsWs_LTIDA15);
						
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), "DsWs_LTIDA15", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='CrtorData']/CrtorData"), "DsWs_LTIDA03", "Y");	
			
			parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd"));//설계진행단계코드
			parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사대상");		
			parent.Ds_LTIDA00.setCellData(0, "sPlanProgTbNo", DsWs_LTIDA00.getCellData(0, "sPlanProgTbNo"));//설계진행탭번호
			parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", DsWs_LTIDA00.getCellData(0, "sTaxPrfrYn"));//세금우대여부
	
			wconv.clear(Ds_PiboBackup);
			util.copyM(Ds_PiboBackup, Ds_Pibo.getAllJSON(),true);
			
			//피보험자 그리드로 옮긴다.
//			Ds_Pibo.Copy("Ds_PiboBackup");	
			wconv.clear(Ds_Pibo);
			util.copyM(Ds_Pibo, Ds_PiboBackup.getAllJSON(),true);	
			util.setCompBindRefresh(Ds_Pibo.getID());
	    	util.setRowPosition(Ds_Pibo, 0);	
			
			//계약자 복사
//			Ds_LTIDA03.Copy("DsWs_LTIDA03");	
			wconv.clear(Ds_LTIDA03);
			util.copyM(Ds_LTIDA03, DsWs_LTIDA03.getAllJSON(),true);	
			util.setCompBindRefresh(Ds_LTIDA03.getID());
	    	util.setRowPosition(Ds_LTIDA03, 0);	
	    	
			edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));//만기수익자명
	
			//전산심사
//			Ds_LTIDA15.Copy("DsWs_LTIDA15");
			wconv.clear(Ds_LTIDA15);
			util.copyM(Ds_LTIDA15, DsWs_LTIDA15.getAllJSON(),true);	
			util.setCompBindRefresh(Ds_LTIDA15.getID());
	    	util.setRowPosition(Ds_LTIDA15, 0);	
						
	//		btn_InsuDetail.Color = "red";
	//		parent.Tab_Step1.btn_InsuDetail.Color = "red";
			$("#btn_InsuDetail").find("a").css("color", "red");
			parent.Tab_Step1.$("#btn_InsuDetail").find("a").css("color", "red");
			
			//trace("정상 처리되었습니다.");	
			//초기화
			Ds_LTIDA03.setCellData(0, "execFlag", "");		
			
			for(var i=0; i < Ds_Pibo.getRowCount(); i++){
				Ds_Pibo.setCellData(i, "execFlag", "");
			}			
			
			//탭버튼 클릭시나 다음버튼 클릭시 처리
	        /*var flag = parent.scwin.lfn_TabChanging(1, 2);
	        if (flag) {
	            //parent.Tab_Req.OnChanging = "";
	            parent.Tab_Step_onclick(parent.tabReq3);
	            //parent.Tab_Req.OnChanging = "lfn_TabChanging";
	        }*/
	        flag = parent.scwin.lfn_TabChanging(1, 2);
	        if (flag) {
		    	parent.scwin.lfn_Tab_Focus(2);
		    }
			else{
				//인수요청버튼 활성화
				btn_Insu.setDisabled(false);
				
				//인수제한건 출력	
				edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());
				
				//인수심사상태 출력
				edt_Insu.setValue("심사대상");
	
			}
		}		
	};
	
	//**********************************************************
	// 수익자 팝업에서 해당 함수 호출하여 값 세팅
	//**********************************************************	
	scwin.lfn_B110_CallBack = function(rtnValue) { 		
		edt_sB110PopValue.setValue(rtnValue.edt_sB110PopValue);
	    fAgntFlag.setValue(rtnValue.fAgntFlag);
	    fAgntFlagIdx.setValue(rtnValue.fAgntFlagIdx);

	    switch (fAgntFlag.getValue()) {
	        case "ed_Mangi":
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                if (wconv.length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드 
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처			
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", ""); //만기수익자주소구분값
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", ""); //만기수익자주소
	                    edt_sEnntmPftbpYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (resultArr[3].length == 10) {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "2"); //만기시수익자구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "1"); //만기시수익자구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", resultArr[0]); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", resultArr[3]); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", resultArr[4]); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", resultArr[2]); //만기수익자연락처 
	
	                    util.insertColumn(Ds_LTIDA03, [	["sEndPftbpAddr","sEndPftbpAddr","text"],
	                    								["sEndPftbpMailAddFlag","sEndPftbpMailAddFlag","text"],
	                    								["nEndPftbpMailChngSeq","nEndPftbpMailChngSeq","text"]]);
							                    
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddr", resultArr[5]);
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddrFlag", resultArr[6]);
	                    console.log(Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd") + "/"+Ds_LTIDA03.getCellData(0, "sEndPftbpCd")+"/"+
	                    			Ds_LTIDA03.getCellData(0, "sEndPftbpName")+"/"+Ds_LTIDA03.getCellData(0, "sEndPftbpCntad")+"/"+
	                    			Ds_LTIDA03.getCellData(0, "sEndPftbpAddr"));
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", resultArr[7]); //만기수익자주소
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", resultArr[8]); //만기수익자주소구분값
	                    
	                    util.setCompBindRefresh(Ds_LTIDA03.getID());
						util.setRowPosition(Ds_LTIDA03, 0);
	                    
	                    edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
	                    console.log(resultArr[7] +"/"+resultArr[8]);
	                }
	            }
	            break;
	        case "ed_Proxy":
				// ASIS는 sInrpsCd 로 비교하나 단체인경우에는 sGroupInrpsCd와 비교하도록 수정
//	            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sInrpsCd")) {
	            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sGroupInrpsCd")) {
	                wprom.alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (Ds_Pibo.getRowCount() > 1) {
	                wprom.alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                if (wconv.length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드 
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", ""); //지정대리인주소
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", ""); //지정대리인주소값
	                    edt_sAsmtAgntYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (resultArr[3].length == 10) {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "2"); //지정대리인구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "1"); //지정대리인구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", resultArr[0]); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", resultArr[3]); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", resultArr[4]); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", resultArr[2]); //지정대리인연락처
	                    util.insertColumn(Ds_LTIDA03, [	["sAsmtAgntMailAddFlag","sAsmtAgntMailAddFlag","text"],
	                        							["nAsmtAgntMailChngSeq","nAsmtAgntMailChngSeq","text"],
	                        							["sAsmtAgntAddr","sAsmtAgntAddr","text"]]);
	                    
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", resultArr[7]);
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", resultArr[8]);
	                    sAsmtAgntAddrPop = resultArr[5];
	                    sAsmtAgntAddFlagPop = resultArr[6];
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntAddr", resultArr[5]);
	                    
	                    util.setCompBindRefresh(Ds_LTIDA03.getID());
						util.setRowPosition(Ds_LTIDA03, 0);
						
	                    console.log(resultArr[7] +"/"+resultArr[8]);
	                    edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
	                    console.log(Ds_LTIDA03.getCellData(0, "sAsmtAgntMailAddFlag")+"/"+Ds_LTIDA03.getCellData(0, "nAsmtAgntMailChngSeq"));
	                }
	            }
	            break;
	        case "ed_Dead":
	        //edt_sB110PopValue: "11^11^024822175^8001021234563^ㄷㄷㄷ*^서울 강동구 명일로 222, 1동 (길동, 하이존아파트)^1^1^4", 
	        //fAgntFlag: "ed_Dead", 
	        //fAgntFlagIdx: 0
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpTelno", resultArr[2]); //수익자연락처
	                /*util.insertColumn(Ds_Pibo, [["sPftbpMailAddFlag","sPftbpMailAddFlag","text"],
	                    						["nPftbpMailChngSeq","nPftbpMailChngSeq","text"],
	                    						["sPftbpAddr","sPftbpAddr","text"]]);*/
	                
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq", resultArr[8]);
	
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpAddr", resultArr[5]);
	                //wconv.trace(Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpAddr"));
	                sPftbpAddFlagPop = resultArr[6];

	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "1"); //법정상속인
	                }
	                
	                util.setCompBindRefresh(Ds_Pibo.getID());
					util.setRowPosition(Ds_Pibo, 0);
						                
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	            break;
	        case "ed_Xcpt":
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpTelno", resultArr[2]); //수익자연락처
	                /*util.insertColumn(Ds_Pibo, [["sXcptPftbpMailAddFlag","sXcptPftbpMailAddFlag","text"],
	                    						["nXcptPftbpMailChngSeq","nXcptPftbpMailChngSeq","text"],
	                    						["sXcptPftbpAddr","sXcptPftbpAddr","text"]]);*/
	                
					
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "nXcptPftbpMailChngSeq", resultArr[8]);
	                //				alert("resultArr[3] ==> " + resultArr[3]);    
	                //sXcptPftbpAddrPop = resultArr[5];
	                sXcptPftbpAddFlagPop = resultArr[6];
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpAddr", resultArr[5]);
	                console.log(resultArr[7]+"/"+resultArr[8]);
	                console.log(Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag")+"/"+Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq"));
	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "1"); //법정상속인
	                }
	                
	                util.setCompBindRefresh(Ds_Pibo.getID());
					util.setRowPosition(Ds_Pibo, 0);
					
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	            break;
	    }
	};
	
	//**********************************************************
	// 수익자 팝업에서 해당 함수 호출하여 값 세팅
	//**********************************************************	
	scwin.lfn_B111_CallBack = function(rtnValue) {   
		edt_sB111PopValue.setValue(rtnValue.edt_sB111PopValue);
	    fAgntFlag.setValue(rtnValue.fAgntFlag);
	    fAgntFlagIdx.setValue(rtnValue.fAgntFlagIdx);
	    
	    switch (fAgntFlag.getValue()) {	        	    
		    case "ed_Mangi":
	            if (wconv.length(edt_sB111PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB111PopValue.getValue(), "^", true);
	                if (wconv.length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드 
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처			
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", ""); //만기수익자주소구분값
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", ""); //만기수익자주소
	                    edt_sEnntmPftbpYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (this_sCrtorCd.Length() == 10) {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "2"); //만기시수익자구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "1"); //만기시수익자구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", resultArr[0]); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", resultArr[3]); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", resultArr[4]); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", resultArr[2]); //만기수익자연락처 
	                    util.insertColumn(Ds_LTIDA03, [["sEndPftbpAddr","sEndPftbpAddr","text"],
	                                                   ["sEndPftbpMailAddFlag","sEndPftbpMailAddFlag","text"],
	                                                   ["nEndPftbpMailChngSeq","nEndPftbpMailChngSeq","text"]
	                    							]);
	                    //Ds_LTIDA03.AddColumn("sEndPftbpAddrFlag", "string", 255);
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddr", resultArr[5]);
	                    // sEndPftbpAddrFlag 은 Ds_LTIDA03 없는 컬럼인데 셋셀데이터 가능한가?? 
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddrFlag", resultArr[6]);
	                    
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", resultArr[7]); //만기수익자주소
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", resultArr[8]); //만기수익자주소구분값
	                    edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
	                    
	                    util.setCompBindRefresh(Ds_LTIDA03.getID());
						util.setRowPosition(Ds_LTIDA03, 0);
	                }
	            }
	        break;
	        case "ed_Proxy":
				// ASIS는 sInrpsCd 로 비교하나 단체인경우에는 sGroupInrpsCd와 비교하도록 수정
	            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sGroupInrpsCd")) {
	                wprom.alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (Ds_Pibo.getRowCount() > 1) {
	                wprom.alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (wconv.length(edt_sB111PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB111PopValue.getValue(), "^", true);
	                if (wconv.Length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드 
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", ""); //지정대리인주소
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", ""); //지정대리인주소값
	                    edt_sAsmtAgntYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (resultArr[3].length == 10) {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "2"); //지정대리인구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "1"); //지정대리인구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", resultArr[0]); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", resultArr[3]); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", resultArr[4]); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", resultArr[2]); //지정대리인연락처
	                    util.insertColumn(Ds_LTIDA03, [["sAsmtAgntMailAddFlag","sAsmtAgntMailAddFlag","text"],
	                    							   ["nAsmtAgntMailChngSeq","nAsmtAgntMailChngSeq","text"],
	                        						   ["sAsmtAgntAddr","sAsmtAgntAddr","text"]
	                    								]);
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", resultArr[7]);
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", resultArr[8]);
	                    sAsmtAgntAddrPop = resultArr[5];
	                    sAsmtAgntAddFlagPop = resultArr[6];	                    
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntAddr", resultArr[5]);
	                    edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
	                    
	                    util.setCompBindRefresh(Ds_LTIDA03.getID());
						util.setRowPosition(Ds_LTIDA03, 0);
	                }
	            }
	        break;
	        case "ed_Dead":
	            if (wconv.length(edt_sB111PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB111PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpTelno", resultArr[2]); //수익자연락처
	                
	                /*util.insertColumn(Ds_Pibo, [["sPftbpMailAddFlag","sPftbpMailAddFlag","text"],
	                    						["nPftbpMailChngSeq","nPftbpMailChngSeq","text"],
	                    						["sPftbpAddr","sPftbpAddr","text"]
	                							]);
	                
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq", resultArr[8]);
	
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpAddr", resultArr[5]);
	                sPftbpAddFlagPop = resultArr[6];*/
	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "1"); //법정상속인
	                }
	
					util.setCompBindRefresh(Ds_Pibo.getID());
					util.setRowPosition(Ds_Pibo, 0);
	                //btn_Insu.Enable = false;
	                //btn_InsuDetail.Enable = false;
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	        break;
	        case "ed_Xcpt":
	            if (wconv.length(edt_sB111PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB111PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpTelno", resultArr[2]); //수익자연락처
	                
	                /*util.insertColumn(Ds_Pibo, [["sXcptPftbpMailAddFlag","sXcptPftbpMailAddFlag","text"],
	                    						["nXcptPftbpMailChngSeq","nXcptPftbpMailChngSeq","text"],
	                    						["sXcptPftbpAddr","sXcptPftbpAddr","text"]
	                							]);
	                
	                Ds_Pibo.setCellData(fAgntFlagIdx1.getValue(), "sXcptPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx1.getValue(), "nXcptPftbpMailChngSeq", resultArr[8]);
	                sXcptPftbpAddFlagPop = resultArr[6];
	                
	                Ds_Pibo.setCellData(fAgntFlagIdx1.getValue(), "sXcptPftbpAddr", resultArr[5]);*/
	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "1"); //법정상속인
	                }
	                
	                util.setCompBindRefresh(Ds_Pibo.getID());
					util.setRowPosition(Ds_Pibo, 0);
	                //btn_Insu.Enable = false;
	                //btn_InsuDetail.Enable = false;
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	    	break;
	    }	    
	};

	//**********************************************************
	// 세금우대조회 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_TaxSearch_onclick = function() {
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorName")) == 0){
			alert("계약자를 선택하세요");
			cmb_sTaxPrfrYn.setValue("N");
			btn_TaxSearch.setDisabled(true);
			return;
		}
		// 버튼 활성화 안이루어짐 
	};
	]]></script>
	</head>
	<body>

		<xf:group id="" style="" class="section">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="계약자"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style=""></xf:group>
			</xf:group>
			<xf:group id="" style="" class="w2tb tb" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="width:135px;" tagname="col"></xf:group>
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="width:135px;" tagname="col"></xf:group>
					<xf:group style="width:110px;" tagname="col"></xf:group>
					<xf:group style="width:50px;" tagname="col"></xf:group>
					<xf:group style="width:85px;" tagname="col"></xf:group>
					<xf:group style="width:80px;" tagname="col"></xf:group>
					<xf:group style="width:65px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						계약자코드
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:group class="input_btn icon prot"
							style="">
							<xf:input id="medt_sCrtorCd"
								ref="data:Ds_LTIDA03.sCrtorCd" style="" dataType="text"
								ev:onviewchange="scwin.medt_sCrtorCd_onviewchange"
								ev:onkeydown="scwin.medt_sCrtorCd_onkeydown"
								displayFormat="######-#ZZZZZZ" maxlength="13" tabIndex="1" class="sty_ipt_form" placeholder="______-_______">
							</xf:input>
							<w2:anchor class=""
								ev:onclick="scwin.lfn_searchCust" id="Button0" outerDiv="" style="">
								<xf:label><![CDATA[저장]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group style="" class="w2tb_th" tagname="th">
						계약자명
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:input disabled="true" id="edt_sCrtorName"
							style="" ref="data:Ds_LTIDA03.sCrtorName">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th"
						id="st_CmmcMeanCncl">
						통신수단해지동의
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled=""
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_CmmcMeanCnclYn" optionOrder="" ref="" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[Y]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[N]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						대상고객
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="false"
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_CrPrtrRole" optionOrder="" ref="" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[계약자]]></xf:label>
									<xf:value><![CDATA[10]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[피보험자]]></xf:label>
									<xf:value><![CDATA[20]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						취득경로
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="false"
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_AqamtChnlCd" optionOrder=""
							ref="data:DsWs_AqamtChnlCd.sCd" renderType="native" style=""
							submenuSize="" chooseOptionLabel="- 선택 -">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AqamtChnlCd">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						자택주소
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>9</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:group class="input_btn icon prot"
							style="">
						</xf:group>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sZip1"
								ref="data:Ds_LTIDA03.sZip1" style="width:30px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sZip2" ref="data:Ds_LTIDA03.sZip2" style="width:30px">
							</xf:input>
							<xf:input disabled="true" id="edt_sAdrs1"
								ref="data:Ds_LTIDA03.sAdrs1" style="width:300px;" class="ml5">
							</xf:input>
							<xf:input disabled="true" id="edt_sAdrsAdd"
								ref="data:Ds_LTIDA03.sAdrsAdd" style="width:300px;"
								class="ml5">
							</xf:input>
						</xf:group>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						자택
						<xf:image id=""
							style="position: relative;width:12px;height:11px;top:-1px;"
							src="/cm/images/content/phone_ico.png">
						</xf:image>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:group class="input_btn icon prot"
							style="">
						</xf:group>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sHomeTel1"
								ref="data:Ds_LTIDA03.sHomeTel1" style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sHomeTel2" ref="data:Ds_LTIDA03.sHomeTel2"
								style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sHomeTel3" ref="data:Ds_LTIDA03.sHomeTel3"
								style="width:35px">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						직장
						<xf:image id=""
							src="/cm/images/content/phone_ico.png"
							style="position: relative;width:12px;height:11px;top:-1px;">
						</xf:image>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="edt_sOfficeTel1"
							ref="data:Ds_LTIDA03.sOfficeTel1" style="width:35px">
						</xf:input>
						<xf:input disabled="true" id="edt_sOfficeTel2"
							ref="data:Ds_LTIDA03.sOfficeTel2" style="width:35px" class="ml5">
						</xf:input>
						<xf:input disabled="true" id="edt_sOfficeTel3"
							ref="data:Ds_LTIDA03.sOfficeTel3" style="width:35px" class="ml5">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						휴대폰
						<xf:image id=""
							src="/cm/images/content/mobile_ico.png"
							style="position: relative;width:9px;height:12px;top:-1px;">
						</xf:image>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true"
								id="edt_sCellPhone1" ref="data:Ds_LTIDA03.sCellPhone1"
								style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sCellPhone2" ref="data:Ds_LTIDA03.sCellPhone2"
								style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sCellPhone3" ref="data:Ds_LTIDA03.sCellPhone3"
								style="width:35px">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						만기수익자
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:textbox label="선택안됨" id="edt_sEnntmPftbpYn"
							style="position: relative;width:100%;height: 20px;cursor: pointer;display:inline;border-bottom: 1px solid #666;"
							ref="" ev:onclick="scwin.edt_sEnntmPftbpYn_onclick">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						FAX
						<xf:image id=""
							src="/cm/images/content/phone_ico.png"
							style="position: relative;width:12px;height:11px;top:-1px;">
						</xf:image>
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:group class="input_btn icon prot"
							style="">
						</xf:group>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sFax1"
								ref="data:Ds_LTIDA03.sFax1" style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sFax2" ref="data:Ds_LTIDA03.sFax2" style="width:35px">
							</xf:input>
							<xf:input class="ml5" disabled="true"
								id="edt_sFax3" ref="data:Ds_LTIDA03.sFax3" style="width:35px">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						E-Mail
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<xf:input disabled="true" id="edt_sEmail1"
							style="" ref="data:Ds_LTIDA03.sEmail1">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						수익자약정
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="false"
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_AsmtYn" optionOrder="" ref="" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[Y]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[N]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						지정대리인
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:textbox id="edt_sAsmtAgntYn" label="선택안됨"
							ref=""
							style="position: relative;width:100%;height: 20px;cursor: pointer;display:inline;border-bottom: 1px solid #666;"
							ev:onclick="scwin.edt_sAsmtAgntYn_onclick">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						우편수령처
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:input disabled="true" id="edt_RvadAddr"
							style="" ref="data:Ds_LTIDA03.RvadAddr">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						수령처구분
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="true"
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_sMailRvadAddrFlagCd" optionOrder=""
							ref="data:Ds_LTIDA03.sMailRvadAddrFlagCd" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AddrFlag">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" style="" tagname="th">
						세금우대
					</xf:group>
					<xf:group class="w2tb_td" style="" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="true" disabledClass=""
							displayMode="label" ev:onchange=""
							ev:onviewchange="scwin.cmb_sTaxPrfrYn_onviewchange"
							id="cmb_sTaxPrfrYn" optionOrder="" ref="" renderType="native"
							style="width:60px;" submenuSize="">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[가입]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[미가입]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
						<w2:anchor class="btn_icon sch" disabled="true"
							ev:onclick="scwin.btn_TaxSearch_onclick" id="btn_TaxSearch"
							outerDiv="" style="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<xf:group class="section mt10" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="피보험자"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style=""></xf:group>
			</xf:group>
			<w2:gridView class="cm_grid" dataList="Ds_Pibo"
				fixedColumnWithHidden="true" id="grd_Pibo" ignoreCellClick="false"
				ignoreToggleOnDisabled="false" scrollByColumn="false"
				scrollByColumnAdaptive="false" showSortableUseFilter="false"
				style="position: relative;height: 120px;" summaryAuto="false"
				summaryOnlyAuto="false" useFilterList="false" useShiftKey="true"
				autoFit="allColumn" autoFitMinWidth=""
				ev:oncellclick="scwin.grd_Pibo_oncellclick">
				<w2:caption id="caption1" style=""
					value="this is a grid caption.">
				</w2:caption>
				<w2:header id="header1" style="">
					<w2:row id="row1" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="column21" inputType="text"
							style="height:20px;" value="구분" width="30">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column19" inputType="text"
							style="height:20px;" value="주민번호" width="170">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column17" inputType="text"
							style="height:20px;" value="성명" width="90">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column15" inputType="text"
							style="height:20px;" value="나이" width="30">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column13" inputType="text"
							style="height:20px;" value="직업" width="180">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column11" inputType="text"
							style="height:20px;" value="급수" width="30">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column9" inputType="text"
							style="height:20px;" value="보장보험료" width="100">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column7" inputType="text"
							style="height:20px;" value="계약자관계" width="100">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column5" inputType="text"
							style="height:20px;" value="고지사항" width="70">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column3" inputType="text"
							style="height:20px;" value="사망수익자" width="100">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column1" inputType="text"
							style="height:20px;" value="사망외수익자" width="90">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody1" style="">
					<w2:row id="row2" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="sel" inputType="checkbox"
							style="height:20px" width="30">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sGroupInrpsCd" inputType="link" style=""
							width="171" displayFormat="######-#######" readOnly="true" dataType="text">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sGroupInrpsName" inputType="text"
							style="height:20px" width="90" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nGroupInrpsAge" inputType="text"
							style="height:20px" width="30" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sGroupInrpsJobName" inputType="text"
							style="height:20px" width="180" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sGroupInrpsJobGradCd" inputType="text"
							style="height:20px" width="30" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nGrntPrem" inputType="text"
							style="height:20px" width="100" displayFormat="###,###,###,###,###,###" textAlign="right" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sCrtorRelnCd" inputType="select"
							style="height:20px" width="100" allOption="" chooseOption=""
							textAlign="" dataType="own">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_CrtorRelnCd">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sRqstYnName" inputType="link"
							style="" width="90" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sPftbpName" inputType="link"
							style="" width="100" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sXcptPftbpName" inputType="link"
							style="" width="90" readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>
		<xf:group class="section mt10" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="특약사항"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style=""></xf:group>
			</xf:group>
			<w2:gridView dataList="Ds_Trty" summaryAuto="false"
				useFilterList="false" scrollByColumn="false"
				showSortableUseFilter="false" scrollByColumnAdaptive="false"
				id="grd_sTrty" style="position: relative;height: 120px;"
				ignoreCellClick="false" ignoreToggleOnDisabled="false"
				summaryOnlyAuto="false" fixedColumnWithHidden="true"
				useShiftKey="true" class="cm_grid" autoFit="allColumn">
				<w2:caption id="caption1" style=""
					value="this is a grid caption.">
				</w2:caption>
				<w2:header id="header1" style="">
					<w2:row id="row1" style="">
						<w2:column blockSelect="false" id="column11"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="성명">
						</w2:column>
						<w2:column blockSelect="false" id="column9"
							style="height:20px;" inputType="text" width="370"
							displayMode="label" value="특약">
						</w2:column>
						<w2:column blockSelect="false" id="column7"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="보험기간">
						</w2:column>
						<w2:column blockSelect="false" id="column5"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="납입기간">
						</w2:column>
						<w2:column blockSelect="false" id="column3"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="가입금액">
						</w2:column>
						<w2:column blockSelect="false" id="column1"
							style="height:20px;" width="70" inputType="text"
							displayMode="label" value="보험보험료">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody1" style="">
					<w2:row id="row2" style="">
						<w2:column blockSelect="false"
							id="sGroupInrpsName" style="height:20px" inputType="text"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							id="TrtyHnglAbbName" style="height:20px" inputType="text"
							width="370" displayMode="label" textAlign="left" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false" id="sInsurTermCd"
							style="height:20px" inputType="select" width="70"
							displayMode="label" allOption="" chooseOption="" readOnly="true">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_InsurTerm">
									<w2:label ref="sInsurTermName"></w2:label>
									<w2:value ref="sInsurTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false" id="sPaymTermCd"
							style="height:20px" inputType="select" width="70"
							displayMode="label" allOption="" chooseOption="" readOnly="true">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_PaymTerm">
									<w2:label ref="sPaymTermName"></w2:label>
									<w2:value ref="sPaymTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false" id="nTrtyInsAmt"
							style="height:20px" inputType="select" width="70"
							displayMode="label" allOption="" chooseOption="" textAlign="" readOnly="true">
							<w2:choices>
								<w2:itemset
									nodeset="data:Dsws_InsAmt">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false" id="nGrntPrem"
							style="height:20px" width="70" inputType="text"
							displayMode="label" displayFormat="###,###,###,###,###,###" textAlign="right" readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>



		<xf:group class="section mt10" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="인수심사결과"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style="">
					<xf:input disabled="true" id="edt_sB110PopValue"
						style="visibility:hidden;">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlag"
						style="visibility:hidden;">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlagIdx"
						style="visibility:hidden;">
					</xf:input>
					<xf:input disabled="true" id="edt_sB111PopValue"
						style="visibility:hidden;">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlag1"
						style="visibility:hidden;">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlagIdx1"
						style="visibility:hidden;">
					</xf:input>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:350px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						인수심사상태
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_Insu"
							style="">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						제한항목건수
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:input disabled="true" id="edt_UdrtkLmitCnt"
							style="">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<xf:group class="section" id="" style="">
			<xf:group class="defaultbox last" id="" style="">
				<xf:group class="fl" id="" style="">
					<w2:anchor class="btn_nml ml5" disabled=""
						ev:onclick="scwin.btn_RiskInfo_onclick" id="btn_RiskInfo"
						outerDiv="true">
						<xf:label><![CDATA[즉시고위험고객]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml ml5"
						ev:onclick="scwin.btn_Watch_onclick" id="btn_Watch"
						outerDiv="true">
						<xf:label><![CDATA[금융거래제한대상자]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml ml5" disabled=""
						ev:onclick="scwin.btn_PrintInfo_onclick" id="btn_PrintInfo"
						outerDiv="true">
						<xf:label><![CDATA[안내문발송]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml ml5" disabled=""
						ev:onclick="scwin.btn_PrintSulgye_onclick" id="btn_PrintSulgye"
						outerDiv="true">
						<xf:label><![CDATA[가입설계서]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml ml5"
						ev:onclick="scwin.btn_InsuDetail_onclick" id="btn_InsuDetail"
						outerDiv="true" style="">
						<xf:label><![CDATA[인수제한사항]]></xf:label>
					</w2:anchor>
					<w2:anchor class="btn_nml ml5" disabled="true"
						ev:onclick="scwin.btn_Insu_onclick" id="btn_Insu" outerDiv="true"
						style="">
						<xf:label><![CDATA[인수심사요청]]></xf:label>
					</w2:anchor>
				</xf:group>
				<xf:group class="fr" id="" style="">
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.btn_Next_OnClick_Async" id="btn_Next"
						outerDiv="true">
						<xf:label><![CDATA[다음]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
		</xf:group>
	</body>
</html>