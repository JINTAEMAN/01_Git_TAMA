<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<!-- 
	       ###################################################
	        파일명 : CBSC073M.xml
	        프로그램명 : 간편연금가입설계 메인 화면
	        설 명 :  간편연금가입설계
	        작성자 : 이경일
	        작성일 : 2017.11.08
	
	        수정일자            수정자                  수정내용
	       ==================================================
	       2017.11.08       이경일       최초작성
	       ###################################################
	    -->
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataList baseNode="list" id="Ds_LTIDA03" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sCrtorFlgcd" name="sCrtorFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"></w2:column>
                        <w2:column dataType="text" id="sCrtorName" name="sCrtorName"></w2:column>
                        <w2:column dataType="text" id="nCrtorAge" name="nCrtorAge"></w2:column>
                        <w2:column dataType="text" id="sCrtorSexFlag" name="sCrtorSexFlag"></w2:column>
                        <w2:column dataType="text" id="sCrtorCstId" name="sCrtorCstId"></w2:column>
                        <w2:column dataType="text" id="nCstChngSeqno" name="nCstChngSeqno"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpRelnCd" name="sEndPftbpRelnCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCd" name="sEndPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpName" name="sEndPftbpName"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCntad" name="sEndPftbpCntad"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntFlagCd" name="sAsmtAgntFlagCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntRelnCd" name="sAsmtAgntRelnCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCd" name="sAsmtAgntCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntName" name="sAsmtAgntName"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCntad" name="sAsmtAgntCntad"></w2:column>
                        <w2:column dataType="text" id="sZip1" name="sZip1"></w2:column>
                        <w2:column dataType="text" id="sZip2" name="sZip2"></w2:column>
                        <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                        <w2:column dataType="text" id="sAdrsAdd" name="sAdrsAdd"></w2:column>
                        <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                        <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                        <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                        <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                        <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                        <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                        <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                        <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                        <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                        <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                        <w2:column dataType="text" id="RvadAddr" name="RvadAddr"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpYn" name="sEnntmPftbpYn"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntYn" name="sAsmtAgntYn"></w2:column>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"></w2:column>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIDA15" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nSeqno" name="nSeqno"></w2:column>
                        <w2:column dataType="text" id="sCcndFlagCd" name="sCcndFlagCd"></w2:column>
                        <w2:column dataType="text" id="sCcndFlagName" name="sCcndFlagName"></w2:column>
                        <w2:column dataType="text" id="sCcndResno" name="sCcndResno"></w2:column>
                        <w2:column dataType="text" id="sCcndName" name="sCcndName"></w2:column>
                        <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                        <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                        <w2:column dataType="text" id="sUdrtkJugmCd" name="sUdrtkJugmCd"></w2:column>
                        <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                        <w2:column dataType="text" id="sJugmAuthName" name="sJugmAuthName"></w2:column>
                        <w2:column dataType="text" id="sJugmGradName" name="sJugmGradName"></w2:column>
                        <w2:column dataType="text" id="sJugmCont" name="sJugmCont"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                        <w2:column dataType="text" id="sConuObjtYn" name="sConuObjtYn"></w2:column>
                        <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                        <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="nOthrInsurSeqno" name="nOthrInsurSeqno"></w2:column>
                        <w2:column dataType="text" id="nGroupInrpsSeqno" name="nGroupInrpsSeqno"></w2:column>
                        <w2:column dataType="text" id="sRqstCd" name="sRqstCd"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIDA00" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="sCrNoType" name="sCrNoType"></w2:column>
                        <w2:column dataType="text" id="sItemCd" name="sItemCd"></w2:column>
                        <w2:column dataType="text" id="sCrNoSeq" name="sCrNoSeq"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sHsecFlagCd" name="sHsecFlagCd"></w2:column>
                        <w2:column dataType="text" id="sSaleChnlFlagCd" name="sSaleChnlFlagCd"></w2:column>
                        <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                        <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                        <w2:column dataType="text" id="sBunsAchvDgrmClsfCd" name="sBunsAchvDgrmClsfCd"></w2:column>
                        <w2:column dataType="text" id="sApplDclrRato" name="sApplDclrRato"></w2:column>
                        <w2:column dataType="text" id="sDvdnFlagCd" name="sDvdnFlagCd"></w2:column>
                        <w2:column dataType="text" id="sPpayAvaYn" name="sPpayAvaYn"></w2:column>
                        <w2:column dataType="text" id="sTaxPrfrYn" name="sTaxPrfrYn"></w2:column>
                        <w2:column dataType="text" id="sCrStatCd" name="sCrStatCd"></w2:column>
                        <w2:column dataType="text" id="sCrStatFlgcd" name="sCrStatFlgcd"></w2:column>
                        <w2:column dataType="text" id="nCrStatCarrSeqno" name="nCrStatCarrSeqno"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sSsrtDate" name="sSsrtDate"></w2:column>
                        <w2:column dataType="text" id="sCpayDate" name="sCpayDate"></w2:column>
                        <w2:column dataType="text" id="sPaymExptDate" name="sPaymExptDate"></w2:column>
                        <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                        <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                        <w2:column dataType="text" id="nDefrYct" name="nDefrYct"></w2:column>
                        <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                        <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                        <w2:column dataType="text" id="sPaymCyclCd" name="sPaymCyclCd"></w2:column>
                        <w2:column dataType="text" id="sCmMetd" name="sCmMetd"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                        <w2:column dataType="text" id="nBussPrem" name="nBussPrem"></w2:column>
                        <w2:column dataType="text" id="nDcPrem" name="nDcPrem"></w2:column>
                        <w2:column dataType="text" id="nApplPrem" name="nApplPrem"></w2:column>
                        <w2:column dataType="text" id="nMinPrem" name="nMinPrem"></w2:column>
                        <w2:column dataType="text" id="nMaxPrem" name="nMaxPrem"></w2:column>
                        <w2:column dataType="text" id="sPsnGroupFlgcd" name="sPsnGroupFlgcd"></w2:column>
                        <w2:column dataType="text" id="sGroupCrAdmNo" name="sGroupCrAdmNo"></w2:column>
                        <w2:column dataType="text" id="sBsmnRgstNo" name="sBsmnRgstNo"></w2:column>
                        <w2:column dataType="text" id="sAnntOpnAgeCd" name="sAnntOpnAgeCd"></w2:column>
                        <w2:column dataType="text" id="sAnntPymTermCd" name="sAnntPymTermCd"></w2:column>
                        <w2:column dataType="text" id="sAnntPymCyclCd" name="sAnntPymCyclCd"></w2:column>
                        <w2:column dataType="text" id="sAnntPymTypeCd" name="sAnntPymTypeCd"></w2:column>
                        <w2:column dataType="text" id="sAnntPymStrtDate" name="sAnntPymStrtDate"></w2:column>
                        <w2:column dataType="text" id="nAnntPymCt" name="nAnntPymCt"></w2:column>
                        <w2:column dataType="text" id="nFinalPaymSeq" name="nFinalPaymSeq"></w2:column>
                        <w2:column dataType="text" id="sFinalPaymMthy" name="sFinalPaymMthy"></w2:column>
                        <w2:column dataType="text" id="sFinalRecpDate" name="sFinalRecpDate"></w2:column>
                        <w2:column dataType="text" id="nTotPaymPrem" name="nTotPaymPrem"></w2:column>
                        <w2:column dataType="text" id="sInsurCrLoanYn" name="sInsurCrLoanYn"></w2:column>
                        <w2:column dataType="text" id="sFinalReviDate" name="sFinalReviDate"></w2:column>
                        <w2:column dataType="text" id="sLapsDate" name="sLapsDate"></w2:column>
                        <w2:column dataType="text" id="sFrstSaleChnlCd" name="sFrstSaleChnlCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerHdqtCd" name="sFrstDoerHdqtCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerCentrCd" name="sFrstDoerCentrCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerTeamCd" name="sFrstDoerTeamCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerGroupCd" name="sFrstDoerGroupCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerPartCd" name="sFrstDoerPartCd"></w2:column>
                        <w2:column dataType="text" id="sFrstDoer" name="sFrstDoer"></w2:column>
                        <w2:column dataType="text" id="sFrstDoerUser" name="sFrstDoerUser"></w2:column>
                        <w2:column dataType="text" id="sDoer" name="sDoer"></w2:column>
                        <w2:column dataType="text" id="sCrNo" name="sCrNo"></w2:column>
                        <w2:column dataType="text" id="sPlanProgRankCd" name="sPlanProgRankCd"></w2:column>
                        <w2:column dataType="text" id="sPlanProgTbNo" name="sPlanProgTbNo"></w2:column>
                        <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                        <w2:column dataType="text" id="sJugmGradCd" name="sJugmGradCd"></w2:column>
                        <w2:column dataType="text" id="sConuResltCd" name="sConuResltCd"></w2:column>
                        <w2:column dataType="text" id="sHndwritJugmYn" name="sHndwritJugmYn"></w2:column>
                        <w2:column dataType="text" id="nInrpsPsct" name="nInrpsPsct"></w2:column>
                        <w2:column dataType="text" id="nObjtNum" name="nObjtNum"></w2:column>
                        <w2:column dataType="text" id="nGroupInsPsct" name="nGroupInsPsct"></w2:column>
                        <w2:column dataType="text" id="sCedeStndYm" name="sCedeStndYm"></w2:column>
                        <w2:column dataType="text" id="nEndRtnrt" name="nEndRtnrt"></w2:column>
                        <w2:column dataType="text" id="nExptEndRetrnAmt" name="nExptEndRetrnAmt"></w2:column>
                        <w2:column dataType="text" id="nExptEndRtnrt" name="nExptEndRtnrt"></w2:column>
                        <w2:column dataType="text" id="sPectSaleYn" name="sPectSaleYn"></w2:column>
                        <w2:column dataType="text" id="sScanObjtYn" name="sScanObjtYn"></w2:column>
                        <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                        <w2:column dataType="text" id="sSaleChnlDtal" name="sSaleChnlDtal"></w2:column>
                        <w2:column dataType="text" id="sInsurTermPaymTermName" name="sInsurTermPaymTermName"></w2:column>
                        <w2:column dataType="text" id="gUserID" name="gUserID"></w2:column>
                        <w2:column dataType="text" id="gUserIP" name="gUserIP"></w2:column>
                        <w2:column dataType="text" id="sPlanProgRankName" name="sPlanProgRankName"></w2:column>
                        <w2:column dataType="text" id="sConuResltName" name="sConuResltName"></w2:column>
                        <w2:column dataType="text" id="sGdTypeFlgCd" name="sGdTypeFlgCd"></w2:column>
                        <w2:column dataType="text" id="sTaxPrfrGdYn" name="sTaxPrfrGdYn"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt1" name="nEndRtnAmtCalElmnt1"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt2" name="nEndRtnAmtCalElmnt2"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt3" name="nEndRtnAmtCalElmnt3"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt4" name="nEndRtnAmtCalElmnt4"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt5" name="nEndRtnAmtCalElmnt5"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt6" name="nEndRtnAmtCalElmnt6"></w2:column>
                        <w2:column dataType="text" id="sSrdoIssuDate" name="sSrdoIssuDate"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt10" name="nEndRtnAmtCalElmnt10"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt21" name="nEndRtnAmtCalElmnt21"></w2:column>
                        <w2:column dataType="text" id="nEndRtnAmtCalElmnt22" name="nEndRtnAmtCalElmnt22"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <gUserID></gUserID>
                            <gUserIP></gUserIP>
                            <nAccuPrem></nAccuPrem>
                            <nAnntPymCt></nAnntPymCt>
                            <nApplPrem></nApplPrem>
                            <nBussPrem></nBussPrem>
                            <nCrChngNo></nCrChngNo>
                            <nCrStatCarrSeqno></nCrStatCarrSeqno>
                            <nDcPrem></nDcPrem>
                            <nDefrYct></nDefrYct>
                            <nEndAge></nEndAge>
                            <nEndRtnAmtCalElmnt1></nEndRtnAmtCalElmnt1>
                            <nEndRtnAmtCalElmnt10></nEndRtnAmtCalElmnt10>
                            <nEndRtnAmtCalElmnt2></nEndRtnAmtCalElmnt2>
                            <nEndRtnAmtCalElmnt21></nEndRtnAmtCalElmnt21>
                            <nEndRtnAmtCalElmnt22></nEndRtnAmtCalElmnt22>
                            <nEndRtnAmtCalElmnt3></nEndRtnAmtCalElmnt3>
                            <nEndRtnAmtCalElmnt4></nEndRtnAmtCalElmnt4>
                            <nEndRtnAmtCalElmnt5></nEndRtnAmtCalElmnt5>
                            <nEndRtnAmtCalElmnt6></nEndRtnAmtCalElmnt6>
                            <nEndRtnrt></nEndRtnrt>
                            <nExptEndRetrnAmt></nExptEndRetrnAmt>
                            <nExptEndRtnrt></nExptEndRtnrt>
                            <nFinalPaymSeq></nFinalPaymSeq>
                            <nGrntPrem></nGrntPrem>
                            <nGroupInsPsct></nGroupInsPsct>
                            <nInrpsPsct></nInrpsPsct>
                            <nMaxPrem></nMaxPrem>
                            <nMinPrem></nMinPrem>
                            <nObjtNum></nObjtNum>
                            <nPaymAge></nPaymAge>
                            <nRealInsurTerm></nRealInsurTerm>
                            <nRealPaymTerm></nRealPaymTerm>
                            <nTotPaymPrem></nTotPaymPrem>
                            <sAnntOpnAgeCd></sAnntOpnAgeCd>
                            <sAnntPymCyclCd></sAnntPymCyclCd>
                            <sAnntPymStrtDate></sAnntPymStrtDate>
                            <sAnntPymTermCd></sAnntPymTermCd>
                            <sAnntPymTypeCd></sAnntPymTypeCd>
                            <sApplDclrRato></sApplDclrRato>
                            <sApplPlanCd></sApplPlanCd>
                            <sApplPlanName></sApplPlanName>
                            <sBsmnRgstNo></sBsmnRgstNo>
                            <sBunsAchvDgrmClsfCd></sBunsAchvDgrmClsfCd>
                            <sCedeStndYm></sCedeStndYm>
                            <sCmMetd></sCmMetd>
                            <sConuResltCd></sConuResltCd>
                            <sConuResltName></sConuResltName>
                            <sCpayDate></sCpayDate>
                            <sCrNo></sCrNo>
                            <sCrNoSeq></sCrNoSeq>
                            <sCrNoType></sCrNoType>
                            <sCrStatCd></sCrStatCd>
                            <sCrStatFlgcd></sCrStatFlgcd>
                            <sDoer></sDoer>
                            <sDvdnFlagCd></sDvdnFlagCd>
                            <sFinalPaymMthy></sFinalPaymMthy>
                            <sFinalRecpDate></sFinalRecpDate>
                            <sFinalReviDate></sFinalReviDate>
                            <sFrstDoer></sFrstDoer>
                            <sFrstDoerCentrCd></sFrstDoerCentrCd>
                            <sFrstDoerGroupCd></sFrstDoerGroupCd>
                            <sFrstDoerHdqtCd></sFrstDoerHdqtCd>
                            <sFrstDoerPartCd></sFrstDoerPartCd>
                            <sFrstDoerTeamCd></sFrstDoerTeamCd>
                            <sFrstDoerUser></sFrstDoerUser>
                            <sFrstSaleChnlCd></sFrstSaleChnlCd>
                            <sGdCd></sGdCd>
                            <sGdTypeFlgCd></sGdTypeFlgCd>
                            <sGnrzCd></sGnrzCd>
                            <sGroupCrAdmNo></sGroupCrAdmNo>
                            <sHndwritJugmYn></sHndwritJugmYn>
                            <sHsecFlagCd></sHsecFlagCd>
                            <sInsurCrLoanYn></sInsurCrLoanYn>
                            <sInsurEndDate></sInsurEndDate>
                            <sInsurStrtdate></sInsurStrtdate>
                            <sInsurTermCd></sInsurTermCd>
                            <sInsurTermPaymTermName></sInsurTermPaymTermName>
                            <sItemCd></sItemCd>
                            <sJugmAuthCd></sJugmAuthCd>
                            <sJugmGradCd></sJugmGradCd>
                            <sLapsDate></sLapsDate>
                            <sPaymCyclCd></sPaymCyclCd>
                            <sPaymExptDate></sPaymExptDate>
                            <sPaymTermCd></sPaymTermCd>
                            <sPectSaleYn></sPectSaleYn>
                            <sPlanNo></sPlanNo>
                            <sPlanProgRankCd></sPlanProgRankCd>
                            <sPlanProgRankName></sPlanProgRankName>
                            <sPlanProgTbNo></sPlanProgTbNo>
                            <sPpayAvaYn></sPpayAvaYn>
                            <sPsnGroupFlgcd></sPsnGroupFlgcd>
                            <sSaleChnlDtal></sSaleChnlDtal>
                            <sSaleChnlFlagCd></sSaleChnlFlagCd>
                            <sScanObjtYn></sScanObjtYn>
                            <sSrdoIssuDate></sSrdoIssuDate>
                            <sSsrtDate></sSsrtDate>
                            <sTaxPrfrGdYn></sTaxPrfrGdYn>
                            <sTaxPrfrYn></sTaxPrfrYn>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIEA10" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sGroupCrAdmNo" name="sGroupCrAdmNo"></w2:column>
                        <w2:column dataType="text" id="sRpstName" name="sRpstName"></w2:column>
                        <w2:column dataType="text" id="sRpstCd" name="sRpstCd"></w2:column>
                        <w2:column dataType="text" id="sGroupName" name="sGroupName"></w2:column>
                        <w2:column dataType="text" id="nFrstPsct" name="nFrstPsct"></w2:column>
                        <w2:column dataType="text" id="nGroupDcrt" name="nGroupDcrt"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_RecvComm" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Pibo" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sel" name="sel"></w2:column>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                        <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                        <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                        <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
                        <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                        <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
                        <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                        <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
                        <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                        <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                        <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
                        <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
                        <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
                        <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
                        <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Trty" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="chk" name="chk"></w2:column>
                        <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                        <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                        <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                        <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                        <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                        <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                        <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                        <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                        <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                        <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                        <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                        <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                        <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                        <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                        <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                        <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                        <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                        <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                        <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                        <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                        <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                        <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                        <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                        <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                        <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                        <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                        <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                        <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                        <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                        <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                        <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                        <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                        <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                        <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LinkList" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="ds_code" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIEA10" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIEA10Doc']/LTIEA10"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Pibo" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA01ListDoc']/vector/data/LTIDA01"></w2:dataList>
                <w2:dataList baseNode="list" id="Dsws_BaseSlct" repeatNode="map" userData2="//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"></w2:dataList>
                <w2:dataList baseNode="list" id="Dsws_InsAmt" repeatNode="map" userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Drive" repeatNode="map" userData2="//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_FlagCd" repeatNode="map" userData2="//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Grade" repeatNode="map" userData2="//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_PaymCycl" repeatNode="map" userData2="//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Plan" repeatNode="map" userData2="//hashtable/data[@hashkey='applPlanList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Trty" repeatNode="map" userData2="//hashtable/data[@hashkey='multi']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_InsurTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_PaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA00" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA00Doc']/LTIDA00"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA15" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AddrFlag" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Warning" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_CrtorRelnCd" repeatNode="map" userData2="//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA03" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_PrdAttr" repeatNode="map" userData2="//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_InsurTermPaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Reln" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_RtnAmt" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_TrtyTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_ADMAB01" repeatNode="map" userData2="//*/ADMAB01"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_CarIns" repeatNode="map" userData2="//*/vector/data/KDRES03"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_CarInsWarning" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_RankCd" repeatNode="map" userData2="//*/LTIDA00"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_DoerInfo" repeatNode="map" userData2="//*/CCCBF42"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AnntOpnAgeCd" repeatNode="map" userData2="//hashtable/data[@hashkey='AnntyOpnAgeList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AnntPymTermCd" repeatNode="map" userData2="//hashtable/data[@hashkey='AnntyPymTermList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AnntPymCyclCd" repeatNode="map" userData2="//hashtable/data[@hashkey='AnntyPymCyclList']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AnntPymTypeCd" repeatNode="map" userData2="//hashtable/data[@hashkey='AnntyPymTypeList']/vector/data/multi"></w2:dataList>
			</w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>
			
		</xf:model>
		<script src="/cm/js/wconv.js"/>
		<script src="/cm/js/convertJs/Global_Script.js"/>
		<script src="/cm/js/convertJs/comm_Webservice.js"/>
		<script src="/cm/js/convertJs/NewGen_Script.js"/>
		<script src="/cm/js/convertJs/LongTerm_Script.js"/>
		<script src="/cm/js/convertJs/Marine_Script.js"/>
		<script src="/cm/js/convertJs/CCC_Script.js"/>
		<script type="javascript"><![CDATA[
/****************************************************************************
 * 프로그램번호   : C020
 * 프로그램명     : 연금간편설계
 * 파일명         : C020.xml
 * 프로그램 내용  : 연금간편설계
 * 관련 프로그램  : 
 * 작성자         : 이은연
 * 작성일         : 2010-01-11
 * 저작권         : Copyright ⓒ 2004. the K 손해보험㈜. All Right Reserved.
 * 변경내역       : 
 ****************************************************************************/

var sPlanNoChFlag = false;
//청약번호가 변경되었는지 체크플래그
var tabChangeFlag = false;
// 메인탭 체인지 플래그
var sBizCode;
//가입설계조회에서 넘어오는 청약번호
var sJupiCode;
//가입설계조회에서 넘어오는 주민번호 
var sIsdCsmNum;
//가입설계조회에서 넘어오는 주민번호 
var sIsdNam;
//가입설계조회에서 넘어오는 이름
var payCmplFlag = false;
// 입금완료 플래그
var sAddrFlgcd;
//피보험자가 정상등록이 되었는지 확인
var sSimpleProg;
//간편산출 단계 확인
var kcbiFlag = false;
// KCBI 대리점 로그인 여부 플래그. 2010-02-03
var sPlanNoBack = "";
//(엑셀로드시,일괄적용시,조회시)
var sSaleChnl = "";
//판매채널구분코드 
var sSaleChnlDtal = "";
//판매채널상세코드
var sToday = "";
//전역변수
var sYoyakTab = "";
var sSimpleYn = "Y";
//간편산출 여부
var sAgncYn = "N";
var sScanObjtYn = "N";

//비대면 계약여부 
//화면별활성/비활성 예외 항목리스트
var defaultExList = "보험료산출,cal_sSsrtDate,cal_sInsurStrtdate,cal_sInsurEndDate,edt_sInsurTermPaymTermName,medt_sGroupCrAdmNo,edt_sGroupName,edt_nFrstPsct,edt_nGroupDcrt,medt_nMinPrem,medt_nMaxPrem,medit_nExptEndRetrnAmt,medt_nExptEndRtnrt,medt_nGrntPrem,medt_nDcPrem,medt_nApplPrem,medt_nAccuPrem,btn_PrintSulgye,btn_Copy,btn_Insu,btn_SummaryPrem,btn_HwanGup,btn_Medical,청약사항입력,edt_sCrtorName,edt_sZip1,edt_sZip2,edt_sAdrs1,edt_sAdrsAdd,edt_sHomeTel1,edt_sHomeTel2,edt_sHomeTel3,edt_sOfficeTel1,edt_sOfficeTel2,edt_sOfficeTel3,edt_sCellPhone1,edt_sCellPhone2,edt_sCellPhone3,edt_sFax1,edt_sFax2,edt_sFax3,edt_sEmail1,edt_RvadAddr,cmb_sMailRvadAddrFlagCd,edt_Insu,edt_UdrtkLmitCnt,btn_AnntPymAmt";

//탭전역변수
var Tab_Step1 = ""; //Tab_Req_Step1.getWindow();
var Tab_Step2 = ""; //Tab_Req_Step2.getWindow();
var Tab_Step3 = ""; //Tab_Req_Step3.getWindow();
var Tab_Step4 = ""; //Tab_Req_Step4.getWindow();

//MaskEdit 정규식 입력
var medt_PlanNo_Event;

scwin.init = function() { //완료

	//----- 버튼 처리(조회, 입력, 수정, 삭제, 결제, 취소, 인쇄, 엑셀, 닫기)
    gfn_btnEnable(false, false, false, false, true, false, false, true);
    
	WebSquare.layer.showModal();

	//Mask Edit 정규식 입력
	//"A-####-#######"
	var maskRegExp = [/^[A-Z\s]{1}[0-9\s]{11}$/];
	var maxLength  = [12];
	var chkIndex   = 0;
	medt_PlanNo_Event = new wMaskEditObj(medt_PlanNo, maskRegExp, maxLength, chkIndex);	
};

scwin.iframeInit = function() { //완료

	Tab_Step1 = Tab_Req_Step1.getWindow();

	//모든 iframe로드가 완료된 후 초기화면 로딩
	scwin.initOnLoadCompleted();
	WebSquare.layer.hideModal();
};

scwin.initOnLoadCompleted = function() { //완료

	//특정그룹 설계금지
    if (gfn_isCA(util.getGdsValue("gUserID"), util.getGdsValue("gUserDuty"))) {
        scwin.lfn_ComponentEnable(Tab_Step1, "", false);
        wprom.alert("현재 상담그룹은 가입설계가 불가합니다.");
        return;
    }
    
    if (util.getGdsValue("gUserIP").length == 0) medt_PlanNo.setReadOnly(false);
    //Local Test사용
    //if(Length(gUserID) == 0) gUserID = "3100115";	
    //if(Length(gDoer) == 0) gDoer = "3100115";
    //if(Length(gDoerUser) == 0) gDoerUser = "3100115";
    if (wconv.length(util.getGdsValue("gFaceSalesYN")) == 0) util.setGdsValue("gFaceSalesYN", "N");

    //대리점인지 여부(30:대리점,33:사용인,35:TM사용인)
    //if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
        //sAgncYn = "Y";
        //Grd_Pibo.SetColProp(3, "Width", 0);
		Tab_Step1.Grd_Pibo.setColumnVisible(3, false); //통화기능 삭제
    //}
    //gfn_GetLinkList("C010");

    // 현재시간 setting
    //global.http.Sync = true;
    //getServerTime();
    //sToday = substr(gDs_ServerTime.GetColumn(0, "sToday"),0,8);
    //global.http.Sync = false;	
    sToday = wconv.substr(gfn_GetSysTime(), 0, 8);

    // KCBI 대리점 로그인 확인  2010-02-05
    if (wconv.length(util.getGdsValue("gManageEmpNo")) > 0) {
        if (util.getGdsValue("gManageEmpNo").substr(0, 1) == "A" || util.getGdsValue("gManageEmpNo").substr(0, 1) == "B") {
            kcbiFlag = true;
        }
    } else {
        kcbiFlag = false;
    }
    if (gds.gDs_LinkArg.getRowCount() != 0) {
        sBizCode = gds.gDs_LinkArg.getCellData(0, "sKey");
        sApplyNo = gds.gDs_LinkArg.getCellData(0, "sKey");
        sJupiCode = gds.gDs_LinkArg.getCellData(0, "sInsuredCode");
        sIsdCsmNum = gds.gDs_LinkArg.getCellData(0, "sInsuredCode");
        edt_sGdCd.setValue(gds.gDs_LinkArg.getCellData(0, "sTitle")); //상품코드
        edt_sGdCdNm.setValue(gds.gDs_LinkArg.getCellData(0, "sContents")); //상품명
        edt_sGnrzCd.setValue(gds.gDs_LinkArg.getCellData(0, "sSeqNo")); //종형코드   
        if (!util.isNull(sBizCode)) {
            medt_PlanNo.setValue(sBizCode);
        } else {
            medt_PlanNo.setValue(gds.gDs_LinkArg.getCellData(0, "sInsuredNo"));
        }
        gds.gDs_LinkArg.removeAll();
    }

    //청약번호를 넘겨받았을때 처리 
    if (!mfn_IsEmpty(medt_PlanNo.getValue())) {
        //medt_PlanNo.Value = sPlanNo;
        scwin.lfn_Search();
    } else {
        //청약일자,보험기간 오늘날짜 세팅
        Tab_Step1.cal_sSsrtDate.setValue(sToday);
        Tab_Step1.cal_sInsurStrtdate.setValue(sToday);
        
		Tab_Step1.scwin.lfn_addRow();

        /*취급자 사용인세팅*/
        if (!util.isNull(util.getGdsValue("gDoerUser"))) {
            scwin.lfn_getDoerInfo(util.getGdsValue("gDoerUser")); //취급자사용인정보조회
        } else {
            scwin.lfn_getDoerInfo(util.getGdsValue("gDoer"));
        }

        //주민번호를 넘겨받았을때처리
        if (!mfn_IsEmpty(sJupiCode)) {
            scwin.setData();
        }
    }

    //로그인 채널코드 조회
    //wconv.clear(gds.gDsWs_SelectEmpName);
    //if (gds.gDsWs_SelectEmpName.getRowCount() == 0) {
        gfn_getEmpName(util.getGdsValue("gDoer"));
        //trace("gDsWs_SelectEmpName=="+gDsWs_SelectEmpName.SaveXML());	
        sSaleChnl = gds.gDsWs_SelectEmpName.getCellData(0, "sSalesChannel"); //판매채널구분코드 
        sSaleChnlDtal = gds.gDsWs_SelectEmpName.getCellData(0, "sSubChannel"); //판매채널상세코드
    //}

    //	Tab_Req.Tab_Step1.btn_Medical.Enable = false;
    //탭변경시 체크
    //Tab_Req.OnChanging = "lfn_TabChanging";
    //피보험자 그리드의 주소찾기 버튼 숨김
    /*
    Grd_Pibo.SetCellProp("body", 2, "colspan", "1");
    //Tab_Step1.Grd_Pibo.SetCellProp ("body", 3, "BkImageID", "");
    //Tab_Step1.Grd_Pibo.SetCellProp ("body", 3, "display", "normal");
    Grd_Pibo.SetColProp(4, "Width", 0);
    Grd_Pibo.SetCellProp("body", 4, "BkImageID", "");
    Grd_Pibo.SetCellProp("body", 4, "edit", "none");
    Grd_Pibo.SetCellProp("body", 4, "display", "normal");
    */
    Tab_Step1.Grd_Pibo.setColumnVisible(4, false);
    Tab_Step1.btn_PrintInfo.setValue("안내문출력");

    //급수 활성화.
    /*
    Tab_Step1.Grd_Pibo.SetCellProp("body", 10, "edit", "combo"); //ldh	
    Tab_Step1.Grd_Pibo.SetColProp(10, "Width", 54);
    */
    Tab_Step1.Grd_Pibo.setColumnReadOnly(10, false);

    //운전용도 활성화.
    //Tab_Step1.Grd_Pibo.SetCellProp("body", 11, "edit", "combo"); //ldh
    Tab_Step1.Grd_Pibo.setColumnReadOnly(11, false);
    	
    //대리점일때 주민번호 "*"표시
    if (sAgncYn == "Y") {
    	/*
        Tab_Step1.Grd_Pibo.SetCellProp("body", 2, "edit", "none");
        Tab_Step1.Grd_Pibo.SetCellProp("body", 2, "mask", "");
        Tab_Step1.Grd_Pibo.SetCellProp("body", 2, "colId", "");
        */
        //그리드 패스워드 처리
        Tab_Step1.scwin.lfn_mkGrdPassWord();
    }


    //피보험자 정보 읽기
    //lfn_loadFile();
    //성명 edit가능
    //Grd_Pibo.SetCellProp("body", 5, "edit", "normal");
    Tab_Step1.Grd_Pibo.setColumnReadOnly(5, false);

    /*btn_Medical
    btn_Insu
    btn_SummaryPrem
    btn_PrintAgmt
    btn_HwanGup
    btn_PrintInfo
    Btn_carList
    btn_Copy
    Btn_next
    */
    //간편설계에서 필요한 버튼을 제외하고 나머지 버튼 숨김
    Tab_Step1.btn_Medical.hide();
    Tab_Step1.btn_Insu.hide();
    //Tab_Step1.btn_PrintInfo.Visible = false;
    Tab_Step1.Btn_carList.hide();
    Tab_Step1.Btn_carList.hide();
    Tab_Step1.Btn_next.hide();
    //Tab_Step1.chk_sPsnGroupFlgcd.hide(); //단체취급 숨김
    Tab_Step1.Btn_goChung.show(); //청약이동 버튼 보이기
    Tab_Step1.Btn_goChung.setStyle("display", "");
    //Tab_Step1.Btn_goChung.top = "453";
    Tab_Step1.Btn_LoadFile.hide(); //피보험자 정보읽기 버튼
    Tab_Step1.btn_AnntSvLimit.hide(); // 연금저축한도-장기보험고도화
};
	
//---------------------------------------------------------------------------
// function 명 : lfn_Search
// 내용        : 화면세팅에 필요한 정보를 조회
//---------------------------------------------------------------------------
scwin.lfn_Search_Async = function() { //완료
	util.eventAsyncCall(this, scwin.lfn_Search, arguments);
}
scwin.lfn_Search = function() { //완료

    //화면항목비활성화처리
    //	lfn_ComponentEnable(Tab_Req.Tab_Step1, "", true);	
    //	lfn_ComponentEnable(Tab_Req.Tab_Step2, "", true);
    //	lfn_ComponentEnable(Tab_Req.Tab_Step3, "", true);
    //초기화
    wconv.clear(DsWs_Warning);
    wconv.clear(DsWs_InsurTerm);
    wconv.clear(DsWs_PaymTerm);
    wconv.clear(DsWs_Pibo);
    wconv.clear(Dsws_BaseSlct);
    wconv.clear(DsWs_Drive);
    wconv.clear(DsWs_FlagCd);
    wconv.clear(DsWs_Grade);
    wconv.clear(DsWs_PaymCycl);
    wconv.clear(DsWs_Plan);
    wconv.clear(DsWs_LTIDA15);
    wconv.clear(DsWs_LTIDA00);
    wconv.clear(DsWs_Trty);
    wconv.clear(DsWs_LTIEA10);
    wconv.clear(DsWs_CrtorRelnCd);
    wconv.clear(DsWs_LTIDA03);
    wconv.clear(Dsws_InsAmt);
    wconv.clear(DsWs_PrdAttr);
    wconv.clear(DsWs_InsurTermPaymTerm);

    if (wconv.length(medt_PlanNo.getValue()) == 0) {
        wprom.alert("설계번호를 입력하세요");
        medt_PlanNo.focus();
        return false;
    }

	var transObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getInsPlan", "", "");
	transObj.setUrl("/contract/CBSC075MController.do");
	transObj.setId("DOBJ_reqMain");
	transObj.setParam("sPlanNo", medt_PlanNo.getValue()); //설계번호
	transObj.setXPath("//*/WARNING");
	transObj.addXPath("//hashtable/data[@hashkey='lTIEA10Doc']/LTIEA10");
	transObj.addXPath("//hashtable/data[@hashkey='lTIDA01ListDoc']/vector/data/LTIDA01");
	transObj.addXPath("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd");
	transObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd");
	
	transObj.addXPath("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd");
	transObj.addXPath("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd");
	
	transObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='applPlanList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='lTIDA00Doc']/LTIDA00");
	transObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
	
	transObj.addXPath("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd");
	
	transObj.addXPath("//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03");
	transObj.addXPath("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
	
	transObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='lTIDA51Doc']/LTIDA51");
	
	transObj.addXPath("//hashtable/data[@hashkey='AnntyOpnAgeList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='AnntyPymTermList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='AnntyPymCyclList']/vector/data/multi");
	transObj.addXPath("//hashtable/data[@hashkey='AnntyPymTypeList']/vector/data/multi");

	//transObj.callBack("scwin.subCallBackfunction");
	transObj.setXPathDs();
	transObj.sync();
	transObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);

    util.jSonDsCreate(_tranSync.getDsJson("//*/WARNING"), "DsWs_Warning");
    
    if (DsWs_Warning.getRowCount() > 0) {
		wprom.alert(DsWs_Warning.getCellData(0, "msg"));
        //화면을 초기화한다.
        scwin.lfn_Step0Init();
        return;
    }

	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIEA10Doc']/LTIEA10"), "DsWs_LTIEA10", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA01ListDoc']/vector/data/LTIDA01"), "DsWs_Pibo", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"), "Dsws_BaseSlct", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"), "Dsws_InsAmt", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"), "DsWs_Drive", "Y");

	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd"), "DsWs_FlagCd", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd"), "DsWs_Grade", "Y");

	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"), "DsWs_PaymCycl", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"), "DsWs_Plan", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), "DsWs_Trty", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA00Doc']/LTIDA00"), "DsWs_LTIDA00", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), "DsWs_LTIDA15", "Y");

	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd"), "DsWs_CrtorRelnCd", "Y");

	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03"), "DsWs_LTIDA03", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"), "DsWs_PrdAttr", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"), "DsWs_InsurTermPaymTerm", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"), "DsWs_TrtyTerm", "Y");
	
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi"), "DsWs_MinsrReln", "Y");
	
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA51Doc']/LTIDA51"), "DsWs_LTIDA51", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='AnntyOpnAgeList']/vector/data/multi"), "DsWs_AnntOpnAgeCd", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='AnntyPymTermList']/vector/data/multi"), "DsWs_AnntPymTermCd", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='AnntyPymCyclList']/vector/data/multi"), "DsWs_AnntPymCyclCd", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='AnntyPymTypeList']/vector/data/multi"), "DsWs_AnntPymTypeCd", "Y");

	//trace("\n value ==> "+ DOBJ_reqMain.Value);
    sAddrFlgcd = DsWs_LTIDA03.getCellData(0, "sAddrFlgcd"); // 피보험자 등록 여부 확인
    
	//피보험자정보가 있으면 step1 피보험자데이터셋에 넘김
	if (DsWs_Pibo.getRowCount() > 0) {
		//trace("DsWs_Pibo.SaveXML() ==> " + DsWs_Pibo.SaveXML());
		//		Tab_Req.Tab_Step1.Ds_LTIDA00.Clear();
		//		Tab_Req.Tab_Step1.Ds_Pibo.Clear();
		//		Tab_Req.Tab_Step1.Ds_Trty.Clear();
		
		Tab_Step1.wconv.clear(Tab_Step1.Ds_LTIDA00);
		Tab_Step1.wconv.clear(Tab_Step1.Ds_Pibo);
		Tab_Step1.wconv.clear(Tab_Step1.Ds_Trty);
		
		//상품명세팅
		edt_sGdCd.setValue(DsWs_LTIDA00.getCellData(0, "sGdCd"));
		edt_sGdCdNm.setValue(DsWs_LTIDA00.getCellData(0, "sGdName"));
		//종형세팅
		edt_sGnrzCd.setValue(DsWs_LTIDA00.getCellData(0, "sGnrzCd"));
		edt_sGnrzCdNm.setValue(DsWs_LTIDA00.getCellData(0, "sGnrzName"));
		
		var inColInfo = [];
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("gUserID"))) { //gUserID
        	inColInfo.push(["gUserID","gUserID","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("gUserIP"))) { //gUserIP
        	inColInfo.push(["gUserIP","gUserIP","text"]);
        }
        
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sHsecFlagCd"))) { //가계구분코드
        	inColInfo.push(["sHsecFlagCd","sHsecFlagCd","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sGnrzCd"))) { //종형코드
        	inColInfo.push(["sGnrzCd","sGnrzCd","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sBunsMetdDocuClsfCd"))) { //사업방법서분류코드
        	inColInfo.push(["sBunsMetdDocuClsfCd","sBunsMetdDocuClsfCd","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sApplDclrRato"))) { //적용공시이율
        	inColInfo.push(["sApplDclrRato","sApplDclrRato","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sDvdnFlagCd"))) { //배당구분코드
        	inColInfo.push(["sDvdnFlagCd","sDvdnFlagCd","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sPpayAvaYn"))) { //선납가능여부
        	inColInfo.push(["sPpayAvaYn","sPpayAvaYn","text"]);
        }
        if (util.isNull(DsWs_LTIDA00.getColumnIndex("sTaxPrfrGdYn"))) { //세금우대상품여부
        	inColInfo.push(["sTaxPrfrGdYn","sTaxPrfrGdYn","text"]);
        }
        if (inColInfo.length > 0) {
			util.insertColumn(DsWs_LTIDA00, inColInfo);
			util.setCompBindRefresh("DsWs_LTIDA00");
		}
		
        DsWs_LTIDA00.setCellData(0, "sHsecFlagCd", DsWs_PrdAttr.getCellData(0, "HsecFlagCd"));
        DsWs_LTIDA00.setCellData(0, "sBunsMetdDocuClsfCd", DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd"));
        DsWs_LTIDA00.setCellData(0, "sApplDclrRato", DsWs_PrdAttr.getCellData(0, "ApplDclrRato"));
        DsWs_LTIDA00.setCellData(0, "sDvdnFlagCd", DsWs_PrdAttr.getCellData(0, "DvdnFlagCd"));
        DsWs_LTIDA00.setCellData(0, "sPpayAvaYn", DsWs_PrdAttr.getCellData(0, "PpayAvaYn"));
        DsWs_LTIDA00.setCellData(0, "sTaxPrfrGdYn", DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn"));
        DsWs_LTIDA00.setCellData(0, "gUserID", util.getGdsValue("gUserID"));
        DsWs_LTIDA00.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));

        //보험계약설계 세팅
        /*
        wconv.copy(Ds_LTIDA00, DsWs_LTIDA00);
        wconv.copy(Ds_LTIDA00, "DsWs_LTIDA00");
        */
        Tab_Step1.util.jSonDsCreate(DsWs_LTIDA00.getAllJSON(), "Ds_LTIDA00", "Y");
        util.jSonDsCreate(DsWs_LTIDA00.getAllJSON(), "Ds_LTIDA00", "Y");
            
        //trace("DsWs_LTIDA00.SaveXML() ==> " + DsWs_LTIDA00.SaveXML());
        //trace("Ds_LTIDA00.SaveXML() ==> " + Ds_LTIDA00.SaveXML());
        
        var inColInfo = [];
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sApplPlanCd"))) {
        	inColInfo.push(["sApplPlanCd","sApplPlanCd","text"]);
        }
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sApplPlanName"))) {
        	inColInfo.push(["sApplPlanName","sApplPlanName","text"]);
        }
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sFrstSaleChnlCd"))) {
        	inColInfo.push(["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]);
        }
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sSaleChnlDtal"))) {
        	inColInfo.push(["sSaleChnlDtal","sSaleChnlDtal","text"]);
        }
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sPsnGroupFlgcd"))) {
        	inColInfo.push(["sPsnGroupFlgcd","sPsnGroupFlgcd","text"]);
        }
        if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sGdTypeFlgCd"))) {
        	inColInfo.push(["sGdTypeFlgCd","sGdTypeFlgCd","text"]);
        }
        if (inColInfo.length > 0) {
			Tab_Step1.util.insertColumn(Tab_Step1.Ds_LTIDA00, inColInfo);
			Tab_Step1.util.setCompBindRefresh("Ds_LTIDA00");
		}
		
        //Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sApplPlanCd");
        //Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sApplPlanName");
        //Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sFrstSaleChnlCd");
        //Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sSaleChnlDtal");	
        //Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sPsnGroupFlgcd");	
        //			Tab_Req.Tab_Step1.Ds_LTIDA00.AddColumn("sGdTypeFlgCd");	
        //조회된 설계번호를 백업한다.
        sPlanNoBack = DsWs_LTIDA00.getCellData(0, "sPlanNo");
        sPlanNoChFlag = false;

        //전역변수 세팅
        Tab_Step1.sGdCd = DsWs_LTIDA00.getCellData(0, "sGdCd");		//상품코드
        Tab_Step1.sGnrzCd = DsWs_LTIDA00.getCellData(0, "sGnrzCd");  //종형코드
        Tab_Step1.sPlanCd = DsWs_Pibo.getCellData(0, "sApplPlanCd");	//플랜코드				
        edt_sGdCd.setValue(DsWs_LTIDA00.getCellData(0, "sGdCd")); //상품코드
        edt_sGnrzCd.setValue(DsWs_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
        
		if (DsWs_Pibo.getCellData(0, "sPsnInfoOferAgreYn") == "Y" && //개인정보제공동의여부
			DsWs_Pibo.getCellData(0, "sMNumCrInsAgreYn") == "Y"){  //다수계약가입동의여부
		//if (DsWs_Pibo.getCellData(0, "sPsnInfoOferAgreYn") == "Y"){ //개인정보제공동의여부
			Tab_Step1.btn_Medical.setDisabled(false);
			//Tab_Req.Tab_Step1.MediFlag = true;
		}else{
			Tab_Step1.btn_Medical.setDisabled(true);
			// Tab_Req.Tab_Step1.MediFlag = false;
		}
        						
        
        //단체관리세팅
        if (DsWs_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "20") {
            //Tab_Req.Tab_Step1.Ds_LTIEA10.copy(DsWs_LTIEA10);
            //Tab_Req.Tab_Step1.Ds_LTIEA10.SetColumn(0, "nGroupDcrt", toNumber(Tab_Req.Tab_Step1.Ds_LTIEA10.GetColumn(0, "nGroupDcrt"))*100);//단체율%표시
            //Tab_Req.Tab_Step1.chk_sPsnGroupFlgcd.Value = true;
            //Tab_Req.Tab_Step1.chk_sPsnGroupFlgcd_OnClick("B010",true);
            //wconv.copy(Ds_LTIEA10, DsWs_LTIEA10);
            
            Tab_Step1.util.jSonDsCreate(DsWs_LTIEA10.getAllJSON(), "Ds_LTIEA10", "Y");
            Tab_Step1.Ds_LTIEA10.setCellData(0, "nGroupDcrt", wconv.toNumber(Tab_Step1.Ds_LTIEA10.getCellData(0, "nGroupDcrt"))*100);//단체율%표시
            
            Tab_Step1.chk_sPsnGroupFlgcd.setValue(true);
            Tab_Step1.btn_chk_sPsnGroupFlgcd.show();
            Tab_Step1.scwin.chk_sPsnGroupFlgcd_OnClick(true);     
            
            //wconv.copy(Ds_LTIEA10, DsWs_LTIEA10);
            util.jSonDsCreate(DsWs_LTIEA10.getAllJSON(), "Ds_LTIEA10", "Y");
            
            Ds_LTIEA10.setCellData(0, "nGroupDcrt", wconv.toNumber(Tab_Step1.Ds_LTIEA10.getCellData(0, "nGroupDcrt")) * 100); //단체율%표시
            
            Tab_Step1.chk_sPsnGroupFlgcd.setValue(true);
        }

        //2011.04.25 김상운추가(품의결과 내용 추가)
        scwin.lfn_setConuReslt();

        //   if (DsWs_LTIDA03.GetCount() > 0){
        //계약자 세팅
        //wconv.copy(Ds_LTIDA03, "DsWs_LTIDA03");
        util.jSonDsCreate(DsWs_LTIDA03.getAllJSON(), "Ds_LTIDA03", "Y");
        //   }
        
        
        //피보험자구분세팅
        var dsListEvArray = Tab_Step1.util.getDataListEvent(Tab_Step1.Ds_Pibo);
    	Tab_Step1.util.removeAllDataListEvent(Tab_Step1.Ds_Pibo);
    	//피보험자구분세팅
        Tab_Step1.util.jSonDsCreate(DsWs_FlagCd.getAllJSON(), "DsWs_FlagCd");
        //급수세팅
        Tab_Step1.util.jSonDsCreate(DsWs_Grade.getAllJSON(), "DsWs_Grade");
        //운전구분세팅
        Tab_Step1.util.jSonDsCreate(DsWs_Drive.getAllJSON(), "DsWs_Drive");
        //계약자관계(수익자)세팅
        Tab_Step1.util.jSonDsCreate(DsWs_CrtorRelnCd.getAllJSON(), "DsWs_CrtorRelnCd");
    	
        //Tab_Req.Tab_Step1.Ds_Pibo.FireEvent = false; //이벤트 발생이 안되도록 셋팅
        //Tab_Req.Tab_Step1.DsWs_FlagCd.copy(DsWs_FlagCd);   
        //급수세팅
        //Tab_Req.Tab_Step1.DsWs_Grade.copy(DsWs_Grade);
        //운전구분세팅
        //Tab_Req.Tab_Step1.DsWs_Drive.copy(DsWs_Drive);  
        //계약자관계(수익자)세팅
        //Tab_Req.Tab_Step1.DsWs_CrtorRelnCd.copy(DsWs_CrtorRelnCd);
        //피보험자정보세팅
        
        //피보험자정보세팅
        var inColInfo = [];
        if (util.isNull(DsWs_Pibo.getColumnIndex("nMaxPrem"))) {
        	inColInfo.push(["nMaxPrem","nMaxPrem","text"]);
        }
        if (util.isNull(DsWs_Pibo.getColumnIndex("nMinPrem"))) {
        	inColInfo.push(["nMinPrem","nMinPrem","text"]);
        }
        if (inColInfo.length > 0) {
        	util.insertColumn(DsWs_Pibo, inColInfo);
        	util.setCompBindRefresh("DsWs_Pibo");
        }
        
        Tab_Step1.util.jSonDsCreate(DsWs_Pibo.getAllJSON(), "Ds_Pibo");
        
        var inColInfo = [];
        //체크박스 매핑
        if (util.isNull(Tab_Step1.Ds_Pibo.getColumnIndex("sel"))) {
        	inColInfo.push(["sel","sel","text"]);
        }
        //보험료 매핑
        if (util.isNull(Tab_Step1.Ds_Pibo.getColumnIndex("nGrntPrem"))) {
        	inColInfo.push(["nGrntPrem","nGrntPrem","text"]);
        }
        if (inColInfo.length > 0) {
        	Tab_Step1.util.insertColumn(Tab_Step1.Ds_Pibo, inColInfo);
        	Tab_Step1.util.setCompBindRefresh("Ds_Pibo");
		}

        //피보험자 첫번째 체크표시
        Tab_Step1.Ds_Pibo.setCellData(0, "sel", "1");
        
        //Tab_Req.Tab_Step1.Ds_Pibo.FireEvent = true;
        Tab_Step1.util.setDataListEvent(Tab_Step1.Ds_Pibo, dsListEvArray);
        
        //플랜세팅
        //trace("플랜세팅=="+DsWs_Plan.SaveXML());    
        //Tab_Req.Tab_Step1.DsWs_Plan.copy(DsWs_Plan);
        //Tab_Req.Tab_Step1.cmb_Plan.Value = DsWs_Pibo.GetColumn(0, "sApplPlanCd");
        Tab_Step1.util.jSonDsCreate(DsWs_Plan.getAllJSON(), "DsWs_Plan", "Y");
        Tab_Step1.cmb_Plan.setValue(DsWs_Pibo.getCellData(0, "sApplPlanCd"));
        
        //보기/납기combo세팅
        //Tab_Req.Tab_Step1.DsWs_TrtyTerm.copy(DsWs_TrtyTerm);
        //Tab_Req.Tab_Step1.DsWs_InsurTermPaymTerm.copy(DsWs_InsurTermPaymTerm);
        //Tab_Req.Tab_Step1.cmb_InsurTermPaymTerm.Value = DsWs_LTIDA00.GetColumn(0, "sInsurTermCd")+"/"+DsWs_LTIDA00.GetColumn(0, "sPaymTermCd");
        Tab_Step1.util.jSonDsCreate(DsWs_TrtyTerm.getAllJSON(), "DsWs_TrtyTerm", "Y");
        Tab_Step1.util.jSonDsCreate(DsWs_InsurTermPaymTerm.getAllJSON(), "DsWs_InsurTermPaymTerm", "Y");
        Tab_Step1.cmb_InsurTermPaymTerm.setValue(DsWs_LTIDA00.getCellData(0, "sInsurTermCd") + "/" + DsWs_LTIDA00.getCellData(0, "sPaymTermCd"));

        // 상품속성
        //		//trace("상품속성=="+DsWs_PrdAttr.SaveXML());    
        //Tab_Req.Tab_Step1.DsWs_PrdAttr.copy(DsWs_PrdAttr);
        Tab_Step1.util.jSonDsCreate(DsWs_PrdAttr.getAllJSON(), "DsWs_PrdAttr", "Y");

        //납입주기
        //trace("납입주기=="+DsWs_PaymCycl.SaveXML());     
        //Tab_Req.Tab_Step1.DsWs_PaymCycl.copy(DsWs_PaymCycl);
        Tab_Step1.util.jSonDsCreate(DsWs_PaymCycl.getAllJSON(), "DsWs_PaymCycl", "Y");
		Tab_Step1.util.jSonDsCreate(DsWs_MinsrReln.getAllJSON(), "DsWs_MinsrReln", "Y");
		
        //납입주기 선택옵션추가
        //Tab_Req.Tab_Step1.DsWs_PaymCycl.InsertRow(0);
        //Tab_Req.Tab_Step1.DsWs_PaymCycl.SetColumn(0, "sGdCd", "");
        //Tab_Req.Tab_Step1.DsWs_PaymCycl.SetColumn(0, "sPaymCyclCd", "");
        //Tab_Req.Tab_Step1.DsWs_PaymCycl.SetColumn(0, "sPaymCyclName", "- 선택 -");
        //Tab_Req.Tab_Step1.cmb_PaymCycl.BindDataset = "Ds_LTIDA00";   
        Tab_Step1.util.insertRow(Tab_Step1.DsWs_PaymCycl, 0);
        Tab_Step1.DsWs_PaymCycl.setCellData(0, "sGdCd", "");
        Tab_Step1.DsWs_PaymCycl.setCellData(0, "sPaymCyclCd", "");
        Tab_Step1.DsWs_PaymCycl.setCellData(0, "sPaymCyclName", "- 선택 -");
        Tab_Step1.util.setCompBindRefresh("DsWs_PaymCycl");
        
        //보험기간
        //Tab_Req.Tab_Step1.DsWs_InsurTerm.copy(DsWs_InsurTerm);
        Tab_Step1.util.jSonDsCreate(DsWs_InsurTerm.getAllJSON(),  "DsWs_InsurTerm", "Y");
        
        //납입기간
        //Tab_Req.Tab_Step1.DsWs_PaymTerm.copy(DsWs_PaymTerm);
        Tab_Step1.util.jSonDsCreate(DsWs_PaymTerm.getAllJSON(),  "DsWs_PaymTerm", "Y");
        
        //trace("특약=="+DsWs_Trty.SaveXML());     
        //가입금액
        //trace("가입금액=="+Dsws_InsAmt.SaveXML());     
        //Tab_Req.Tab_Step1.Dsws_InsAmt.copy(Dsws_InsAmt);
        //Tab_Req.Tab_Step1.Ds_Trty.copy(DsWs_Trty);
        //Tab_Req.Tab_Step1.Ds_Trty_Backup.copy(DsWs_Trty);
        Tab_Step1.util.jSonDsCreate(Dsws_InsAmt.getAllJSON(),  "Dsws_InsAmt");
        Tab_Step1.util.jSonDsCreate(DsWs_Trty.getAllJSON(),    "Ds_Trty");
        Tab_Step1.util.jSonDsCreate(DsWs_Trty.getAllJSON(),    "Ds_Trty_Backup");
        Tab_Step1.util.setCompBindRefresh("Dsws_InsAmt");
        Tab_Step1.util.setCompBindRefresh("Ds_Trty");
        Tab_Step1.util.setCompBindRefresh("Ds_Trty_Backup");
        
        //특약중 화면출력특약만 화면에 보여줌
        //Tab_Req.Tab_Step1.Ds_Trty.Filter("pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='1'");
        //Tab_Req.Tab_Step1.Ds_Trty_Backup.Filter("pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='1'");	
        //DsWs_Trty.Filter("nPsnPrprtGroupSeqno=='1'");
        //특약중 화면출력특약만 화면에 보여줌
        var funcFilter = function(cellData, tmpParam, rowIdx) {
    		if (Tab_Step1.Ds_Trty.getCellData(rowIdx, "sScrnIndcYn").indexOf("Y") >= 0) {
    			if (Tab_Step1.Ds_Trty.getCellData(rowIdx, "nPsnPrprtGroupSeqno") == "1") {
    				return true;
    			}
    		}
    		return false;
    	}
    	Tab_Step1.Ds_Trty.clearFilter();
    	Tab_Step1.Ds_Trty.setColumnFilter({"type":"func", "colIndex":"sScrnIndcYn", "key":funcFilter, "condition":"and"});
    	var funcFilter = function(cellData, tmpParam, rowIdx) {
    		if (Tab_Step1.Ds_Trty_Backup.getCellData(rowIdx, "sScrnIndcYn").indexOf("Y") >= 0) {
    			if (Tab_Step1.Ds_Trty_Backup.getCellData(rowIdx, "nPsnPrprtGroupSeqno") == "1") {
    				return true;
    			}
    		}
    		return false;
    	}
    	Tab_Step1.Ds_Trty_Backup.clearFilter();
    	Tab_Step1.Ds_Trty_Backup.setColumnFilter({"type":"func", "colIndex":"sScrnIndcYn", "key":funcFilter, "condition":"and"});
        
        Tab_Step1.scwin.fn_init();

		Tab_Step1.util.jSonDsCreate(DsWs_AnntOpnAgeCd.getAllJSON(),  "DsWs_AnntOpnAgeCd", "Y");  // 연금개시나이 초기화
        Tab_Step1.util.jSonDsCreate(DsWs_AnntPymTermCd.getAllJSON(), "DsWs_AnntPymTermCd", "Y"); // 연금지급기간 초기화
        Tab_Step1.util.jSonDsCreate(DsWs_AnntPymTypeCd.getAllJSON(), "DsWs_AnntPymTypeCd", "Y"); // 연금지급형태 초기화
        Tab_Step1.util.jSonDsCreate(DsWs_AnntPymCyclCd.getAllJSON(), "DsWs_AnntPymCyclCd", "Y"); // 연금지급주기
        

        for (var i = 0; i < DsWs_Trty.getRowCount(); i++) {
            if (DsWs_Trty.getCellData(i, "chk") == "1") {
                if (DsWs_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y"){
                	Tab_Step1.btn_Medical.setDisabled(false); //사전조회버튼 활성화
                }
                //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
                if (DsWs_Trty.getCellData(i, "nPsnPrprtGroupSeqno") == "1" && ((DsWs_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" ||
                		DsWs_Trty.getCellData(i, "FxamtCmpsFlag") == "Y"))) {
                	Tab_Step1.btn_Medical.setDisabled(false); //사전조회버튼 활성화
                }

                //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
                if (DsWs_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
                    var nFindRow = wconv.findRow(DsWs_Pibo, "nInrpsSeqno", DsWs_Trty.getCellData(i, "nPsnPrprtGroupSeqno"));

                    Tab_Step1.Ds_Pibo_BackUp.setCellData(nFindRow, "hasPronCmpsTrty","Y");//실손가입 확인
                    
                    if (DsWs_Pibo.getCellData(nFindRow, "sPsnInfoOferAgreYn") == "Y" && //개인정보제공동의여부
                        DsWs_Pibo.getCellData(nFindRow, "sMNumCrInsAgreYn") == "Y") { //다수계약가입동의여부
                        
                        Tab_Step1.Ds_Pibo_BackUp.setCellData(nFindRow, "MediFlag","Y");
                        
					}
                }

                //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
                if (DsWs_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
                    var nFindRow = wconv.findRow(DsWs_Pibo, "nInrpsSeqno", DsWs_Trty.getCellData(i, "nPsnPrprtGroupSeqno"));

                    Tab_Step1.Ds_Pibo_BackUp.setCellData(nFindRow, "hasFxamtCmps","Y");//정액가입 확인
                    
                    if (DsWs_Pibo.getCellData(nFindRow, "sPsnInfoOferAgreYn") == "Y" && //개인정보제공동의여부
                        DsWs_Pibo.getCellData(nFindRow, "sMNumCrInsAgreYn") == "Y") { //다수계약가입동의여부
                        
                        Tab_Step1.Ds_Pibo_BackUp.setCellData(nFindRow, "fixFlag","Y");
                        
					}
                }
            }
        }
		
		Tab_Step1.scwin.lfn_PaymCyclSet();
		
		//보험기간,가입금액 초기값 세팅
		//Tab_Req.Tab_Step1.Ds_Trty.FireEvent = false;
		//Tab_Req.Tab_Step1.lfn_InsurTermInit(obj);
		//Tab_Req.Tab_Step1.Ds_Trty.FireEvent = true;
		var dsListEvArray = Tab_Step1.util.getDataListEvent(Tab_Step1.Ds_Trty);
		Tab_Step1.util.removeAllDataListEvent(Tab_Step1.Ds_Trty);
    	Tab_Step1.scwin.lfn_InsurTermInit();
    	Tab_Step1.util.setDataListEvent(Tab_Step1.Ds_Trty, dsListEvArray);
    					
		//특약데이터셋 변경시 이벤트처리를 위해 이벤트 정의함
		//Tab_Req.Tab_Step1.eval(Ds_Pibo.ID).OnColumnChanged = "lfn_Pibo_OnColumnChanged";
		//Tab_Req.Tab_Step1.eval(Ds_Trty.ID).OnColumnChanged = "lfn_Trty_OnColumnChanged";     
		Tab_Step1.util.setBind(Tab_Step1.Ds_Trty, "oncelldatachange", "scwin.lfn_Trty_OnColumnChanged");
		
		Tab_Step1.nMaxPrem = DsWs_LTIDA00.getCellData(0, "nMaxPrem");
		
		//설계번호에 이벤트 처리
		//medt_PlanNo.OnKillFocus = "lfn_sPlannNoKillFocus";
		util.setBind(medt_PlanNo, "onblur", "scwin.lfn_sPlannNoKillFocus");
		
		//전산심사복사
		//wconv.copy(Ds_LTIDA15, "DsWs_LTIDA15");
		util.jSonDsCreate(DsWs_LTIDA15.getAllJSON(),           "Ds_LTIDA15");
        Tab_Step1.util.jSonDsCreate(DsWs_LTIDA15.getAllJSON(), "Ds_LTIDA15");
        util.setCompBindRefresh("Ds_LTIDA15");
        Tab_Step1.util.setCompBindRefresh("Ds_LTIDA15");
        util.setRowPosition(Ds_LTIDA15, 0);
        Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA15, 0);
        
        if (Ds_LTIDA15.getRowCount() > 0) {
            //Tab_Step1.btn_Insu.Color = "red";
            //Tab_Step2.btn_Insu.Color = "red";
            Tab_Step1.$("#btn_Insu a:first-child").css("color","red");
            //Tab_Step2.$("#btn_Insu a:first-child").css("color","red");
        } else {
            //Tab_Step1.btn_Insu.Color = "";
            //Tab_Step2.btn_Insu.Color = "";
            Tab_Step1.$("#btn_Insu a:first-child").css("color","");
            //Tab_Step2.$("#btn_Insu a:first-child").css("color","");
        }
        Tab_Step1.modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
        Tab_Step1.CalcPremFlag = true;
        
        //계약확정건일때 버튼Disable시키기
        if (DsWs_LTIDA00.getCellData(0,"sPlanProgRankCd") == "00"){
        	scwin.lfn_TabChangeCheck(0,0);
        }
        
        //일시납 납입기간에 따른 납입주기 세팅
        //일사납일경우 납입주기를 일시납으로 변경
        //if(Tab_Req.Tab_Step1.Ds_LTIDA00.GetColumn(0, "sPaymTermCd") != "000"){
        //	Tab_Req.Tab_Step1.DsWs_PaymCycl.Filter(("ToNumber(sPaymCyclCd) < 99"));
        //}
        if (Tab_Step1.Ds_LTIDA00.getCellData(0, "sPaymTermCd") != "000") {
        	//Tab_Step1.DsWs_PaymCycl.Filter(("ToNumber(sPaymCyclCd) < 99"));
			var funcFilter = function(cellData, tmpParam, rowIdx) {
				return ((Number(Tab_Step1.DsWs_PaymCycl.getCellData(rowIdx, "sPaymCyclCd")) < 99) ? true : false);
			}
			Tab_Step1.DsWs_PaymCycl.clearFilter();
			Tab_Step1.DsWs_PaymCycl.setColumnFilter({"type":"func", "colIndex":"sPaymCyclCd", "key":funcFilter, "condition":"and"});
        }
        
        //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
        if (Tab_Step1.DsWs_Plan.getCellData(Tab_Step1.cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
            Tab_Step1.medt_nBussPrem.setDisabled(true);
        } else {
            Tab_Step1.medt_nBussPrem.setDisabled(false);
        }
        
        //가입설계서 발행버튼 활성화
        Tab_Step1.btn_PrintAgmt.setDisabled(false);
        Tab_Step1.btn_PrintInfo.setDisabled(false);
        
        btn_Goods.setDisabled(false);
        sYoyakTab = "";

        //57:인수불가/58:조건부승인/확정/수납대기시일경우 화면 비활성화
        if ((wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) || 
        		wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 || wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
            //화면항목비활성화처리
            scwin.lfn_ComponentEnable(Tab_Step1, "", false);
            scwin.lfn_ComponentEnable(Tab_Step2, "", false);
            if (wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 57 || wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 || 
            		wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
                scwin.lfn_ComponentEnable(Tab_Step3, "", false);
            }
        }
        if (Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20") {
            scwin.saveHistory("2"); //보험료산출
        }
        if (Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "52") {
            scwin.saveHistory("3"); //심사(인수요청)
        }
        if (Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "00") {
            scwin.saveHistory("5"); //확정건(확정
        }

        //피보험자 추가버튼 활성화
        //Tab_Req.Tab_Step1.lfn_setBtnAddPibo(DsWs_PrdAttr);
        //당사 자동차가입현황 버튼 활성화
        if (DsWs_PrdAttr.getCellData(0, "DrvrGdYn") == "Y") {
        }

        //당사 자동차가입현황
        scwin.lfn_ThcpCarInsCrst(DsWs_PrdAttr);

        //취급자사용인정보조회
        if (Ds_LTIDA00.getCellData(0, "sFrstDoerUser") != "") {
            scwin.lfn_getDoerInfo(Ds_LTIDA00.getCellData(0, "sFrstDoerUser"));
        } else {
            scwin.lfn_getDoerInfo(Ds_LTIDA00.getCellData(0, "sFrstDoer"));
        }
	} else {
		wprom.alert("해당설계번호에 대한 계약건이 없습니다.");
	}
    
}

//---------------------------------------------------------------------------
// function 명 : setData
// 내용        : 비활성화된 Tab을 선택시 이전 TabIndex로 되돌린다.
//---------------------------------------------------------------------------
scwin.setData = function(obj) { //완료

    Tab_Step1.Ds_Pibo.setCellData(0, "sel", "1");
    Tab_Step1.Ds_Pibo.setCellData(0, "sInrpsFlagCd", "1");
    Tab_Step1.Ds_Pibo.setCellData(0, "sCrtorRelnCd", "10");
    Tab_Step1.Ds_Pibo.setCellData(0, "sPftbpInrpsRelnCd", "99");
    Tab_Step1.Ds_Pibo.setCellData(0, "sPftbpInrpsRelnName", "법정상속인");
    
    var inColinfo = [];
    //체크박스 매핑
    if (util.isNull(Tab_Step1.Ds_Pibo.getColumnIndex("sel"))) {
    	//Tab_Step1.Ds_Pibo.AddColumn("sel");
    	inColinfo.push([["sel","sel","text"]])
    }
    //보험료 매핑
    if (util.isNull(Tab_Step1.Ds_Pibo.getColumnIndex("nGrntPrem"))) {
    	//Tab_Step1.Ds_Pibo.AddColumn("nGrntPrem");
    	inColinfo.push([["nGrntPrem","nGrntPrem","text"]])
    }
    if (inColinfo.length > 0) {
    	Tab_Step1.util.insertColumn(Tab_Step1.Ds_Pibo, inColinfo);
    	Tab_Step1.util.setCompBindRefresh("Ds_Pibo");
    }

    if (!mfn_IsEmpty(sJupiCode)) {
        Tab_Step1.Ds_Pibo.SetColumn(0, "sInrpsCd", sJupiCode);
        Tab_Step1.Ds_Pibo.SetColumn(0, "sIsdCsmNum", sIsdCsmNum);
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_ComponentEnable
// 내용        : 계약상태별 화면 비활성 처리
//---------------------------------------------------------------------------
scwin.lfn_ComponentEnable = function(step, exList, enable) { //완료

	if (wconv.length(exList) == 0) {
		exList = defaultExList;
	}

	if (step.toString().toUpperCase().indexOf("WINDOW") < 0) {
		step = step.getWindow();
	}

	var comps = step.$w.comp;
	for (var i in comps){
		var comp = comps[i];
        if(comp.getPluginName() == "inputCalendar" || comp.getPluginName() == "selectbox" || comp.getPluginName() == "checkbox" ||
        	comp.getPluginName() == "anchor" || comp.getPluginName() == "gridView" || comp.getPluginName() == "input"){
            //trace(comp.ID+"==="+comp.getType());
            //trace(comp.ID+"==="+IndexOf(exList, comp.ID));			
            //활성/비활성화 예외처리
            if (exList.indexOf(comp.getID()) < 0) {
                //피보험자,특약그리드
                if (((comp.getID() == "grd_Pibo" || comp.getID() == "grd_sTrty")) && !enable) {
                    if (step == Tab_Step1) {
                        //Tab_Req.Tab_Step1.grd_sTrty.SetCellProp("BODY", 0, "Display", ); 
                        //피보험자사항
                        if (comp.getID() == "grd_Pibo") {
                        	/*
                            step_eval(comp.ID).SetCellProp("BODY", 0, "Edit", "none");
                            step_eval(comp.ID).SetCellProp("BODY", 1, "Edit", "none");
                            step_eval(comp.ID).SetCellProp("BODY", 2, "Edit", "none");
                            step_eval(comp.ID).SetCellProp("BODY", 3, "Edit", "none");
                            step_eval(comp.ID).SetCellProp("BODY", 4, "Edit", "none");
                            //step.eval(comp.ID).OnCellClick = "";
                            */
                            comp.setColumnReadOnly(0, true);
                            comp.setColumnReadOnly(1, true);
                            comp.setColumnReadOnly(2, true);
                            comp.setColumnReadOnly(3, true);
                            comp.setColumnReadOnly(4, true);
                            //특약사항
                        } else {
                        	/*
                            step_eval(comp.ID).SetCellProp("Head", 0, "Edit", "none");
                            step_eval(comp.ID).OnHeadClick = "";
                            step_eval(comp.ID).SetCellProp("BODY", 0, "Edit", "none");
                            step_eval(comp.ID).SetCellProp("BODY", 6, "Edit", "none");
                            */
                            comp.unbind("onheaderclick");
                            comp.setColumnReadOnly(0, true);
                            comp.setColumnReadOnly(6, true);
                        }
                    } else if (step == Tab_Step2) {
                        //피보험자사항
                        if (comp.getID() == "grd_Pibo") {
                            //step.eval(comp.ID).SetCellProp("BODY", 7, "Edit", "none");
                            //step_eval(comp.ID).SetCellProp("BODY", 12, "Edit", "none");
                            //step.eval(comp.ID).OnCellClick = "";
							comp.setColumnReadOnly(12, true);
                        }
                    }
                } else {
                    //step_eval(comp.ID).Enable = enable;
                    comp.setDisabled(!enable);
                }
            }
            if (enable == true && step == Tab_Step1) {
                if (comp.getID() == "grd_sTrty") {
                	/*
                    step_eval(comp.ID).SetCellProp("Head", 0, "Edit", "none");
                    step_eval(comp.ID).OnHeadClick = "lfn_trtyOnHeadClick";
                    step_eval(comp.ID).SetCellProp("BODY", 0, "Edit", "expr:decode(lfn_TrtyEnableCheck(CurRow), 1, \"none\", \"checkbox\")\"");
                    step_eval(comp.ID).SetCellProp("BODY", 5, "Edit", "combo");
                    */
                    comp.unbind("onheaderclick"); //중복등록 방지를위해 삭제후 설정
                    comp.bind("onheaderclick","scwin.lfn_trtyOnHeadClick");
                    comp.setColumnReadOnly(5, false);
                }
            }
        }
    }
    if (step == Tab_Step1 || step == Tab_Step2) {
        btn_Goods.setDisabled(!enable);
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_getDoerInfo
// 내용        : 취급자사용인정보조회
//---------------------------------------------------------------------------
scwin.lfn_getDoerInfo = function(sUserId) { //완료
	var transObj = new callService("com.inswave.longterm.com.com.task.AXR970Task", "getDoerInfo", "", "");
	transObj.setUrl("/contract/CBSC075MController.do");
	transObj.setId("getDoerInfo");
	transObj.setParam("sUserId", sUserId);
	transObj.setXPath("//*/ADMAB01");
	transObj.addXPath("//*/CCCBF42");
	transObj.addXPath("//*/WARNING");
	//transObj.callBack("scwin.subCallBackfunction");
	transObj.sync();
	transObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	wconv.clear(DsWs_DoerInfo);
	wconv.clear(DsWs_ADMAB01);	
	util.jSonDsCreate(_tranSync.getDsJson("CCCBF42"), "DsWs_DoerInfo", "Y");	
	util.jSonDsCreate(_tranSync.getDsJson("ADMAB01"), "DsWs_ADMAB01", "Y");
	
	//gDsWs_SelectEmpName 초기화 임의 DataList 생성 후
	//util.createGdsDataList("gDsWs_SelectEmpName", {"sUserID" : ""});
    //wconv.clear(gds.gDsWs_SelectEmpName);

    if (DsWs_DoerInfo.getRowCount() > 0) {
        /*취급자 사용인세팅*/
        edt_sDoer.setValue(DsWs_DoerInfo.getCellData(0, "sDoer"));
        edt_sDoerName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerName"));
        edt_sDoerUser.setValue(DsWs_DoerInfo.getCellData(0, "sDoerUser"));
        edt_sDoerUserName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerUserName"));
        edt_sDoerCentrCd.setValue(DsWs_DoerInfo.getCellData(0, "sDoerCentrCd"));
        edt_sDoerCentrName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerCentrName"));
    } else {
        edt_sDoer.setValue("");
        edt_sDoerUser.setValue("");
        edt_sDoerCentrCd.setValue("");
        edt_sDoerName.setValue("");
        edt_sDoerUserName.setValue("");
        edt_sDoerCentrName.setValue("");
        /*취급자 사용인세팅*/
        if (!util.isNull(Ds_LTIDA00.getCellData(0, "sFrstDoer"))) {
            edt_sDoer.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoer"));
            edt_sDoerUser.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoerUser"));
            edt_sDoerCentrCd.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoerCentrCd"));
            gfn_getEmpName(edt_sDoer.getValue());
            if (gds.gDsWs_SelectEmpName.getRowCount() != 0) {
                edt_sDoerName.setValue(gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
            }
            if (edt_sDoerUser.getValue() != "") {
                gfn_getEmpName(edt_sDoerUser.getValue());
                if (gds.gDsWs_SelectEmpName.getRowCount() != 0) {
                    edt_sDoerUserName.setValue(gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
                }
            }
            gfn_getDepartName(edt_sDoerCentrCd.getValue());
            if (gds.gDsWs_getTeam.getRowCount() != 0) {
                edt_sDoerCentrName.setValue(gds.gDsWs_getTeam.getCellData(0, "sDepartName"));
            }
        } else {
            edt_sDoer.setValue(util.getGdsValue("gDoer"));
            edt_sDoerUser.setValue(util.getGdsValue("gDoerUser"));
            edt_sDoerCentrCd.setValue(util.getGdsValue("gDptOfficeCode"));
            edt_sDoerCentrName.setValue(util.getGdsValue("gDptOfficeName"));
            gfn_getEmpName(edt_sDoer.getValue());
            if (gds.gDsWs_SelectEmpName.getRowCount() != 0) {
                edt_sDoerName.setValue(gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
            }
            if (!util.isNull(edt_sDoerUser.getValue())) {
                gfn_getEmpName(edt_sDoerUser.getValue());
                if (gds.gDsWs_SelectEmpName.getRowCount() != 0) {
                    edt_sDoerUserName.setValue(gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
                }
            }
        }
        return false;
    }
    return true;
};


//---------------------------------------------------------------------------
// function 명 : lfn_Step0Init
// 내용        : 보험료산출화면을 초기화
//---------------------------------------------------------------------------
scwin.lfn_Step0Init = function() { //완료
    //화면을 초기화한다.
    edt_sGdCd.setValue(""); // 상품코드
    edt_sGdCdNm.setValue(""); // 상품명
    edt_sGnrzCd.setValue(""); // 종형코드
    edt_sGnrzCdNm.setValue(""); // 종형명	
    medt_PlanNo.setValue(""); // 설계번호
    	
    wconv.clear(Tab_Step1.Ds_LTIDA00);
    Tab_Step1.util.appendRow(Tab_Step1.Ds_LTIDA00);
    var inColInfo = [];
    if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sApplPlanCd"))) {
    	inColInfo.push(["sApplPlanCd","sApplPlanCd","text"]);
    }
    if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sApplPlanName"))) {
    	inColInfo.push(["sApplPlanName","sApplPlanName","text"]);
    }
    if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sFrstSaleChnlCd"))) {
    	inColInfo.push(["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]);
    }
    if (util.isNull(Tab_Step1.Ds_LTIDA00.getColumnIndex("sSaleChnlDtal"))) {
    	inColInfo.push(["sSaleChnlDtal","sSaleChnlDtal","text"]);
    }
    if (inColInfo.length > 0) {
    	Tab_Step1.util.insertColumn(Tab_Step1.Ds_LTIDA00, inColInfo);
    	Tab_Step1.util.setCompBindRefresh("Ds_LTIDA00");
    }

    Tab_Step1.Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "21"); //개인단체구분코드 세팅

    wconv.clear(Tab_Step1.Ds_LTIEA10);
    Tab_Step1.util.appendRow(Tab_Step1.Ds_LTIEA10);
    
    wconv.clear(Tab_Step1.Ds_Pibo);
    wconv.clear(Tab_Step1.Ds_Trty);
    
    //플랜정보삭제
    //Tab_Step1.DsWs_Plan.Clear();
    //플랜정보삭제
    Tab_Step1.util.jSonDsCreate([{"__CLEAR__":""}],"DsWs_Plan");
    wconv.clear(Tab_Step1.DsWs_Plan);

	//청약일자,보험기간 오늘날짜 세팅
    cal_sSsrtDate.setValue(sToday);
    Tab_Step1.cal_sSsrtDate.setValue(sToday);
    Tab_Step1.cal_sInsurStrtdate.setValue(sToday);

    cal_sSsrtDate.setDisabled(false);
    Tab_Step1.cal_sInsurStrtdate.setDisabled(false);
    Tab_Step1.cmb_PaymCycl.setDisabled(false);
    Tab_Step1.cmb_Plan.setDisabled(false);
    Tab_Step1.cmb_InsurTermPaymTerm.setDisabled(false);

    //계약자 초기화
    wconv.clear(Ds_LTIDA03);
};


//---------------------------------------------------------------------------
// function 명 : lfn_setConuReslt()
// 내용        : 품의결과 화면표시
//---------------------------------------------------------------------------
scwin.lfn_setConuReslt = function() { //완료
    var sConuResltCd = Ds_LTIDA00.getCellData(0, "sConuResltCd");
    if (sConuResltCd == "11") {
        stc_ConuReslt.setValue("인수요청");
    } else if (sConuResltCd == "01") {
        stc_ConuReslt.setValue("인수승인완료");
    } else if (sConuResltCd == "02") {
        stc_ConuReslt.setValue("조건부 승인");
    } else if (sConuResltCd == "03") {
        stc_ConuReslt.setValue("인수거절");
    } else if (sConuResltCd == "04") {
        stc_ConuReslt.setValue("진단심사");
    } else {
        stc_ConuReslt.setValue("");
    }
};

//---------------------------------------------------------------------------
// function 명 : saveHistory
// 내용        : 이력저장(콜센터)
//---------------------------------------------------------------------------
scwin.saveHistory = function(sApplyStat) { //완료
	/*
    var sVvalue = medt_PlanNo.getValue() + "^" + // 청약번호
        sApplyStat + "^" + Tab_Step1.cal_sInsurStrtdate.Value + "^" + Tab_Step1.medt_nBussPrem.Value + "^" + // 합계보험료(영업보험료)
        Tab_Step1.Ds_Pibo.GetColumn(0, "sInrpsCd") + "^" + // 피보험자코드
        Tab_Step1.Ds_Pibo.GetColumn(0, "sInrpsName"); // 피보험자명
    UserNotify(0, sVvalue);
    */
};

//---------------------------------------------------------------------------
// function 명 : lfn_ThcpCarInsCrst
// 내용        :  당사자동차가입현황 POPUP
//---------------------------------------------------------------------------
scwin.lfn_ThcpCarInsCrst = function(dsPrdAttr) { //완료
};


//---------------------------------------------------------------------------
// function 명 : lfn_loadFile
// 내용        : 피보험자 정보파일을 읽어 화면에 display
//---------------------------------------------------------------------------
scwin.lfn_loadFile = function(obj) { //완료 미사용

	return util.toDoAlert("lfn_loadFile (미사용)");

    File_Person.FileName = "c:\\cust_info\\cust_info.txt";
    File_Person.Open("rt"); // Option ( r:read, t:text, b:binary, w:write, a:append +:read/write )
    var sPersonInfo = File_Person.Read(-1); // Read(nBufsize): 읽어들인 BufferSize
    if (wconv.Length(sPersonInfo) > 0) {
        var sInfo = wconv.split(sPersonInfo, "^", "webstyle");

        /*	
        [0] : 주민등록번호
        [1] : 고객명
        [2] : 자택전화1
        [3] : 자택전화2
        [4] : 자택전화3
        [5] : 직장전화1
        [6] : 직장전화2
        [7] : 직장전화3
        [8] : 핸드폰1
        [9] : 핸드폰2
        [10] : 핸드폰3
        [11] : 이메일
        [12] : 자택우편번호
        [13] : 자택기본주소1
        [14] : 자택기본주소2
        [15] : 자택기본주소3
        [16] : 자택상세주소
        [17] : 직장우편번호
        [18] : 직장기본주소1
        [19] : 직장기본주소2
        [20] : 직장기본주소3
        [21] : 직장상세주소
        */
        Tab_Step1.Ds_Pibo.SetColumn(0, "sInrpsCd", sInfo[0]);
        Tab_Step1.Ds_Pibo.SetColumn(0, "sInrpsName", sInfo[1]);

        //보험나이계산
        Tab_Step1.Ds_Pibo.setColumn(0, "nInrpsAge", gfn_getInsAge(Tab_Step1.Ds_Pibo.getColumn(0, "sInrpsCd"), Tab_Step1.cal_sSsrtDate.Value));
        div1.lfn_backup_Pibo();
    }
    File_Person.Close();
};

//---------------------------------------------------------------------------
// function 명 : lfn_Cancel
// 내용        : 취소버튼 클릭
//---------------------------------------------------------------------------
//scwin.lfn_Cancel = function() {
scwin.cm_btnCancel = function() { //완료
    //Tab_Step1.Ds_Pibo.FireEvent = false; //이벤트 발생이 안되도록 셋팅
    var dsListEvArray = Tab_Step1.util.getDataListEvent(Tab_Step1.Ds_Pibo);
	util.removeAllDataListEvent(Tab_Step1.Ds_Pibo);

    Tab_Step1.runOnCellPosChanged = false;
    Tab_Step1.wconv.clear(Tab_Step1.Ds_Pibo);
    Tab_Step1.wconv.clear(Tab_Step1.Ds_Pibo_BackUp);
    Tab_Step1.wconv.clear(Tab_Step1.Ds_Trty);
    Tab_Step1.wconv.clear(Tab_Step1.DsWs_Plan);
    Tab_Step1.wconv.clear(Tab_Step1.Ds_LTIDA00);
    Tab_Step1.util.appendRow(Tab_Step1.Ds_LTIDA00);
    Tab_Step1.wconv.clear(Tab_Step1.DsWs_InsurTermPaymTerm);
    edt_sGdCdNm.setValue("");
    medt_PlanNo.setValue("");

    //청약일자,보험기간 오늘날짜 세팅
    Tab_Step1.cal_sSsrtDate.setValue(sToday);
    Tab_Step1.cal_sInsurStrtdate.setValue(sToday);
    //div0.focus();
    Tab_Step1.scwin.lfn_addRow();
    //Tab_Step1.Ds_Pibo.FireEvent = true;
    Tab_Step1.util.setDataListEvent(Tab_Step1.Ds_Pibo, dsListEvArray);
    Tab_Step1.runOnCellPosChanged = true;

    //체크 플래그
    Tab_Step1.modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
    Tab_Step1.CalcPremFlag = false;
};


//---------------------------------------------------------------------------
// function 명 : lfn_sangpum(obj)
// 내용        : 상품선택Button Click시 처리
//---------------------------------------------------------------------------
scwin.lfn_sangpum = function(obj) { //완료

    var promise = Promise.resolve();
    
    var nJobGradCdFlag = 0; //급수 선택 여부
    var nDrveFlagCdFlag = 0; //운전여부 플래크
    
    // 연금 간편설계 화면 피보험자운전용도코드 예외처리
    if (Tab_Step1.Ds_Pibo.getCellData(0, "sDrveFlagCd").length == 0) {
        Tab_Step1.Ds_Pibo.setCellData(0, "sDrveFlagCd", "1"); // 1-자가용
    }
    
    nJobGradCdFlag = Tab_Step1.Ds_Pibo.getCellData(0, "sJobGradCd").length;
    nDrveFlagCdFlag = Tab_Step1.Ds_Pibo.getCellData(0, "sDrveFlagCd").length;
    
    if (Tab_Step1.Ds_Pibo.getRowCount() != 0 && nJobGradCdFlag > 0 && nDrveFlagCdFlag > 0) {
        // 업무보고서분류코드-연금으로 연금상품 조회 위해서 세팅(7:연금)
        promise = promise.then(function(rtnVal) {
            var indata = {};
			indata.sJupiCode			= Tab_Step1.Ds_Pibo.getCellData(0, "sInrpsCd")
			indata.sPsnGroupFlag		= (Tab_Step1.chk_sPsnGroupFlgcd.getValue()=="1") ? "2" : "";
			// 업무보고서분류코드-연금으로 연금상품 조회 위해서 세팅(7:연금)
			indata.sBunsMetdDocuClsfCd	= "7";

            var popInfo = {"width":715,
   	                   "height":380,
   	                   "indata":indata,
   	                   "callback"  : "scwin.cbsc008pCallback",
					   "title"     : "가입상품조회 및 선택"
   	                  };

   	    	return wprom.popupOpen("/ui/cbsc/CBSC008P.xml", popInfo);//상품  
            
        });
        promise = promise.then(function(result) {
            /*wprom.popupOpen(가이드참조)*/
            /*
            if (wconv.Length(result) != 0) {
                var goodsRetArr = wconv.split(result, "^");
                edt_sGdCd.setValue(goodsRetArr[0]); // 상품코드
                edt_sGdCdNm.setValue(goodsRetArr[1]); // 상품명
                edt_sGnrzCd.setValue(goodsRetArr[2]); // 종형코드
                edt_sGnrzCdNm.setValue(goodsRetArr[3]); // 종형명
                if (edt_sGdCd.getValue() != "" || edt_sGdCd.getValue() != null) {
                    eval(div1.fn_setRule(edt_sGdCd.getValue()));
                    div1.nMaxPrem = "";
                }
            }
            */
        });
    } else if (nJobGradCdFlag == 0) {
        wprom.alert("피보험자 직업급수를 선택해 주세요.");
    } else if (nDrveFlagCdFlag == 0) {
        wprom.alert("피보험자 운전용도를 선택해 주세요.");
    }
    return promise;
};

scwin.cbsc008pCallback = function(result) { //완료

	if (util.isNull(result)) return;

	var goodsRetArr = result.split("^");
    edt_sGdCd.setValue(goodsRetArr[0]); // 상품코드
    edt_sGdCdNm.setValue(goodsRetArr[1]); // 상품명
    edt_sGnrzCd.setValue(goodsRetArr[2]); // 종형코드
    edt_sGnrzCdNm.setValue(goodsRetArr[3]); // 종형명
    if (!util.isNull(edt_sGdCd.getValue())) {
        Tab_Step1.scwin.fn_setRule(edt_sGdCd.getValue());
        Tab_Step1.nMaxPrem = "";
    }
}


//---------------------------------------------------------------------------
// function 명 : cmb_Plan_OnClick
// 내용        : 플랜선택시에 특약사항을 조회한다.
//---------------------------------------------------------------------------
scwin.cmb_Plan_OnClick = function(obj) { //완료 (미사용)
	
	return util.toDoAlert("cmb_Plan_OnClick");
	
    //특약사항조회
    fn_setTrty();
};


//---------------------------------------------------------------------------
// function 명 : lfn_TabChanging
// 내용        : 탭버튼 클릭시나 다음버튼 클릭시 처리
//---------------------------------------------------------------------------
scwin.lfn_TabChanging = function(obj, nOldIndex, nNewIndex) { //완료 (미사용)

	return util.toDoAlert("lfn_TabChanging");
	
    //첫번째탭은 0,1,2,3으로 index, obj는 Tab_Req
    //현재탭에서 저장해야할 데이터셋 처리
    //보험료계산
    if (nOldIndex == 0) {
        wconv.copy(DsWs_FlagCd, Tab_Req_Tab_Step1.DsWs_FlagCd); //고객구분코드(공통)
        wconv.copy(DsWs_Drive, Tab_Req_Tab_Step1.DsWs_Drive); //운전자급수코드(공통)
        wconv.copy(DsWs_CrtorRelnCd, Tab_Req_Tab_Step1.DsWs_CrtorRelnCd); //계약자관계(수익자)(공통)
        wconv.copy(DsWs_InsurTerm, Tab_Req_Tab_Step1.DsWs_InsurTerm); //납임기간코드(상품)
        wconv.copy(DsWs_PaymTerm, Tab_Req_Tab_Step1.DsWs_PaymTerm); //보험기간코드(상품)
        wconv.copy(DsWs_PaymCycl, Tab_Req_Tab_Step1.DsWs_PaymCycl); //납입주기코드(공통)
        //Ds_LTIDA03계약자는 화면오픈시 정보가 있으면 상위프레임 데이터셋에 담겨있음
        wconv.copy(Ds_LTIDA00, Tab_Req_Tab_Step1.Ds_LTIDA00); //계약기본정보
        wconv.copy(Ds_Pibo, Tab_Req_Tab_Step1.Ds_pibo); //피보험자정보
        wconv.copy(Ds_Trty, Tab_Req_Tab_Step1.Ds_Trty); //특약정보 
        wconv.copy(Dsws_InsAmt, Tab_Req_Tab_Step1.Dsws_InsAmt); //가입금액
        wconv.copy(Ds_LTIDA15, Tab_Req_Tab_Step1.Ds_LTIDA15); //인수제한정보
        //청약사항입력
    } else if (nOldIndex == 1) {
        wconv.copy(Ds_LTIDA03, Tab_Req_Tab_Step2.Ds_LTIDA03); //계약자정보
        wconv.copy(Ds_Pibo, Tab_Req_Tab_Step2.Ds_pibo); //피보험자정보
        wconv.copy(Ds_LTIDA15, Tab_Req_Tab_Step2.Ds_LTIDA15); //인수제한정보
        wconv.copy(DsWs_Reln, Tab_Req_Tab_Step2.DsWs_Reln); //Ds_Trty.copy(Tab_Req.Tab_Step2.Ds_Trty);//특약정보
        //계약요약
    } else if (nOldIndex == 2) {
        sYoyakTab = "Y";
        Ds_LTIDA00.setCellData(0, "sCmMetd", Tab_Req_Tab_Step3_cmb_sCmMetd.Value); //cmb_sCmMetd.Value = parent.Ds_LTIDA00.GetColumn(0, "sCmMetd");
    }

    //trace("Ds_LTIDA00=="+Ds_LTIDA00.SaveXML()); 
    //탭이동시 이동가능여부체크
    if (!scwin.lfn_TabChangeCheck(nOldIndex, nNewIndex))
        return false;

    //보험료계산
    if (nNewIndex == 0) {
        if (Tab_Req_Tab_Step1_grd_Pibo.enable == true) {
            btn_Goods.setDisabled(false);
        } else {
            btn_Goods.setDisabled(true);
        }


        //상태가변경될때 상위계약정보가 가지고 있으므로 하위로 복사한다.
        Tab_Req_Tab_Step1_Ds_LTIDA00.copy(Ds_LTIDA00); //계약기본정보
        Tab_Req_Tab_Step1_Ds_LTIDA15.copy(Ds_LTIDA15); //전산심사정보
        Tab_Req_Tab_Step1_Ds_Pibo.copy(Ds_Pibo); //전산심사정보
        Tab_Req_Tab_Step1.lfn_changeTrty(); //피보험자 선택이 변경되었을때 특약도 변경처리
        return true; //청약사항입력
    } else if (nNewIndex == 1) {
        btn_Goods.setDisabled(true);
        //Tab_Req.Tab_Step1.Ds_pibo.copy(Ds_pibo);//피보험자정보
        Tab_Req_Tab_Step2_Ds_LTIDA15.copy(Ds_LTIDA15); //전산심사정보		
        Tab_Req_Tab_Step2.lfn_Init();
        return true; //계약요약
    } else if (nNewIndex == 2) {
        btn_Goods.setDisabled(true);
        Tab_Req_Tab_Step3.lfn_Init();
        return true; //입금안내
    } else if (nNewIndex == 3) {
        if (gds.gFaceSalesYN == "Y" && wconv.Length(Ds_LTIDA00.getCellData(0, "sSrdoIssuDate")) == 0) {
            wprom.alert("청약서발행후에 입금가능합니다.");
            return false;
        }
        btn_Goods.setDisabled(true);
        Tab_Req_Tab_Step4.lfn_Init();
        var userID = gds.gUserID;
        if (wconv.Length(userID) == 0)
            userID = Ds_LTIDA00.getCellData(0, "sInptDler");
        util.insertColumn(Ds_RecvComm, [            [                "sCrNo",                "sCrNo",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sPlanNo",                "sPlanNo",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sBizCat",                "sBizCat",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "nCrChngNo",                "nCrChngNo",                "text"            ]        ]);
		util.insertColumn(Ds_RecvComm, [            [                "sDpsrCd",                "sDpsrCd",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sDpsrName",                "sDpsrName",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sCrtorCd",                "sCrtorCd",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sCrtorName",                "sCrtorName",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sDoer",                "sDoer",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "nApplPrem",                "nApplPrem",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "nRecpPrem",                "nRecpPrem",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sEmail",                "sEmail",                "text"            ]        ]);
        Ds_RecvComm.removeAll();
        util.appendRow(Ds_RecvComm);
        Ds_RecvComm.setCellData(0, "sCrNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); // 설계번호 
        Ds_RecvComm.setCellData(0, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); // 설계번호 
        Ds_RecvComm.setCellData(0, "sBizCat", "1"); // // 업무구분 : 1 초회수납(청약), 2 계속수납(계속분), 3 변경수납, 4 기타수납
        Ds_RecvComm.setCellData(0, "nCrChngNo", Ds_LTIDA00.getCellData(0, "nCrChngNo")); // 변경번호 
        Ds_RecvComm.setCellData(0, "sDpsrCd", Ds_LTIDA03.getCellData(0, "sCrtorCd")); // 예금주번호(계약자코드)
        Ds_RecvComm.setCellData(0, "sDpsrName", Ds_LTIDA03.getCellData(0, "sCrtorName")); //예금주명 
        Ds_RecvComm.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd")); // 계약자번호(계약자코드)
        Ds_RecvComm.setCellData(0, "sCrtorName", Ds_LTIDA03.getCellData(0, "sCrtorName")); //계약자명
        Ds_RecvComm.setCellData(0, "sDoer", userID); //처리자 
        Ds_RecvComm.setCellData(0, "nApplPrem", Ds_LTIDA00.getCellData(0, "nApplPrem")); // 영수보험료(적용보험료)
        Ds_RecvComm.setCellData(0, "nRecpPrem", Ds_LTIDA00.getCellData(0, "nApplPrem")); // 영수보험료(적용보험료)
        //gDs_LinkArg.clear(); 		//gDs_LinkArg.InsertRow(0);
        util.insertColumn(Ds_RecvComm, [            [                "sBizCat",                "sBizCat",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sProcCat",                "sProcCat",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sPayCnt",                "sPayCnt",                "text"            ]        ]);
        util.insertColumn(Ds_RecvComm, [            [                "sRecpDate",                "sRecpDate",                "text"            ]        ]);
        Ds_RecvComm.setCellData(0, "sBizCat", "1");
        Ds_RecvComm.setCellData(0, "sProcCat", "1"); // 처리구분 : 1 정상분, 2 추가납입분 
        Ds_RecvComm.setCellData(0, "sPayCnt", "1"); // 입금건수 
        Ds_RecvComm.setCellData(0, "sRecpDate", sToday); // 영수일자(오늘날짜) 
        Ds_RecvComm.setCellData(0, "sEmail", Ds_LTIDA03.getCellData(0, "sEmail1")); //약관발송시이메일(계약자이메일)
        Tab_Req_Tab_Step4_Ds_RecvComm.copy(Ds_RecvComm);

        //trace("Ds_RecvComm=="+Ds_RecvComm.SaveXML());	
        //trace("tab_Step4.Ds_RecvComm=="+Tab_Req.Tab_Step4.Ds_RecvComm.SaveXML());
        Tab_Req_Tab_Step4.doInit();
        return true;
    }
};



//---------------------------------------------------------------------------
// function 명 : lfn_TabChangeCheck
// 내용        : 탭이동시 이동가능여부 체크
//---------------------------------------------------------------------------
scwin.lfn_TabChangeCheck = function(nOldIndex, nNewIndex, fGubunFlag) { //완료 (미사용)
	
	var fFlag = true;
    //40:보험료산출(단체)
    //50:청약사항입력(고지사항)/51:심사대상/52:인수요청/53:진단심사중/54:실사심사중
    //55:인수심사중/56:인수승인/57:인수불가/58:조건부승인
    //60:계약요약
    if (wconv.length(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0) {
        wprom.alert("보험료계산을 처리해주세요.");
        fFlag = false; //tabChangeFlag = false;      // 메인탭 체인지 플래그
        //trace("sPlanProgRankCd.length = 0");		
        //00 완료 90 수납대기일경우 화면 비활성화 처리함
    } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 || wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
        //화면항목비활성화처리
        scwin.lfn_ComponentEnable(Tab_Step1, "", false);
        scwin.lfn_ComponentEnable(Tab_Step2, "", false);
        scwin.lfn_ComponentEnable(Tab_Step3, "", false);
        // 장기보험고도화 - 연금상품 div 비활성화
        Tab_Step1.cmb_AnntOpnAgeCd.setDisabled(true); // 연금개시나이
        Tab_Step1.cmb_AnntPymTermCd.setDisabled(true); // 연금지급기간
        Tab_Step1.cmb_AnntPymTypeCd.setDisabled(true); // 연금지급형태
        Tab_Step1.cmb_AnntPymCyclCd.setDisabled(true); // 연금지급주기
        fFlag = true; //tabChangeFlag = true; 
        //trace("sPlanProgRankCd="+Ds_LTIDA00.GetColumn(0,"sPlanProgRankCd"));			
    } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 20) {
        wprom.alert("보험료계산을 처리해주세요.");
        fFlag = false; //trace("sPlanProgRankCd="+Ds_LTIDA00.GetColumn(0,"sPlanProgRankCd"));		
    } else {
        if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
            //화면항목비활성화처리
            scwin.lfn_ComponentEnable(Tab_Step1, "", false);
            scwin.lfn_ComponentEnable(Tab_Step2, "", false);
            if (wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 57 || wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 58 ||
            	wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 || wconv.toNumber(DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
                scwin.lfn_ComponentEnable(Tab_Step3, "", false);
            }

            // 장기보험고도화 - 연금상품 div 비활성화
            Tab_Step1.cmb_AnntOpnAgeCd.setDisabled(true); // 연금개시나이
            Tab_Step1.cmb_AnntPymTermCd.setDisabled(true); // 연금지급기간
            Tab_Step1.cmb_AnntPymTypeCd.setDisabled(true); // 연금지급형태
            Tab_Step1.cmb_AnntPymCyclCd.setDisabled(true); // 연금지급주기
        }
        if (nNewIndex == 1) {
            //간편설계후 청약진행시 고객등록 확인
            for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
                if (wconv.length(Ds_Pibo.getCellData(i, "sAddrFlgcd")) <= 0) {
                    wprom.alert("고객등록을 먼저 해주세요");
                    fFlag = false;
                    return fFlag;
                }

                //간편산출에서 넘어왔을때 고객등록후 보험료산츨을 다시하게 유도
                if (wconv.length(Tab_Step1.Ds_Pibo_BackUp.getCellData(i, "sAddrFlgcd")) <= 0) {
                    wprom.alert("계약사항이 변경되었습니다.\n 보험료계산을 처리해주세요.");
                    Tab_Step1.btn_CalcPrem.focus();
                    fFlag = false;
                    return fFlag;
                }
            }
        }

        //계약요약,입금안내
        if (((nNewIndex == 2 || nNewIndex == 3)) && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 20) {
            wprom.alert("청약사항입력을 처리해주세요.");
            fFlag = false; //QA여부 체크 
        } else if (((nNewIndex == 2 || nNewIndex == 3)) && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) > 44 && 
        				wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 49 && (DsWs_PrdAttr.getCellData(0, "QAObjtYn") == "Y")) {
            wprom.alert("QA요청 대상건입니다.");
            fFlag = false; //계약요약,입금안내		
        } else if (((nNewIndex == 2 || nNewIndex == 3)) && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) > 50 && 
        				wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 56) {
            wprom.alert("인수심사건은 진행할수 없습니다.");
            if (sScanObjtYn != "Y") {
                var sameCrtorInrps = Tab_Step2.lfn_sameCrtorInrps();
                if (sameCrtorInrps == false) {
                    wprom.alert("계피상이한 계약으로 서면동의서 첨부하여 주시기 바랍니다.");
                }
            }
            fFlag = false; //계약요약,입금안내 57:인수불가/58:조건부승인
        } else if (((nNewIndex == 2 || nNewIndex == 3)) && ((wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 57 || 
        				wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 58))) {
            wprom.alert("인수불가 계약입니다.");
            fFlag = false;
        } else if (nNewIndex == 3 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) < 60) {
            wprom.alert("계약요약탭을 선택해주세요.");
            fFlag = false;
        }
    }


    //보험료계산화면에서 이동하는경우 데이터 변경여부체크
    if (nOldIndex == 0 && fFlag) {
        if (Tab_Step1.modifyFlag) {
            wprom.alert("계약사항이 변경되었습니다.\n 보험료계산을 처리해주세요.");
            Tab_Step1.btn_CalcPrem.focus();
            fFlag = false;
            return fFlag;
        }

        //밸리데이션 체크
        if (Tab_Step1.scwin.lfn_ValidationCheck("all")) {
            return false;
        }
        if (Tab_Step1.modifyFlag) {
            wprom.alert("계약사항이 변경되었습니다.\n 보험료계산을 처리해주세요.");
            Tab_Step1.btn_CalcPrem.focus();
            fFlag = false;
            return fFlag;
        }
    } else if (nOldIndex == 1 && fFlag) {
        //고지사항사항 입력여부
        var sPiRqstYn = true;
        for (var i = 0; i < Tab_Step2.Ds_Pibo.getRowCount(); i++) {
            if (util.isNull(Tab_Step2.Ds_Pibo.getCellData(i, "sRqstYn"))) {
                sPiRqstYn = false;
            }
        }

        //고지사항이 입력된 후에는 청약사항 체크해야함. 
        if (sPiRqstYn == true || nNewIndex >= nOldIndex) {
            //밸리데이션 체크
            if (Tab_Step2.scwin.lfn_ValidationCheck(fGubunFlag)) {
                return false;
            }
            if (Tab_Step2.modifyFlag) {
                wprom.alert("계약사항이 변경되었습니다.\n 다음버튼을 눌러주세요.");
                Tab_Step2.btn_Next.focus();
                fFlag = false;
            }
        }
    }

    return fFlag;
};

//---------------------------------------------------------------------------
// function 명 : lfn_ProgRankCd
// 내용        : 간편산출 단계 확인
//---------------------------------------------------------------------------
scwin.lfn_ProgRankCd = function() { //완료
	wconv.clear(DsWs_RankCd);
    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getProgRankCd", "", "");
    MethodObj.setId("getProgRankCd");
    MethodObj.setUrl("/contract/CBSC075MController.do");
    MethodObj.setParam("sPlanNo", medt_PlanNo.getValue()); //설계번호
    MethodObj.setXPath("//*/LTIDA00");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
    
    util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
    
	if (DsWs_Warning.getRowCount() != 0){
		alert(DsWs_Warning.getCellData(0, "msg"));
		return;
	}else{
		util.jSonDsCreate(_tranSync.getDsJson("LTIDA00"), "DsWs_RankCd", "Y");
		sSimpleProg = DsWs_RankCd.getCellData(0, "sSimpleProg"); // 피보험자 등록 여부 확인
	}
};

//---------------------------------------------------------------------------
// function 명 : lfn_sPlanNoChar
// 내용        : 설계번호를 변경하는지 체크
//---------------------------------------------------------------------------
//scwin.lfn_sPlanNoChar = function(obj, strPreText, nChar, strPostText, nLLParam, nHLParam) {
scwin.lfn_sPlanNoChar = function(e) {
    //trace(obj.value);
    sPlanNoChFlag = true;
};

//---------------------------------------------------------------------------
// function 명 : lfn_sPlannNoKillFocus
// 내용        : 설계번호 변경시 밸리데이션 체크
//---------------------------------------------------------------------------
scwin.lfn_sPlannNoKillFocus = function(e) {
	var obj = WebSquare.util.getComponentById(this.id);
    if (wconv.length(obj.getValue()) != 12) {
        wprom.alert("설계번호가 정확하지 않습니다.");
        //obj.focus();
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_sPlanNoChangeCheck
// 내용        : 설계번호 변경시 밸리데이션 체크
//---------------------------------------------------------------------------
scwin.lfn_sPlanNoChangeCheck = function() { //완료 (미사용)
	
	return util.toDoAlert("lfn_sPlanNoChangeCheck");
	
    if (wconv.Length(sPlanNoBack) > 0) {
        //두설계번호가 같으면
        if (medt_PlanNo.getValue() == sPlanNoBack) {
            //화면 활성화
            sPlanNoChFlag = false;
        } else {
            //화면 비활성화
            scwin.lfn_ComponentEnable(Tab_Req.Tab_Step1, "", false);
            wprom.alert("설계번호를 변경하셨습니다.\n 조회버튼을 눌러주세요");
            sPlanNoChFlag = true;
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_sPlanNoChange
// 내용        : 청약번호를 변경하는지 체크
//---------------------------------------------------------------------------
scwin.lfn_sPlanNoChange = function(obj, strPreText, nChar, strPostText, nLLParam, nHLParam) { //완료 (미사용)
	
	return util.toDoAlert("lfn_sPlanNoChange");
	
    //trace(obj.value);
    sPlanNoChFlag = true;
};


//---------------------------------------------------------------------------
// function 명 : setInsrdID
// 내용        : 주민번호받았을때처리(콜센터)
//---------------------------------------------------------------------------
scwin.setInsrdID = function(sInsrdId, sGdCd) { //완료 (미사용)

	return util.toDoAlert("setInsrdID");

    sIsdCsmNum = sInsrdId; // 피보험자 주민번호
    sJupiCode = sInsrdId; // 피보험자 주민번호
    sIsdNam = sInsrdNm; // 피보험자 이름	
    if (wconv.Length(sGdCd) > 0) {
        edt_sGdCd.setValue(sGdcd);
        if (sGdcd == "2700"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험");	// 2700-연금저축손해보험 The큰행복연금보험
		}else if (sGdcd == "2703"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험(1501)");	
		}else if (sGdcd == "2705"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험(1508)");	
		}else if (sGdcd == "2707"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험(1601)");
		}else if (sGdcd == "2710"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험(1701)");
		}else if (sGdcd == "2712"){
			edt_sGdCdNm.setValue("연금저축손해보험 The큰행복연금보험(1801)"); // 2018 상품개정
		}	
        edt_sGnrzCd.setValue("00");
    }
    //Tab_Step1.chk_sPsnGroupFlgcd.Visible = false;
};

//---------------------------------------------------------------------------
// function 명 : setApplyNo
// 내용        : 계약번호받았을때처리(콜센터)
//---------------------------------------------------------------------------
scwin.setApplyNo = function(sApplyNo) { //완료 (미사용)

	return util.toDoAlert("setApplyNo");
	
    sBizCode = sApplyNo;
    medt_PlanNo.setValue(sBizCode);
    //Tab_Step1.chk_sPsnGroupFlgcd.Visible = false;
};


//---------------------------------------------------------------------------
// function 명 : lfn_tabInit(1,2,3,4,all,copy)
// 내용        : tab구분별 initialize
//---------------------------------------------------------------------------
scwin.lfn_tabInit = function(obj) { //완료 (미사용)

	return util.toDoAlert("lfn_tabInit");

    Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "");
    Tab_Req_Tab_Step2_edt_insu.Text = "";
};

//---------------------------------------------------------------------------
// function 명 : lfn_Exit()
// 내용        : 종료버튼 클릭시 처리
//---------------------------------------------------------------------------
scwin.lfn_Exit = function(obj) { //완료 (미사용)
	
	return util.toDoAlert("lfn_Exit");
	
    this.close;
};

//---------------------------------------------------------------------------
// function 명 : lfn_initConuReslt()
// 내용        : 품의결과 화면지우기
//---------------------------------------------------------------------------
scwin.lfn_clearConuReslt = function() { //완료
    //2011.04.25 김상운추가(품의결과 내용 삭제)
    stc_ConuReslt.setValue("");
    //Tab_Step2.edt_insu.setValue("");
    //Tab_Step2.edt_UdrtkLmitCnt.setValue("");
};

//---------------------------------------------------------------------------
// function 명 : lfn_RtnAmt
// 내용        : 발급물팝업 호출시 경과기간별 예상환급금조회 산출처리
//---------------------------------------------------------------------------
scwin.lfn_RtnAmt = function(obj) { //완료 (미사용)
	
	wconv.clear(DsWs_RtnAmt);
    var MethodObj = new callService("com.inswave.longterm.ssr.sst.task.DBB200Task", "getExptRtnAmtList", "", "");
	MethodObj.setId("DOBJ_RtnAmt");
	MethodObj.setParam("sPlanNo", medt_PlanNo.getValue());
	MethodObj.setParam("sBunsMetdDocuClsfCd", "7"); //장기보험고도화 - 연금상품 추가
	MethodObj.setParam("nRealInsurTerm", Tab_Step1.Ds_LTIDA00.getCellData(0, "nRealInsurTerm"));
	MethodObj.setParam("nRealPaymTerm", Tab_Step1.Ds_LTIDA00.getCellData(0, "nRealPaymTerm"));
	if (util.getBoolean(Tab_Step1.chk_sPsnGroupFlgcd.getValue()) == true) {
        MethodObj.setParam("sPsnGroupFlgcd", "20");
    } else {
        MethodObj.setParam("sPsnGroupFlgcd", "10");
    }
    MethodObj.setUrl("/contract/CBSC075MController.do");
	MethodObj.setXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();

	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
	if (DsWs_Warning.getRowCount() != 0){
		alert(DsWs_Warning.getCellData(0, "msg"));
		return;
	}
};

//**************************************************************************************************
// 취급자 조회 팝업
//**************************************************************************************************
scwin.btn_Pop_Search = function(obj) {
	
	var promise = Promise.resolve();
    var result = "";
    //권한있어야 취급자변경가능
    if (nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "22040") || nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34003") ||
    		nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34014")) {
    	promise = promise.then(function(rtnVal) {
	    	var indata = {};
    		var popInfo = {"width":655,
    	                   "height":430,
    	                   "indata":indata,
    	                   //"callback"  : scwin.popupCallback,
						   "title"     : "사원찾기"
    	                  };
    	    return wprom.popupOpen("/ui/cbso/CBSO015P.xml", popInfo);//개인고객 등록        
		});
        promise = promise.then(function(rst) {
            if (!util.isNull(rst)) {
                var arrRst = rst.split("^");
                //edt_empCode.Text = arrRst[0];	//설계사코드		
                //edt_empName.Text = arrRst[1];	//이름
                result = scwin.lfn_getDoerInfo(arrRst[0]);
                if (!result) {
                    wprom.alert("선택 가능한 취급자(사용인)가 아닙니다.");
                    return false;
                }
                Tab_Step1.modifyFlag = true;
            }
        });
    }
    return promise;    
};

//---------------------------------------------------------------------------
// function 명 : lfn_goChung
// 내용        : 청약화면으로 이동
//---------------------------------------------------------------------------
scwin.lfn_goChung = function(obj) {

    if (wconv.length(medt_PlanNo.getValue()) <= 0) {
        wprom.alert("보험료계산 후 청약하시기 바랍니다.");
        return;
    }
    
    var sVvalue = medt_PlanNo.getValue(); //청약번호
    
    //if (parent.Id == "global") {
    if (wprom.isPopup()) {
        //UserNotify(3, sVvalue); // 기간계 시스템에서는 호출하지 않음. 호출하게될 경우 C020.html 파일 필요함
    } else {
    	var oDsJson=[{
			 "sInsuredNo" : sVvalue
		}];
		gds.gDs_LinkArg.setJSON(oDsJson);
		gfn_OpenLinkPage("CBSC075M"); //장기보험고도화 - 연금청약 화면으로 이동
    	/*
        var arg = "sBizCode=" + wconv.quote(sVvalue);
        gds.gDs_LinkArg.removeAll();
        var insRow = util.insertRow(gds.gDs_LinkArg, 0);
        gds.gDs_LinkArg.setCellData(0, "sInsuredNo", sVvalue);
        gfn_OpenLinkPage("C010"); //장기보험고도화 - 연금청약 화면으로 이동
        //gfn_OpenLinkPage("B010"); //8500
        */
    }
};

//---------------------------------------------------------------------------
// function 명 : 신규
// 내용        : 사용인 없는경우 취급자 정보 Return
//---------------------------------------------------------------------------
scwin.lfn_GetDoerUser = function() { //완료
	return (wconv.trim(edt_sDoerUser.getValue()) == "") ? edt_sDoer.getValue() : edt_sDoerUser.getValue();
}


scwin.id_faq_onclick = function() {
	var sGdCd = edt_sGdCd.getValue();
	
	if (wconv.length(wconv.trim(sGdCd)) > 0) { 
		var oDsJson=[{"sGdCd" : sGdCd}];
		gds.gDs_LinkArg.setJSON(oDsJson);
		gfn_OpenLinkPage("CBSC004M");
	} else {
		alert("상품을 선택하세요.");
	}
};

]]></script>
	</head>
	<body>
		<xf:group class="contentWrap" id="" style="">
			<w2:wframe id="" style="" initScript="scwin.wfTitleFavInit();" src="/cm/common/wf_titleFav.xml"></w2:wframe>
			
			<!-- group:s -->
			<xf:group id="" style="" class="section">
				<xf:group id="" style="" class="tbl_search">
					<xf:group id="" style="" adaptive="" class="w2tb tbl_sc" adaptiveThreshold="" tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup">
							<xf:group style="width:80px" tagname="col"></xf:group>
							<xf:group style="width:290px" tagname="col"></xf:group>
							<xf:group style="width:80px" tagname="col"></xf:group>
							<xf:group style="width:110px" tagname="col"></xf:group>
							<xf:group style="width:80px;" tagname="col"></xf:group>
							<xf:group style="width:110px" tagname="col"></xf:group>
							<xf:group style="width:80px" tagname="col"></xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group tagname="tr" style="">
							<xf:group style="" class="w2tb_th" tagname="th">상품명</xf:group>
							<xf:group style="" class="w2tb_td" tagname="td">
								<xf:group class="input_btn icon prot" style="">
									<xf:input id="edt_sGdCdNm" ref="" style="" disabled="true"></xf:input>
									<w2:anchor class="" ev:onclick="scwin.lfn_sangpum" id="btn_Goods" outerDiv="" style="">
										<xf:label><![CDATA[저장]]></xf:label>
									</w2:anchor>
								</xf:group>
							</xf:group>
							<xf:group style="" class="w2tb_th" tagname="th">상품종형</xf:group>
							<xf:group style="" class="w2tb_td" tagname="td">
								<xf:input id="edt_sGnrzCdNm" style="" disabled="true"/>
							</xf:group>
							<xf:group style="" class="w2tb_th" tagname="th">청약일자</xf:group>
							<xf:group style="" class="w2tb_td" tagname="td">

								<w2:inputCalendar calendarValueType="yearMonthDate" focusOnDateSelect="false" footerDiv="false" id="cal_sSsrtDate" renderDiv="true" renderType="component" rightAlign="false"
									style="width:100px" weekStartsOn="0" readOnly="true">
								</w2:inputCalendar>
							</xf:group>
							<xf:group style="" class="w2tb_th" tagname="th">청약번호</xf:group>
							<xf:group style="" class="w2tb_td" tagname="td">
								<xf:input id="medt_PlanNo" style="width:200px" disabled="" displayFormat="#-####-#######" ev:onkeydown="scwin.lfn_sPlanNoChar" readOnly="true"/>
							</xf:group>
						</xf:group>
					</xf:group>
					<w2:anchor id="btn_Search" style="" ev:onclick="scwin.lfn_Search_Async" class="btn_sh" outerDiv="true" disabled="">
						<xf:label><![CDATA[조회]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
			<!-- group:e -->
			
	    	<w2:iframe id="Tab_Req_Step1" src="/ui/cbsc/CBSC076S.xml" class="wf_wrap" ev:oniframeload="scwin.iframeInit"></w2:iframe>
			
			<!-- group:s -->
	    	<xf:group id="" style="" class="section">
	    		<xf:group id="" style="" class="bluebox">
		    			<xf:group id="" style="" class="box_wrap">
		    				<xf:group class="fl" id=""
		    					style="width:150px;">
		    					<w2:anchor class="btn_nml1 bul" ev:onclick="scwin.id_faq_onclick" id="id_faq" outerDiv="true" style="">
			    					<xf:label>상품자료</xf:label>
			    				</w2:anchor>
		    				</xf:group>
		    				<xf:group id="" style="" class="fl">
		    					<w2:textbox label="소속" id=""
		    						class="txt_tit ml0" tagname="span">
		    					</w2:textbox>
		    					<xf:input disabled="true" id="edt_sDoerCentrName" ref=""
		    						style="width:150px">
		    					</xf:input>
		    				</xf:group>
		    				<xf:group id="" style="" class="fl">
		    					<w2:textbox label="취급자" id=""
		    						class="txt_tit" tagname="span">
		    					</w2:textbox>
		    					<xf:input disabled="true" id="edt_sDoer" ref=""
		    						style="width:75px;">
		    					</xf:input>
		    					<xf:input disabled="true" id="edt_sDoerName" ref=""
		    						style="width:75px">
		    					</xf:input>
		    				</xf:group>
		    				<xf:group id="" style="" class="fl">
		    					<w2:textbox label="사용인" id=""
		    						class="txt_tit" tagname="span">
		    					</w2:textbox>
		    					<xf:input disabled="true" id="edt_sDoerUser" ref=""
		    						style="width:75px;">
		    					</xf:input>
		    					<xf:input disabled="true" id="edt_sDoerUserName" ref=""
		    						style="width:75px">
		    					</xf:input>
		    					<w2:anchor id="btn_Pop_Search" ev:onclick="scwin.btn_Pop_Search"
		    						class="btn_search" outerDiv="false">
		    						<xf:label><![CDATA[검색]]></xf:label>
		    					</w2:anchor>
		    				</xf:group>
		    			</xf:group>
	    		</xf:group>
	    	</xf:group>
			<!-- group:e -->
			
			<!-- group:s -->
			<!-- group:e -->			
			  
			
			<xf:input id="edt_sGdCd"
				style="position: absolute ;left:158px;top:0px;width: 50px;height: 20px;display: none">
			</xf:input>
			<xf:input id="edt_sGnrzCd"
				style="position: absolute ;left:216px;top:0px;width: 50px;height: 20px;display: none;">
			</xf:input>
			<xf:input id="edt_sDoerCentrCd"
				style="position: absolute ;left:288px;top:738px;width: 50px;height: 20px;display: none;">
			</xf:input>
			<w2:textbox label="" id="stc_ConuReslt"
    			style="position: absolute ;left:912px;top:51px;width:63px;height:27px;display: none;">
    		</w2:textbox>
			
		</xf:group>
		
			
    		
	</body>
</html>