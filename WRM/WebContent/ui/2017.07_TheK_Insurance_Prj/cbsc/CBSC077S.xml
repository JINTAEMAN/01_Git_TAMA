<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<!-- 
	       ###################################################
	        파일명 : CBSC077S.xml
	        프로그램명 : 연금가입설계 2번 화면
	        설 명 :  연금가입설계 화면
	        작성자 : 이경일
	        작성일 : 2017.10.23
	
	        수정일자            수정자                  수정내용
	       ==================================================
	       2017.10.23       이경일       최초작성
	       ###################################################
	    -->
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
            <w2:dataCollection>
                <w2:dataList baseNode="list" id="Ds_LTIDA03" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sCrtorFlgcd" name="sCrtorFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"></w2:column>
                        <w2:column dataType="text" id="sCrtorName" name="sCrtorName"></w2:column>
                        <w2:column dataType="text" id="nCrtorAge" name="nCrtorAge"></w2:column>
                        <w2:column dataType="text" id="sCrtorSexFlag" name="sCrtorSexFlag"></w2:column>
                        <w2:column dataType="text" id="sCrtorCstId" name="sCrtorCstId"></w2:column>
                        <w2:column dataType="text" id="nCstChngSeqno" name="nCstChngSeqno"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpRelnCd" name="sEndPftbpRelnCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCd" name="sEndPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpName" name="sEndPftbpName"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCntad" name="sEndPftbpCntad"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntFlagCd" name="sAsmtAgntFlagCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntRelnCd" name="sAsmtAgntRelnCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCd" name="sAsmtAgntCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntName" name="sAsmtAgntName"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCntad" name="sAsmtAgntCntad"></w2:column>
                        <w2:column dataType="text" id="sZip1" name="sZip1"></w2:column>
                        <w2:column dataType="text" id="sZip2" name="sZip2"></w2:column>
                        <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                        <w2:column dataType="text" id="sAdrsAdd" name="sAdrsAdd"></w2:column>
                        <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                        <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                        <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                        <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                        <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                        <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                        <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                        <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                        <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                        <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                        <w2:column dataType="text" id="RvadAddr" name="RvadAddr"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpYn" name="sEnntmPftbpYn"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntYn" name="sAsmtAgntYn"></w2:column>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"></w2:column>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpCd" name="sInsurPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpName" name="sInsurPftbpName"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpCntad" name="sInsurPftbpCntad"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfmRgcr" name="sRlnmCnfmRgcr"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfmDate" name="sRlnmCnfmDate"></w2:column>
                        <w2:column dataType="text" id="sRlnmCnfm" name="sRlnmCnfm"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <nAddrChngSeq></nAddrChngSeq>
                            <nCrChngNo></nCrChngNo>
                            <nCrtorAge></nCrtorAge>
                            <nCstChngSeqno></nCstChngSeqno>
                            <nMailRvadChngSeq></nMailRvadChngSeq>
                            <nTelnoChngSeq></nTelnoChngSeq>
                            <RvadAddr></RvadAddr>
                            <sAddrFlgcd></sAddrFlgcd>
                            <sAdrs1></sAdrs1>
                            <sAdrsAdd></sAdrsAdd>
                            <sAsmtAgntCd></sAsmtAgntCd>
                            <sAsmtAgntCntad></sAsmtAgntCntad>
                            <sAsmtAgntFlagCd></sAsmtAgntFlagCd>
                            <sAsmtAgntName></sAsmtAgntName>
                            <sAsmtAgntRelnCd></sAsmtAgntRelnCd>
                            <sAsmtAgntYn></sAsmtAgntYn>
                            <sCellPhone1></sCellPhone1>
                            <sCellPhone2></sCellPhone2>
                            <sCellPhone3></sCellPhone3>
                            <sCrtorCd></sCrtorCd>
                            <sCrtorCstId></sCrtorCstId>
                            <sCrtorFlgcd></sCrtorFlgcd>
                            <sCrtorName></sCrtorName>
                            <sCrtorSexFlag></sCrtorSexFlag>
                            <sCstFlgcd></sCstFlgcd>
                            <sEmail1></sEmail1>
                            <sEndPftbpCd></sEndPftbpCd>
                            <sEndPftbpCntad></sEndPftbpCntad>
                            <sEndPftbpName></sEndPftbpName>
                            <sEndPftbpRelnCd></sEndPftbpRelnCd>
                            <sEnntmPftbpFlagCd></sEnntmPftbpFlagCd>
                            <sEnntmPftbpYn></sEnntmPftbpYn>
                            <sFax1></sFax1>
                            <sFax2></sFax2>
                            <sFax3></sFax3>
                            <sHomeTel1></sHomeTel1>
                            <sHomeTel2></sHomeTel2>
                            <sHomeTel3></sHomeTel3>
                            <sInptDler></sInptDler>
                            <sInptDlerIP></sInptDlerIP>
                            <sInsurPftbpAsmtYn></sInsurPftbpAsmtYn>
                            <sInsurPftbpCd></sInsurPftbpCd>
                            <sInsurPftbpCntad></sInsurPftbpCntad>
                            <sInsurPftbpFlagCd></sInsurPftbpFlagCd>
                            <sInsurPftbpName></sInsurPftbpName>
                            <sInsurPftbpRelnCd></sInsurPftbpRelnCd>
                            <sMailRvadAddrFlagCd></sMailRvadAddrFlagCd>
                            <sOfficeTel1></sOfficeTel1>
                            <sOfficeTel2></sOfficeTel2>
                            <sOfficeTel3></sOfficeTel3>
                            <sPlanNo></sPlanNo>
                            <sRlnmCnfm></sRlnmCnfm>
                            <sRlnmCnfmDate></sRlnmCnfmDate>
                            <sRlnmCnfmInfoRvMatt1></sRlnmCnfmInfoRvMatt1>
                            <sRlnmCnfmInfoRvMatt2></sRlnmCnfmInfoRvMatt2>
                            <sRlnmCnfmPstnFlgcd></sRlnmCnfmPstnFlgcd>
                            <sRlnmCnfmRgcr></sRlnmCnfmRgcr>
                            <sZip1></sZip1>
                            <sZip2></sZip2>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIDA15" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nSeqno" name="nSeqno"></w2:column>
                        <w2:column dataType="text" id="sCcndFlagCd" name="sCcndFlagCd"></w2:column>
                        <w2:column dataType="text" id="sCcndFlagName" name="sCcndFlagName"></w2:column>
                        <w2:column dataType="text" id="sCcndResno" name="sCcndResno"></w2:column>
                        <w2:column dataType="text" id="sCcndName" name="sCcndName"></w2:column>
                        <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                        <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                        <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                        <w2:column dataType="text" id="sJugmAuthName" name="sJugmAuthName"></w2:column>
                        <w2:column dataType="text" id="sJugmGradName" name="sJugmGradName"></w2:column>
                        <w2:column dataType="text" id="sJugmCont" name="sJugmCont"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                        <w2:column dataType="text" id="sConuObjtYn" name="sConuObjtYn"></w2:column>
                        <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                        <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="nOthrInsurSeqno" name="nOthrInsurSeqno"></w2:column>
                        <w2:column dataType="text" id="nGroupInrpsSeqno" name="nGroupInrpsSeqno"></w2:column>
                        <w2:column dataType="text" id="sRqstCd" name="sRqstCd"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_TaxPrfrYn" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="value" name="value"></w2:column>
                        <w2:column dataType="text" id="text" name="text"></w2:column>
                        <w2:column dataType="text" id="sSvGdCd" name="sSvGdCd"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <sSvGdCd></sSvGdCd>
                            <text><![CDATA[세금우대]]></text>
                            <value><![CDATA[Y]]></value>
                        </w2:row>
                        <w2:row>
                            <sSvGdCd></sSvGdCd>
                            <text><![CDATA[비과세]]></text>
                            <value><![CDATA[B]]></value>
                        </w2:row>
                        <w2:row>
                            <sSvGdCd></sSvGdCd>
                            <text><![CDATA[미가입]]></text>
                            <value><![CDATA[N]]></value>
                        </w2:row>
                        <w2:row>
                            <sSvGdCd><![CDATA[36]]></sSvGdCd>
                            <text><![CDATA[연금저축]]></text>
                            <value><![CDATA[6]]></value>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_PaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_InsurTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="Ds_long_mPlr" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCustNo" name="sCustNo"></w2:column>
                        <w2:column dataType="text" id="sCstId" name="sCstId"></w2:column>
                        <w2:column dataType="text" id="nSeqNo" name="nSeqNo"></w2:column>
                        <w2:column dataType="text" id="sName" name="sName"></w2:column>
                        <w2:column dataType="text" id="sCustType" name="sCustType"></w2:column>
                        <w2:column dataType="text" id="sClass" name="sClass"></w2:column>
                        <w2:column dataType="text" id="sMarry" name="sMarry"></w2:column>
                        <w2:column dataType="text" id="sJobCode" name="sJobCode"></w2:column>
                        <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                        <w2:column dataType="text" id="sDrvCls" name="sDrvCls"></w2:column>
                        <w2:column dataType="text" id="sJobCls" name="sJobCls"></w2:column>
                        <w2:column dataType="text" id="nHomAdrsChangeNo" name="nHomAdrsChangeNo"></w2:column>
                        <w2:column dataType="text" id="sHomZco" name="sHomZco"></w2:column>
                        <w2:column dataType="text" id="sHomAdr1" name="sHomAdr1"></w2:column>
                        <w2:column dataType="text" id="sHomAdr2" name="sHomAdr2"></w2:column>
                        <w2:column dataType="text" id="nCrpAdrsChangeNo" name="nCrpAdrsChangeNo"></w2:column>
                        <w2:column dataType="text" id="sCrpZco" name="sCrpZco"></w2:column>
                        <w2:column dataType="text" id="sCrpAdr1" name="sCrpAdr1"></w2:column>
                        <w2:column dataType="text" id="sCrpAdr2" name="sCrpAdr2"></w2:column>
                        <w2:column dataType="text" id="nEtcAdrsChangeNo" name="nEtcAdrsChangeNo"></w2:column>
                        <w2:column dataType="text" id="sEtcZco" name="sEtcZco"></w2:column>
                        <w2:column dataType="text" id="sEtcAdr1" name="sEtcAdr1"></w2:column>
                        <w2:column dataType="text" id="sEtcAdr2" name="sEtcAdr2"></w2:column>
                        <w2:column dataType="text" id="sAdrsType" name="sAdrsType"></w2:column>
                        <w2:column dataType="text" id="nAdrsChangeNo" name="nAdrsChangeNo"></w2:column>
                        <w2:column dataType="text" id="sAdrsZco" name="sAdrsZco"></w2:column>
                        <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                        <w2:column dataType="text" id="sAdrs2" name="sAdrs2"></w2:column>
                        <w2:column dataType="text" id="sDMAdrsTyp" name="sDMAdrsTyp"></w2:column>
                        <w2:column dataType="text" id="nTelChangeNo" name="nTelChangeNo"></w2:column>
                        <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                        <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                        <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                        <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                        <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                        <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                        <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                        <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                        <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                        <w2:column dataType="text" id="sEtcType" name="sEtcType"></w2:column>
                        <w2:column dataType="text" id="sEtcTel1" name="sEtcTel1"></w2:column>
                        <w2:column dataType="text" id="sEtcTel2" name="sEtcTel2"></w2:column>
                        <w2:column dataType="text" id="sEtcTel3" name="sEtcTel3"></w2:column>
                        <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                        <w2:column dataType="text" id="sEmail2" name="sEmail2"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Jindan" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="id_cd" name="id_cd"></w2:column>
                        <w2:column dataType="text" id="id_nm" name="id_nm"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <id_cd><![CDATA[Y]]></id_cd>
                            <id_nm><![CDATA[대상]]></id_nm>
                        </w2:row>
                        <w2:row>
                            <id_cd><![CDATA[N]]></id_cd>
                            <id_nm><![CDATA[비대상]]></id_nm>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Pibo_Tmp" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sel" name="sel"></w2:column>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                        <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                        <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                        <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
                        <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                        <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
                        <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                        <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
                        <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                        <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                        <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
                        <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
                        <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
                        <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
                        <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpCd" name="sXcptPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpName" name="sXcptPftbpName"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpTelno" name="sXcptPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpFlagCd" name="sXcptPftbpFlagCd"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIDA03_Tmp" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sCrtorFlgcd" name="sCrtorFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"></w2:column>
                        <w2:column dataType="text" id="sCrtorName" name="sCrtorName"></w2:column>
                        <w2:column dataType="text" id="nCrtorAge" name="nCrtorAge"></w2:column>
                        <w2:column dataType="text" id="sCrtorSexFlag" name="sCrtorSexFlag"></w2:column>
                        <w2:column dataType="text" id="sCrtorCstId" name="sCrtorCstId"></w2:column>
                        <w2:column dataType="text" id="nCstChngSeqno" name="nCstChngSeqno"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpRelnCd" name="sEndPftbpRelnCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCd" name="sEndPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpName" name="sEndPftbpName"></w2:column>
                        <w2:column dataType="text" id="sEndPftbpCntad" name="sEndPftbpCntad"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntFlagCd" name="sAsmtAgntFlagCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntRelnCd" name="sAsmtAgntRelnCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCd" name="sAsmtAgntCd"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntName" name="sAsmtAgntName"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntCntad" name="sAsmtAgntCntad"></w2:column>
                        <w2:column dataType="text" id="sZip1" name="sZip1"></w2:column>
                        <w2:column dataType="text" id="sZip2" name="sZip2"></w2:column>
                        <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                        <w2:column dataType="text" id="sAdrsAdd" name="sAdrsAdd"></w2:column>
                        <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                        <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                        <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                        <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                        <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                        <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                        <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                        <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                        <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                        <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                        <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                        <w2:column dataType="text" id="RvadAddr" name="RvadAddr"></w2:column>
                        <w2:column dataType="text" id="sEnntmPftbpYn" name="sEnntmPftbpYn"></w2:column>
                        <w2:column dataType="text" id="sAsmtAgntYn" name="sAsmtAgntYn"></w2:column>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"></w2:column>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpCd" name="sInsurPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpName" name="sInsurPftbpName"></w2:column>
                        <w2:column dataType="text" id="sInsurPftbpCntad" name="sInsurPftbpCntad"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Trty" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="chk" name="chk"></w2:column>
                        <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                        <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                        <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                        <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                        <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                        <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                        <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                        <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                        <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                        <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                        <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                        <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                        <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                        <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                        <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                        <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                        <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                        <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                        <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                        <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                        <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                        <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                        <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                        <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                        <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                        <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                        <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                        <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                        <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                        <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                        <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                        <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                        <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                        <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                        <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_Pibo" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sel" name="sel"></w2:column>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
                        <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
                        <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                        <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                        <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
                        <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                        <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
                        <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                        <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
                        <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
                        <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
                        <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
                        <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
                        <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                        <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                        <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                        <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                        <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
                        <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                        <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
                        <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
                        <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
                        <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                        <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
                        <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
                        <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
                        <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                        <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                        <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                        <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                        <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                        <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
                        <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                        <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
                        <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpCd" name="sXcptPftbpCd"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpName" name="sXcptPftbpName"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpTelno" name="sXcptPftbpTelno"></w2:column>
                        <w2:column dataType="text" id="sXcptPftbpFlagCd" name="sXcptPftbpFlagCd"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_PiboBackup" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CrtorCd" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <sCrtorCd></sCrtorCd>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="ds_code" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="ds_code_YN" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="value" name="value"></w2:column>
                        <w2:column dataType="text" id="text" name="text"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <text><![CDATA[-선택-]]></text>
                            <value></value>
                        </w2:row>
                        <w2:row>
                            <text><![CDATA[Y]]></text>
                            <value><![CDATA[Y]]></value>
                        </w2:row>
                        <w2:row>
                            <text><![CDATA[N]]></text>
                            <value><![CDATA[N]]></value>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_LTIDA51" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                        <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                        <w2:column dataType="text" id="sTxfrYn" name="sTxfrYn"></w2:column>
                        <w2:column dataType="text" id="sSvGdCd" name="sSvGdCd"></w2:column>
                        <w2:column dataType="text" id="sRcknDate" name="sRcknDate"></w2:column>
                        <w2:column dataType="text" id="nTaxPrfrInsAmt" name="nTaxPrfrInsAmt"></w2:column>
                        <w2:column dataType="text" id="sInsurMgprfRprtYn" name="sInsurMgprfRprtYn"></w2:column>
                        <w2:column dataType="text" id="sInptDler" name="sInptDler"></w2:column>
                        <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"></w2:column>
                        <w2:column dataType="text" id="sInptDate" name="sInptDate"></w2:column>
                        <w2:column dataType="text" id="sInptHms" name="sInptHms"></w2:column>
                        <w2:column dataType="text" id="sMdfcDler" name="sMdfcDler"></w2:column>
                        <w2:column dataType="text" id="sMdfcDlerIP" name="sMdfcDlerIP"></w2:column>
                        <w2:column dataType="text" id="sMdfcDate" name="sMdfcDate"></w2:column>
                        <w2:column dataType="text" id="sMdfcHms" name="sMdfcHms"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
                <w2:dataList baseNode="list" id="Ds_CrPrtrRole_Cod" repeatNode="map">
                    <w2:columnInfo>
                        <w2:column dataType="text" id="value" name="value"></w2:column>
                        <w2:column dataType="text" id="text" name="text"></w2:column>
                    </w2:columnInfo>
                    <w2:data use="true">
                        <w2:row>
                            <text><![CDATA[-선택-]]></text>
                            <value></value>
                        </w2:row>
                        <w2:row>
                            <text><![CDATA[계약자]]></text>
                            <value><![CDATA[10]]></value>
                        </w2:row>
                        <w2:row>
                            <text><![CDATA[피보험자]]></text>
                            <value><![CDATA[20]]></value>
                        </w2:row>
                    </w2:data>
                </w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Warning" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AddrFlag" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA03" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA03List']/vector/data/LTIDA03"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA15" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Drive" repeatNode="map" userData2="//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_FlagCd" repeatNode="map" userData2="//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Trty" repeatNode="map" userData2="//hashtable/data[@hashkey='multi']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Others" repeatNode="map" userData2="//*/vector/data/OTHER"></w2:dataList>
                <w2:dataList baseNode="list" id="Dsws_InsAmt" repeatNode="map" userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Reln" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA00" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDA00']/LTIDA00"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_RlnmCnfmRgcr" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_RlnmCnfmInfoRvMatt1" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_RlnmCnfmInfoRvMatt2" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA51" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDA51']/LTIDA51"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_SendTax" repeatNode="map" userData2="//*/TAX0020"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_SendTaxList" repeatNode="map" userData2="//*/vector/data/TAX0200"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_AqamtChnlCd" repeatNode="map"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LTIDA27" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA27List']/vector/data/LTIDA27"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LapsCnclCrCnt" repeatNode="map" userData2="//hashtable/data[@hashkey='LapsCnclCrCnt']/LTIEA00Cnt"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_LapsCnclCrList" repeatNode="map" userData2="//*/LTIEA00"></w2:dataList>
                <w2:dataList baseNode="list" id="warning_LapsCnclCrCnt" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_CmprCrNotc" repeatNode="map" userData2="//hashtable/data[@hashkey='CmprCrNotc']/CmprCrNotc"></w2:dataList>
                <w2:dataList baseNode="list" id="DsWs_Dmcy" repeatNode="map" userData2="//*/DMCY"></w2:dataList>
            </w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>
			
		</xf:model>
		<script src="/cm/js/wconv.js"/>
		<script src="/cm/js/convertJs/Global_Script.js"/>
		<script src="/cm/js/convertJs/comm_Webservice.js"/>
		<script src="/cm/js/convertJs/NewGen_Script.js"/>
		<script src="/cm/js/convertJs/LongTerm_Script.js"/>
		<script src="/cm/js/convertJs/Marine_Script.js"/>
		<script src="/cm/js/convertJs/GrdPassword_Script.js"/>
		<script type="javascript"><![CDATA[

/****************************************************************************
 * 프로그램번호   : B010_Div2
 * 프로그램명     : 청약사항입력(개인)
 * 파일명         : B010_Div2.xml
 * 프로그램 내용  : 청약사항입력(개인)
 * 관련 프로그램  : 
 * 작성자         : 이은연
 * 작성일         : 2010-10-11
 * 저작권         : Copyright ⓒ 2004. the K 손해보험㈜. All Right Reserved.
 * 변경내역       :  
 * [N1410-00005] 2014.10.01;백승철;장기 청약사항입력 화면 수정 및 데이터 변경
 ****************************************************************************/
//2017-10-20 구종식 1차 수정작업

//세금우대한도 잔여액
var nTaxPrfrLmitRemnAmt = 0;
var modifyFlag = false;//화면값중 기존값에서 변경된 경우 체크
var sCrtorCd_Backup = "";
var sRlnmCnfmFlag = false;//실명확인 플래그 false 경우 실명 확인 입력란 unvisible, true 경우 visible
var sPopupFlag = "";// ivr 연계 확인을 위한 flag
//20131218 var sRlnmCnfmFlag = false; //실명확인 플래그 false 경우 실명 확인 입력란 unvisible, true 경우 visible
var sTxfrCheckFlag = "1";//1 : 세금우대, 2: 비과세, 6:연금저축(장기보험고도화)


scwin.init = function() {
	
}

//---------------------------------------------------------------------------
// function 명 : lfn_Init
// 내용        : 화면오픈시 처리
//---------------------------------------------------------------------------
scwin.lfn_Init = function() { //완료

    //대리점인지 여부(30:대리점,33:사용인,35:TM사용인)
    if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
        //sAgncYn = "Y";
        // 대리점일때 버튼 감추기.(3자통화 버튼 감추거나 disable 처리)
        btn_IvrInput.setDisabled(true);
    }

    //설계번호가 있으면 계약자 정보를 조회해 온다./ 인수심사건이 있는지 조회한다.
    if (parent.Ds_LTIDA03.getRowCount() > 0) {
        scwin.lfn_Search(); //초기입력일경우 공통코드에서 주소구분코드를 조회한다.
    } else {
        //공통코드호출
        gfn_getCommonCodes( "DsWs_AddrFlag DsWs_Reln DsWs_RlnmCnfmRgcr DsWs_AqamtChnlCd"
                                        , "AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd"
                                        , "cmb_sMailRvadAddrFlagCd cmb_Reln cmb_RlnmCnfmRgcr cmb_AqamtChnlCd"
                                        , "S");

        //실명확인증표 선택옵션추가
        var insRow = util.insertRow(DsWs_RlnmCnfmRgcr, 0);
        /*수작업 변환 개발자 가이드(테스트 중)
        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
        DsWs_RlnmCnfmRgcr.setCellData(0, "sCd", "");
        DsWs_RlnmCnfmRgcr.setCellData(0, "sHnglCdName", "- 선택 -");

        //DsWs_RlnmCnfmRgcr.index = 1;
        cmb_RlnmCnfmRgcr.setSelectedIndex(0);

        //취득경로
        var insRow = util.insertRow(DsWs_AqamtChnlCd, 0);
        /*수작업 변환 개발자 가이드(테스트 중)
        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
        DsWs_AqamtChnlCd.setCellData(0, "sCd", "");
        DsWs_AqamtChnlCd.setCellData(0, "sHnglCdName", "- 선택 -");
        cmb_AqamtChnlCd.setSelectedIndex(0);

        //우편수령구분콤보 비활성화 처리
        cmb_sMailRvadAddrFlagCd.setDisabled("true");
        if (parent.Ds_LTIDA03.getRowCount() > 0) {
            //wconv.copy(Ds_LTIDA03, parent.Ds_LTIDA03); //계약자정보
            util.jSonDsCreate(parent.Ds_LTIDA03.getAllJSON(), "Ds_LTIDA03", "Y");  
            //대상고객,취득경로
            cmb_CrPrtrRole.setValue("10");
            cmb_AqamtChnlCd.setValue("");
        }
    }


    //실명확인 flag seting
    //20131218 lfn_RlnmCnfmSetting();
    //대면계약인 경우 셋팅 : 통신수단해지동의여부 위치선정 및 보이기 여부 판단
    /*
    if(sRlnmCnfmFlag) {  //위치선정
    	st_CmmcMeanCncl.Left = 426;
    	cmb_CmmcMeanCnclYn.Left = 529;
    	st_CmmcMeanCncl.Top = 9;
    	cmb_CmmcMeanCnclYn.Top = 8;		
    } else {
    	st_CmmcMeanCncl.Left = 426;
    	cmb_CmmcMeanCnclYn.Left = 529;		
    	st_CmmcMeanCncl.Top = 30;
    	cmb_CmmcMeanCnclYn.Top = 29;		
    }
    */
    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
        //st_CmmcMeanCncl.show();
        $("#st_CmmcMeanCncl").text("통신수단해지동의");
        cmb_CmmcMeanCnclYn.show();
        cmb_CmmcMeanCnclYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sCmmcMeanCnclAgreYn"));
    } else {
        //st_CmmcMeanCncl.hide();
        $("#st_CmmcMeanCncl").text("");
        cmb_CmmcMeanCnclYn.hide();
    }

    //세금우대상품여부가 n일경우 세금우대 
    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrGdYn") == "N") {
        cmb_sTaxPrfrYn.setDisabled(true);
    } else {
        //세금우대인지 비과세인지 체크 후속 프로세스 확인.
        scwin.lfn_TxfrYn_Check();
    }

    //고객구분코드(공통) 운전자급수코드(공통)
    //wconv.copy(DsWs_FlagCd, parent.DsWs_FlagCd);
    //wconv.copy(DsWs_Drive, parent.DsWs_Drive);
    util.jSonDsCreate(parent.DsWs_FlagCd.getAllJSON(), "DsWs_FlagCd", "Y");
    util.jSonDsCreate(parent.DsWs_Drive.getAllJSON(), "DsWs_Drive", "Y");
    
    //인수제한사항copy
    //wconv.copy(Ds_LTIDA15, parent.Ds_LTIDA15);
    util.jSonDsCreate(parent.Ds_LTIDA15.getAllJSON(), "Ds_LTIDA15", "Y");
    
    var inColInfo = [];
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sRqstYn"))) {
		inColInfo.push(["sRqstYn","sRqstYn","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sRqstYnName"))) {
		inColInfo.push(["sRqstYnName","sRqstYnName","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sOthrInsurCnt"))) {
		inColInfo.push(["sOthrInsurCnt","sOthrInsurCnt","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sOthrInsurCntName"))) {
		inColInfo.push(["sOthrInsurCntName","sOthrInsurCntName","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sSubCvrgeYn"))) {
		inColInfo.push(["sSubCvrgeYn","sSubCvrgeYn","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sSubCvrgeYnName"))) {
		inColInfo.push(["sSubCvrgeYnName","sSubCvrgeYnName","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sDgnsObjtYn"))) {
		inColInfo.push(["sDgnsObjtYn","sDgnsObjtYn","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sDgnsObjtYnName"))) {
		inColInfo.push(["sDgnsObjtYnName","sDgnsObjtYnName","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sRqstYn"))) {
		inColInfo.push(["sRqstYn","sRqstYn","text"]);
	};
	if (parent.util.isNull(parent.Ds_Pibo.getColumnIndex("sCrtorRelnCd"))) {
		inColInfo.push(["sCrtorRelnCd","sCrtorRelnCd","text"]);
	};
    if (inColInfo.length > 0) {
		parent.util.insertColumn(parent.Ds_Pibo, inColInfo);
		parent.util.setCompBindRefresh("Ds_Pibo");
	}
    

    //trace("\n lfn_Init //////////// Ds_Pibo.SaveXML() ==> " + Ds_Pibo.SaveXML());
    //특약정보 복사
    /*
    wconv.copy(DsWs_InsurTerm, parent.DsWs_InsurTerm); //납임기간코드(공통)
    wconv.copy(DsWs_PaymTerm, parent.DsWs_PaymTerm); //보험기간코드(공통)	
    wconv.copy(Dsws_InsAmt, parent.Dsws_InsAmt);
    */
    util.jSonDsCreate(parent.DsWs_InsurTerm.getAllJSON(), "DsWs_InsurTerm", "Y"); //납임기간코드(공통)
    util.jSonDsCreate(parent.DsWs_PaymTerm.getAllJSON(), "DsWs_PaymTerm", "Y"); //보험기간코드(공통)	
    util.jSonDsCreate(parent.Dsws_InsAmt.getAllJSON(), "Dsws_InsAmt", "Y");

    ///////////////////////////////////////////////////////////////////////////////// 
    //피보험자Detail
    wconv.clear(DsWs_Others);
    wconv.clear(DsWs_Warning);
    /*
    SOBJ_Others.WSDL = gds.gWsdlBasis; //기본 웹서비스
    DsWs_Warning.DataObject = "DOBJ_Others";
    var MethodObj = SOBJ_Others.CreateMethodObj("perform");
    setHeader("hashtable", "com.inswave.longterm.ssr.pln.task.DBB030Task", "getPibo_Detail");
    parent.Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.Value); //설계번호
    //계약기본사항을 담는다
    addSingleData("LTIDA00", "LTIDA00", parent.Ds_LTIDA00, "LTIDA00"); // 계약기본사항정보
    //피보험자사항 담는다
    addVectorData("vLTIDA01", "vLTIDA01", parent.Ds_Pibo); //피보험자사항
    setTail("hashtable");
    SOBJ_Others.CreateObj("in0");
    MethodObj.in0 = insertStr;
    var result = gfn_CallService(SOBJ_Others, DOBJ_Others, MethodObj);
    */
    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "getPibo_Detail");
	MethodObj.setId("getPibo_Detail");
    parent.Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
    //계약기본사항을 담는다
    util.dataListCloneCopy(parent.Ds_LTIDA00, "__Ds_LTIDA00__TMP"); //부모창 DataList 전달을 위해 임시로 복제한다.
    MethodObj.addSingleData("LTIDA00", "LTIDA00", "__Ds_LTIDA00__TMP"); // 계약기본사항정보
    //피보험자사항 담는다
    util.dataListCloneCopy(parent.Ds_Pibo, "__Ds_Pibo__TMP"); //부모창 DataList 전달을 위해 임시로 복제한다.
    MethodObj.addVectorData("vLTIDA01", "vLTIDA01", "__Ds_Pibo__TMP"); //피보험자사항
	MethodObj.setUrl("/contract/CBSC075MController.do");
	MethodObj.setXPath("//*/vector/data/OTHER");
	MethodObj.addXPath("//WARNING");
	MethodObj.setHashTable();
	MethodObj.sync();
	MethodObj.send();
	
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning", "Y");

    if (DsWs_Warning.getRowCount() != 0) {
        wprom.alert(DsWs_Warning.getCellData(0, "msg"));
        return;
    } else {
    
    	util.jSonDsCreate(_tranSync.getDsJson("OTHER"), "DsWs_Others", "Y");
    
        //		//trace("-------------------피보험자 Detail-----------------------------------"); 
        //		//trace(replace(gfn_XmlEncoder(DOBJ_Others.Value), "><", ">\n<"));
        //trace("DsWs_Others:"+DsWs_Others.SaveXML());	
        //장기보험고도화 - 특약이 없는 경우 고지사항 입력여부를 체크하기 위해 선택된 특약이 있는지 확인
        var sRqstChk = false;
        for (var i = 0; i < parent.Ds_Trty.getTotalRow(); i++) {
            if (util.getCellDataF(parent.Ds_Trty, i, "sScrnIndcYn") == "Y" && util.getCellDataF(parent.Ds_Trty, i, "chk") == "1") {
                sRqstChk = true;
            }
        }
        for (var i = 0; i < DsWs_Others.getRowCount(); i++) {
            var nFindRow = parent.wconv.findRow(parent.Ds_Pibo, "nInrpsSeqno", DsWs_Others.getCellData(i, "nInrpsSeqno"));
            //장기보험고도화 - 특약이 없는 경우 고지사항 입력여부Y로 세팅
            if (sRqstChk == false) {
                parent.Ds_Pibo.setCellData(nFindRow, "sRqstYn", "Y");
            } else {
                parent.Ds_Pibo.setCellData(nFindRow, "sRqstYn", DsWs_Others.getCellData(i, "sRqstYn"));
            }
            parent.Ds_Pibo.setCellData(nFindRow, "sOthrInsurCnt", DsWs_Others.getCellData(i, "sOthrInsurCnt"));
            parent.Ds_Pibo.setCellData(nFindRow, "sSubCvrgeYn", DsWs_Others.getCellData(i, "sSubCvrgeYn"));
        }
    }

    //피보험자 정보 복사
    //wconv.copy(Ds_Pibo, parent.Ds_Pibo);
    util.jSonDsCreate(parent.Ds_Pibo.getAllJSON(), "Ds_Pibo", "Y");

    //피보험자 화면 입력여부check
    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
        scwin.fn_subCheck(i);
    }


    ///////////////////////////////////////////////////////////////////////////////// 
    //특약정보 복사
    /*
    wconv.copy(DsWs_InsurTerm, parent.DsWs_InsurTerm); //납임기간코드(공통)
    wconv.copy(DsWs_PaymTerm, parent.DsWs_PaymTerm); //보험기간코드(공통) 
    wconv.copy(Ds_Trty, parent.Ds_Trty);
    */
    util.jSonDsCreate(parent.DsWs_InsurTerm.getAllJSON(), "DsWs_InsurTerm", "Y"); //납임기간코드(공통)
    util.jSonDsCreate(parent.DsWs_PaymTerm.getAllJSON(), "DsWs_PaymTerm", "Y"); //보험기간코드(공통)
    util.jSonDsCreate(parent.Ds_Trty.getAllJSON(), "Ds_Trty", "Y");

    //util.insertColumn(Ds_Trty, [["sInrpsName","sInrpsName","text"]]); //피보험자성명필드추가
    if (util.isNull(Ds_Trty.getColumnIndex("sInrpsName"))) {
		util.insertColumn(Ds_Trty, [["sInrpsName","sInrpsName","text"]]); //피보험자성명필드추가
		util.setCompBindRefresh("Ds_Trty");
	};

	//특약 체크된것과 화면출력특약만 화면에 보여줌
    //Ds_Trty.Filter("pos(chk, '1') >= 0 && pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='"+Ds_Pibo.GetColumn(Ds_Pibo.FindRow("sel","1"),"nInrpsSeqno")+"'");
    var funcFilter = function(cellData, tmpParam, rowIdx) {
		if (Ds_Trty.getCellData(rowIdx, "chk").indexOf("1") >= 0 && Ds_Trty.getCellData(rowIdx, "sScrnIndcYn").indexOf("Y") >= 0) {
    		if (Ds_Trty.getCellData(rowIdx, "nPsnPrprtGroupSeqno") == Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel","1"),"nInrpsSeqno")) {
    			return true;
    		}
    	}
    	return false;
	}
	Ds_Trty.clearFilter();
	Ds_Trty.setColumnFilter({type:'func', colIndex:'sScrnIndcYn', key:funcFilter, condition:'and'});


    //체크된 피보험자명 삽입
    Ds_Trty.setCellData(0, "sInrpsName", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsName"));
    if (Ds_LTIDA03.getCellData(0, "sCrtorCd") == "") {
        if (parent.sAgncYn == "Y") {
            Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_Pibo.getCellData(0, "sInrpsCd"));
        } else {
            medt_sCrtorCd.setValue(Ds_Pibo.getCellData(0, "sInrpsCd"));
        }
    }


    //계약자관계 셋팅
    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
        if (Ds_Pibo.getCellData(i, "sMinsrRelnCd") != "10" && Ds_Pibo.getCellData(i, "sCrtorRelnCd") == "10") {
            Ds_Pibo.setCellData(i, "sCrtorRelnCd", Ds_Pibo.getCellData(i, "sMinsrRelnCd"));
        }
    }


    //계약자코드, 고객조회 버튼 비활성화
    Button0.setDisabled(true);
    medt_sCrtorCd.setDisabled(true);

    //계약자mask 세팅
    scwin.lfn_sAplcCd_OnCharChanged(medt_sCrtorCd, "", "");
    if (parent.sAgncYn == "Y") {
    	//util.toDoAlert("lfn_Init : gfn_mkEditPassWord" );
    	/*
        //계약번호 마스크 처리
        medt_sCrtorCd.BindDataset = "";
        var obj_list = ["medt_sCrtorCd"];
        var ds_list = ["Ds_CrtorCd"];
        var column_list = ["sCrtorCd"];
        var mask_list = ["######-#******"];
        gfn_mkEditPassWord(obj_list, ds_list, column_list, mask_list);
        */
    }
    
    //통신수단해지 동의와 수익자 약정 기본값 셋팅
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sCmmcMeanCnclAgreYn",            "sCmmcMeanCnclAgreYn",            "text"        ]    ]);
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sInsurPftbpAsmtYn",            "sInsurPftbpAsmtYn",            "text"        ]    ]);
	var inColInfo = [];
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sCmmcMeanCnclAgreYn"))) {
		inColInfo.push(["sCmmcMeanCnclAgreYn","sCmmcMeanCnclAgreYn","text"]);
	};
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sInsurPftbpAsmtYn"))) {
		inColInfo.push(["sInsurPftbpAsmtYn","sInsurPftbpAsmtYn","text"]);
	};
    if (inColInfo.length > 0) {
		parent.util.insertColumn(parent.Ds_LTIDA00, inColInfo);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
	}
	if (wconv.length(cmb_AsmtYn.getValue()) < 1) {
        cmb_AsmtYn.setSelectedIndex(1);
    }
    if (wconv.length(cmb_CmmcMeanCnclYn.getValue()) < 1) {
        cmb_CmmcMeanCnclYn.setSelectedIndex(1);
    }

    // 장기보험고도화 - 특약이 없는 경우 고지사항 정보 숨김
    if (Ds_Trty.getRowCount() == 0) {
        //grd_Pibo.setColProp(8, "Width", 0); // 고지사항 안보이게
        grd_Pibo.setColumnVisible(8 , false);
    } else {
        //grd_Pibo.setColProp(8, "Width", 49); // 고지사항 보이게
        grd_Pibo.setColumnVisible(8 , true);
    }

    // 장기보험고도화 - 보장특약이 없는 경우 사망시 수익자 비활성화
    // 설계진행단계코드-PlanProgRankCd - 52-인수요청,00-확정
    /*
    if (Ds_Trty.getRowCount() == 0) {
        // 선택 불가
        grd_Pibo.SetCellProp("body", 9, "cursor", "arrow"); // 타보험
        grd_Pibo.SetCellProp("body", 10, "cursor", "arrow"); // 사망수익자
        grd_Pibo.SetCellProp("body", 11, "cursor", "arrow"); // 사망외
        grd_Pibo.SetCellProp("body", 12, "cursor", "arrow"); // 부담보
        grd_Pibo.SetCellProp("body", 9, "font", "굴림,9");
        grd_Pibo.SetCellProp("body", 10, "font", "굴림,9");
        grd_Pibo.SetCellProp("body", 11, "font", "굴림,9");
        grd_Pibo.SetCellProp("body", 12, "font", "굴림,9");
    } else {
        // 선택 가능
        grd_Pibo.SetCellProp("body", 9, "cursor", "hand"); // 타보험
        grd_Pibo.SetCellProp("body", 10, "cursor", "hand"); // 사망수익자
        grd_Pibo.SetCellProp("body", 11, "cursor", "hand"); // 사망외
        grd_Pibo.SetCellProp("body", 12, "cursor", "expr:iif(parent.Ds_LTIDA00.GetColumn(0,'sPlanProgRankCd') >= '52'|| parent.Ds_LTIDA00.GetColumn(0,'sPlanProgRankCd') == '00', 'hand', 'Arrow')"); // 부담보
        grd_Pibo.SetCellProp("body", 9, "font", "굴림,9,Bold,Underline");
        grd_Pibo.SetCellProp("body", 10, "font", "굴림,9,Bold,Underline");
        grd_Pibo.SetCellProp("body", 11, "font", "굴림,9,Bold,Underline");
        grd_Pibo.SetCellProp("body", 12, "font", "expr:iif(parent.Ds_LTIDA00.GetColumn(0,'sPlanProgRankCd') >= '52'|| parent.Ds_LTIDA00.GetColumn(0,'sPlanProgRankCd') == '00', '굴림,9,Bold,Underline', '굴림,9')");
    }
    */

    // 연금상품일때 만기수익자 비활성화 
    if (parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7") {
        // 업무보고서분류코드-7:연금
        edt_sEnntmPftbpYn.setDisabled(true);
    } else {
        edt_sEnntmPftbpYn.setDisabled(false);
    }

    // 장기보험고도화 - 보장특약이 없는 경우 지정대리인 비활성화
    if (Ds_Trty.getRowCount() == 0) {
        edt_sAsmtAgntYn.setDisabled(true);
    } else {
        edt_sAsmtAgntYn.setDisabled(false);
    }

    // 연금저축 특약 없을때 사망외수익 지정 안하기때문에 예외 처리
    if (parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7" && // 업무보고서분류코드-7:연금
        Ds_Trty.getRowCount() == 0) {
        Ds_Pibo.setCellData(0, "sXcptPftbpName", "");
    } else {
        Ds_Pibo.setCellData(0, "sXcptPftbpName", "선택");
    }
};



//---------------------------------------------------------------------------
// function 명 : lfn_Search
// 내용        : 계약자 정보를 조회/ 인수심사건이 있는지 조회
//---------------------------------------------------------------------------
scwin.lfn_Search = function() { //완료

    wconv.clear(DsWs_Warning);
    DsWs_Warning.DataObject = "DOBJ_AddrFlag";
    if (parent.sAgncYn != "Y") {
        //계약자코드 바인딩
        //medt_sCrtorCd.BindDataset = "Ds_LTIDA03";
        //medt_sCrtorCd.setRef("data:Ds_LTIDA03.sCrtorCd");
    }
    //cmb_sMailRvadAddrFlagCd.BindDataset = "Ds_LTIDA03";
    cmb_sMailRvadAddrFlagCd.setRef("data:Ds_LTIDA03.sMailRvadAddrFlagCd");

    //공통코드호출
    gfn_getCommonCodes("DsWs_AddrFlag DsWs_Reln DsWs_RlnmCnfmRgcr DsWs_AqamtChnlCd"
                                   , "AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd"
                                   , "cmb_sMailRvadAddrFlagCd cmb_Reln cmb_RlnmCnfmRgcr cmb_AqamtChnlCd"
                                   , "S");

    //납입주기 선택옵션추가
    var insRow = util.insertRow(DsWs_RlnmCnfmRgcr, 0);
    /*수작업 변환 개발자 가이드(테스트 중)
    dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
    DsWs_RlnmCnfmRgcr.setCellData(0, "sCd", "");
    DsWs_RlnmCnfmRgcr.setCellData(0, "sHnglCdName", "- 선택 -");
    cmb_RlnmCnfmRgcr.setSelectedIndex(0);

    //취득경로
    var insRow = util.insertRow(DsWs_AqamtChnlCd, 0);
    /*수작업 변환 개발자 가이드(테스트 중)
    dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
    DsWs_AqamtChnlCd.setCellData(0, "sCd", "");
    DsWs_AqamtChnlCd.setCellData(0, "sHnglCdName", "- 선택 -");
    cmb_AqamtChnlCd.setSelectedIndex(0);

    //계약자정보 복사
    //wconv.copy(Dsws_InsAmt, parent.Dsws_InsAmt);
    //wconv.copy(Ds_LTIDA03, parent.Ds_LTIDA03); //계약자정보
    util.jSonDsCreate(parent.Dsws_InsAmt.getAllJSON(), "Dsws_InsAmt", "Y");
    util.jSonDsCreate(parent.Ds_LTIDA03.getAllJSON(), "Ds_LTIDA03", "Y"); //계약자정보

    //비과세 정보 복사
    if (parent.DsWs_LTIDA51.getRowCount() > 0) {
        //wconv.copy(Ds_LTIDA51, parent.DsWs_LTIDA51); //비과세 정보
        util.jSonDsCreate(parent.DsWs_LTIDA51.getAllJSON(), "Ds_LTIDA51", "Y"); //비과세 정보
    }
    sCrtorCd_Backup = Ds_LTIDA03.getCellData(0, "sCrtorCd"); //계약자코드Backup
    if (parent.sAgncYn == "Y") {
        Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd"));
    }

    //  Ds_LTIDA03.AddRow();
    //trace("계약자=="+parent.Ds_LTIDA03.SaveXML());  
    //만기수익자여부처리
    if (wconv.length(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd")) > 0) {
        edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
    } else {
        edt_sEnntmPftbpYn.setValue("선택안됨");
    }


    //보험수익자여부처리
    /*
	if(Ds_LTIDA03.getCellData(0, "sInsurPftbpFlagCd").length > 0){
		edt_sInsurPftbpYn.Text = Ds_LTIDA03.getCellData(0, "sInsurPftbpName");
	}else{
	    
		edt_sInsurPftbpYn.Text = "선택안됨";
	}
	*/
    //지정대리인여부처리
    if (wconv.length(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd")) > 0) {
        edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
    } else {
        edt_sAsmtAgntYn.setValue("선택안됨");
    }


    //세금우대여부처리
    cmb_sTaxPrfrYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn"));
    if (cmb_sTaxPrfrYn.getValue() == "Y") {
    } else {
        cmb_sTaxPrfrYn.setValue("N");
    }


    //세금우대조회버튼 활성/비활성처리
    if (cmb_sTaxPrfrYn.getValue() == "Y" || cmb_sTaxPrfrYn.getValue() == "B") {
        btn_TaxSearch.setDisabled("false");
    } else {
        btn_TaxSearch.setDisabled("true");
    }
    //console.log("@@sAqamtChnlCd2 : " + parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd"));
    //대상고객,취득경로
    //대상고객,취득경로
    if (parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole") != null && parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole") != "") {
        cmb_CrPrtrRole.setValue(parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole"));
    } else {
        cmb_CrPrtrRole.setValue("10");
        if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sCrPrtrRole"))) {
        	parent.util.insertColumn(parent.Ds_LTIDA00, [["sCrPrtrRole","sCrPrtrRole","text"]]);
        	parent.util.setCompBindRefresh("Ds_LTIDA00");
        }
        parent.Ds_LTIDA00.setCellData(0, "sCrPrtrRole", cmb_CrPrtrRole.getValue());
    }
    if (parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd") != null) {
        cmb_AqamtChnlCd.setValue(parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd"));
    }

    //상품대상QA 확인하여 QA요청 활성화
    if (parent.DsWs_PrdAttr.getCellData(0, "QAObjtYn") == "Y") {
        btn_QA.show();
        btn_QA.setDisabled(true);
        //btn_Insu.Color = "";
        $("#btn_Insu a:first-child").css("color","");
        edt_insu.setValue(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankName"));
        //인수제한건 출력	
        edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());
        if (Ds_LTIDA15.getRowCount() > 0) {
            btn_Insu.setDisabled(false);
            //btn_Insu.Color = "red";
            $("#btn_Insu a:first-child").css("color","red");
        }
        if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "45" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "47") {
            //20:보험료 산출, 45:Qa대상, 47:Qa보완
            btn_QA.setDisabled(false);
            btn_Simsa.setDisabled(true);
        } else if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "49") {
            btn_QA.setDisabled(true);
            btn_Insu.setDisabled(false);
            btn_Simsa.setDisabled(true);
            if (Ds_LTIDA15.getRowCount() > 0) {
                wprom.alert("인수심사 대상건입니다");
                btn_Simsa.setDisabled(false);
            }
        } else if (wconv.substr(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd"), 0, 1) == "4") {
            btn_QA.setDisabled(true);
            btn_Simsa.setDisabled(true);
        }
    } else {
        btn_QA.hide();
        //인수심사상태 출력
        if (wconv.substr(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd"), 0, 1) == "5") {
            edt_insu.setValue(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankName"));
            //인수제한건 출력	
            edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());

            //51 심사대상일경우
            if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "51") {
                //인수요청버튼 활성화
                btn_Insu.setDisabled(false);
                btn_Simsa.setDisabled(false);
            }
        } else {
            btn_Insu.setDisabled(true);
            btn_Simsa.setDisabled(true);
        }
    }

};



/*-----------------------------------
// function 명 : lfn_ValidationCheck
// 내용        : 필수값 입력 여부 체크
-----------------------------------*/
scwin.lfn_ValidationCheck = function(fGubunFlag) { //완료

    var validFlag = false;
    //변경여부 초기화
    modifyFlag = false;
    //trace("fGubunFlag=="+fGubunFlag);
    if (!fGubunFlag)
        fGubunFlag = false;

    //계약자 밸리데이션체크
    validFlag = scwin.lfn_LTIDA03_ValidationCheck(Ds_LTIDA03, fGubunFlag);

    //피보험자 밸리데이션체크
    if (!validFlag) {
        validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
    }

    //대면계약의 경우 필수값 체크 
    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
        if (wconv.length(cmb_CmmcMeanCnclYn.getValue()) < 1) {
            validFlag = true;
            wprom.alert("통신수단해지동의 여부를 확인하세요");
            cmb_CmmcMeanCnclYn.focus();
        }
    }

    //수익자 동의 여부 필수값 체크 
    if (wconv.length(cmb_AsmtYn.getValue()) < 1) {
        validFlag = true;
        wprom.alert("수익자 약정 여부를 확인하세요");
        cmb_AsmtYn.focus();
    }

    //qa 정보 셋팅(QA대상건일 때)
    if (parent.DsWs_PrdAttr.getCellData(0, "QAObjtYn") == "Y") {
    	if (util.isNull(Ds_LTIDA03.getColumnIndex("QAObjtYn"))) {
			util.insertColumn(Ds_LTIDA03, [["QAObjtYn","QAObjtYn","text"]]);
			util.setCompBindRefresh("Ds_LTIDA03");
		};
        Ds_LTIDA03.setCellData(0, "QAObjtYn", "Y");
    }

    //대상고객 필수값 체크 
    if (wconv.length(cmb_CrPrtrRole.getValue()) < 1 && cmb_CrPrtrRole.getDisabled() == false) {
        validFlag = true;
        wprom.alert("대상고객 값이 없습니다.");
        cmb_CrPrtrRole.focus();
    }

    //취득경로 필수값 체크 
    if (wconv.length(cmb_AqamtChnlCd.getValue()) < 1 && cmb_AqamtChnlCd.getDisabled() == false) {
        validFlag = true;
        wprom.alert("취득경로 값이 없습니다.");
        cmb_AqamtChnlCd.focus();
    }
    return validFlag;
};

/*-----------------------------------
// function 명 : lfn_LTIDA03_ValidationCheck
// 내용        : 계약자 필수값 입력 여부 체크
-----------------------------------*/
scwin.lfn_LTIDA03_ValidationCheck = function(obj, fGubunFlag) { //완료

    if (parent.sAgncYn == "Y") {
        //계약자코드 바인딩
        Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_CrtorCd.getCellData(0, "sCrtorCd"));
    } else {
        //계약자코드 바인딩
        Ds_LTIDA03.setCellData(0, "sCrtorCd", medt_sCrtorCd.getValue());
    }
    if (parent.sAgncYn != "Y") {
		//medt_sCrtorCd.BindDataset = "Ds_LTIDA03";
    }

    //설계번호
    if (parent.medt_PlanNo.getValue().length == 0 && fGubunFlag) {
        wprom.alert("설계번호가 없습니다.");
        return true;
    }


    //계약자구분코드
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sCrtorFlgcd")) && fGubunFlag) {
        //medt_sCrtorCd.BindDataset = "";
        wprom.alert("계약자구분코드가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorFlgcd");
    //계약자코드
    if (fGubunFlag) {
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sCrtorCd"))) {
            wprom.alert("계약자코드가 없습니다.");
            return true;
        } else {
            //사업자체크
            if (wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) == 10) {
                if (!isBizRegNo(Ds_LTIDA03.getCellData(0, "sCrtorCd"))) {
                    wprom.alert("사업자번호를 정확히 입력하세요.");
                    medt_sCrtorCd.focus();
                    return true;
                }
            } else {
            }
        }
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorCd");
    //계약자명
    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorName")) && fGubunFlag) {
        wprom.alert("계약자명이 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorName");

    //사업자는 체크 안함.
    if (wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) > 10) {
        //계약자연령
        if (util.isNull(Ds_LTIDA03.getCellData(0, "nCrtorAge")) && fGubunFlag) {
            wprom.alert("계약자연령이 없습니다.");
            return true;
        }
        scwin.lfn_CompChangeCheck(obj, 0, "nCrtorAge");
        //계약자성별구분
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sCrtorSexFlag")) && fGubunFlag) {
            wprom.alert("계약자성별구분이 없습니다.");
            return true;
        }
        scwin.lfn_CompChangeCheck(obj, 0, "sCrtorSexFlag");
    }

    /*	
    	//계약자고객ID
    	if(mfn_IsEmpty(Ds_LTIDA03.GetColumn(0, "nCrtorCstId"))){
    		alert("계약자고객ID이 없습니다.");
    		return true;
    	}

    	//고객변경일련번호
    	if(mfn_IsEmpty(Ds_LTIDA03.GetColumn(0, "nCstChngSeqno"))){
    		alert("고객변경일련번호가 없습니다.");
    		return true;
    	}
    */
    //고객구분코드
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sCstFlgcd")) && fGubunFlag) {
        wprom.alert("고객구분코드가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sCstFlgcd");
    //주소구분코드
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sAddrFlgcd")) && fGubunFlag) {
        wprom.alert("주소구분코드가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sAddrFlgcd");
    //주소변경회차
    if (util.isNull(Ds_LTIDA03.getCellData(0, "nAddrChngSeq")) && fGubunFlag) {
        wprom.alert("주소변경회차가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "nAddrChngSeq");
    //전화번호변경회차
    if (util.isNull(Ds_LTIDA03.getCellData(0, "nTelnoChngSeq")) && fGubunFlag) {
        wprom.alert("전화번호변경회차가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "nTelnoChngSeq");
    //우편물수령처주소구분코드
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd")) && fGubunFlag) {
        wprom.alert("우편물수령처주소구분코드가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sMailRvadAddrFlagCd");
    //우편물수령처변경회차
    if (util.isNull(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) && fGubunFlag) {
        wprom.alert("우편물수령처변경회차가 없습니다.");
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "nMailRvadChngSeq");
    //우편번호
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sZip1")) && fGubunFlag) {
        wprom.alert("우편번호가 없습니다.");
        edt_sZip1.focus();
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sZip1");
    //우편번호
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sZip2")) && fGubunFlag) {
        wprom.alert("우편번호가 없습니다.");
        edt_sZip2.focus();
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sZip2");
    //자택주소
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sAdrs1")) && fGubunFlag) {
        wprom.alert("자택주소가 없습니다.");
        edt_sAdrs1.focus();
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sAdrs1");
    //자택주소
    if (util.isNull(Ds_LTIDA03.getCellData(0, "sAdrsAdd")) && fGubunFlag) {
        wprom.alert("자택주소가 없습니다.");
        edt_sAdrsAdd.focus();
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sAdrsAdd");
    var checkTelNo = false;

    //자택전화번호
    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel1");
    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel2");
    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel3");
    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone1");
    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone2");
    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone3");
    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel1");
    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel2");
    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel3");

    //우편물수령처
    if (util.isNull(Ds_LTIDA03.getCellData(0, "RvadAddr")) && fGubunFlag) {
        wprom.alert("우편물수령처가 없습니다.");
        edt_RvadAddr.focus();
        return true;
    }
    scwin.lfn_CompChangeCheck(obj, 0, "RvadAddr");

    //만기시수익자가 선택된경우
	if(wconv.length(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd")) > 0 && 1 == 2){
//goo	   Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd") =! '99'){ //goo 확인하고 처리해야 한다. 
        //만기시수익자구분코드
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd"))) {
            wprom.alert("만기시수익자가 없습니다.");
            return true;
        }


        //만기수익자관계코드
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd"))) {
            wprom.alert("만기수익자관계코드가 없습니다.");
            return true;
        }

        //만기수익자코드
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sEndPftbpCd"))) {
            wprom.alert("만기수익자코드가 없습니다.");
            return true;
        }

        //만기수익자명
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sEndPftbpName"))) {
            wprom.alert("만기수익자명이 없습니다.");
            return true;
        }

        //만기수익자연락처
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sEndPftbpCntad"))) {
            wprom.alert("만기수익자연락처가 없습니다.");
            return true;
        }
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sEnntmPftbpFlagCd");
    //지정대리인이 선택된경우
    if (Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd").length > 0) {
        //지정대리인구분코드
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd"))) {
            wprom.alert("지정대리인구분코드가 없습니다.");
            return true;
        }

        //지정대리인관계코드
        if (util.isNull(Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd"))) {
            wprom.alert("지정대리인관계코드가 없습니다.");
            return true;
        }
        if (Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd") != "99") {
            //지정대리인코드
            if (util.isNull(Ds_LTIDA03.getCellData(0, "sAsmtAgntCd"))) {
                wprom.alert("지정대리인코드가 없습니다.");
                return true;
            }

            //지정대리인명
            if (util.isNull(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"))) {
                wprom.alert("지정대리인명이 없습니다.");
                return true;
            }

            //지정대리인연락처
            if (util.isNull(Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad"))) {
                wprom.alert("지정대리인연락처가 없습니다.");
                return true;
            }
        }
    }
    scwin.lfn_CompChangeCheck(obj, 0, "sAsmtAgntFlagCd");
    //세금우대체크는 세금우대한도잔여액을 실시간으로 조회해서 비교해봐야 하므로 task에서 체크한다.
    if (cmb_sTaxPrfrYn.getValue() == "") {
        wprom.alert("세금우대여부를 선택하세요.");
        return true;
    }
};


/*-----------------------------------
// function 명 : lfn_Pibo_ValidationCheck
// 내용        : 피보험자 필수값 입력 여부 체크
-----------------------------------*/
scwin.lfn_Pibo_ValidationCheck = function(obj) { //완료

    //계피상이여부
    var sameCrtorInrps = scwin.lfn_sameCrtorInrps();
    var validFlag = false;
    if (obj.getRowCount() > 0) {
        for (var i = 0; i < obj.getRowCount(); i++) {
            if (validFlag) {
                break;
            }
            for (var j = 0; j < obj.getColumnCount(); j++) {
                //colID = obj.GetColID(obj.GetColIDXbyorder(j));
                var colID = obj.getColumnID(j);
                //trace("colID==="+colID);
                //수익자피보험자관계코드
                if (colID == "sPftbpInrpsRelnCd") {
                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자코드
                } else if (colID == "sGroupInrpsName") {
                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자명
                } else if (colID == "sPftbpName") {
                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자전화번호
                } else if (colID == "sPftbpTelno") {
                    scwin.lfn_CompChangeCheck(obj, i, colID); //고지사항입력여부
                } else if (colID == "sRqstYn") {
                    //if(sameCrtorInrps){
                    if (obj.getCellData(i, colID) != "Y") {
                        wprom.alert("고지사항미입력 계약입니다.");
                        validFlag = true;
                    }

                    //}
                    scwin.lfn_CompChangeCheck(obj, i, colID); //계약자와의 관계s
                } else if (colID == "sCrtorRelnCd") {
                    if (obj.getCellData(i, colID) == "10"){
                        if (obj.getCellData(i, "sInrpsCd") != Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
                            wprom.alert("계약자관계를 확인하십시요.");
                            validFlag = true;
                        }
                    } else {
                        if (obj.getCellData(i, "sInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
                            wprom.alert("계약자관계를 확인하십시요.");
                            validFlag = true;
                        }
                    }
                    scwin.lfn_CompChangeCheck(obj, i, colID);
                } else if (colID == "sRqstYn") {
                    //고지사항입력여부
                    scwin.lfn_CompChangeCheck(obj, i, colID);
                } else if (colID == "sOthrInsurCnt") {
                    //타보험료사항건수
                    scwin.lfn_CompChangeCheck(obj, i, colID);
                } else if (colID == "sSubCvrgeYn") {
                    //부담보입력여부
                    scwin.lfn_CompChangeCheck(obj, i, colID);
                }
            }
        }
    }
    return validFlag;
};


/*-----------------------------------
// function 명 : lfn_sameCrtorInrps
// 내용        : 계피동일인지
-----------------------------------*/
var this_sCrtorCd = "";

scwin.lfn_sameCrtorInrps = function() { //완료

    this_sCrtorCd = medt_sCrtorCd.getValue();
    if (parent.sAgncYn == "Y") {
        this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
    }


    //계피동일인지
    var sameCrtorInrps = true;

    //피보험자 여러명은 무조건 계피상이건
    if (Ds_Pibo.getRowCount() > 1) {
        sameCrtorInrps = false;
    } else {
        if (Ds_Pibo.getCellData(0, "sInrpsCd") == this_sCrtorCd) {
            sameCrtorInrps = true;
        } else {
            sameCrtorInrps = false;
        }
    }
    return sameCrtorInrps;
};

/*-----------------------------------
// function 명 : lfn_CompChangeCheck
// 내용        : 각 항목 변경여부체크
-----------------------------------*/
scwin.lfn_CompChangeCheck = function(obj, i, colID) { //완료
    //변경여부체크
    if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
        modifyFlag = true; 
        //trace("objid1+=="+obj.ID+"==colID=="+colID+"==이전=="+obj.GetOrgColumn(i, colID)+"==이후=="+obj.GetColumn(i, colID)+"==modifyFlag=="+modifyFlag);
    } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
        modifyFlag = true; 
        //trace("objid2+=="+obj.ID+"==colID=="+colID+"==이전=="+obj.GetOrgColumn(i, colID)+"==이후=="+obj.GetColumn(i, colID)+"==modifyFlag=="+modifyFlag);
    }
};


/*-----------------------------------
// function 명 : lfn_changeTrty
// 내용        : 피보험자의 해당 특약으로 필터링
-----------------------------------*/
scwin.lfn_changeTrty = function() { //완료

    //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
    var dsListEvArray = util.getDataListEvent(Ds_Trty);
	util.removeAllDataListEvent(Ds_Trty);

    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
    //wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >= 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'",true);
	var funcFilter = function(cellData, tmpParam, rowIdx) {
		if (Ds_Trty.getCellData(rowIdx, "chk").indexOf("1") >= 0 && Ds_Trty.getCellData(rowIdx, "sScrnIndcYn").indexOf("Y") >= 0) {
    		if (Ds_Trty.getCellData(rowIdx, "nPsnPrprtGroupSeqno") == Ds_Pibo.getCellData(nFindRow,"nInrpsSeqno")) {
    			return true;
    		}
    	}
    	return false;
	}
	Ds_Trty.clearFilter();
	Ds_Trty.setColumnFilter({type:'func', colIndex:'sScrnIndcYn', key:funcFilter, condition:'and'});

    //체크된 피보험자명 삽입
	Ds_Trty.setCellData(0, "sInrpsName", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsName"));
	
    //Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
    util.setDataListEvent(Ds_Trty, dsListEvArray);
};


//---------------------------------------------------------------------------
// function 명 : lfn_TxfrYn_Check
// 내용        :  비과세 체크 
//---------------------------------------------------------------------------
scwin.lfn_TxfrYn_Check = function() { //완료
    //trace("##### C010_Div2 > lfn_TxfrYn_Check #####");
    //trace("보험기간=="+Ds_LTIDA00.SaveXML());
    var sYear10 = 0;
    sTxfrCheckFlag = "1";
    //trace("=====Ds_LTIDA51===" + Ds_LTIDA51.savexml());
    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn") == "Y") {
        // 장기보험고도화 연금저축 세팅 추가
        if (parent.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7") {
            // 업무보고서분류코드-7:연금
            cmb_sTaxPrfrYn.setValue("6"); // C-36-연금저축
            sTxfrCheckFlag = "6"; // 3-연금저축
        }
    } else {
        if (Ds_LTIDA51.getRowCount() > 0) {
            // 비과세테이블 있을때
            if (parent.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7") {
                // 업무보고서분류코드-7:연금
                sTxfrCheckFlag = "6"; // 3-연금저축
            }
        } else {
            // 신규일 경우 셋팅
            //Ds_LTIDA51.removeAll();
            wconv.clear(Ds_LTIDA51);
            util.appendRow(Ds_LTIDA51);

            // 장기보험고도화 연금저축 세팅 추가
            if (parent.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7") {
                // 업무보고서분류코드-7:연금
                cmb_sTaxPrfrYn.setValue("6"); // C-36-연금저축
                sTxfrCheckFlag = "6"; // 3-연금저축
                Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem")));
            }
        }
        if (sTxfrCheckFlag == "6") {
            // 연금저축
            Ds_LTIDA51.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
            Ds_LTIDA51.setCellData(0, "nCrChngNo", parent.Ds_LTIDA00.getCellData(0, "nCrChngNo"));
            Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem")));
            Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
            Ds_LTIDA51.setCellData(0, "sSvGdCd", "36"); // 36-연금저축
            cmb_sTaxPrfrYn.setValue("6"); // 6-연금저축
            btn_TaxSearch.setDisabled(false);
        } else {
            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
            Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
            cmb_sTaxPrfrYn.setValue("N");
        }
        if (sTxfrCheckFlag == "6") {
            cmb_sTaxPrfrYn.setDisabled(true);
        } else {
            cmb_sTaxPrfrYn.setDisabled(false);
        }
    }
};



//---------------------------------------------------------------------------
// function 명 : fn_subCheck
// 내용        : 피보험자 서브화면 입력여부 check
//---------------------------------------------------------------------------
scwin.fn_subCheck = function(nRow) { //완료
    //고지사항사항
    if (Ds_Pibo.getCellData(nRow, "sRqstYn").length > 0) {
        Ds_Pibo.setCellData(nRow, "sRqstYnName", "완료");
    } else {
        Ds_Pibo.setCellData(nRow, "sRqstYnName", "미입력");
    }

    //타보험입력사항
    if (Ds_Pibo.getCellData(nRow, "sOthrInsurCnt").length > 0) {
        Ds_Pibo.setCellData(nRow, "sOthrInsurCntName", Ds_Pibo.getCellData(nRow, "sOthrInsurCnt") + "건");
    } else {
        Ds_Pibo.setCellData(nRow, "sOthrInsurCntName", "0 건");
    }

    //사망수익자사항
    if (Ds_Pibo.getCellData(nRow, "sPftbpName").length > 0) {
    } else {
        Ds_Pibo.setCellData(nRow, "sPftbpName", "법정상속인");
    }

    //사망외수익자사항
    //if (Ds_Pibo.GetColumn(nRow, "sXcptPftbpName").length > 0) {		// 장기보험고도화
    if (Ds_Pibo.getCellData(nRow, "sXcptPftbpCd").length > 0) {
    } else {
        //Ds_Pibo.SetColumn(nRow,"sXcptPftbpName","선택");	// 장기보험고도화
        // 연금저축 특약 없을때 사망외수익 지정 안하기때문에 예외 처리
        if (parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd") == "7" && // 업무보고서분류코드-7:연금
            Ds_Trty.getRowCount() == 0) {
            Ds_Pibo.setCellData(nRow, "sXcptPftbpName", "");
        } else {
            Ds_Pibo.setCellData(nRow, "sXcptPftbpName", "선택");
        }
    }

    //부담보
    if (Ds_Pibo.getCellData(nRow, "sSubCvrgeYn") == "Y") {
        Ds_Pibo.setCellData(nRow, "sSubCvrgeYnName", "가입");
    } else {
        Ds_Pibo.setCellData(nRow, "sSubCvrgeYnName", "미가입");
    }


    //진단대상
    if (Ds_Pibo.getCellData(nRow, "sDgnsObjtYn") == "Y") {
        Ds_Pibo.setCellData(nRow, "sDgnsObjtYnName", "진단대상");
    } else {
        Ds_Pibo.setCellData(nRow, "sDgnsObjtYnName", " ");
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_sAplcCd_OnCharChanged
// 내용        : 계약자코드에서 포커스가 빠질때 사업자코드일경우 mask를 변경한다.
//---------------------------------------------------------------------------
//scwin.lfn_sAplcCd_OnCharChanged = function(obj, strPreText, strPostText) { //완료
scwin.lfn_sAplcCd_OnCharChanged = function(obj, strPreText, strPostText) { //완료

	//DisplayFormat 으로 변경

	return;

    //계약자코드 바인딩
    medt_sCrtorCd.BindDataset = "";
    if (parent.sAgncYn == "Y") {
        return;
    }
    if (wconv.length(medt_sCrtorCd.getValue()) == 10) {
        if (isBizRegNo(medt_sCrtorCd.getValue())) {
            medt_sCrtorCd.setDisplayFormat("###-##-#####");
        } else {
            medt_sCrtorCd.setDisplayFormat("######-#######");
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : medt_sCrtorCd_OnKillFocus
// 내용        : 계약자번호onKillFocus시 처리
//---------------------------------------------------------------------------
scwin.medt_sCrtorCd_OnKillFocus = function(obj) { //완료
    scwin.lfn_sAplcCd_OnCharChanged();
    this_sCrtorCd = medt_sCrtorCd.getValue();
    
    //DisplayFormat 으로 변경
    //medt_sCrtorCd 와 Ds_CrtorCd 값을 항상 동일 상태로 변경
    Ds_CrtorCd.setCellData(0, "sCrtorCd", this_sCrtorCd);
    
    if (parent.sAgncYn == "Y") {
        this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
    }
    if (wconv.trim(sCrtorCd_Backup) != "" && sCrtorCd_Backup != this_sCrtorCd) {
        //	if (Ds_LTIDA03.GetColumn(0, "sCrtorCd") !=" " && Ds_LTIDA03.GetColumn(0, "sCrtorCd") != medt_sCrtorCd.Value){
        //Ds_LTIDA03.removeAll();
        wconv.clear(Ds_LTIDA03);
        util.appendRow(Ds_LTIDA03);
        //		Ds_LTIDA03.SetColumn(0, "sCrtorCd", medt_sCrtorCd.Value);
        sCrtorCd_Backup = this_sCrtorCd;
    }
};

//---------------------------------------------------------------------------
// function 명 : medt_sCrtorCd_OnFocus
// 내용        : 계약자번호onFocus시 처리
//---------------------------------------------------------------------------
scwin.medt_sCrtorCd_OnFocus = function(obj) { //완료
	
	//DisplayFormat 으로 변경
	
	return;
	
    if (parent.sAgncYn != "Y") {
        medt_sCrtorCd.setDisplayFormat("######-#######");
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_InrpsCd_display
// 내용        : 주민번호 "*"처리
//---------------------------------------------------------------------------
scwin.lfn_InrpsCd_display = function(sInrpsCd) { //완료
    if (parent.sAgncYn == "Y") {
        smask = "######-#******";
        if (wconv.length(sInrpsCd) == 10) {
            smask = "###-##-*****";
        }
        //grd_Pibo.SetCellProp("body", 1, "mask", "");
        return gfn_convert_mask(sInrpsCd, smask);
    } else {
        return sInrpsCd;
    }
};

//---------------------------------------------------------------------------
// function 명 : Btn_IVR_OnClick
// 내용        :  IVR 3자 통화를 위한 버튼 이벤트 발생
// param 
// 1: (J : 주민등록번호, C : 카드번호, A : 계좌번호)
// 2: lfn_IVR_CallBack (콜백 함수명)
// 3 : ""  (콜백 받는 변수명 1)
// 4 : nRow (콜백 받는 변수명 2)
//---------------------------------------------------------------------------
scwin.Btn_IVR_OnClick = function(obj, nRow) { //완료
	//미사용
	return;
    ivrOpenPop("J", "", "lfn_IVR_CallBack", "", ""); // IVR 3자 통화 팝업 호출  (J : 주민등록번호, C : 카드번호, A : 계좌번호)
    // obj는 결과값을 셋팅할 fieldName				
};

//---------------------------------------------------------------------------
// function 명 : lfn_IVR_CallBack
// 내용        :  IVR 콜백함수
//---------------------------------------------------------------------------
scwin.lfn_IVR_CallBack = function(id, nRow, val) { //완료
	//미사용
	return;
    if (wconv.length(val) > 0) {
        medt_sCrtorCd.setValue(val);
        scwin.medt_sCrtorCd_OnKillFocus();
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_TaxChange
// 내용        : 세금우대선택시 세금우대가입한도조회팝업버튼 활성/비활성처리
//---------------------------------------------------------------------------
//scwin.lfn_TaxChange = function(obj, strCode, strText, nOldIndex, nNewIndex) {
scwin.lfn_TaxChange = function(info) { //완료
    this_sCrtorCd = medt_sCrtorCd.getValue();
    if (parent.sAgncYn == "Y") {
        this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
    }
    if (cmb_sTaxPrfrYn.getValue() == "Y" && wconv.length(this_sCrtorCd) == 10) {
        wprom.alert("법인은 세금우대를 가입할 수 없습니다.");
        cmb_sTaxPrfrYn.setValue("N");
    }
    if (cmb_sTaxPrfrYn.getValue() == "N") {
        btn_TaxSearch.setDisabled("true");
    } else {
        btn_TaxSearch.setDisabled("false");
    }

    //비과세 가입 안할경우 체크 로직.
    var strCode = cmb_Reln.getValue();
    if (strCode == "N") {
        Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
        sTxfrCheckFlag = "1";
    } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) < 10 && strCode == "B") {
        wprom.alert("비과세 대상이 아닙니다");
        Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
        cmb_sTaxPrfrYn.setValue("N");
        sTxfrCheckFlag = "1";
    } else if (strCode == "B") {
        Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
        sTxfrCheckFlag = "2";
        if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
        		parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && 
        		wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
            Ds_LTIDA51.setCellData(0, "sSvGdCd", "56");
        } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
        			(((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && 
        			wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || 
        			parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
            Ds_LTIDA51.setCellData(0, "sSvGdCd", "58");
        }
    } else if (strCode == "Y") {
        sTxfrCheckFlag = "1";
    } else if (strCode == "6") {
        // 연금저축
        sTxfrCheckFlag = "6";
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_searchCust
// 내용        : 고객팝업호출
//---------------------------------------------------------------------------
scwin.lfn_searchCust = function(obj) { //완료
    var pro = Promise.resolve();
    var result;
    var parentInfo = "";
    
    wconv.clear(Ds_long_mPlr);
    this_sCrtorCd = medt_sCrtorCd.getValue();
    if (parent.sAgncYn == "Y") {
        this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
    }

    //휴면계약 존재여부 확인
    var rtnValue = gfn_checkDmcyInsurByCustNo("DsWs_Dmcy", wconv.trim(this_sCrtorCd));
    if (rtnValue != "") {
        wprom.alert(rtnValue);
    }

    //계약자번호 입력여부체크
    if (mfn_IsEmpty(this_sCrtorCd)) {
        wprom.alert("계약자번호를 입력하세요.");
        medt_sCrtorCd.focus();
        return false;
    } else {
        //사업자체크
        if (this_sCrtorCd.length == 10) {
            if (!isBizRegNo(this_sCrtorCd)) {
                wprom.alert("사업자번호를 정확히 입력하세요.");
                medt_sCrtorCd.focus();
                return false;
            }
        } else {
            if (!checkPersonID(this_sCrtorCd)) {
                wprom.alert("계약자번호를 정확히 입력하세요."); //				medt_sCrtorCd.SetFocus();
                //				return false;						
            }
        }
    }
    wconv.clear(Ds_long_mPlr);
    if (wconv.length(this_sCrtorCd) == 10) {
        //법인화면 오픈  
        //107-86-24985
        if (Ds_LTIDA03.getRowCount() > 0 && wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0 && 
        //		 && (Ds_LTIDA03.getCellData(0, "sCrtorCd") == medt_sCrtorCd.Value)){
            (sCrtorCd_Backup == this_sCrtorCd)) {
            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
            parentInfo += this_sCrtorCd + "^"; //주민번호
            parentInfo += "0^"; //순번
            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
            parentInfo += "Ds_long_mPlr"; //데이터셋명	
            //parentInfo += " screenId=long"; //스크린id			 
        } else {
            scwin.medt_sCrtorCd_OnKillFocus();
            parentInfo += "^"; //고객ID
            parentInfo += this_sCrtorCd + "^"; //주민번호
            parentInfo += "0^"; //순번
            parentInfo += "2^"; //고객유형 내국인
            parentInfo += "^"; //주소구분코드 자택
            parentInfo += "^"; //주소변경회차
            parentInfo += "^"; //전화회차
            parentInfo += "^"; //발송지주소구분
            parentInfo += "^"; //발송지회차
            parentInfo += "Ds_long_mPlr"; //데이터셋명	
            //parentInfo += " screenId=long"; //스크린id
        }

        //trace("parentInfo==="+parentInfo);
        //대면/비대면체크  Y:  대면 , N : 비대면
        if (util.getGdsValue("gUseCustType") == "0") { 
            pro = pro.then(function(rtnVal) {
            	var indata  = {"parentInfo" : parentInfo,
				               "screenId" : "long"
				               };
				
				var popInfo = {
					"width"     : 810,
					"height"    : 520,  
					"indata"    : indata,
					"title"     : "법인고객 등록"
				};
				return wprom.popupOpen("/ui/cbso/CBSO012P.xml", popInfo);
            });
            pro = pro.then(function(rtnVal) {
	            //세금우대 미가입으로 변경
	            cmb_sTaxPrfrYn.setValue("N");
	            scwin.lfn_TaxChange();
        	});
        } else {
            alert("비대면 자료의 경우 해당기능을 실행할수 없습니다.");
            return;
        }
    } else {
        if (Ds_LTIDA03.getRowCount() > 0 && wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0 &&
        //		 && (Ds_LTIDA03.getCellData(0, "sCrtorCd") == medt_sCrtorCd.Value)){	
            (sCrtorCd_Backup == this_sCrtorCd)) {
            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
            parentInfo += this_sCrtorCd + "^"; //주민번호
            parentInfo += "0^"; //순번
            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
            parentInfo += "Ds_long_mPlr"; //데이터셋명	
            //parentInfo += " screenId=long"; //스크린id			
            //parentInfo += " sStandDate=" + parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
        } else {
            parentInfo += "^"; //고객ID
            parentInfo += this_sCrtorCd + "^"; //주민번호
            parentInfo += "0^"; //순번
            parentInfo += "1^"; //고객유형 내국인
            parentInfo += "^"; //주소구분코드 자택
            parentInfo += "^"; //주소변경회차
            parentInfo += "^"; //전화회차
            parentInfo += "^"; //발송지주소구분
            parentInfo += "^"; //발송지회차
            parentInfo += "Ds_long_mPlr"; //데이터셋명	
            //parentInfo += " screenId=long"; //스크린id
            //parentInfo += " sStandDate=" + parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
        }


        //trace("parentInfo==="+parentInfo);
        //고객화면 오픈  
        //대면/비대면체크  Y :  대면 , N : 비대면
        if (util.getGdsValue("gUseCustType") == "0") {
            pro = pro.then(function(rtnVal) {
            	var indata  = {"parentInfo" : parentInfo,
				               "screenId" : "long",
				               "sStandDate" : parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"),
				               "fAgntFlagPop" : "",
				               "sPlanNo" : parent.medt_PlanNo.getValue(),
				               "sHandlerID" : parent.scwin.lfn_GetDoerUser(),
				               "sScanObjtYn" : parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn")
				               };
				
				var popInfo = {
					"width"     : 800,
					"height"    : 580,  
					"indata"    : indata,
					"title"     : "개인고객등록"
				};
				
				return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);
            });
            pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
	
				if (rtnValue.Ds_long_mPlr != "") {
					Ds_long_mPlr.setJSON(rtnValue.Ds_long_mPlr);
				}

			});
        } else {
            alert("비대면 자료의 경우 해당기능을 실행할수 없습니다.");
            return;
        }
    }
    
    
    pro = pro.then(function(rtnVal) {
        if (Ds_long_mPlr.getRowCount() > 0) {
            if (parent.sAgncYn != "Y") {
                //계약자코드 바인딩
                //medt_sCrtorCd.BindDataset = "Ds_LTIDA03";
            }

            //우편수령구분 바인딩
            cmb_sMailRvadAddrFlagCd.setRef("data:Ds_LTIDA03.sMailRvadAddrFlagCd");

            //초기화
            Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호                 
            Ds_LTIDA03.setCellData(0, "nCrChngNo", "0"); //계약변경번호             
            Ds_LTIDA03.setCellData(0, "sCrtorFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //계약자구분코드           
            Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //계약자코드               
            Ds_LTIDA03.setCellData(0, "sCrtorName", Ds_long_mPlr.getCellData(0, "sName")); //계약자명                 
            Ds_LTIDA03.setCellData(0, "nCrtorAge", gfn_getInsAge(Ds_LTIDA03.getCellData(0, "sCrtorCd"), parent.Ds_LTIDA00.getCellData(0, "sSsrtDate"))); //계약자연령               
            Ds_LTIDA03.setCellData(0, "sCrtorSexFlag", scwin.lfn_getSex(Ds_LTIDA03.getCellData(0, "sCrtorCd"))); //계약자성별구분           
            Ds_LTIDA03.setCellData(0, "sCrtorCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //계약자고객ID             
            Ds_LTIDA03.setCellData(0, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
            Ds_LTIDA03.setCellData(0, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
            Ds_LTIDA03.setCellData(0, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
            Ds_LTIDA03.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
            Ds_LTIDA03.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
            Ds_LTIDA03.setCellData(0, "sMailRvadAddrFlagCd", Ds_long_mPlr.getCellData(0, "sDMAdrsTyp")); //우편물수령처주소구분코드 
            Ds_LTIDA03.setCellData(0, "nMailRvadChngSeq", Ds_long_mPlr.getCellData(0, "nAdrsChangeNo")); //우편물수령처변경회차     
            Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드     
            Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
            Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
            Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
            Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처         
            Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드       
            Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
            Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
            Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
            Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처 		 
            Ds_LTIDA03.setCellData(0, "sZip1", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 0, 3)); //우편번호
            Ds_LTIDA03.setCellData(0, "sZip2", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 3, 3)); //우편번호
            Ds_LTIDA03.setCellData(0, "sAdrs1", Ds_long_mPlr.getCellData(0, "sHomAdr1")); //집주소
            Ds_LTIDA03.setCellData(0, "sAdrsAdd", Ds_long_mPlr.getCellData(0, "sHomAdr2")); //집주소
            Ds_LTIDA03.setCellData(0, "sHomeTel1", Ds_long_mPlr.getCellData(0, "sHomeTel1")); //집전화번호
            Ds_LTIDA03.setCellData(0, "sHomeTel2", Ds_long_mPlr.getCellData(0, "sHomeTel2")); //집전화번호
            Ds_LTIDA03.setCellData(0, "sHomeTel3", Ds_long_mPlr.getCellData(0, "sHomeTel3")); //집전화번호
            Ds_LTIDA03.setCellData(0, "sOfficeTel1", Ds_long_mPlr.getCellData(0, "sOfficeTel1")); //사무실전화번호
            Ds_LTIDA03.setCellData(0, "sOfficeTel2", Ds_long_mPlr.getCellData(0, "sOfficeTel2")); //사무실전화번호
            Ds_LTIDA03.setCellData(0, "sOfficeTel3", Ds_long_mPlr.getCellData(0, "sOfficeTel3")); //사무실전화번호
            Ds_LTIDA03.setCellData(0, "sCellPhone1", Ds_long_mPlr.getCellData(0, "sCellPhone1")); //핸드폰번호
            Ds_LTIDA03.setCellData(0, "sCellPhone2", Ds_long_mPlr.getCellData(0, "sCellPhone2")); //핸드폰번호
            Ds_LTIDA03.setCellData(0, "sCellPhone3", Ds_long_mPlr.getCellData(0, "sCellPhone3")); //핸드폰번호
            Ds_LTIDA03.setCellData(0, "sFax1", Ds_long_mPlr.getCellData(0, "sFax1")); //fax번호
            Ds_LTIDA03.setCellData(0, "sFax2", Ds_long_mPlr.getCellData(0, "sFax2")); //fax번호
            Ds_LTIDA03.setCellData(0, "sFax3", Ds_long_mPlr.getCellData(0, "sFax3")); //fax번호
            Ds_LTIDA03.setCellData(0, "sEmail1", Ds_long_mPlr.getCellData(0, "sEmail1")); //이메일
            Ds_LTIDA03.setCellData(0, "RvadAddr", Ds_long_mPlr.getCellData(0, "sAdrs1") + " " + Ds_long_mPlr.getCellData(0, "sAdrs2")); //우편물수령처주소
            Ds_LTIDA03.setCellData(0, "sEnntmPftbpYn", "N"); //만기수익자입력상태
            Ds_LTIDA03.setCellData(0, "sAsmtAgntYn", "N"); //지정대리인입력상태	
            Ds_LTIDA03.setCellData(0, "sInsurPftbpYn", "N"); //보험수익자입력상태
            //피보험자, 계약자동일할때 피보험자 주소, 전화번호 update
            if (Ds_Pibo.getCellData(0, "sInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
                Ds_Pibo.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
                Ds_Pibo.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
            }
            if (parent.sAgncYn == "Y") {
                Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd"));
            }
            
            //cbs 추가
            parent.scwin.lfn_set_Tab_Info("S2", "T1");
        }
    });
    
    return pro;
};

//---------------------------------------------------------------------------
// function 명 : lfn_getSex
// 내용        : 성별을 체크한다.
//---------------------------------------------------------------------------
scwin.lfn_getSex = function(val) { //완료
    if ("1|3|5|7".indexOf(wconv.substr(val, 6, 1)) >= 0) {
        return "1";
    } else if ("2|4|6|8".indexOf(wconv.substr(val, 6, 1)) >= 0) {
        return "2";
    } else {
        return "";
    }
};


//---------------------------------------------------------------------------
// function 명 : lfn_CmmcMeanCnclYn_OnChanged
// 내용        :  통신수단 해지동의 
//---------------------------------------------------------------------------
//scwin.lfn_CmmcMeanCnclYn_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
scwin.lfn_CmmcMeanCnclYn_OnChanged = function(info) { //완료
	var strCode = cmb_CmmcMeanCnclYn.getValue();
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sCmmcMeanCnclAgreYn"))) {
		parent.util.insertColumn(parent.Ds_LTIDA00, [["sCmmcMeanCnclAgreYn","sCmmcMeanCnclAgreYn","text"]]);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
	};
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sCmmcMeanCnclAgreYn",            "sCmmcMeanCnclAgreYn",            "text"        ]    ]);
    parent.Ds_LTIDA00.setCellData(0, "sCmmcMeanCnclAgreYn", strCode);
    edt_sCrtorName.focus();
};

//---------------------------------------------------------------------------
// function 명 : cmb_CrPrtrRole_OnChanged
// 내용        : 대상고객 콤보체인지
//---------------------------------------------------------------------------
//scwin.cmb_CrPrtrRole_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
scwin.cmb_CrPrtrRole_OnChanged = function(info) { //완료
	var strCode = cmb_CrPrtrRole.getValue();
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sCrPrtrRole"))) {
		parent.util.insertColumn(parent.Ds_LTIDA00, [["sCrPrtrRole","sCrPrtrRole","text"]]);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
	};
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sCrPrtrRole",            "sCrPrtrRole",            "text"        ]    ]);
    parent.Ds_LTIDA00.setCellData(0, "sCrPrtrRole", strCode);
    //console.log("@@ sCrPrtrRole! :" + parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole"));
};

//---------------------------------------------------------------------------
// function 명 : cmb_AqamtChnlCd_OnChanged
// 내용        : 취득경로 콤보체인지
//---------------------------------------------------------------------------
//scwin.cmb_AqamtChnlCd_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
scwin.cmb_AqamtChnlCd_OnChanged = function(info) { //완료
	var strCode = cmb_AqamtChnlCd.getValue();
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sAqamtChnlCd"))) {
		parent.util.insertColumn(parent.Ds_LTIDA00, [["sAqamtChnlCd","sAqamtChnlCd","text"]]);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
	};
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sAqamtChnlCd",            "sAqamtChnlCd",            "text"        ]    ]);
    parent.Ds_LTIDA00.setCellData(0, "sAqamtChnlCd", strCode);
    //console.log("@@ sAqamtChnlCd! :" + parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd"));
};

//---------------------------------------------------------------------------
// function 명 : lfn_AsmtYn_OnChanged
// 내용        :  보험수익자 지정 변경 가능 여부
//---------------------------------------------------------------------------
//scwin.lfn_AsmtYn_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
scwin.lfn_AsmtYn_OnChanged = function(info) { //완료
	var strCode = cmb_AsmtYn.getValue();
	if (parent.util.isNull(parent.Ds_LTIDA00.getColumnIndex("sInsurPftbpAsmtYn"))) {
		parent.util.insertColumn(parent.Ds_LTIDA00, [["sInsurPftbpAsmtYn","sInsurPftbpAsmtYn","text"]]);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
	};
    //util.insertColumn(parent.Ds_LTIDA00, [        [            "sInsurPftbpAsmtYn",            "sInsurPftbpAsmtYn",            "text"        ]    ]);
    parent.Ds_LTIDA00.setCellData(0, "sInsurPftbpAsmtYn", strCode);
    edt_sCrtorName.focus();
};


//---------------------------------------------------------------------------
// function 명 : lfn_Popup
// 내용        : 팝업호출
//---------------------------------------------------------------------------
scwin.lfn_Popup = function(obj) { //완료
	
	var pro = Promise.resolve();
	
    if (sPopupFlag != "") {
        return;
    }
    var arg = {};
    this_sCrtorCd = medt_sCrtorCd.getValue();
    if (parent.sAgncYn == "Y") {
        this_sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
    }
    switch (this.getID()) {
        case "edt_sEnntmPftbpYn":
            var indata = {};
        	indata["fAgntFlag"] = "ed_Mangi"; //만기시수익자, 사망시수익자, 지정대리인 구분자
            indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd"); //계약자/피보험자관계
            indata["sCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCd"); //수익자코드(주민번호)
            indata["sName"] = Ds_LTIDA03.getCellData(0, "sEndPftbpName"); //성명
            indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCntad"); //연락처
            indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd"); //계약자/피보험자코드(주민번호)
            indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName"); //계약자/피보험자 성명
			var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
            //trace("메인파라미터 값 :::::::::::::::"+ arg);
            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
            });
            pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});
            /*
	if(length(result) != 0){
		var resultArr = split(result, "^", true);	
		
		if(Length(resultArr[0]) == 0){
			Ds_LTIDA03.SetColumn(0, "sEnntmPftbpFlagCd", "");   //만기시수익자구분코드 
			Ds_LTIDA03.SetColumn(0, "sEndPftbpRelnCd", "");     //만기수익자관계코드       
			Ds_LTIDA03.SetColumn(0, "sEndPftbpCd", "");	      //만기수익자코드           
			Ds_LTIDA03.SetColumn(0, "sEndPftbpName", "");	      //만기수익자명             
			Ds_LTIDA03.SetColumn(0, "sEndPftbpCntad", "");      //만기수익자연락처     
			
			edt_sEnntmPftbpYn.Text = "선택안됨";
		}else{
			//사업자일경우
			if(this_sCrtorCd.length == 10){
				Ds_LTIDA03.SetColumn(0, "sEnntmPftbpFlagCd", "2");   //만기시수익자구분코드 
			//내국인
			}else{
				Ds_LTIDA03.SetColumn(0, "sEnntmPftbpFlagCd", "1");   //만기시수익자구분코드 
			}
			Ds_LTIDA03.SetColumn(0, "sEndPftbpRelnCd", resultArr[0]);     //만기수익자관계코드       
			Ds_LTIDA03.SetColumn(0, "sEndPftbpCd", resultArr[3]);	      //만기수익자코드           
			Ds_LTIDA03.SetColumn(0, "sEndPftbpName", resultArr[4]);	      //만기수익자명             
			Ds_LTIDA03.SetColumn(0, "sEndPftbpCntad", resultArr[2]);      //만기수익자연락처     
			
			edt_sEnntmPftbpYn.Text = Ds_LTIDA03.getCellData(0, "sEndPftbpName");
		}
		
ldh	}	*/
            break;
            //보험수익자
            /*
  case edt_sInsurPftbpYn:
	arg = "fAgntFlag="+quote("ed_Insur");//보험수익자, 사망시수익자, 지정대리인 구분자 
    arg += " sRelnCd="+quote(Ds_LTIDA03.getCellData(0, "sInsurPftbpRelnCd"));//계약자/피보험자관계
    arg += " sCd="+quote(Ds_LTIDA03.getCellData(0, "sInsurPftbpCd"));//수익자코드(주민번호)
    arg += " sName="+quote(Ds_LTIDA03.getCellData(0, "sInsurPftbpName"));//성명
    arg += " sTelno="+quote(Ds_LTIDA03.getCellData(0, "sInsurPftbpCntad"));//연락처
    arg += " sInrpsCd="+quote(Ds_LTIDA03.getCellData(0, "sCrtorCd"));//계약자/피보험자코드(주민번호)
    arg += " sInrpsName="+quote(Ds_LTIDA03.getCellData(0, "sCrtorName"));//계약자/피보험자 성명  
     

    //trace("메인파라미터 값 :::::::::::::::"+ arg);
    //var result = Dialog("ssr_pln::B110_Pop.xml", arg, 800, 550, "TaskBar=true Resize=true"); 
     var result = open("ssr_pln::B110_Pop.xml", arg, 800, 550, "CloseFlag=False TaskBar=true Resize=true"); 
     
 /*
	if(length(result) != 0){
		var resultArr = split(result, "^", true);	
		
		if(Length(resultArr[0]) == 0){
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpFlagCd", "");   //보험수익자구분코드 
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpRelnCd", "");     //보험수익자관계코드       
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpCd", "");	      //보험수익자코드           
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpName", "");	      //보험수익자명             
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpCntad", "");      //보험수익자연락처     
			
			edt_sInsurPftbpYn.Text = "선택안됨";
		}else{
			//사업자일경우
			if(this_sCrtorCd.length == 10){
				Ds_LTIDA03.SetColumn(0, "sInsurPftbpFlagCd", "2");   //보험수익자구분코드 
			//내국인
			}else{
				Ds_LTIDA03.SetColumn(0, "sInsurPftbpFlagCd", "1");   //보험수익자구분코드 
			}
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpRelnCd", resultArr[0]);     //보험수익자관계코드       
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpCd", resultArr[3]);	      //보험수익자코드           
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpName", resultArr[4]);	      //보험수익자명             
			Ds_LTIDA03.SetColumn(0, "sInsurPftbpCntad", resultArr[2]);      //보험수익자연락처     
			
			edt_sInsurPftbpYn.Text = Ds_LTIDA03.getCellData(0, "sInsurPftbpName");
		}
		
ldh	}	*/
            break;
        case "edt_sAsmtAgntYn":
            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sInrpsCd")) {
                wprom.alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
                return false;
            }
            if (Ds_Pibo.getRowCount() > 1) {
                wprom.alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
                return false;
            }
            var indata = {};
        	indata["fAgntFlag"] = "ed_Proxy";
            //만기시수익자, 사망시수익자, 지정대리인 구분자
            indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd");
            //계약자/피보험자관계
            indata["sCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCd");
            //수익자코드(주민번호)
            indata["sName"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntName");
            //성명
            indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad");
            //연락처
            indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName");
            //계약자/피보험자 성명
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
            });
            pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});
            /*
                		if(length(result) != 0){
                			var resultArr = split(result, "^", true);	
                			if(Length(resultArr[0]) == 0){
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntFlagCd", "");   //지정대리인구분코드 
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntRelnCd", "");     //지정대리인관계코드       
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntCd", "");	      //지정대리인코드           
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntName", "");	      //지정대리인명             
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntCntad", "");      //지정대리인연락처     
                				
                				edt_sAsmtAgntYn.Text = "선택안됨";
                			}else{				
                				//사업자일경우
                				if(this_sCrtorCd.length == 10){
                					Ds_LTIDA03.SetColumn(0, "sAsmtAgntFlagCd", "2");   //지정대리인구분코드 
                				//내국인
                				}else{
                					Ds_LTIDA03.SetColumn(0, "sAsmtAgntFlagCd", "1");   //지정대리인구분코드 
                				}				
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntRelnCd", resultArr[0]);     //지정대리인관계코드       
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntCd", resultArr[3]);	      //지정대리인코드           
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntName", resultArr[4]);	      //지정대리인명             
                				Ds_LTIDA03.SetColumn(0, "sAsmtAgntCntad", resultArr[2]);      //지정대리인연락처  
                				
                				edt_sAsmtAgntYn.Text = Ds_LTIDA03.getCellData(0, "sAsmtAgntName");
                			}
                		}
                ldh		*/
            break;
        case "btn_TaxSearch":
            //myplatform 접속 환경 구분
            var sConnectFlag = ((util.getGdsValue("gFaceSalesYN") == "Y") ? util.getGdsValue("gFaceSalesYN") : "N");
            if (sConnectFlag == "Y") {
                /*수작업 변환 개발자 가이드(테스트 중)
                    dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
                //util.insertColumn(gds.gDs_LinkArg, [[ "sCrtorCd",                        "sCrtorCd",                        "text"                    ]                ]);
                //util.insertColumn(gds.gDs_LinkArg, [[ "sTaxPrfrFlag",                        "sTaxPrfrFlag",                        "text"                   ]                ]);
                //gds.gDs_LinkArg.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd")); // 계약자코드(주민번호)
                //gds.gDs_LinkArg.setCellData(0, "sTaxPrfrFlag", sTxfrCheckFlag); // sTxfrCheckFlag 1-세금우대, 2-비과세, 6-연금저축
                var oDsJson = [{"sCrtorCd" : Ds_LTIDA03.getCellData(0, "sCrtorCd"),
									"sTaxPrfrFlag":sTxfrCheckFlag
							  }];
				gds.gDs_LinkArg.setJSON(oDsJson);
				gfn_OpenLinkPage("CBSC068M");
            } else {
                // if (gUserIP != "10.1.6.67") {
                // gDs_LinkArg.clearData();
                // gDs_LinkArg.InsertRow(0);
                // gDs_LinkArg.AddColumn("nCrtorCd");
                // gDs_LinkArg.AddColumn("nSvKind");
                // gDs_LinkArg.setColumn(0,"nCrtorCd", medt_sCrtorCd.Value);
                // gDs_LinkArg.setColumn(0,"nSvKind", "36");
                // var Rst = Dialog("pay_ptm::G440_Pop.xml", gDs_LinkArg, 780, 580);	// G440_Pop-세금우대전금융기관 가입내역 조회
                // } else {
                // G430-세금우대한도조회 메인화면 오픈
                //UserNotify(2, Ds_Pibo.getCellData(0, "sInrpsCd") + "&sTaxPrfrFlag=6"); //}
            }
            break;
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_B110_CallBack
// 내용        :  (수익자 팝업에서 해당 함수 호출하여 값 세팅) 
//---------------------------------------------------------------------------
scwin.lfn_B110_CallBack = function(rtnValue) { //완료

	edt_sB110PopValue.setValue(rtnValue.edt_sB110PopValue);
	fAgntFlag.setValue(rtnValue.fAgntFlag);
    fAgntFlagIdx.setValue(rtnValue.fAgntFlagIdx);

    switch (fAgntFlag.getValue()) {
        case "ed_Mangi":
            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
                if (wconv.length(resultArr[0]) == 0) {
                    Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드 
                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처     
                    edt_sEnntmPftbpYn.setValue("선택안됨");
                } else {
                    //사업자일경우
                    if (this_sCrtorCd.length == 10) {
                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "2"); //만기시수익자구분코드 
                        //내국인
                    } else {
                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "1"); //만기시수익자구분코드 
                    }
                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", resultArr[0]); //만기수익자관계코드       
                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", resultArr[3]); //만기수익자코드           
                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", resultArr[4]); //만기수익자명             
                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", resultArr[2]); //만기수익자연락처     
                    edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
                }
            }
            break;
        case "ed_Proxy":
            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sInrpsCd")) {
                wprom.alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
                return false;
            }
            if (Ds_Pibo.getRowCount() > 1) {
                wprom.alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
                return false;
            }
            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
                var resultArr = edt_sB110PopValue.getValue().split( "^");
                if (wconv.length(resultArr[0]) == 0) {
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드 
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처     
                    edt_sAsmtAgntYn.setValue("선택안됨");
                } else {
                    //사업자일경우
                    if (this_sCrtorCd.length == 10) {
                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "2"); //지정대리인구분코드 
                        //내국인
                    } else {
                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "1"); //지정대리인구분코드 
                    }
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", resultArr[0]); //지정대리인관계코드       
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", resultArr[3]); //지정대리인코드           
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", resultArr[4]); //지정대리인명             
                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", resultArr[2]); //지정대리인연락처  
                    edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
                }
            }
            break;
        case "ed_Dead":
            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
                var resultArr = edt_sB110PopValue.getValue().split( "^");
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpCd", resultArr[3]); //수익자코드           
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpName", resultArr[4]); //수익자명             
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpTelno", resultArr[2]); //수익자연락처     
                //				alert("resultArr[3] ==> " + resultArr[3]);    
                if (!mfn_IsEmpty(resultArr[3])) {
                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "2"); //기명수익자
                } else {
                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "1"); //법정상속인
                }
                btn_Insu.setDisabled(true);
                btn_Simsa.setDisabled(true);
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
            }
            break;
        case "ed_Xcpt":
            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
                var resultArr = edt_sB110PopValue.getValue().split( "^");
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpCd", resultArr[3]); //수익자코드           
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpName", resultArr[4]); //수익자명             
                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpTelno", resultArr[2]); //수익자연락처     
                //				alert("resultArr[3] ==> " + resultArr[3]);    
                if (!mfn_IsEmpty(resultArr[3])) {
                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "2"); //기명수익자
                } else {
                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "1"); //법정상속인
                }
                btn_Insu.setDisabled(true);
                btn_Simsa.setDisabled(true);
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
            }
            break;
    }
};


//---------------------------------------------------------------------------
// function 명 : lfn_PiboLIst_OnCellClick
// 내용        : 피보험자그리드 클릭시 처리 
//---------------------------------------------------------------------------
scwin.lfn_PiboLIst_OnCellClick = function( nRow, nCell) { //완료
    var pro = Promise.resolve();
    var arg = {};
    var colNm = grd_Pibo.getColumnID(nCell);
    
    switch (colNm) {
        case "sel":
            //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
            for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
                if (nRow == i) {
                    Ds_Pibo.setCellData(i, "sel", "1");
                } else {
                    Ds_Pibo.setCellData(i, "sel", "0");
                }
            }
            scwin.lfn_changeTrty();
            break;
        case "sInrpsCd":
            var indata = { "sRow" : nRow };
            var pObj = { "Ds_LTIDA00" : parent.Ds_LTIDA00,
						 "Ds_Pibo" : Ds_Pibo
						} 
            pro = pro.then(function(rv) {
                //Ds_Pibo SEQ
                var popInfo = {
								"width"     : 1120,
								"height"    : 710,  
								"indata"    : indata,
								"title"     : "피보험자 누적",
								"parentObject" : pObj
							  };
				return wprom.popupOpen("/ui/cbsc/CBSC128P.xml", popInfo);
            });
            break;
        case "sRqstYnName":
            var indata = {};
			indata["sRqstYn"] = Ds_Pibo.getCellData(nRow, "sRqstYn");
			
			//고지사항입력여부
			/*if (Ds_LTIDA00.GetColumn(0, "sGdCd") == "2801"){
					arg += " sDriveYn=" + quote("1");//운전구분	
				}else{
					if(parent.Tab_Step1.DsWs_PrdAttr.GetColumn(0,"NotcGdFlag") == "01" || parent.Tab_Step1.DsWs_PrdAttr.GetColumn(0,"NotcGdFlag") == "02"){
						arg += " sDriveYn="+quote("1");//운전구분
					}else{
						arg += " sDriveYn="+quote("0");//운전구분
					}
				}*/
			if (wconv.length(parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "NotcGdFlag")) > 0) {
				indata["sNotcGdFlag"] = parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "NotcGdFlag");
			} else {
				indata["sNotcGdFlag"] = "00";	//고지상품구분(운전구분을 고지상품구분으로 대체)
			}
			indata["sInrpsCd"] = Ds_Pibo.getCellData(nRow, "sInrpsCd");
			//피보험자코드
			indata["sInrpsName"] = Ds_Pibo.getCellData(nRow, "sInrpsName");
			//성명
			indata["sCrtorRelnName"] = grd_Pibo.getCellDisplayData(nRow, "sCrtorRelnCd");
			//관계명
			indata["sPlanNo"] = parent.medt_PlanNo.getValue(); 
			//설계번호
			indata["sPsnGroupFlgcd"] = parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
			//개인단체구분
			indata["nPsnGroupSeqno"] = Ds_Pibo.getCellData(nRow, "nInrpsSeqno");
			//seq
			indata["sSsrtDate"] = parent.Ds_LTIDA00.getCellData(0, "sSsrtDate"); 
			//청약일자
			indata["sDrveFlagCd"] = Ds_Pibo.getCellData(nRow, "sDrveFlagCd");
			//운전구분
			indata["sJobName"] = Ds_Pibo.getCellData(nRow, "sJobName");
            //운전구분
            //저축상품 여부
            var sSvtYn = "N";
            if (parent.DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2") {
                sSvtYn = "Y";
            }
            indata["sSvtYn"] = sSvtYn;
            
            
            var sPlanCd = "";
            if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
                sPlanCd = parent.Tab_Step1.cmb_Plan.getValue();
            } else {
                sPlanCd = Ds_Pibo.getCellData(nRow, "sApplPlanCd");
            }
            var pObj = { 	"Ds_Pibo" : Ds_Pibo,      // 피보험자 정보 Ds 
   							"Ds_LTIDA00" : parent.Ds_LTIDA00   // 보험 기본사항 정보 Ds  
  						} 
            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 880,
					"height"    : 885,  
					"indata"    : indata,
					"title"     : "피보험자고지사항",
					"parentObject" : pObj
				};
				return wprom.popupOpen("/ui/cbsc/CBSC129P.xml", popInfo);
			});
			pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
				if (!mfn_IsEmpty(rtnValue)) {
                   Ds_Pibo.setCellData(nRow, "sRqstYn", rtnValue);
                   if (wconv.length(rtnValue) > 0) {
                       btn_Insu.setDisabled(true);
                       btn_Simsa.setDisabled(true);
                       parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
                   }
               }
			});
            break;
        case "sOthrInsurCntName":
            // 장기보험고도화 - 보장특약이 없는 경우 타보험가입사항 팝업 오픈 안하게
            if (Ds_Trty.getRowCount() == 0) {
                break;
            }
            var indata = {};
        	indata["sPlanNo"] = parent.medt_PlanNo.getValue();
            //설계번호
			indata["sPsnGroupFlgcd"] = parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
            //개인단체구분
            indata["sPsnPrprtGroupSeqno"] = Ds_Pibo.getCellData(nRow, "nInrpsSeqno");
            //Ds_Pibo.GetColumn(0, "nInrpsSeqno"));//seq
            indata["sCrChngNo"] = 0;
            //quote(Ds_Pibo.GetColumn(0, "nCrChngNo"));//변경일련번호
            indata["nCount"] = Ds_Pibo.getCellData(nRow, "sOthrInsurCnt");

            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 795,
					"height"    : 415,  
					"indata"    : indata,
					"title"     : "타보험 가입 사항"
				};
                return wprom.popupOpen("/ui/cbsc/CBSC114P.xml", popInfo);
                //타보험사항건수
            });
            pro = pro.then(function(rv) {
               	var rtnValue = wprom.getReturnData();
				if (!mfn_IsEmpty(rtnValue)) {
                    Ds_Pibo.setCellData(nRow, "sOthrInsurCnt", rtnValue);
                }
            });
            break;
        case "sPftbpName":
            //if(Ds_Pibo.getCellData(nRow, "sMinsrRelnCd") != "10"){
            //	alert("사망수익자는 주피보험자만 입력 가능합니다.");
            //	return;
            //} //2013-03-26 종피의 경우도 입력 가능 수정.
            // 장기보험고도화 - 보장특약이 없는 경우 사망수익자 지정 안하게
            if (Ds_Trty.getRowCount() == 0) {
                break;
            }
            var indata = {};
            //if(Ds_Pibo.GetColumn(nRow, "sMinsrRelnCd") != "10"){
            //	alert("사망수익자는 주피보험자만 입력 가능합니다.");
            //	return;
            //} //2013-03-26 종피의 경우도 입력 가능 수정.
            indata["fAgntFlag"] = "ed_Dead";
            //만기시수익자, 사망시수익자, 지정대리인 구분자
            indata["sRelnCd"] = Ds_Pibo.getCellData(nRow, "sPftbpInrpsRelnCd");
            //계약자/피보험자관계
            indata["sCd"] = Ds_Pibo.getCellData(nRow, "sPftbpCd");
            //수익자코드(주민번호)
            indata["sName"] = Ds_Pibo.getCellData(nRow, "sPftbpName");
            //성명
            indata["sTelno"] = Ds_Pibo.getCellData(nRow, "sPftbpTelno");
            //연락처
            indata["sInrpsCd"] = Ds_Pibo.getCellData(nRow, "sInrpsCd");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsName"] = Ds_Pibo.getCellData(nRow, "sInrpsName");
            //계약자/피보험자 성명 
            indata["fAgntFlagIdx"] = nRow;
            //계약자/피보험자 성명  
            //trace("메인파라미터 값 :::::::::::::::"+ arg);
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
            //계약자/피보험자 성명  
            //trace("메인파라미터 값 :::::::::::::::"+ arg);
            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
            });
            pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				console.log("===> rtnValue edt_sEnntmPftbpYn");
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});     	
            /*	if(length(result) != 0){
				var resultArr = split(result, "^", true); 
				Ds_Pibo.SetColumn(nRow, "sPftbpInrpsRelnCd", resultArr[0]);     //수익자관계코드       
				Ds_Pibo.SetColumn(nRow, "sPftbpInrpsRelnName", resultArr[1]);     //수익자관계코드명
				Ds_Pibo.SetColumn(nRow, "sPftbpCd", resultArr[3]);       //수익자코드           
				Ds_Pibo.SetColumn(nRow, "sPftbpName", resultArr[4]);       //수익자명             
				Ds_Pibo.SetColumn(nRow, "sPftbpTelno", resultArr[2]);      //수익자연락처     
//				alert("resultArr[3] ==> " + resultArr[3]);    
				if (!mfn_IsEmpty(resultArr[3])){
					Ds_Pibo.SetColumn(nRow, "sPftbpFlagCd", "2");     //기명수익자
				}else{
					Ds_Pibo.SetColumn(nRow, "sPftbpFlagCd", "1");     //법정상속인
				}
				
				btn_Insu.Enable = false;
				btn_Simsa.Enable = false;
				parent.Ds_LTIDA00.SetColumn(0,"sPlanProgRankCd","20");
			}  
			 */
            break;
        case "sXcptPftbpName":
            //if(Ds_Pibo.getCellData(nRow, "sMinsrRelnCd") != "10"){
            //	alert("사망외수익자는 주피보험자만 입력 가능합니다.");
            //	return;
            //}
            // 장기보험고도화 - 보장특약이 없는 경우 사망외수익자 지정 안하게
            if (Ds_Trty.getRowCount() == 0) {
                break;
            }
            var indata = {};
            //if(Ds_Pibo.GetColumn(nRow, "sMinsrRelnCd") != "10"){
            //	alert("사망외수익자는 주피보험자만 입력 가능합니다.");
            //	return;
            //}
            //} //2013-03-26 종피의 경우도 입력 가능 수정.
            indata["fAgntFlag"] = "ed_Xcpt";
            //만기시수익자, 사망시수익자, 지정대리인, 사망외수익자 구분자
            indata["sRelnCd"] = Ds_Pibo.getCellData(nRow, "sXcptPftbpInrpsRelnCd");
            //계약자/피보험자관계
            indata["sCd"] = Ds_Pibo.getCellData(nRow, "sXcptPftbpCd");
            //수익자코드(주민번호)
            indata["sName"] = Ds_Pibo.getCellData(nRow, "sXcptPftbpName");
            //성명
            indata["sTelno"] = Ds_Pibo.getCellData(nRow, "sXcptPftbpTelno");
            //연락처
            indata["sInrpsCd"] = Ds_Pibo.getCellData(nRow, "sInrpsCd");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsName"] = Ds_Pibo.getCellData(nRow, "sInrpsName");
            //계약자/피보험자 성명
            indata["fAgntFlagIdx"] = nRow;
            //계약자/피보험자 성명  
            //trace("메인파라미터 값 :::::::::::::::"+ arg);
            //var result = open("ssr_pln::B110_Pop.xml", arg, 800, 550, "CloseFlag=False TaskBar=true Resize=true");
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
            //계약자/피보험자 성명  
            //trace("메인파라미터 값 :::::::::::::::"+ arg);
            pro = pro.then(function(rv) {
				var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
            });
            pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});        
            break;
        case "sSubCvrgeYnName":
            // 장기보험고도화 - 보장특약이 없는 경우 부담보 팝업 오픈 안하게
            if (Ds_Trty.getRowCount() == 0) {
                break;
            }
            var sPlanProgRankCd = parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
            //51 인수요청상태,인수심사완료에서만 활성화. && 인수심사 권한이 있는 사람만(장기업무부일때만 승인처리가능).
            if (((sPlanProgRankCd >= "52" || sPlanProgRankCd == "00")) && nfn_checkAuthByID(SOBJ_LOAD, DOBJ_LOAD, "ds_code", util.getGdsValue("gUserID"), "22040")) {
                //건강보험일때만 부담보 입력받음(특정부위부담보여부가 Y).
                if (parent.Tab_Step1.DsWs_PrdAttr.getCellData(0, "SpclPartDsasSbcvrYn") == "Y") {
                    var indata = {};
                	indata["sPlanNo"] = parent.medt_PlanNo.getValue();	//설계번호
                	indata["sInsurStrtdate"] = parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //개시일
                	indata["sInsurEndDate"] = parent.Ds_LTIDA00.getCellData(0, "sInsurEndDate"); //종료일
                	indata["nInrpsSeqno"] = Ds_Pibo.getCellData(nRow, "nInrpsSeqno");	//seq
                	indata["sCrChngNo"] = 0;
                	var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00} 
					pro = pro.then(function(rv) {
						var popInfo = {
							"width"     : 820,
							"height"    : 634,  
							"indata"    : indata,
							"title"     : "특정부위.질병 부담보",
							parentObject : pObj
						};
		                return wprom.popupOpen("/ui/cbsc/CBSC126P.xml", popInfo);
		            });
		            pro = pro.then(function(rv) {
                        var rtnValue = wprom.getReturnData();
						if (!mfn_IsEmpty(rtnValue)) {
                            Ds_Pibo.setCellData(nRow, "sSubCvrgeYn", rtnValue);
                            if (wconv.length(rtnValue) > 0) {
                                btn_Insu.setDisabled(true);
                                btn_Simsa.setDisabled(true);
                            }
                        }
                    });
                }
            }
            break;
        default:
            break;
    }
    pro = pro.then(function(rtnVal) {
        scwin.fn_subCheck(nRow);
    });
    return pro;
};



/*-----------------------------------
// function 명 : lfn_searchPibo
// 내용        : 피보험자에 해당하는 특약정보를 조회한다.
-----------------------------------*/
scwin.lfn_searchPiboTrty = function(obj, nRow) { //완료 미사용
	
	return util.toDoAlert("lfn_searchPiboTrty 미사용");
	
    wconv.clear(DsWs_InsurTerm);
    wconv.clear(DsWs_PaymTerm);
    wconv.clear(DsWs_Trty);
    wconv.clear(DsWs_Warning);
    /*
    SOBJ.WSDL = gds.gWsdlBasis;
    DsWs_Warning.DataObject = "DOBJ_PiboTrty";
    var MethodObj = gfn_CreateMethodObj(SOBJ, "com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
    gfn_SetParam(MethodObj, "sPlanNo", parent.medt_PlanNo.Value); //설계번호
    gfn_SetParam(MethodObj, "sGdCd", parent.Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
    gfn_SetParam(MethodObj, "sGnrzCd", parent.Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
    gfn_SetParam(MethodObj, "sStndDate", parent.Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
    if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
        gfn_SetParam(MethodObj, "sPlanCd", parent.Tab_Step1.cmb_Plan.Value); //플랜코드
        gfn_SetParam(MethodObj, "sPlanName", parent.Tab_Step1.cmb_Plan.Text); //플랜명
    } else {
        gfn_SetParam(MethodObj, "sPlanCd", Ds_Pibo.getCellData(nRow, "sApplPlanCd")); //플랜코드
        gfn_SetParam(MethodObj, "sPlanName", Ds_Pibo.getCellData(nRow, "sApplPlanName")); //플랜명 
    }
    gfn_SetParam(MethodObj, "sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd")); //개인단체구분코드
    gfn_SetParam(MethodObj, "sResno", Ds_Pibo.getCellData(nRow, "sInrpsCd")); //피보험자주민번호
    gfn_SetParam(MethodObj, "nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno")); //일련번호
    var exArr = wconv.split(parent.Tab_Step1.cmb_InsurTermPaymTerm.Value, "/", true);
    var sInsurTermCd = exArr[0];
    var sPaymTermCd = exArr[1];
    gfn_SetParam(MethodObj, "sInsurTermCd", sInsurTermCd); //보험기간
    gfn_SetParam(MethodObj, "sPaymTermCd", sPaymTermCd); //납입기간	
    DsWs_Warning.DataObject = "DOBJ_PiboTrty";
    //보험기간
    DsWs_InsurTerm.DataObject = "DOBJ_PiboTrty";
    //납입기간
    DsWs_PaymTerm.DataObject = "DOBJ_PiboTrty";
    DsWs_Trty.DataObject = "DOBJ_PiboTrty";

    //특약 xpath 변경
    DsWs_Trty.XPath = "//hashtable/data[@hashkey='multi']/vector/data/multi";
    DsWs_PaymTerm.XPath = "//hashtable/data[@hashkey='PaymTerm']/vector/data/multi";

    //trace(replace(gfn_XmlEncoder(MethodObj), "><", ">\n<"));
    var result = gfn_CallService(SOBJ, DOBJ_PiboTrty, MethodObj);
    */
	var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty");
	MethodObj.setId("getPiboTrty");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam( "sPlanNo", parent.medt_PlanNo.Value); //설계번호
    MethodObj.setParam( "sGdCd", parent.Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
    MethodObj.setParam( "sGnrzCd", parent.Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
    MethodObj.setParam( "sStndDate", parent.Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
    if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
        MethodObj.setParam( "sPlanCd", parent.Tab_Step1.cmb_Plan.Value); //플랜코드
        MethodObj.setParam( "sPlanName", parent.Tab_Step1.cmb_Plan.Text); //플랜명
    } else {
        MethodObj.setParam( "sPlanCd", Ds_Pibo.getCellData(nRow, "sApplPlanCd")); //플랜코드
        MethodObj.setParam( "sPlanName", Ds_Pibo.getCellData(nRow, "sApplPlanName")); //플랜명 
    }
    MethodObj.setParam( "sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd")); //개인단체구분코드
    MethodObj.setParam( "sResno", Ds_Pibo.getCellData(nRow, "sInrpsCd")); //피보험자주민번호
    MethodObj.setParam( "nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno")); //일련번호
    var exArr = parent.Tab_Step1.cmb_InsurTermPaymTerm.getValue().split( "/");
    var sInsurTermCd = exArr[0];
    var sPaymTermCd = exArr[1];
    MethodObj.setParam( "sInsurTermCd", sInsurTermCd); //보험기간
    MethodObj.setParam( "sPaymTermCd", sPaymTermCd); //납입기간	
	
	MethodObj.setUrl("/contract/CBSC077SController.do");
	MethodObj.setXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");	
	MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	MethodObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	MethodObj.addXPath("//WARNING");
	MethodObj.setXPathDs();  // XPath 전체 경로 사용할 경우	
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));    // 특약 정보 Ds 셋팅(Ds_Trty)
	DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));    // 특약 정보 Ds 셋팅(Ds_Trty)
	DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));    // 특약 정보 Ds 셋팅(Ds_Trty)
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
	//util.setCompBindRefresh("DsWs_Team");
	//util.setRowPosition(DsWs_Team, 0);    
    //trace(replace(gfn_XmlEncoder(DOBJ_PiboTrty.Value), "><", ">\n<"));
    if (DsWs_Warning.getRowCount() != 0) {
        wprom.alert(DsWs_Warning.getCellData(0, "msg"));
        return;
    } else {
        //trace("보험기간=="+DsWs_InsurTerm.SaveXML()); 
        //trace("납입기간=="+DsWs_PaymTerm.SaveXML()); 
        //trace("피보험자=="+DsWs_Trty.SaveXML()); 
        //특약세팅
        wconv.copy(Ds_Trty, "DsWs_Trty");
        util.insertColumn(Ds_Trty, [            [                "sInrpsName",                "sInrpsName",                "text"            ]        ]); //피보험자성명필드추가
        //체크된 피보험자명 삽입
        Ds_Trty.setCellData(0, "sInrpsName", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsName"));

        //특약 체크된것과 화면출력특약만 화면에 보여줌
        wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >== 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0",true);
    }

    //피보험자 체크박스 플래그 초기화
    piboCheckFlag = false;
};



//---------------------------------------------------------------------------
// function 명 : fn_riskInfo
// 내용        : 즉시고위험고객분류대상 (자금세탁방지 관련지침 적용) 
// 2014.10.08 추가 By SDJ (N1410-00035)
//---------------------------------------------------------------------------
scwin.fn_riskInfo = function(obj) { //완료
    var pro = Promise.resolve();
    pro = pro.then(function(rv) {
		var popInfo = {
			"width"     : 556,
			"height"    : 529,  
			"title"     : "즉시 고위험 고객"
		};
    	return wprom.popupOpen("/ui/cbsc/CBSC099P.xml", popInfo);
	});
};

//---------------------------------------------------------------------------
// function 명 : fn_QAapproval
// 내용        : QA심의결재.
//---------------------------------------------------------------------------
scwin.fn_QAapproval = function(obj) { //완료
    var pro = Promise.resolve();
    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
        if (Ds_Pibo.getCellData(i, "sRqstYn") != "Y") {
            wprom.alert("고지사항 미입력 계약입니다. 고지사항 입력 후 QA 신청바랍니다.");
            return;
        }
    }
    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20") {
        wprom.alert("다음버튼을 눌러 청약사항을 저장 후 QA심사 신청 바랍니다.");
        return;
    }
    
    
    var indata = {};
	indata["sPlanNo"] = parent.medt_PlanNo.getValue();
	indata["rqstFlag"] = "46";

    pro = pro.then(function(rv) {
		var popInfo = {
			"width"     : 750,
			"height"    : 465,  
			"indata"    : indata,
			"title"     : "QA심의결재",
		};
        //요청승인구분(46:QA요청  49:QA승인)
	    return wprom.popupOpen("/ui/cbsc/CBSC007P.xml", popInfo);
	});
	
	pro = pro.then(function(rv) {
		var rtnValue = wprom.getReturnData();
      	if (wconv.length(rtnValue) != 0) {
            var rqstRetArr = wconv.split(rtnValue, "^", true);
            if (rqstRetArr[0] == "45") {
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "45");
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "QA대상");
                edt_insu.setValue("QA대상");

                //2011.04.26 김상운 추가(메인화면 품의결과 화면 표시)
                parent.Ds_LTIDA00.setCellData(0, "sConuResltCd", "11");
                parent.scwin.lfn_setConuReslt();
                edt_sPlanProgRankCd.setValue(rqstRetArr[1]); //요청승인구분명
                edt_UdrtkLmitCnt.setValue(rqstRetArr[2]); //제한건수
                //화면비활성처리
                parent.scwin.lfn_ComponentEnable(parent.Tab_Step2, "", false);

                // 이력 저장(심사)
                parent.scwin.saveHistory("3");
            }
        }
    });

    return pro;
};



// 인수심사 리스트 조회
scwin.lfn_simsa = function(obj) { //완료
        //	if(Ds_LTIDA15.GetRowCount() == 0){
    //		alert("인수제한 사항이 없습니다");
    //		return false;
    //	}
console.log("===> lfn_simsa : "+   JSON.stringify(Ds_LTIDA15.getAllJSON()));
    var pro = Promise.resolve();
	pro = pro.then(function(rv) {
		var pObj = {	"Ds_LTIDA00" : parent.Ds_LTIDA00,
						"Ds_Pibo" : Ds_Pibo, 							// 피보험자 정보 Ds Set 
						"Ds_LTIDA03" : Ds_LTIDA03,
						"Ds_LTIDA15" : Ds_LTIDA15,
						"medt_PlanNo" : parent.medt_PlanNo,
						"edt_sGdCdNm" : parent.edt_sGdCdNm};
		var popInfo = {
			"width"     : 834,
			"height"    : 480,  
			"title"     : "인수제한사유조회",
			parentObject : pObj
		};
		return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);
	});
    
};



//---------------------------------------------------------------------------
// function 명 : fn_approval
// 내용        : 인수심의결재.
//---------------------------------------------------------------------------
scwin.fn_approval = function(obj) { //완료
    var pro = Promise.resolve();
    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
        if (Ds_Pibo.getCellData(i, "sRqstYn") != "Y") {
            wprom.alert("고지사항 미입력 계약입니다. 고지사항 입력 후 인수심사 신청바랍니다.");
            return;
        }
    }



    //QA여부 체크 
    if (parent.DsWs_PrdAttr.getCellData(0, "QAObjtYn") == "Y" && (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") < "49")) {
        wprom.alert("QA 확인 완료 후 인수심사 신청 바랍니다.");
        return;
    }
    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20") {
        wprom.alert("다음버튼을 눌러 청약사항을 저장 후 인수심사 신청 바랍니다.");
        return;
    }
    var arg = {};
    var indata = {};
    indata["sPlanNo"] = parent.medt_PlanNo.getValue();
    indata["rqstFlag"] = "52";	//요청승인구분(52:인수요청  56:인수승인)
    pro = pro.then(function(rv) {
		var popInfo = {
			"width"     : 740,
			"height"    : 680,  
			"indata"    : indata,
			"title"     : "인수심의결재"
		};
        return wprom.popupOpen("/ui/cbsc/CBSC165P.xml", popInfo);
	});
    pro = pro.then(function(rv) {
		var rtnValue = wprom.getReturnData();
        if (wconv.length(rtnValue) != 0) {
            var rqstRetArr = rtnValue.split("^");
            if (rqstRetArr[0] == "52") {
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "52");
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사요청");
                edt_insu.setValue("심사요청");

                //2011.04.26 김상운 추가(메인화면 품의결과 화면 표시)
                parent.Ds_LTIDA00.setCellData(0, "sConuResltCd", "11");
                parent.lfn_setConuReslt();
                edt_sPlanProgRankCd.Text = rqstRetArr[1]; //요청승인구분명
                edt_UdrtkLmitCnt.setValue(rqstRetArr[2]); //제한건수
                //화면비활성처리
                parent.lfn_ComponentEnable(parent.Tab_Step2, "", false);

                // 이력 저장(심사)
                parent.saveHistory("3");
            }
        }
    });
    return pro;
};



//---------------------------------------------------------------------------
// function 명 : lfn_TxfrLimitCheck
// 내용        :  비과세 한도 체크 
//---------------------------------------------------------------------------
// function lfn_TxfrLimitCheck()
// {
////trace("##### C010_Div2 > lfn_TxfrLimitCheck > sTxfrCheckFlag ===> " + sTxfrCheckFlag);
////trace("##### C010_Div2 > lfn_TxfrLimitCheck > parent.Ds_LTIDA00.GetColumn(0, sTaxPrfrYn) ===> " + parent.Ds_LTIDA00.GetColumn(0, "sTaxPrfrYn"));
////trace("##### C010_Div2 > lfn_TxfrLimitCheck > Ds_LTIDA51.GetColumn(0, sTxfrYn) ===> " + Ds_LTIDA51.GetColumn(0, "sTxfrYn"));
////trace("##### C010_Div2 > lfn_TxfrLimitCheck > Ds_LTIDA51.GetColumn(0, sSvGdCd) ===> " + Ds_LTIDA51.GetColumn(0, "sSvGdCd"));
// var nSvKind = Ds_LTIDA51.GetColumn(0, "sSvGdCd");
// DsWs_SendTax.Clear();
// DsWs_SendTaxList.Clear();
// SOBJ_Search.WSDL = gWsdlBasis;
// var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.pay.ptm.task.GEG440Task", "sendSelectFinaOrgn", "", "");
// gfn_SetParam(MethodObj, "sTermNo", 		gUserCenterCode);		//입력지점	
// gfn_SetParam(MethodObj, "sTrmnUserID" , gUserId);				//단말기조작자ID
// gfn_SetParam(MethodObj, "sTrmnUserNm" , gUserEmpName);			//단말기조작자성명
// gfn_SetParam(MethodObj, "nCrtorCd", 	medt_sCrtorCd.Value);	//계약자코드
// gfn_SetParam(MethodObj, "nSvKind",		nSvKind);				//조회 저축 종류
// if (length(medt_sCrtorCd.Value) == 10) {
// gfn_SetParam(MethodObj, "nCrtorCdFlag", 2);	//사업자번호 2
// } else if(length(medt_sCrtorCd.Value) == 13) {
// gfn_SetParam(MethodObj, "nCrtorCdFlag", 1);	//주빈번호 1
// }
// if (nSvKind <> "") {
// DsWs_SendTaxList.XPath = "//*/vector/data/TAX0210";
// DsWs_SendTax.XPath = "//*/TAX0021";
// }
// DsWs_Warning.DataObject ="DOBJ_DataSearch";
// gfn_CallService(SOBJ_Search, DOBJ_DataSearch, MethodObj);
////trace(replace(gfn_XmlEncoder(DOBJ_DataSearch.Value), "><", ">\n<"));
////tracee("##### C010_Div2 > lfn_TxfrLimitCheck > DsWs_SendTax.GetColumn(0, nTaxPrfrLmitRemnAmt) ===>" + DsWs_SendTax.GetColumn(0, "nTaxPrfrLmitRemnAmt"));
////tracee("##### C010_Div2 > lfn_TxfrLimitCheck > Ds_LTIDA51.GetColumn(0, nTaxPrfrInsAmt) ===>" + Ds_LTIDA51.GetColumn(0, "nTaxPrfrInsAmt"));
////tracee("##### C010_Div2 > lfn_TxfrLimitCheck > DsWs_Warning.GetColumn(0, msg) ===>" + DsWs_Warning.GetColumn(0, "msg"));
// if (length(DsWs_Warning.GetColumn(0,"msg")) > 0) {
// alert(DsWs_Warning.GetColumn(0,"msg"));
// }
//// 장기보험고도화
// if (nSvKind == "36") {	// 36-연금저축
// var nTaxPrfrLmitAmt		= DsWs_SendTax.GetColumn(0,"nTaxPrfrLmitAmt");		// 한도
// var nTaxPrfrLmitRemnAmt = DsWs_SendTax.GetColumn(0,"nTaxPrfrLmitRemnAmt");	// 한도잔여금액
// var nTaxPrfrInsTamt		= Ds_LTIDA51.GetColumn(0,"nTaxPrfrInsAmt");			// 가입금액(적립보험료)
// if (ToNumber(nTaxPrfrInsTamt) > ToNumber(nTaxPrfrLmitRemnAmt)) {
// alert("연금저축 " + NumFormat(ToNumber(nTaxPrfrLmitAmt) / 10000, 0) + "만원 한도 초과되었습니다.\n(잔여한도 : " + NumFormat(nTaxPrfrLmitRemnAmt,0) + "원)");
////trace("가입금액(nTaxPrfrInsTamt):" + nTaxPrfrInsTamt +  " / 한도잔여(nTaxPrfrLmitRemnAmt):" + nTaxPrfrLmitRemnAmt );
// return true;
// }
// }
// return false;
// }

//---------------------------------------------------------------------------
// function 명 : lfn_RlnmCnfmRgcr
// 내용        :  (실명확인증표 선택에 따른 증빙 대상건 조회)
//---------------------------------------------------------------------------
scwin.lfn_RlnmCnfmRgcr = function(obj, strCode, strText, nOldIndex, nNewIndex) { //완료 미사용

return util.toDoAlert("lfn_RlnmCnfmRgcr 미사용");

    if (wconv.length(strCode) < 1) {
        Stat_RvMatt1.setValue("실명확인정보1");
        Stat_RvMatt2.setValue("실명확인정보2");
        edt_RvMatt1.setDisabled(true);
        edt_RvMatt2.setDisabled(true);
    } else {
        //공통코드호출
        gfn_getCommonCodes( "DsWs_RlnmCnfmInfoRvMatt1 DsWs_RlnmCnfmInfoRvMatt2"
                                        , "RlnmCnfmInfoRvMatt1 RlnmCnfmInfoRvMatt2"
                                        , "cmb_RvMatt1 cmb_RvMatt2"
                                        , "S");
        Stat_RvMatt1.setValue(DsWs_RlnmCnfmInfoRvMatt1.getCellData(wconv.findRow(DsWs_RlnmCnfmInfoRvMatt1, "sCd", strCode), "sHnglCdName"));
        Stat_RvMatt2.setValue(DsWs_RlnmCnfmInfoRvMatt2.getCellData(wconv.findRow(DsWs_RlnmCnfmInfoRvMatt2, "sCd", strCode), "sHnglCdName"));
        edt_RvMatt1.setDisabled(false);
        edt_RvMatt1.focus();
        if (obj != "cmb_Flag") {
            edt_RvMatt1.setValue("");
            edt_RvMatt2.setValue("");
        }
        if (wconv.length(Stat_RvMatt2.getValue()) < 1) {
            edt_RvMatt2.setDisabled(true);
        } else {
            edt_RvMatt2.setDisabled(false);
        }
    }
};

//---------------------------------------------------------------------------
// function 명 : lfn_RlnmCnfmSetting
// 내용        :  실명확인 기준 셋팅.
//---------------------------------------------------------------------------
scwin.lfn_RlnmCnfmSetting = function() {  //완료 미사용

return util.toDoAlert("lfn_RlnmCnfmSetting 미사용");

    //월납보험료 25만원초과, 연납 300만원초과, 일시납 500만원 초과시 고객정보 사항 입력필수, 미입력시 팝업안내
    //          안내문구 : “고객 실명확인사항을 입력하세요”
    sRlnmCnfmFlag = false;
    var sPaymCyclCd = parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd"); //납입주기 "99"일시납 
    var nBussPrem = parent.Ds_LTIDA00.getCellData(0, "nBussPrem"); //납입 보험료 
    var sRlnmCnfmRgcr = Ds_LTIDA03.getCellData(0, "sRlnmCnfmRgcr"); //실명확인 증표 코드
    if (sPaymCyclCd == "99" && wconv.toNumber(nBussPrem) > 5000000) {
        sRlnmCnfmFlag = true;
    } else if ((sPaymCyclCd != "99") && ((wconv.toNumber(nBussPrem) / 12 * wconv.toNumber(sPaymCyclCd)) > 250000)) {
        sRlnmCnfmFlag = true;
    }
    if (sRlnmCnfmFlag) {
        Static2.show();
        cmb_RlnmCnfmRgcr.show();
        Stat_RvMatt1.show();
        Stat_RvMatt2.show();
        edt_RvMatt1.show();
        edt_RvMatt2.show();
        if (wconv.length(sRlnmCnfmRgcr) > 0) {
            scwin.lfn_RlnmCnfmRgcr("cmb_Flag", sRlnmCnfmRgcr, "", "", "");
        }
    } else {
        Static2.hide();
        cmb_RlnmCnfmRgcr.hide();
        Stat_RvMatt1.hide();
        Stat_RvMatt2.hide();
        edt_RvMatt1.hide();
        edt_RvMatt2.hide();
        edt_RvMatt1.setValue("");
        edt_RvMatt2.setValue("");
        cmb_RlnmCnfmRgcr.setValue("");
    }
};










//---------------------------------------------------------------------------
// function 명 : lfn_next
// 내용        : 계약자 정보를 저장한다.
//---------------------------------------------------------------------------
scwin.lfn_next_Async = function(obj) { //완료
	util.eventAsyncCall(this, scwin.lfn_next, arguments);
}

scwin.lfn_next = function(obj) { //완료

    var pro = Promise.resolve();
    //유효값 체크
    //밸리데이션 체크
    if (scwin.lfn_ValidationCheck(true)) {
        return false;
    }

    //자금세탁 방지에 따른 필수값 입력 여부 체크
    if (sRlnmCnfmFlag) {
       if(cmb_RlnmCnfmRgcr.getValue() == "" || edt_RvMatt1.getValue() == "" ){
            wprom.alert("고객 실명 확인사항을 입력하세요");
            edt_RvMatt1.focus();
            return true;
        }else if(cmb_RlnmCnfmRgcr.getValue() > "01" && edt_RvMatt2.getValue() == "" && wconv.rtrim(Stat_RvMatt2.getValue()) > ""){
            wprom.alert("고객 실명 확인사항을 입력하세요");
            edt_RvMatt2.focus();
            return true;
        }
    }

    //2015.02.25 (N1502-00159)
    //대면계약 && 간편설계가 아닐때 승환계약 여부 확인하여 팝업 안내
    var cnt = scwin.lfn_LapsCnclCrSearch(parent.Ds_Pibo.getCellData(0, "sInrpsCd"));
    if (wconv.toNumber(cnt) > 0) {
        if (parent.sScanObjtYn == "Y" && parent.sSimpleYn != "Y") {
        	parent.scwin.lfn_set_Tab_Info("S2", "T2");
            //trace(DsWs_LapsCnclCrList.SaveXML()	);	
            if (DsWs_LapsCnclCrList.getCellData(0, "sGdNamePast") != "") {
            
            	var indata = {};
        		indata["sInrpsCd"] = parent.Ds_Pibo.getCellData(0, "sInrpsCd");
        		indata["sSsrtScrnYn"] = "Y";
        		indata["sPlanNo"] = parent.Ds_Pibo.getCellData(0, "sPlanNo");
        		indata["sCrtorName"] = DsWs_LTIDA03.getCellData(0, "sCrtorName");
        		indata["sDoer"] = DsWs_LTIDA03.getCellData(0, "sDoer");
        		indata["sGdTypeFlagCd"] = parent.DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd");
        		indata["sScrnId"] = "Div2";
        		
        		pro = pro.then(function(rv) {
					var popInfo = {
						"width"     : 649,
						"height"    : 600,  
						"indata"    : indata,
						"title"     : "비교계약안내"
					};
	                return wprom.popupOpen("/ui/cbsc/CBSC062P.xml", popInfo);
	            });
	            pro = pro.then(function(rv) {
                	var result = wprom.getReturnData();
                });                
            }
        }
    }

    pro = pro.then(function(rtnVal) {
        //설계번호
        if (parent.medt_PlanNo.getValue().length != 0) {
            Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
        }

        //계약자자변경체크
        var fLTIDA03_Flag = scwin.lfn_DataChangeCheck(Ds_LTIDA03, Ds_LTIDA03_Tmp, "");

        //계약변경번호
        Ds_LTIDA03.setCellData(0, "nCrChngNo", "0");

        //세금우대여부를 Ds_LTIDA03 dataset에 추가로 저장한다.
        //util.insertColumn(Ds_LTIDA03, [            [                "sTaxPrfrYn",                "sTaxPrfrYn",                "text"            ]        ]);       
        if (util.isNull(Ds_LTIDA03.getColumnIndex("sTaxPrfrYn"))) {
			util.insertColumn(Ds_LTIDA03, [["sTaxPrfrYn","sTaxPrfrYn","text"]]);
			util.setCompBindRefresh("Ds_LTIDA03");
		};
        
        Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", cmb_sTaxPrfrYn.getValue());
        parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", cmb_sTaxPrfrYn.getValue());

        //trace("##### C010_Div2 > lfn_next > sTxfrCheckFlag ===> " + sTxfrCheckFlag);
        //trace("##### C010_Div2 > lfn_next > parent.Ds_LTIDA00.getCellData(0, sTaxPrfrYn) ===> " + parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn"));
        //trace("##### C010_Div2 > lfn_next > Ds_LTIDA51.getCellData(0,sTxfrYn) ===> " + Ds_LTIDA51.getCellData(0,"sTxfrYn"));
        //소득세법 개정에 따른 LIS 체크
        //if(sTxfrCheckFlag == "2"){	// 장기보험고도하
        if (sTxfrCheckFlag == "2" || sTxfrCheckFlag == "6") {
            // 장기보험고도화
            Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", "N");
            parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
            /*		if (lfn_TxfrLimitCheck()) {
                		   return false;
                		}	*/
            /*		if (parent.lfn_AnntSvLimitCheck(parent.Tab_Req.TabIndex, "")) {
        			return false;
        		}	*/
        } else if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N"); //비과세 대상이 아닌경우 비과세 해제
        }

		//입력처리자,입력처리자IP
		var inColInfo = [];
		if (util.isNull(Ds_LTIDA03.getColumnIndex("sInptDler"))) {
			inColInfo.push(["sInptDler","sInptDler","text"]);
		};
		if (util.isNull(Ds_LTIDA03.getColumnIndex("sInptDlerIP"))) {
			inColInfo.push(["sInptDlerIP","sInptDlerIP","text"]);
		};
		if (util.isNull(Ds_LTIDA03.getColumnIndex("gUserID"))) {
			inColInfo.push(["gUserID","gUserID","text"]);
		};
		if (util.isNull(Ds_LTIDA03.getColumnIndex("gUserIP"))) {
			inColInfo.push(["gUserIP","gUserIP","text"]);
		};
		if (util.isNull(Ds_LTIDA03.getColumnIndex("sDoer"))) {
			inColInfo.push(["sDoer","sDoer","text"]);
		}; //취급자
	    if (inColInfo.length > 0) {
			util.insertColumn(Ds_LTIDA03, inColInfo);
			util.setCompBindRefresh("Ds_LTIDA03");
		}
        
        Ds_LTIDA03.setCellData(0, "gUserID", util.getGdsValue("gUserID")); 
        Ds_LTIDA03.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));
        Ds_LTIDA03.setCellData(0, "sDoer", util.getGdsValue("gDoer")); //취급자
        Ds_LTIDA03.setCellData(0, "sInptDler", util.getGdsValue("gUserID"));
        Ds_LTIDA03.setCellData(0, "sInptDlerIP", util.getGdsValue("gUserIP"));

        //피보험자변경체크(수익자)
        var fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "");

        //변경시 처리
        //	if(Ds_LTIDA03.getCellData(0, "execFlag") == "I" || Ds_LTIDA03.GetColumn(0, "execFlag") == "U"
        //	|| Length(Ds_LTIDA03.GetColumn(0, "execFlag")) > 0 || Ds_Pibo_Tmp.GetRowCount() > 0){
        //인수요청, 인수승인일대 보관하지 않는다.
        if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "52" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "56" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "53" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "46" || 
            parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "49" || 
            wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 60) {
            //	if(modifyFlag){	
            //초기화
            Ds_LTIDA03.setCellData(0, "execFlag", "");
            for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
                Ds_Pibo.setCellData(i, "execFlag", "");
            }
            //var flag = parent.lfn_TabChanging(parent.Tab_Req, 1, 2);
            var flag = parent.scwin.lfn_TabChanging(1, 2);
            if (flag) {
				//parent.Tab_Req.TabIndex = 2; //다음으로이동
				parent.scwin.lfn_TabClickSelect(2, false);
			}
        } else {
            scwin.lfn_save(obj);
        }
        modifyFlag = false;
    });

    return pro;
};

//---------------------------------------------------------------------------
// function 명 : lfn_save
// 내용        : 계약자 정보를 저장한다.
//---------------------------------------------------------------------------
scwin.lfn_save = function(obj) { //완료

	wconv.clear(DsWs_LTIDA00);
	wconv.clear(DsWs_LTIDA03);
	wconv.clear(DsWs_LTIDA15);
	wconv.clear(DsWs_Warning);
    
    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "setChungSave");
	MethodObj.setId("setChungSave");
	MethodObj.setUrl("/contract/CBSC075MController.do");

    parent.Ds_LTIDA00.setCellData(0, "gUserID", util.getGdsValue("gUserID"));
    parent.Ds_LTIDA00.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));
    parent.Ds_LTIDA00.setCellData(0, "sDoer", util.getGdsValue("gDoer")); //취급자	
    	
    //계약정보에서 담음	
    var inColInfo = [];
	if (util.isNull(Ds_LTIDA03.getColumnIndex("nRealPaymTerm"))) { //실남입기간
		inColInfo.push(["nRealPaymTerm","nRealPaymTerm","text"]);
	};
	if (util.isNull(Ds_LTIDA03.getColumnIndex("sPaymCyclCd"))) { //납입주기
		inColInfo.push(["sPaymCyclCd","sPaymCyclCd","text"]);
	};
	if (util.isNull(Ds_LTIDA03.getColumnIndex("nApplPrem"))) { //적용보험료
		inColInfo.push(["nApplPrem","nApplPrem","text"]);
	};
	if (util.isNull(Ds_LTIDA03.getColumnIndex("sRqstChk"))) { //특약사항 존재여부
		inColInfo.push(["sRqstChk","sRqstChk","text"]);
	};
    if (inColInfo.length > 0) {
		util.insertColumn(Ds_LTIDA03, inColInfo);
		util.setCompBindRefresh("Ds_LTIDA03");
	}

    Ds_LTIDA03.setCellData(0, "nRealPaymTerm", parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm"));
    Ds_LTIDA03.setCellData(0, "sPaymCyclCd", parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd"));
    Ds_LTIDA03.setCellData(0, "nApplPrem", parent.Ds_LTIDA00.getCellData(0, "nApplPrem"));

    //장기보험고도화 - 특약이 없는 경우 고지사항 저장 데이터를 삭제하기 위해 선택된 특약이 있는지 확인
    var sRqstChk = false;
    for (var i = 0; i < parent.Ds_Trty.getTotalRow(); i++) {
        if (util.getCellDataF(parent.Ds_Trty, i, "sScrnIndcYn") == "Y" && util.getCellDataF(parent.Ds_Trty, i, "chk") == "1") {
            sRqstChk = true;
        }
    }
    //util.insertColumn(Ds_LTIDA03, [        [            "sRqstChk",            "sRqstChk",            "text"        ]    ]); //특약사항 존재여부
    if (sRqstChk == false) {
        Ds_LTIDA03.setCellData(0, "sRqstChk", "N");
    } else {
        Ds_LTIDA03.setCellData(0, "sRqstChk", "Y");
    }

    //자금세탁 방지 데이터 셋팅.
    if (sRlnmCnfmFlag) {
        Ds_LTIDA03.setCellData(0, "sRlnmCnfmDate", parent.sToday);
        Ds_LTIDA03.setCellData(0, "sRlnmCnfm", util.getGdsValue("gDoer"));
        Ds_LTIDA03.setCellData(0, "sRlnmCnfmPstnFlgcd", "01"); //본인'01'
        //미성년자 체크 
        if (getAge(Ds_LTIDA03.getCellData(0, "sCrtorCd"), parent.sToday) < 20) {
            Ds_LTIDA03.setCellData(0, "sRlnmCnfmPstnFlgcd", "02"); //법정대리인'02'
        }
    } else {
        Ds_LTIDA03.setCellData(0, "sRlnmCnfmDate", "");
        Ds_LTIDA03.setCellData(0, "sRlnmCnfm", "");
        Ds_LTIDA03.setCellData(0, "sRlnmCnfmPstnFlgcd", "");
    }
    util.dataListCloneCopy(parent.Ds_LTIDA00, "__Ds_LTIDA00__TMP", "0");
    MethodObj.addSingleData("LTIDA00", "LTIDA00", "__Ds_LTIDA00__TMP"); // 계약정보
    MethodObj.addSingleData("CrtorData", "CrtorData", "Ds_LTIDA03"); // 계약자정보
    MethodObj.addSingleData("LTIDA51", "LTIDA51", "Ds_LTIDA51"); // 비과세 정보
    /*
    if(Ds_Pibo_Tmp.GetCount() > 0){
    	addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo_Tmp);//변경된 피보험자정보가 있으면 담음
    }else{
    	addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo);//피보험자정보가 있으면 담음 
    }
    */
    //피보험자내에 사망외 수익자 셋팅.
    //for(var i=0; i < Ds_Pibo.GetRowCount(); i++){
    //	if(Ds_Pibo.GetColumn(i,"sXcptPftbpInrpsRelnCd") == ""){
    //		Ds_Pibo.SetColumn(i, "sXcptPftbpName", "");
    //	}
    //} 
    MethodObj.addVectorData("vLTIDA01", "LTIDA01", "Ds_Pibo"); //피보험자정보가 있으면 담음 
    MethodObj.addVectorData("vLTIDA02", "LTIDA02", "Ds_Trty");
    wconv.clear(Ds_PiboBackup);
    //wconv.copy(Ds_PiboBackup, "Ds_Pibo");
    util.jSonDsCreate(Ds_Pibo.getAllJSON(), "Ds_PiboBackup", "Y");

    //setTail("hashtable");
    MethodObj.setHashTable();

	MethodObj.setXPath("//hashtable/data[@hashkey='CrtorDoc']/CrtorData");
    MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
    MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA27List']/vector/data/LTIDA27");
    MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
    MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA51']/LTIDA51");
	MethodObj.addXPath("//WARNING");	
	MethodObj.sync();
	MethodObj.send();
	
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");

    if (DsWs_Warning.getRowCount() != 0) {
        wprom.alert(DsWs_Warning.getCellData(0, "msg"));
        return;
    } else {
    
    	util.jSonDsCreate(_tranSync.getDsJson("CrtorData"), "DsWs_LTIDA03", "Y");
        util.jSonDsCreate(_tranSync.getDsJson("LTIDA00"), "DsWs_LTIDA00", "Y");
		util.jSonDsCreate(_tranSync.getDsJson("LTIDA27"), "DsWs_LTIDA27", "Y");
        util.jSonDsCreate(_tranSync.getDsJson("LTIDA15"), "DsWs_LTIDA15", "Y");
        util.jSonDsCreate(_tranSync.getDsJson("LTIDA51"), "DsWs_LTIDA51", "Y");
    
        //trace("DOBJ.Value ==> " + DOBJ.Value);  
        if (DsWs_LTIDA00.getCellData(0, "nDcPrem") != 0) {
            if (DsWs_LTIDA00.getCellData(0, "nDcPrem") != parent.Ds_LTIDA00.getCellData(0, "nDcPrem")) {
                var sAlertMsg = "";
                var nTotDcrt = 0;
                for (var k = 0; k < DsWs_LTIDA27.getRowCount(); k++) {
                    if (DsWs_LTIDA27.getCellData(k, "nDcrt") > 0) {
                        if (sAlertMsg == "") {
                            sAlertMsg = DsWs_LTIDA27.getCellData(k, "sDcKindName");
                        } else {
                            sAlertMsg = sAlertMsg + ", " + DsWs_LTIDA27.getCellData(k, "sDcKindName");
                        }
                        nTotDcrt = nTotDcrt + eval(DsWs_LTIDA27.getCellData(k, "nDcrt"));
                    }
                }
                wprom.alert(sAlertMsg + " 적용되어 " + (nTotDcrt * 100) + "%로 할인율이 조정되었습니다."); //alert("본 계약자는 당사 기가입고객으로 보험료 1% 추가할인됩니다.");
            }
        }
        parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")); //설계진행단계코드
        parent.Ds_LTIDA00.setCellData(0, "sPlanProgTbNo", DsWs_LTIDA00.getCellData(0, "sPlanProgTbNo")); //설계진행탭번호
        parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", DsWs_LTIDA00.getCellData(0, "sTaxPrfrYn")); //세금우대여부
        //피보험자 그리드로 옮긴다.
        //wconv.copy(Ds_Pibo, "Ds_PiboBackup");
        //wconv.copy(parent.Ds_Pibo, "Ds_PiboBackup");
        util.jSonDsCreate(Ds_PiboBackup.getAllJSON(), "Ds_Pibo", "Y");
        parent.util.jSonDsCreate(Ds_PiboBackup.getAllJSON(), "Ds_Pibo", "Y");

        //계약자 복사
        //wconv.copy(Ds_LTIDA03, "DsWs_LTIDA03");
        util.jSonDsCreate(DsWs_LTIDA03.getAllJSON(), "Ds_LTIDA03", "Y");
        edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName")); //만기수익자명
        //edt_sInsurPftbpYn.Text = Iif(length(Ds_LTIDA03.GetColumn(0, "sInsurPftbpName"))>0, Ds_LTIDA03.GetColumn(0, "sInsurPftbpName"), "선택안됨"); //보험수익자명
        //전산심사
        //wconv.copy(Ds_LTIDA15, "DsWs_LTIDA15");
        //wconv.copy(parent.Ds_LTIDA15, "DsWs_LTIDA15");
		util.jSonDsCreate(DsWs_LTIDA15.getAllJSON(), "Ds_LTIDA15", "Y");
		parent.util.jSonDsCreate(DsWs_LTIDA15.getAllJSON(), "Ds_LTIDA15", "Y");

        //초기화
        Ds_LTIDA03.setCellData(0, "execFlag", "");
        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
            Ds_Pibo.setCellData(i, "execFlag", "");
        }
        var flag = parent.scwin.lfn_TabChanging(1, 2);
        if (flag) {
        	/*
            parent.Tab_Req.OnChanging = "";
            parent.Tab_Req.TabIndex = 2;
            parent.Tab_Req.OnChanging = "lfn_TabChanging";
            */
            parent.scwin.lfn_TabClickSelect(2, false);
        } else {
            //인수요청버튼 활성화
            btn_Insu.setDisabled(false);
            btn_Simsa.setDisabled(false);
            //btn_Insu.Color = "";
            $("#btn_Insu a:first-child").css("color","");

            //인수제한건 출력	
            edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());

            //if (DsWs_LTIDA00.GetColumn(0, "sPlanProgRankCd") == "51"){
            if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "51") {
                //인수심사상태 출력
                edt_insu.setValue("심사대상");
                //btn_Insu.Color = "red";
                $("#btn_Insu a:first-child").css("color","red");
                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사대상");
                if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
                    wprom.alert("인수금지 대상입니다. 인수제한사유를 확인하세요");
                    btn_Simsa.setDisabled(true);
                }
            }

            //QA 대상건 확인
            if (parent.DsWs_PrdAttr.getCellData(0, "QAObjtYn") == "Y") {
                if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "45") {
                    btn_QA.setDisabled(false);
                    btn_Simsa.setDisabled(true);
                }
            }
        }

        //개인정보 조회 이력 쌓기
        gfn_LogCreditInfoVt(Ds_LTIDA03, "", "I", "sCrtorCd");
    }
};


/*-----------------------------------
// function 명 : lfn_DataChangeCheck
// 내용        : dataset 변경여부 체크
-----------------------------------*/
scwin.lfn_DataChangeCheck = function(obj, newObj, chk) { //완료

	wconv.clear(newObj);
	if (util.isNull(obj.getColumnIndex("execFlag"))) {
		var objID = obj.getID();
		util.insertColumn(obj, [["execFlag","execFlag","text"]]);
		obj = $w.data[objID];
		util.setCompBindRefresh(obj.getID());
	};
	if (util.isNull(newObj.getColumnIndex("execFlag"))) {
		var objID = newObj.getID();
		util.insertColumn(newObj, [["execFlag","execFlag","text"]]);
		newObj = $w.data[objID];
		util.setCompBindRefresh(newObj.getID());
	};
    
    var execFlag = "";
    var cnt = 0;
    var changeFlag = false;

    //그리드에서 insert,update구분
    for (var i = 0; i < obj.getRowCount(); i++) {
        //trace(obj.GetRowType(i));
        execFlag = "";
        if (obj.getRowStatus(i) == "C") {
            execFlag = "I";
        } else if (obj.getRowStatus(i) == "U") {
            execFlag = "U";
        }
        if (execFlag != "") {
        	/*
            obj.setCellData(i, "execFlag", execFlag);
            newObj.InsertRow(cnt);
            newObj.CopyRow(cnt++, obj, i); //trace("newObj입력=="+newObj.savexml());
            */
            obj.setCellData(i, "execFlag", execFlag);
            util.appendRow(newObj);
            newObj.setRowJSON(cnt, obj.getRowJSON(i));
            cnt++;
        }
    }

    //그리드에서 delete 구분
    var rmDataL = obj.getRemovedJSON();
    for (var i = 0; i < rmDataL.length; i++) {
        //trace(obj.GetRowType(i)+"=="+i+"="+obj.GetTotalRowType(i)+"==cnt="+cnt);
        util.appendRow(newObj);
        newObj.setRowJSON(cnt, [rmDataL[i]]);
        newObj.setCellData(cnt, "execFlag", execFlag);
        /*
        newObj.InsertRow(cnt);
        for (var j = 0; j < obj.GetColCount(); j++) {
            if (obj.GetColID(j) == "execFlag") {
                newObj.SetColumn(cnt, obj.GetColID(j), "D");
            } else {
                newObj.SetColumn(cnt, obj.GetColID(j), obj.GetDelColumn(i, obj.GetColID(j)));
            }
        }
        */
        cnt++;
    }
    if (newObj.getColumnCount() > 0) {
        changeFlag = true;
    }

    //trace("obj=="+obj.savexml());
    //trace("newObj=="+newObj.savexml());
    return changeFlag;
};



//---------------------------------------------------------------------------
// function 명 : lfn_LapsCnclCrSearch
// 내용        : 승환계약 비교안내 대상 체크 
// sInrpsCd(피보험자 주민번호)
//---------------------------------------------------------------------------
scwin.lfn_LapsCnclCrSearch = function(sInrpsCd) { //완료

    //피보험자가 없는 경우 승환계약 비교안함.(재물보험)
    if (parent.Ds_Pibo.getRowCount() < 1) {
        return 0;
    }
    wconv.clear(DsWs_LapsCnclCrCnt);
    wconv.clear(DsWs_CmprCrNotc);
    wconv.clear(DsWs_LapsCnclCrList);
    /*
    SOBJ_Search.WSDL = gds.gWsdlBasis;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Search, "com.inswave.longterm.psv.ens.task.EAD071Task", "selLapsCnclCrList", "", "");
    gfn_SetParam(MethodObj, "sInrpsCd", sInrpsCd);
    gfn_SetParam(MethodObj, "sSsrtScrnYn", "Y");
    gfn_SetParam(MethodObj, "sPlanNo", parent.Ds_Pibo.getCellData(0, "sPlanNo"));
    gfn_SetParam(MethodObj, "sGdTypeFlagCd", parent.DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd"));
    gfn_CallService(SOBJ_Search, DOBJ_LapsCnclCrSearch, MethodObj);
    */
    var MethodObj = new callService("com.inswave.longterm.psv.ens.task.EAD071Task", "selLapsCnclCrList");
	MethodObj.setId("selLapsCnclCrList");
	MethodObj.setUrl("/contract/CBSC075MController.do");
	MethodObj.setParam( "sInrpsCd", sInrpsCd);
    MethodObj.setParam( "sSsrtScrnYn", "Y");
    MethodObj.setParam( "sPlanNo", parent.Ds_Pibo.getCellData(0, "sPlanNo"));
    MethodObj.setParam( "sGdTypeFlagCd", parent.DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd"));	

	MethodObj.setXPath("//hashtable/data[@hashkey='LapsCnclCrCnt']/LTIEA00Cnt");
	MethodObj.addXPath("//*/LTIEA00");
	MethodObj.addXPath("//hashtable/data[@hashkey='CmprCrNotc']/CmprCrNotc");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();

	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "warning_LapsCnclCrCnt");
 
    if (warning_LapsCnclCrCnt.getRowCount() != 0) {
        wprom.alert(warning_LapsCnclCrCnt.getCellData(0, "msg"));
        return 0;
    }
    
    util.jSonDsCreate(_tranSync.getDsJson("LTIEA00Cnt"), "DsWs_LapsCnclCrCnt", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("CmprCrNotc"), "DsWs_CmprCrNotc", "Y");
	util.jSonDsCreate(_tranSync.getDsJson("LTIEA00"), "DsWs_LapsCnclCrList", "Y");
    
    if (DsWs_LapsCnclCrList.getCellData(0, "sGdNamePast") == "") {
        return 0;
    } else {
        return DsWs_LapsCnclCrList.getRowCount();
    }
};
]]></script>
	</head>
	<body>

		<!-- group:s -->
		<!-- group:e -->

		<!-- group:s -->

		<xf:group id="" style="" class="section">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="계약자(피보험자와 동일)"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style="">
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="" id="cmb_RvMatt1" optionOrder="" ref=""
						style="width:50px;display:none;" submenuSize="" renderType="native" selectedData="false">
						<xf:choices></xf:choices>
					</xf:select1>
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="" id="cmb_RvMatt2" optionOrder="" ref=""
						style="width:50px;display:none;" submenuSize="" renderType="native" selectedData="false">
						<xf:choices></xf:choices>
					</xf:select1>
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="scwin.lfn_TaxChange" id="cmb_Reln" optionOrder="" ref=""
						style="width:50px;display:none;" submenuSize="" renderType="native" selectedData="false">
						<xf:choices></xf:choices>
					</xf:select1>
				</xf:group>
			</xf:group>
			<xf:group id="" style="" class="w2tb tb" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:85.00px;" tagname="col"></xf:group>
					<xf:group style="width:145.00px;" tagname="col"></xf:group>
					<xf:group style="width:70.00px;" tagname="col"></xf:group>
					<xf:group style="width:145.00px;" tagname="col"></xf:group>
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="width:70.00px;" tagname="col"></xf:group>
					<xf:group style="width:75.00px;" tagname="col"></xf:group>
					<xf:group style="width:75.00px;" tagname="col"></xf:group>
					<xf:group style="width:90.00px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						계약자코드
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td"><xf:group class=""
							style="width:80px;">
							<xf:input disabled="" id="medt_sCrtorCd" ref="data:Ds_LTIDA03.sCrtorCd"
								style="width: 110px;float: left" displayFormat="######-#######" ev:onblur="scwin.medt_sCrtorCd_OnKillFocus" ev:onfocus="scwin.medt_sCrtorCd_OnFocus">
							</xf:input>
							
						</xf:group><w2:anchor class="btn_icon prot" disabled=""
							ev:onclick="scwin.lfn_searchCust" id="Button0" outerDiv="" style="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor></xf:group>
					<xf:group class="w2tb_th" tagname="th">
						계약자명
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<!-- group:s -->
						<!-- group:e -->
						<xf:input disabled="true" id="edt_sCrtorName" style="" ref="data:Ds_LTIDA03.sCrtorName">
						</xf:input>
					</xf:group>
					<xf:group style="" class="w2tb_th" tagname="th" id="st_CmmcMeanCncl">통신수단해지동의</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.lfn_CmmcMeanCnclYn_OnChanged" id="cmb_CmmcMeanCnclYn"
							optionOrder="" ref="" style="" submenuSize=""
							renderType="native" selectedData="false">
							<xf:choices>
								<xf:itemset nodeset="data:ds_code_YN">
									<xf:label ref="text"></xf:label>
									<xf:value ref="value"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						대상고객
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.cmb_CrPrtrRole_OnChanged" id="cmb_CrPrtrRole"
							optionOrder="" ref="" renderType="native" style=""
							submenuSize="" ev:onchange="" selectedData="false">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_CrPrtrRole_Cod">
									<xf:label ref="text"></xf:label>
									<xf:value ref="value"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						취득경로
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.cmb_AqamtChnlCd_OnChanged" id="cmb_AqamtChnlCd"
							optionOrder="" ref="" renderType="native" style=""
							submenuSize="" ev:onchange="" selectedData="false">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AqamtChnlCd">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sAqamtChnlCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						자택주소
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">





						<w2:attributes>
							<w2:colspan>9</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:group class="input_btn icon"
								style="">
								<xf:input disabled="true" id="edt_sZip1" ref="data:Ds_LTIDA03.sZip1"
									style="width:30px;float:left;">
								</xf:input>
								<xf:input disabled="true" id="edt_sZip2" ref="data:Ds_LTIDA03.sZip2"
									style="width:30px;float:left;">
								</xf:input>
								<xf:input disabled="true" id="edt_sAdrs1"
									style="width:300px;float:left;" ref="data:Ds_LTIDA03.sAdrs1">
								</xf:input>
								<xf:input disabled="true" id="edt_sAdrsAdd"
									style="width:300px;float:left;" ref="data:Ds_LTIDA03.sAdrsAdd">
								</xf:input>
								<w2:anchor class="" ev:onclick="" id=""
									outerDiv="" style="display: none;" disabled="true">
									<xf:label><![CDATA[저장]]></xf:label>
								</w2:anchor>
							</xf:group>
						</xf:group>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						자택
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sHomeTel1"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel1">
							</xf:input>
							<xf:input disabled="true" id="edt_sHomeTel2"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel2">
							</xf:input>
							<xf:input disabled="true" id="edt_sHomeTel3"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						직장
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sOfficeTel1"
								style="width:40px" ref="data:Ds_LTIDA03.sOfficeTel1">
							</xf:input>
							<xf:input disabled="true" id="edt_sOfficeTel2"
								style="width:40px" ref="data:Ds_LTIDA03.sOfficeTel2">
							</xf:input>
							<xf:input disabled="true" id="edt_sOfficeTel3"
								style="width:40px" ref="data:Ds_LTIDA03.sOfficeTel3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						휴대폰
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sCellPhone1"
								style="width:40px" ref="data:Ds_LTIDA03.sCellPhone1">
							</xf:input>
							<xf:input disabled="true" id="edt_sCellPhone2"
								style="width:40px" ref="data:Ds_LTIDA03.sCellPhone2">
							</xf:input>
							<xf:input disabled="true" id="edt_sCellPhone3"
								style="width:40px" ref="data:Ds_LTIDA03.sCellPhone3">
							</xf:input>
						</xf:group>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						만기수익자
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<w2:textbox id="edt_sEnntmPftbpYn" label="선택안됨" ref=""
							style="position: relative;width:100%;height: 20px;display:inline;border-bottom: 1px solid #333;" ev:onclick="scwin.lfn_Popup">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">FAX<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sFax1"
								style="width:40px" ref="data:Ds_LTIDA03.sFax1">
							</xf:input>
							<xf:input disabled="true" id="edt_sFax2"
								style="width:40px" ref="data:Ds_LTIDA03.sFax2">
							</xf:input>
							<xf:input disabled="true" id="edt_sFax3"
								style="width:40px" ref="data:Ds_LTIDA03.sFax3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						E-Mail
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_sEmail1" style="" ref="data:Ds_LTIDA03.sEmail1"></xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						수익자약정
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="" disabledClass=""
							displayMode="label" ev:onviewchange="scwin.lfn_AsmtYn_OnChanged" id="cmb_AsmtYn"
							optionOrder="" ref="data:Ds_LTIDA03.sInsurPftbpAsmtYn"
							renderType="native" style="" submenuSize="" ev:onchange="" selectedData="false">
							<xf:choices>
								<xf:itemset nodeset="data:ds_code_YN">
									<xf:label ref="text"></xf:label>
									<xf:value ref="value"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						지정대리인
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<w2:textbox id="edt_sAsmtAgntYn" label="선택안됨" ref=""
							style="position: relative;width:100%;height: 20px;display:inline;border-bottom: 1px solid #333;" ev:onclick="scwin.lfn_Popup">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						우편수령처
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_RvadAddr" style="" ref="data:Ds_LTIDA03.RvadAddr"></xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						수령처구분
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="" direction="auto" disabled="true" disabledClass=""
							displayMode="label" ev:onviewchange=""
							id="cmb_sMailRvadAddrFlagCd" optionOrder="" ref=""
							renderType="native" style="" submenuSize="" selectedData="false">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AddrFlag">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						세금우대
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 disabledClass="" renderType="native"
							appearance="minimal" direction="auto" chooseOption=""
							displayMode="label" optionOrder="" ev:onviewchange="scwin.lfn_TaxChange"
							id="cmb_sTaxPrfrYn" ref="" style="width:80px;" allOption=""
							submenuSize="" disabled="" ev:onchange="" selectedData="false">
							<xf:choices>
								<xf:itemset
									nodeset="data:Ds_TaxPrfrYn">
									<xf:label ref="text"></xf:label>
									<xf:value ref="value"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<w2:anchor id="btn_TaxSearch" style="" ev:onclick="scwin.lfn_Popup"
							class="btn_icon sch" disabled="" outerDiv="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<!-- group:s -->
		<xf:group id="" style="" class="section">
			<xf:group id="" style="" class="defaultbox">
				<w2:textbox id="" style="" class="df_tt fl"
					label="피보험자(계약자와 동일)">
				</w2:textbox>
			</xf:group>

			<w2:gridView ignoreCellClick="false" ev:onrowindexchange=""
				autoFit="allColumn" rowStatusWidth="20" visibleRowNum=""
				class="cm_grid" wheelRows="" ev:onviewchange=""
				fixedColumnWithHidden="" dataList="Ds_Pibo" id="grd_Pibo"
				style="height:72px;" scrollByColumn="false" useShiftKey="true"
				rowStatusVisible="" ev:onafteredit="" rowStatusHeaderValue="상태"
				ev:oncellclick="scwin.lfn_PiboLIst_OnCellClick" rowNumVisible=""
				rowNumWidth="10">
				<w2:header id="header1" style="">
					<w2:row id="row2" style="">
						<w2:column id="column1" blockSelect="false"
							style="height:20px;" width="40" inputType="text" value="구분"
							displayMode="label">
						</w2:column>
						<w2:column id="column2" blockSelect="false"
							style="height:20px;" width="130" inputType="text" value="주민번호"
							displayMode="label">
						</w2:column>
						<w2:column id="column3" blockSelect="false"
							style="height:20px;" width="90" inputType="text" value="성명"
							displayMode="label">
						</w2:column>
						<w2:column id="column4" blockSelect="false"
							style="height:20px;" width="40" inputType="text" value="나이"
							displayMode="label">
						</w2:column>
						<w2:column id="column5" blockSelect="false"
							style="height:20px;" width="120" inputType="text" value="직업"
							displayMode="label">
						</w2:column>
						<w2:column id="column6" blockSelect="false"
							style="height:20px;" width="50" inputType="text" value="급수"
							displayMode="label">
						</w2:column>
						<w2:column id="column7" blockSelect="false"
							style="height:20px;" width="90" inputType="text" value="보장보험료"
							displayMode="label">
						</w2:column>
						<w2:column id="column8" blockSelect="false"
							style="height:20px;" width="80" inputType="text" value="계약자관계"
							displayMode="label">
						</w2:column>
						<w2:column id="column9" blockSelect="false"
							style="height:20px;" width="70" inputType="text" value="고지사항"
							displayMode="label">
						</w2:column>
						<w2:column id="column10" blockSelect="false"
							style="height:20px;" width="70" inputType="text" value="타보험"
							displayMode="label">
						</w2:column>
						<w2:column blockSelect="false" id="column17"
							style="height:20px;" inputType="text" width="90"
							displayMode="label" value="사망수익자">
						</w2:column>
						<w2:column blockSelect="false" id="column15"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="사망외">
						</w2:column>
						<w2:column blockSelect="false" id="column13"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="부담보">
						</w2:column>
						<w2:column blockSelect="false" id="column11"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="진당대상">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody4" style="">
					<w2:row id="row5" style="">
						<w2:column id="sel" blockSelect="false"
							width="30" inputType="checkbox" displayMode="label"
							readOnly="true">
						</w2:column>
						<w2:column id="sInrpsCd" blockSelect="false"
							width="90" inputType="link" displayMode="label" readOnly="true"
							class="bold underline"
							displayFormatter="scwin.lfn_InrpsCd_display">
						</w2:column>
						<w2:column id="sInrpsName" blockSelect="false"
							width="100" displayMode="label" viewType="icon"
							readOnly="true">
						</w2:column>
						<w2:column id="nInrpsAge" blockSelect="false"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="sJobName" blockSelect="false"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="sJobGradCd" blockSelect="false"
							width="50" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="nGrntPrem" blockSelect="false"
							width="150" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="sCrtorRelnCd" blockSelect="false"
							width="70" inputType="select" displayMode="label" readOnly="true"
							selectedData="false">
							<w2:choices>
								<w2:itemset nodeset="data:DsWs_Reln">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column id="sRqstYnName" blockSelect="false"
							width="90" inputType="link" displayMode="label"
							readOnly="true">
						</w2:column>
						<w2:column id="sOthrInsurCntName"
							blockSelect="false" width="115" inputType="link"
							displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false" id="sPftbpName"
							style="height:20px" inputType="link" width="70"
							displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							id="sXcptPftbpName" style="height:20px" inputType="link"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							id="sSubCvrgeYnName" style="height:20px" inputType="link"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							id="sDgnsObjtYnName" style="height:20px" inputType="text"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>
		
		<xf:group class="section" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="특약사항"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style="">
				</xf:group>
			</xf:group>
			<w2:gridView autoFit="allColumn" class="cm_grid"
				dataList="Ds_Trty" ev:onafteredit="" ev:oncellclick=""
				ev:onrowindexchange="" ev:onviewchange="" fixedColumnWithHidden=""
				id="grd_sTrty" ignoreCellClick="false" rowNumVisible=""
				rowNumWidth="10" rowStatusHeaderValue="상태" rowStatusVisible=""
				rowStatusWidth="20" scrollByColumn="false" style="height:120px;"
				useShiftKey="true" visibleRowNum="" wheelRows="">
				<w2:header id="header1" style="">
					<w2:row id="row2" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="column1" inputType="text"
							style="height:20px;" value="성명" width="80">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column2" inputType="text"
							style="height:20px;" value="특약" width="300">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column3" inputType="text"
							style="height:20px;" value="보험기간" width="120">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column4" inputType="text"
							style="height:20px;" value="납입기간" width="120">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column5" inputType="text"
							style="height:20px;" value="가입금액" width="150">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column6" inputType="text"
							style="height:20px;" value="보장보험료" width="150">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody4" style="">
					<w2:row id="row5" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="sInrpsName" inputType="" style="" width="80" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="TrtyHnglAbbName" inputType="" style="" width="300" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sInsurTermCd" imageSrc=""
							inputType="select" style="" viewType="icon" width="120"
							allOption="" chooseOption="" selectedData="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_InsurTerm">
									<w2:label ref="sInsurTermName"></w2:label>
									<w2:value ref="sInsurTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sPaymTermCd" inputType="select" style=""
							width="120" allOption="" chooseOption="" selectedData="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_PaymTerm">
									<w2:label ref="sPaymTermName"></w2:label>
									<w2:value ref="sPaymTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nTrtyInsAmt" inputType="select" style=""
							width="150" allOption="" chooseOption="" readOnly="true" selectedData="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:Dsws_InsAmt">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nGrntPrem" inputType="" style="" width="150" readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group><xf:group class="section" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="인수심사결과" style="">
				</w2:textbox>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:350px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">인수심사상태</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_insu" style=""></xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">제한항목건수</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:input disabled="true" id="edt_UdrtkLmitCnt" style=""></xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<!-- group:s -->
		<xf:group id="" style="" class="section">
			<xf:group id="" style="" class="defaultbox last">
				<xf:group id="" style="" class="fl">
					<w2:anchor id="Button1" ev:onclick="scwin.fn_riskInfo" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[즉시고위험고객]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_QA" ev:onclick="scwin.fn_QAapproval" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[QA요청]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_Insu" ev:onclick="scwin.lfn_simsa" class="btn_nml"
						outerDiv="true" disabled="">
						<xf:label><![CDATA[인수제한사항]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_Simsa" ev:onclick="scwin.fn_approval" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[인수심사요청]]></xf:label>
					</w2:anchor>
				</xf:group>
				<xf:group id="" style="" class="fr">
					<w2:anchor id="btn_Next" ev:onclick="scwin.lfn_next_Async" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[다음]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<xf:select1 disabledClass="w2selectbox_disabled"
			appearance="minimal" direction="auto" chooseOption=""
			id="cmb_RlnmCnfmRgcr"
			style="position: absolute ;left:623px;top:648px;width:70px;height:21px;display: none;"
			displayMode="label" selectedData="true" optionOrder="false"
			allOption="" disabled="false" submenuSize="auto"
			renderType="select" ref="data:Ds_LTIDA03.sRlnmCnfmRgcr">
			<xf:choices>
				<xf:itemset nodeset="data:DsWs_RlnmCnfmRgcr">
					<xf:label ref="sHnglCdName"></xf:label>
					<xf:value ref="sCd"></xf:value>
				</xf:itemset>
			</xf:choices>
		</xf:select1>
		<xf:input id="edt_RvMatt1"
			style="position: absolute ;left:729px;top:648px;width:22px;height:21px;display: none;" ref="data:Ds_LTIDA03.sRlnmCnfmInfoRvMatt1">
		</xf:input>
		<xf:input id="edt_RvMatt2"
			style="position: absolute ;left:699px;top:648px;width:22px;height:21px;display: none;" ref="data:Ds_LTIDA03.sRlnmCnfmInfoRvMatt2">
		</xf:input>
		<xf:input id="edt_sB110PopValue"
			style="position: absolute ;left:834px;top:648px;width:22px;height:21px;display: none;">
		</xf:input>
		<xf:input id="fAgntFlag"
			style="position: absolute ;left:799px;top:648px;width:22px;height:21px;display: none;">
		</xf:input>
		<xf:input id="fAgntFlagIdx"
			style="position: absolute ;left:769px;top:648px;width:22px;height:21px;display: none;">
		</xf:input>

		<w2:textbox label="실명확인정보1" id="Stat_RvMatt1"
    		style="position: absolute ;left:311px;top:651px;width: 150px;height: 23px;display: none;">
    	</w2:textbox>
    	<w2:textbox label="실명확인정보2" id="Stat_RvMatt2"
    		style="position: absolute ;left:456px;top:651px;width: 150px;height: 23px;display: none;">
    	</w2:textbox>

		<w2:anchor class="" disabled=""
			ev:onclick="scwin.Btn_IVR_OnClick" id="btn_IvrInput" outerDiv="" 
			style="position: absolute ;left:869px;top:648px;display: none;">
			<xf:label><![CDATA[저장]]></xf:label>
		</w2:anchor>

	</body>
</html>