<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
  	<!--
        ###################################################
         파일명 : CBSC016S.xml
         프로그램명 : 개인청약설계_보험료산출
         설 명 :  
         작성자 : MS.Kangs
         작성일 : 2017.09.14

         수정일자            수정자                  수정내용
        ==================================================
        2017.09.14		  MS.Kang		  신규개발	
        ###################################################
    -->
	<w2:type>DEFAULT</w2:type>
	<w2:buildDate />
	<xf:model>
		<xf:instance>
			<data xmlns="" />
		</xf:instance>
		<w2:dataCollection baseNode="map">
			<w2:dataList baseNode="list" id="Ds_LTIDA00" repeatNode="map">
                <w2:columnInfo>
                    <w2:column id="sHsecFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="nCrStatCarrSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sBsmnRgstNo" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzCd" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzName" name="" dataType="text"></w2:column>
					<w2:column id="sCrNoSeq" name="" dataType="text"></w2:column>
					<w2:column id="sCrStatFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtdate" name="" dataType="text"></w2:column>
					<w2:column id="sBunsAchvDgrmClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sDoer" name="" dataType="text"></w2:column>
					<w2:column id="sTaxPrfrYn" name="" dataType="text"></w2:column>
					<w2:column id="sUserID" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc1Dcrt" name="" dataType="text"></w2:column>
					<w2:column id="nMaxPrem" name="" dataType="text"></w2:column>
					<w2:column id="nObjtNum" name="" dataType="text"></w2:column>
					<w2:column id="sGdTypeFlgCd" name="" dataType="text"></w2:column>
					<w2:column id="sCrStatCd" name="" dataType="text"></w2:column>
					<w2:column id="sPeriMwayRqstDate" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremRate" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc1Prem" name="" dataType="text"></w2:column>
					<w2:column id="nAddPaymPrem" name="" dataType="text"></w2:column>
					<w2:column id="sSrdoIssuDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerPartCd" name="" dataType="text"></w2:column>
					<w2:column id="sCpayDate" name="" dataType="text"></w2:column>
					<w2:column id="nDefrYct" name="" dataType="text"></w2:column>
					<w2:column id="sScanObjtYn" name="" dataType="text"></w2:column>
					<w2:column id="nGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sItemCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymAge" name="" dataType="text"></w2:column>
					<w2:column id="sInsurCrLoanYn" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnlFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="nAnntPymCt" name="" dataType="text"></w2:column>
					<w2:column id="gUserID" name="" dataType="text"></w2:column>
					<w2:column id="sPaymCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanName" name="" dataType="text"></w2:column>
					<w2:column id="nRealInsurTerm" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="gUserIP" name="" dataType="text"></w2:column>
					<w2:column id="sPaymExptDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerUser" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt21" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt22" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc2Prem" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="nRealPaymTerm" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="nAuthID" name="" dataType="text"></w2:column>
					<w2:column id="sRowType" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupInsPsct" name="" dataType="text"></w2:column>
					<w2:column id="sGroupCrAdmNo" name="" dataType="text"></w2:column>
					<w2:column id="sStndDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="nBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymStrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sGdName" name="" dataType="text"></w2:column>
					<w2:column id="sDoerUser" name="" dataType="text"></w2:column>
					<w2:column id="nEndAge" name="" dataType="text"></w2:column>
					<w2:column id="sCrNoType" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt5" name="" dataType="text"></w2:column>
					<w2:column id="sEtcDc2Cd" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt6" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt3" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="sHndwritJugmYn" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt4" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt1" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt2" name="" dataType="text"></w2:column>
					<w2:column id="nCrChngNo" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt10" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerHdqtCd" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoer" name="" dataType="text"></w2:column>
					<w2:column id="sEtcDc1Cd" name="" dataType="text"></w2:column>
					<w2:column id="sDvdnFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sConuResltName" name="" dataType="text"></w2:column>
					<w2:column id="nDcPrem" name="" dataType="text"></w2:column>
					<w2:column id="sLapsDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerTeamCd" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sCmMetd" name="" dataType="text"></w2:column>
					<w2:column id="sPpayAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="nInrpsPsct" name="" dataType="text"></w2:column>
					<w2:column id="nExptEndRetrnAmt" name="" dataType="text"></w2:column>
					<w2:column id="nAccuPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="sConuResltCd" name="" dataType="text"></w2:column>
					<w2:column id="sFinalPaymMthy" name="" dataType="text"></w2:column>
					<w2:column id="sHealDcYn" name="" dataType="text"></w2:column>
					<w2:column id="sFrstSaleChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sCedeStndYm" name="" dataType="text"></w2:column>
					<w2:column id="sApplDclrRato" name="" dataType="text"></w2:column>
					<w2:column id="nFinalPaymSeq" name="" dataType="text"></w2:column>
					<w2:column id="nTotPaymPrem" name="" dataType="text"></w2:column>
					<w2:column id="sFinalReviDate" name="" dataType="text"></w2:column>
					<w2:column id="sPeriMwayWdraYn" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnlDtal" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgRankName" name="" dataType="text"></w2:column>
					<w2:column id="sAnntOpnAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="nMinPrem" name="" dataType="text"></w2:column>
					<w2:column id="sInsType" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc2Dcrt" name="" dataType="text"></w2:column>
					<w2:column id="sRecvProgStat" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgTbNo" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="nExptEndRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="nInsurTermGrntPremTot" name="" dataType="text"></w2:column>
					<w2:column id="sFinalRecpDate" name="" dataType="text"></w2:column>
					<w2:column id="sJugmGradCd" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sCrNo" name="" dataType="text"></w2:column>
					<w2:column id="sPsnGroupFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgRankCd" name="" dataType="text"></w2:column>
					<w2:column id="nApplPrem" name="" dataType="text"></w2:column>
					<w2:column id="sTaxPrfrGdYn" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerCentrCd" name="" dataType="text"></w2:column>
					<w2:column id="sSsrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sJugmAuthCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdNm" name="" dataType="text"></w2:column>
					<w2:column id="sPectSaleYn" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupDcrt" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerDeptOffcCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDcrt" name="" dataType="text"></w2:column>
					<w2:column id="result" name="" dataType="text"></w2:column>
					<w2:column id="sApplyPrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sAqamtChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sBunsMetdClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sBunsMetdDocuClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sCmmcMeanCnclAgreYn" name="" dataType="text"></w2:column>
					<w2:column id="sCmprCrNotcCncl" name="" dataType="text"></w2:column>
					<w2:column id="sCmprCrNotcSsrt" name="" dataType="text"></w2:column>
					<w2:column id="sCrPrtrRole" name="" dataType="text"></w2:column>
					<w2:column id="sDrivFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sElecNtAgreDate" name="" dataType="text"></w2:column>
					<w2:column id="sElecNtltRvYn" name="" dataType="text"></w2:column>
					<w2:column id="sEmailClasYn" name="" dataType="text"></w2:column>
					<w2:column id="sFinalDueMthy" name="" dataType="text"></w2:column>
					<w2:column id="sFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtHms" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPlanPsnGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sRdchCrYn" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnl" name="" dataType="text"></w2:column>
					<w2:column id="sUseCustType" name="" dataType="text"></w2:column>
					<w2:column id="sDrivFlagCd" name="" dataType="text"></w2:column>
                </w2:columnInfo>
                <w2:data use="true">
                    <w2:row>
                        <gUserID></gUserID>
                        <gUserIP></gUserIP>
                        <nAccuPrem></nAccuPrem>
                        <nAddPaymPrem></nAddPaymPrem>
                        <nAnntPymCt></nAnntPymCt>
                        <nApplPrem></nApplPrem>
                        <nBussPrem></nBussPrem>
                        <nCrChngNo></nCrChngNo>
                        <nCrStatCarrSeqno></nCrStatCarrSeqno>
                        <nDcPrem></nDcPrem>
                        <nDefrYct></nDefrYct>
                        <nEndAge></nEndAge>
                        <nEndRtnAmtCalElmnt1></nEndRtnAmtCalElmnt1>
                        <nEndRtnAmtCalElmnt10></nEndRtnAmtCalElmnt10>
                        <nEndRtnAmtCalElmnt2></nEndRtnAmtCalElmnt2>
                        <nEndRtnAmtCalElmnt3></nEndRtnAmtCalElmnt3>
                        <nEndRtnAmtCalElmnt4></nEndRtnAmtCalElmnt4>
                        <nEndRtnAmtCalElmnt5></nEndRtnAmtCalElmnt5>
                        <nEndRtnAmtCalElmnt6></nEndRtnAmtCalElmnt6>
                        <nEndRtnrt></nEndRtnrt>
                        <nExptEndRetrnAmt></nExptEndRetrnAmt>
                        <nExptEndRtnrt></nExptEndRtnrt>
                        <nFinalPaymSeq></nFinalPaymSeq>
                        <nGrntPrem></nGrntPrem>
                        <nGroupInsPsct></nGroupInsPsct>
                        <nInrpsPsct></nInrpsPsct>
                        <nMaxPrem></nMaxPrem>
                        <nMinPrem></nMinPrem>
                        <nObjtNum></nObjtNum>
                        <nPaymAge></nPaymAge>
                        <nRealInsurTerm></nRealInsurTerm>
                        <nRealPaymTerm></nRealPaymTerm>
                        <nTotPaymPrem></nTotPaymPrem>
                        <sAnntOpnAgeCd></sAnntOpnAgeCd>
                        <sAnntPymCyclCd></sAnntPymCyclCd>
                        <sAnntPymStrtDate></sAnntPymStrtDate>
                        <sAnntPymTermCd></sAnntPymTermCd>
                        <sAnntPymTypeCd></sAnntPymTypeCd>
                        <sApplDclrRato></sApplDclrRato>
                        <sApplPlanCd></sApplPlanCd>
                        <sApplPlanName></sApplPlanName>
                        <sBsmnRgstNo></sBsmnRgstNo>
                        <sBunsAchvDgrmClsfCd></sBunsAchvDgrmClsfCd>
                        <sCedeStndYm></sCedeStndYm>
                        <sCmMetd></sCmMetd>
                        <sConuResltCd></sConuResltCd>
                        <sConuResltName></sConuResltName>
                        <sCpayDate></sCpayDate>
                        <sCrNo></sCrNo>
                        <sCrNoSeq></sCrNoSeq>
                        <sCrNoType></sCrNoType>
                        <sCrStatCd></sCrStatCd>
                        <sCrStatFlgcd></sCrStatFlgcd>
                        <sDoer></sDoer>
                        <sDoerUser></sDoerUser>
                        <sDrivFlagCd></sDrivFlagCd>
                        <sDvdnFlagCd></sDvdnFlagCd>
                        <sFinalPaymMthy></sFinalPaymMthy>
                        <sFinalRecpDate></sFinalRecpDate>
                        <sFinalReviDate></sFinalReviDate>
                        <sFrstDoer></sFrstDoer>
                        <sFrstDoerCentrCd></sFrstDoerCentrCd>
                        <sFrstDoerGroupCd></sFrstDoerGroupCd>
                        <sFrstDoerHdqtCd></sFrstDoerHdqtCd>
                        <sFrstDoerPartCd></sFrstDoerPartCd>
                        <sFrstDoerTeamCd></sFrstDoerTeamCd>
                        <sFrstDoerUser></sFrstDoerUser>
                        <sFrstSaleChnlCd></sFrstSaleChnlCd>
                        <sGdCd></sGdCd>
                        <sGdName></sGdName>
                        <sGdNm></sGdNm>
                        <sGdTypeFlgCd></sGdTypeFlgCd>
                        <sGnrzCd></sGnrzCd>
                        <sGroupCrAdmNo></sGroupCrAdmNo>
                        <sHealDcYn></sHealDcYn>
                        <sHndwritJugmYn></sHndwritJugmYn>
                        <sHsecFlagCd></sHsecFlagCd>
                        <sInsurCrLoanYn></sInsurCrLoanYn>
                        <sInsurEndDate></sInsurEndDate>
                        <sInsurStrtdate></sInsurStrtdate>
                        <sInsurTermCd></sInsurTermCd>
                        <sInsurTermPaymTermName></sInsurTermPaymTermName>
                        <sItemCd></sItemCd>
                        <sJugmAuthCd></sJugmAuthCd>
                        <sJugmGradCd></sJugmGradCd>
                        <sLapsDate></sLapsDate>
                        <sPaymCyclCd></sPaymCyclCd>
                        <sPaymExptDate></sPaymExptDate>
                        <sPaymTermCd></sPaymTermCd>
                        <sPectSaleYn></sPectSaleYn>
                        <sPeriMwayRqstDate></sPeriMwayRqstDate>
                        <sPeriMwayWdraYn></sPeriMwayWdraYn>
                        <sPlanNo></sPlanNo>
                        <sPlanProgRankCd></sPlanProgRankCd>
                        <sPlanProgRankName></sPlanProgRankName>
                        <sPlanProgTbNo></sPlanProgTbNo>
                        <sPpayAvaYn></sPpayAvaYn>
                        <sPsnGroupFlgcd></sPsnGroupFlgcd>
                        <sSaleChnlDtal></sSaleChnlDtal>
                        <sSaleChnlFlagCd></sSaleChnlFlagCd>
                        <sScanObjtYn></sScanObjtYn>
                        <sSrdoIssuDate></sSrdoIssuDate>
                        <sSsrtDate></sSsrtDate>
                        <sTaxPrfrGdYn></sTaxPrfrGdYn>
                        <sTaxPrfrYn></sTaxPrfrYn>
                        <sSaleChnl></sSaleChnl>
                    </w2:row>
                </w2:data>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIEA10" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sGroupCrAdmNo" name="sGroupCrAdmNo"></w2:column>
                    <w2:column dataType="text" id="sRpstName" name="sRpstName"></w2:column>
                    <w2:column dataType="text" id="sRpstCd" name="sRpstCd"></w2:column>
                    <w2:column dataType="text" id="sGroupName" name="sGroupName"></w2:column>
                    <w2:column dataType="text" id="nFrstPsct" name="nFrstPsct"></w2:column>
                    <w2:column dataType="text" id="nGroupDcrt" name="nGroupDcrt"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
           	<w2:dataList baseNode="list" id="DsWs_CmCd" repeatNode="map">
           		<w2:columnInfo>
           			<w2:column dataType="text" id="sClsfCd" name="sClsfCd"></w2:column>
           			<w2:column dataType="text" id="sCdType" name="sCdType"></w2:column>
           			<w2:column dataType="text" id="sCd" name="sCd"></w2:column>
           			<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"></w2:column>
           		</w2:columnInfo>
           	</w2:dataList>
           	<w2:linkedDataList id="DsWs_FlagCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="CcndFlagCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_Drive" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="DrivFlagCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_Grade" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="JobGradCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="DsWs_CrtorRelnCd" bind="DsWs_CmCd">
           		<w2:condition type="filter"><![CDATA[sCdType=="CrtorRelnCd"]]></w2:condition>
           		<w2:condition type="sort"><![CDATA[]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:dataList baseNode="list" id="Ds_Pibo" repeatNode="map" ev:oncelldatachange="scwin.Ds_Pibo_OnColumnChanged" ev:onrowpositionchange="scwin.Ds_Pibo_OnRowPosChanged" saveRemovedData="true">
				<w2:columnInfo>
	                <w2:column dataType="text" id="sel" name="sel"></w2:column>
	                <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
	                <w2:column dataType="text" id="nGroupSeqno" name="nGroupSeqno"></w2:column>
	                <w2:column dataType="text" id="nInrpsSeqno" name="nInrpsSeqno"></w2:column>
	                <w2:column dataType="text" id="sInrpsFlagCd" name="sInrpsFlagCd"></w2:column>
	                <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
	                <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
	                <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
	                <w2:column dataType="text" id="sInrpsSexFlag" name="sInrpsSexFlag"></w2:column>
	                <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
	                <w2:column dataType="text" id="sJobGradCd" name="sJobGradCd"></w2:column>
	                <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
	                <w2:column dataType="text" id="nInrpsAge" name="nInrpsAge"></w2:column>
	                <w2:column dataType="text" id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd"></w2:column>
	                <w2:column dataType="text" id="sExisPftbpCd" name="sExisPftbpCd"></w2:column>
	                <w2:column dataType="text" id="sExisPftbpName" name="sExisPftbpName"></w2:column>
	                <w2:column dataType="text" id="sExisPftbpTelno" name="sExisPftbpTelno"></w2:column>
	                <w2:column dataType="text" id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd"></w2:column>
	                <w2:column dataType="text" id="sPftbpCd" name="sPftbpCd"></w2:column>
	                <w2:column dataType="text" id="sPftbpName" name="sPftbpName"></w2:column>
	                <w2:column dataType="text" id="sPftbpTelno" name="sPftbpTelno"></w2:column>
	                <w2:column dataType="text" id="sPftbpFlagCd" name="sPftbpFlagCd"></w2:column>
	                <w2:column dataType="text" id="sApplPlanCd" name="sApplPlanCd"></w2:column>
	                <w2:column dataType="text" id="sApplPlanName" name="sApplPlanName"></w2:column>
	                <w2:column dataType="text" id="sInrpsStatCd" name="sInrpsStatCd"></w2:column>
	                <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
	                <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
	                <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
	                <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
	                <w2:column dataType="text" id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName"></w2:column>
	                <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
	                <w2:column dataType="text" id="nMaxPrem" name="nMaxPrem"></w2:column>
	                <w2:column dataType="text" id="nMinPrem" name="nMinPrem"></w2:column>
	                <w2:column dataType="text" id="sRqstYn" name="sRqstYn"></w2:column>
	                <w2:column dataType="text" id="sRqstYnName" name="sRqstYnName"></w2:column>
	                <w2:column dataType="text" id="sOthrInsurCnt" name="sOthrInsurCnt"></w2:column>
	                <w2:column dataType="text" id="sOthrInsurCntName" name="sOthrInsurCntName"></w2:column>
	                <w2:column dataType="text" id="sSubCvrgeYn" name="sSubCvrgeYn"></w2:column>
	                <w2:column dataType="text" id="sSubCvrgeYnName" name="sSubCvrgeYnName"></w2:column>
	                <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
	                <w2:column dataType="text" id="sDgnsObjtYnName" name="sDgnsObjtYnName"></w2:column>
	                <w2:column dataType="text" id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn"></w2:column>
	                <w2:column dataType="text" id="sMNumCrInsAgreYn" name="sMNumCrInsAgreYn"></w2:column>
	                <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
	                <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
	                <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
	                <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
	                <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
	                <w2:column dataType="text" id="sInrpsCstId" name="sInrpsCstId"></w2:column>
	                <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
	                <w2:column dataType="text" id="sCrtorRelnCd" name="sCrtorRelnCd"></w2:column>
	                <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
	                <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
	                <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
	                <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
	                <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
	                <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
	                <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
	                <w2:column dataType="text" id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd"></w2:column>
	                <w2:column dataType="text" id="sXcptPftbpCd" name="sXcptPftbpCd"></w2:column>
	                <w2:column dataType="text" id="sXcptPftbpName" name="sXcptPftbpName"></w2:column>
	                <w2:column dataType="text" id="sXcptPftbpTelno" name="sXcptPftbpTelno"></w2:column>
	                <w2:column dataType="text" id="sXcptPftbpFlagCd" name="sXcptPftbpFlagCd"></w2:column>
	                <w2:column dataType="text" id="nManAge" name="nManAge"></w2:column>
	                <w2:column dataType="text" id="sPiboDrivCd" name="sPiboDrivCd"></w2:column>
	            </w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="Ds_Pibo_BackUp" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sInrpsCd" name="sInrpsCd"></w2:column>
                    <w2:column dataType="text" id="sInrpsName" name="sInrpsName"></w2:column>
                    <w2:column dataType="text" id="sJobCd" name="sJobCd"></w2:column>
                    <w2:column dataType="text" id="sDrveFlagCd" name="sDrveFlagCd"></w2:column>
                    <w2:column dataType="text" id="sMinsrRelnCd" name="sMinsrRelnCd"></w2:column>
                    <w2:column dataType="text" id="fixFlag" name="fixFlag"></w2:column>
                    <w2:column dataType="text" id="MediFlag" name="MediFlag"></w2:column>
                    <w2:column dataType="text" id="hasPronCmpsTrty" name="hasPronCmpsTrty"></w2:column>
                    <w2:column dataType="text" id="hasFxamtCmps" name="hasFxamtCmps"></w2:column>
                    <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
			<w2:dataList baseNode="list" id="Ds_long_mPlr" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sCustNo" name="sCustNo"></w2:column>
                    <w2:column dataType="text" id="sCstId" name="sCstId"></w2:column>
                    <w2:column dataType="text" id="nSeqNo" name="nSeqNo"></w2:column>
                    <w2:column dataType="text" id="sName" name="sName"></w2:column>
                    <w2:column dataType="text" id="sCustType" name="sCustType"></w2:column>
                    <w2:column dataType="text" id="sClass" name="sClass"></w2:column>
                    <w2:column dataType="text" id="sMarry" name="sMarry"></w2:column>
                    <w2:column dataType="text" id="sJobCode" name="sJobCode"></w2:column>
                    <w2:column dataType="text" id="sJobName" name="sJobName"></w2:column>
                    <w2:column dataType="text" id="sDrvCls" name="sDrvCls"></w2:column>
                    <w2:column dataType="text" id="sJobCls" name="sJobCls"></w2:column>
                    <w2:column dataType="text" id="nHomAdrsChangeNo" name="nHomAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sHomZco" name="sHomZco"></w2:column>
                    <w2:column dataType="text" id="sHomAdr1" name="sHomAdr1"></w2:column>
                    <w2:column dataType="text" id="sHomAdr2" name="sHomAdr2"></w2:column>
                    <w2:column dataType="text" id="nCrpAdrsChangeNo" name="nCrpAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sCrpZco" name="sCrpZco"></w2:column>
                    <w2:column dataType="text" id="sCrpAdr1" name="sCrpAdr1"></w2:column>
                    <w2:column dataType="text" id="sCrpAdr2" name="sCrpAdr2"></w2:column>
                    <w2:column dataType="text" id="nEtcAdrsChangeNo" name="nEtcAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sEtcZco" name="sEtcZco"></w2:column>
                    <w2:column dataType="text" id="sEtcAdr1" name="sEtcAdr1"></w2:column>
                    <w2:column dataType="text" id="sEtcAdr2" name="sEtcAdr2"></w2:column>
                    <w2:column dataType="text" id="sAdrsType" name="sAdrsType"></w2:column>
                    <w2:column dataType="text" id="nAdrsChangeNo" name="nAdrsChangeNo"></w2:column>
                    <w2:column dataType="text" id="sAdrsZco" name="sAdrsZco"></w2:column>
                    <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                    <w2:column dataType="text" id="sAdrs2" name="sAdrs2"></w2:column>
                    <w2:column dataType="text" id="sDMAdrsTyp" name="sDMAdrsTyp"></w2:column>
                    <w2:column dataType="text" id="nTelChangeNo" name="nTelChangeNo"></w2:column>
                    <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                    <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                    <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                    <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                    <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                    <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                    <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                    <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                    <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                    <w2:column dataType="text" id="sEtcType" name="sEtcType"></w2:column>
                    <w2:column dataType="text" id="sEtcTel1" name="sEtcTel1"></w2:column>
                    <w2:column dataType="text" id="sEtcTel2" name="sEtcTel2"></w2:column>
                    <w2:column dataType="text" id="sEtcTel3" name="sEtcTel3"></w2:column>
                    <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                    <w2:column dataType="text" id="sEmail2" name="sEmail2"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty" ev:oncelldatachange="scwin.ds_Trty_OnColumnChanged" repeatNode="map">
                <w2:columnInfo>
                    <w2:column id="RenwlUseCrFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyObjtFlag" name="" dataType="text"></w2:column>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="PytrMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag4" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag5" name="" dataType="text"></w2:column>
					<w2:column id="sResvAmtKey" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtdate" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzCd" name="" dataType="text"></w2:column>
					<w2:column id="BascSlctFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag3" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag2" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag1" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="FirstInsurTermApplYn" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlCyclCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sScrnIndcYn" name="" dataType="text"></w2:column>
					<w2:column id="InrpsDoubInsImprYn" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyPrem" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="TrtyObjtFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="nGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyInsAmt" name="" dataType="text"></w2:column>
					<w2:column id="nPaymAge" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlYn" name="" dataType="text"></w2:column>
					<w2:column id="TrtyCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sMainTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd11" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd10" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag3_H" name="" dataType="text"></w2:column>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyHnglAbbName" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="Trtygp_H" name="" dataType="text"></w2:column>
					<w2:column id="InrtMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="nPs1CmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag4_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="InsAvaDrveCd" name="" dataType="text"></w2:column>
					<w2:column id="nRealInsurTerm" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag1_H" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag2_H" name="" dataType="text"></w2:column>
					<w2:column id="PronCmpsTrtyYn_H" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyOrdr" name="" dataType="text"></w2:column>
					<w2:column id="sCnclExtnEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyStatCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PmmiInsurFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="RenwlUseCrFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sAutoRenwlAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="nRealPaymTerm" name="" dataType="text"></w2:column>
					<w2:column id="TrtyFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyTypeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="DrveFlag" name="" dataType="text"></w2:column>
					<w2:column id="FirstInsurTermApplYn_H" name="" dataType="text"></w2:column>
					<w2:column id="SwHsHldGdsTrtyYn_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyUserDefnName_H" name="" dataType="text"></w2:column>
					<w2:column id="sStndDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="sPronCmpsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="PmmiInsurFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PremCalcFomlFlag" name="" dataType="text"></w2:column>
					<w2:column id="InrpsDoubInsImprYn_H" name="" dataType="text"></w2:column>
					<w2:column id="InrtMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="GrntAccuFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="PremCalcFomlFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="nEndAge" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="BussInsAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="Trtygp" name="" dataType="text"></w2:column>
					<w2:column id="nCrChngNo" name="" dataType="text"></w2:column>
					<w2:column id="nCnclRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="PronCmpsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="sPkgCd" name="" dataType="text"></w2:column>
					<w2:column id="PytrMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="FxamtCmpsFlag" name="" dataType="text"></w2:column>
					<w2:column id="nRenwlSeq" name="" dataType="text"></w2:column>
					<w2:column id="sInsurEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sPsnPrprtGroupFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag5_H" name="" dataType="text"></w2:column>
					<w2:column id="GrntAccuFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="RenwlTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sBascSlctFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="chk" name="" dataType="text"></w2:column>
					<w2:column id="nAccuPrem" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="nTotCmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="n1AccdCmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="sGrntAccuFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="InrtmPytrMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="InrtmPytrMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="RenwlTrtyCd_H" name="" dataType="text"></w2:column>
					<w2:column id="nSelfChamt" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="BascSlctFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyUserDefnName" name="" dataType="text"></w2:column>
					<w2:column id="DrveFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="nSeqno" name="" dataType="text"></w2:column>
					<w2:column id="nPsnPrprtGroupSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd1" name="" dataType="text"></w2:column>
					<w2:column id="nExptGrntBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPmmiInsurFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="BussInsAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="FxamtCmpsFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="sGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd6" name="" dataType="text"></w2:column>
					<w2:column id="SwHsHldGdsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd7" name="" dataType="text"></w2:column>
					<w2:column id="InsAvaDrveCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd8" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd9" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd2" name="" dataType="text"></w2:column>
					<w2:column id="TrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd3" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd4" name="" dataType="text"></w2:column>
					<w2:column id="nPreGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlUseCrFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd5" name="" dataType="text"></w2:column>
					<w2:column id="sFinalRenwlDate" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sAutoRenwlCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="sSubTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Set" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Dmcy" repeatNode="map" userData2="//*/DMCY"/>
			<w2:dataList baseNode="list" id="DsWs_PrdAttr" repeatNode="map" userData2="//hashtable/data[@hashkey='prdAttrList']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="ReviPremCd" name="" dataType="text"></w2:column>
					<w2:column id="NotcGdFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="AddAccuPremYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoTrnfDcYn" name="" dataType="text"></w2:column>
					<w2:column id="GdTypeFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="QAObjtYn" name="" dataType="text"></w2:column>
					<w2:column id="CptpGdYn" name="" dataType="text"></w2:column>
					<w2:column id="SpclPartDsasSbcvrYn_H" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlGdYn" name="" dataType="text"></w2:column>
					<w2:column id="PpayAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AsmtAgncDmndYn" name="" dataType="text"></w2:column>
					<w2:column id="GroupDcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="DrvrGdYn_H" name="" dataType="text"></w2:column>
					<w2:column id="HsecFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="GdFlgcd_H" name="" dataType="text"></w2:column>
					<w2:column id="TwhvcInjrSbcvrYn" name="" dataType="text"></w2:column>
					<w2:column id="EtcDc1Cd" name="" dataType="text"></w2:column>
					<w2:column id="GdFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="BunsMetdDocuClsfCd_H" name="" dataType="text"></w2:column>
					<w2:column id="GrntReviApplRateCd_H" name="" dataType="text"></w2:column>
					<w2:column id="TypeChngAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="MaxInsrdObjctCt" name="" dataType="text"></w2:column>
					<w2:column id="PsnGroupGdFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="GdCd_H" name="" dataType="text"></w2:column>
					<w2:column id="TypeChngAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="TaxPrfrGdYn" name="" dataType="text"></w2:column>
					<w2:column id="QAObjtYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoTrnfDcrt" name="" dataType="text"></w2:column>
					<w2:column id="PsnGroupGdFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="WmanMinInsAgeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="EtcDc2Cd_H" name="" dataType="text"></w2:column>
					<w2:column id="NotcGdFlag" name="" dataType="text"></w2:column>
					<w2:column id="IcmDuctFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="ManMaxInsAgeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoLoanYn_H" name="" dataType="text"></w2:column>
					<w2:column id="MwayWdraAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="AddPramtRate" name="" dataType="text"></w2:column>
					<w2:column id="AccuPremGdYn" name="" dataType="text"></w2:column>
					<w2:column id="EtcDc1Cd_H" name="" dataType="text"></w2:column>
					<w2:column id="GdHnglName" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="GdSaleEndDate_H" name="" dataType="text"></w2:column>
					<w2:column id="GdPermTypeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="BascPlanCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sStndDate" name="" dataType="text"></w2:column>
					<w2:column id="AccuPremGdYn_H" name="" dataType="text"></w2:column>
					<w2:column id="WmanMaxInsAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="AccuReviApplRateCd_H" name="" dataType="text"></w2:column>
					<w2:column id="AddPramtRate_H" name="" dataType="text"></w2:column>
					<w2:column id="PsnAnntFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="AsmtAgncDmndYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AddAccuPremYn" name="" dataType="text"></w2:column>
					<w2:column id="ReviPremCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PpayDcApplYn" name="" dataType="text"></w2:column>
					<w2:column id="DevisBaseSttsClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="RateCntpYn_H" name="" dataType="text"></w2:column>
					<w2:column id="SpclPartDsasSbcvrYn" name="" dataType="text"></w2:column>
					<w2:column id="GdPermTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="DvdnFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlDcYn" name="" dataType="text"></w2:column>
					<w2:column id="DrvrGdYn" name="" dataType="text"></w2:column>
					<w2:column id="RateCntpYn" name="" dataType="text"></w2:column>
					<w2:column id="GdHnglName_H" name="" dataType="text"></w2:column>
					<w2:column id="TaxPrfrGdYn_H" name="" dataType="text"></w2:column>
					<w2:column id="BunsMetdClsfCd_H" name="" dataType="text"></w2:column>
					<w2:column id="CptpGdYn_H" name="" dataType="text"></w2:column>
					<w2:column id="PsnAnntFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="BunsMetdDocuClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="GroupDcYn" name="" dataType="text"></w2:column>
					<w2:column id="PpaySrvcYn" name="" dataType="text"></w2:column>
					<w2:column id="WmanMaxInsAgeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PpayDcApplYn_H" name="" dataType="text"></w2:column>
					<w2:column id="GdSaleStrtDate_H" name="" dataType="text"></w2:column>
					<w2:column id="WmanMinInsAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="BunsMetdClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="CptpGdDcYn" name="" dataType="text"></w2:column>
					<w2:column id="GdSaleStrtDate" name="" dataType="text"></w2:column>
					<w2:column id="EtcDc2Cd" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlGdFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="GrntReviApplRateCd" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlGdFlag" name="" dataType="text"></w2:column>
					<w2:column id="ManMinInsAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="AutoTrnfDcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlGdYn_H" name="" dataType="text"></w2:column>
					<w2:column id="MaxInsrdObjctCt_H" name="" dataType="text"></w2:column>
					<w2:column id="GroupHndlDcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="DvdnFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="AccuReviApplRateCd" name="" dataType="text"></w2:column>
					<w2:column id="HsecFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="ManMaxInsAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="TwhvcInjrSbcvrYn_H" name="" dataType="text"></w2:column>
					<w2:column id="GdSaleEndDate" name="" dataType="text"></w2:column>
					<w2:column id="PpayAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="ManMinInsAgeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="GdCd" name="" dataType="text"></w2:column>
					<w2:column id="CptpGdDcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="BascPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="DevisBaseSttsClsfCd_H" name="" dataType="text"></w2:column>
					<w2:column id="MwayWdraAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoLoanYn" name="" dataType="text"></w2:column>
					<w2:column id="PpaySrvcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoTrnfDcrt_H" name="" dataType="text"></w2:column>
					<w2:column id="IcmDuctFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="GdTypeFlagCd_H" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Plan" repeatNode="map" userData2="//hashtable/data[@hashkey='applPlanList']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="sPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="sPremAmtChgYn" name="" dataType="text"></w2:column>
					<w2:column id="nPlanSeq" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremRate" name="" dataType="text"></w2:column>
					<w2:column id="nBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt" name="" dataType="text"></w2:column>
					<w2:column id="sPlanName" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt6" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt5" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt4" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt3" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt2" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremAmt1" name="" dataType="text"></w2:column>
					<w2:column id="sDisDrvrPlanYn" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlAvaYn" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_InsurTermPaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="sPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sInsurPaymCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurPaymName" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_PaymCycl" repeatNode="map" userData2="//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi">
	            <w2:columnInfo>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymCyclName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymCyclCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_PaymTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='PaymTerm']/vector/data/multi">
	            <w2:columnInfo>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
			<w2:dataList baseNode="list" id="Dsws_InsAmt" repeatNode="map" userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="sCdAttrValue" name="" dataType="text"></w2:column>
					<w2:column id="sHnglCdName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sCd" name="" dataType="text"></w2:column>
					<w2:column id="sEngCdName" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:linkedDataList id="Ds_InsAmt" bind="Dsws_InsAmt"></w2:linkedDataList>
            <w2:dataList baseNode="list" id="Ds_InsAmt_Tmp" repeatNode="map"></w2:dataList>
			<w2:linkedDataList id="lk_InsAmt" bind="Dsws_InsAmt">
           		<w2:condition type="filter"><![CDATA[sTrtyCd==ref('data:Ds_Trty.sTrtyCd')]]></w2:condition>
           	</w2:linkedDataList>
			<w2:dataList baseNode="list" id="DsWs_InsurTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='InsurTerm']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_MinsrReln" repeatNode="map" userData2="//hashtable/data[@hashkey='MinsrReln']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="sName" name="" dataType="text"></w2:column>
					<w2:column id="sCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Trty" repeatNode="map" userData2="//hashtable/data[@hashkey='multi']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="RenwlUseCrFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyObjtFlag" name="" dataType="text"></w2:column>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="PytrMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag4" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag5" name="" dataType="text"></w2:column>
					<w2:column id="sResvAmtKey" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtdate" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzCd" name="" dataType="text"></w2:column>
					<w2:column id="BascSlctFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag3" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag2" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag1" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="FirstInsurTermApplYn" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlCyclCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sScrnIndcYn" name="" dataType="text"></w2:column>
					<w2:column id="InrpsDoubInsImprYn" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyPrem" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="TrtyObjtFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="nGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyInsAmt" name="" dataType="text"></w2:column>
					<w2:column id="nPaymAge" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlYn" name="" dataType="text"></w2:column>
					<w2:column id="TrtyCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sMainTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd11" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd10" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag3_H" name="" dataType="text"></w2:column>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyHnglAbbName" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="Trtygp_H" name="" dataType="text"></w2:column>
					<w2:column id="InrtMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="nPs1CmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag4_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="InsAvaDrveCd" name="" dataType="text"></w2:column>
					<w2:column id="nRealInsurTerm" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag1_H" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag2_H" name="" dataType="text"></w2:column>
					<w2:column id="PronCmpsTrtyYn_H" name="" dataType="text"></w2:column>
					<w2:column id="nTrtyOrdr" name="" dataType="text"></w2:column>
					<w2:column id="sCnclExtnEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyStatCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PmmiInsurFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="RenwlUseCrFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sAutoRenwlAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="nRealPaymTerm" name="" dataType="text"></w2:column>
					<w2:column id="TrtyFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyTypeCd_H" name="" dataType="text"></w2:column>
					<w2:column id="DrveFlag" name="" dataType="text"></w2:column>
					<w2:column id="FirstInsurTermApplYn_H" name="" dataType="text"></w2:column>
					<w2:column id="SwHsHldGdsTrtyYn_H" name="" dataType="text"></w2:column>
					<w2:column id="TrtyUserDefnName_H" name="" dataType="text"></w2:column>
					<w2:column id="sStndDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="sPronCmpsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="PmmiInsurFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="PremCalcFomlFlag" name="" dataType="text"></w2:column>
					<w2:column id="InrpsDoubInsImprYn_H" name="" dataType="text"></w2:column>
					<w2:column id="InrtMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="GrntAccuFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="PremCalcFomlFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="nEndAge" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="BussInsAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="Trtygp" name="" dataType="text"></w2:column>
					<w2:column id="nCrChngNo" name="" dataType="text"></w2:column>
					<w2:column id="nCnclRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="PronCmpsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="sPkgCd" name="" dataType="text"></w2:column>
					<w2:column id="PytrMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="FxamtCmpsFlag" name="" dataType="text"></w2:column>
					<w2:column id="nRenwlSeq" name="" dataType="text"></w2:column>
					<w2:column id="sInsurEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sPsnPrprtGroupFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="StndPremTablFlag5_H" name="" dataType="text"></w2:column>
					<w2:column id="GrntAccuFlagCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="RenwlTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sBascSlctFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="chk" name="" dataType="text"></w2:column>
					<w2:column id="nAccuPrem" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="nTotCmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="n1AccdCmpsLmitAmt" name="" dataType="text"></w2:column>
					<w2:column id="sGrntAccuFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="InrtmPytrMdfcYn" name="" dataType="text"></w2:column>
					<w2:column id="InrtmPytrMdfcYn_H" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="RenwlTrtyCd_H" name="" dataType="text"></w2:column>
					<w2:column id="nSelfChamt" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="BascSlctFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="TrtyUserDefnName" name="" dataType="text"></w2:column>
					<w2:column id="DrveFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="AutoRenwlCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="nSeqno" name="" dataType="text"></w2:column>
					<w2:column id="nPsnPrprtGroupSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd1" name="" dataType="text"></w2:column>
					<w2:column id="nExptGrntBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPmmiInsurFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="BussInsAvaYn_H" name="" dataType="text"></w2:column>
					<w2:column id="FxamtCmpsFlag_H" name="" dataType="text"></w2:column>
					<w2:column id="sGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd6" name="" dataType="text"></w2:column>
					<w2:column id="SwHsHldGdsTrtyYn" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd7" name="" dataType="text"></w2:column>
					<w2:column id="InsAvaDrveCd_H" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd8" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd9" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd2" name="" dataType="text"></w2:column>
					<w2:column id="TrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd3" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd4" name="" dataType="text"></w2:column>
					<w2:column id="nPreGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sRenwlUseCrFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sExcluGroupCd5" name="" dataType="text"></w2:column>
					<w2:column id="sFinalRenwlDate" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sAutoRenwlCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="sSubTrtyCd" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:linkedDataList id="lk_InsurTerm" bind="DsWs_TrtyTerm">
           		<w2:condition type="filter"><![CDATA[sTrtyCd==ref('data:Ds_Trty.sTrtyCd')]]></w2:condition>
           	</w2:linkedDataList>
           	<w2:linkedDataList id="lk_PaymTerm" bind="DsWs_TrtyTerm">
           		<w2:condition type="filter"><![CDATA[sTrtyCd==ref('data:Ds_Trty.sTrtyCd')]]></w2:condition>
           	</w2:linkedDataList>
			<w2:dataList baseNode="list" id="DsWs_TrtyTerm_0" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
				<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_1" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_2" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_3" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_4" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_5" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_6" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_7" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_TrtyTerm_8" repeatNode="map" userData2="//hashtable/data[@hashkey='trtyTermList']/vector/data/multi">
            	<w2:columnInfo>
					<w2:column id="nInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Search42" repeatNode="map" userData2="//*/CUSAA42">
				<w2:columnInfo>
					<w2:column id="sAgmRecvCode" name="" dataType="text"></w2:column>
					<w2:column id="result" name="" dataType="text"></w2:column>
					<w2:column id="sAgmUser" name="" dataType="text"></w2:column>
					<w2:column id="nCallSerial" name="" dataType="text"></w2:column>
					<w2:column id="afterEJBCall" name="" dataType="text"></w2:column>
					<w2:column id="sLast" name="" dataType="text"></w2:column>
					<w2:column id="sExpired" name="" dataType="text"></w2:column>
					<w2:column id="sAgmDt" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn5" name="" dataType="text"></w2:column>
					<w2:column id="sAgmUserIp" name="" dataType="text"></w2:column>
					<w2:column id="beforeEJBCall" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn4" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn3" name="" dataType="text"></w2:column>
					<w2:column id="sMdfUserIp" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn2" name="" dataType="text"></w2:column>
					<w2:column id="sMdfTime" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn1" name="" dataType="text"></w2:column>
					<w2:column id="sRecStartTime" name="" dataType="text"></w2:column>
					<w2:column id="sAgmTime" name="" dataType="text"></w2:column>
					<w2:column id="sRecEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sExpireDate" name="" dataType="text"></w2:column>
					<w2:column id="sAgmCheckInfo" name="" dataType="text"></w2:column>
					<w2:column id="sCustType" name="" dataType="text"></w2:column>
					<w2:column id="sInputDate" name="" dataType="text"></w2:column>
					<w2:column id="sProductType" name="" dataType="text"></w2:column>
					<w2:column id="sCustNo" name="" dataType="text"></w2:column>
					<w2:column id="sMdfUser" name="" dataType="text"></w2:column>
					<w2:column id="sRetentionDate" name="" dataType="text"></w2:column>
					<w2:column id="sAgmYn" name="" dataType="text"></w2:column>
					<w2:column id="sInputIP" name="" dataType="text"></w2:column>
					<w2:column id="sInputID" name="" dataType="text"></w2:column>
					<w2:column id="nChangeNo" name="" dataType="text"></w2:column>
					<w2:column id="sAgmCheckType" name="" dataType="text"></w2:column>
					<w2:column id="sAgmMethod" name="" dataType="text"></w2:column>
					<w2:column id="sAgmRecvName" name="" dataType="text"></w2:column>
					<w2:column id="sInputTime" name="" dataType="text"></w2:column>
					<w2:column id="sRecStartDate" name="" dataType="text"></w2:column>
					<w2:column id="sRecEndTime" name="" dataType="text"></w2:column>
					<w2:column id="sMdfDt" name="" dataType="text"></w2:column>
					<w2:column id="sAgmReq" name="" dataType="text"></w2:column>
					<w2:column id="sUserName" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_SsrtCarr" repeatNode="map" userData2="//vector/data/LTIEA01Carr">
				<w2:columnInfo>
					<w2:column id="sFrstDoerUser" name="" dataType="text"></w2:column>
					<w2:column id="sSsrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsCd" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoer" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="Ds_Trty_Save" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="DrveFlag" name="DrveFlag"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIDA15" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nSeqno" name="nSeqno"></w2:column>
                    <w2:column dataType="text" id="sCcndFlagCd" name="sCcndFlagCd"></w2:column>
                    <w2:column dataType="text" id="sCcndFlagName" name="sCcndFlagName"></w2:column>
                    <w2:column dataType="text" id="sCcndResno" name="sCcndResno"></w2:column>
                    <w2:column dataType="text" id="sCcndName" name="sCcndName"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sJugmAuthCd" name="sJugmAuthCd"></w2:column>
                    <w2:column dataType="text" id="sJugmAuthName" name="sJugmAuthName"></w2:column>
                    <w2:column dataType="text" id="sJugmGradName" name="sJugmGradName"></w2:column>
                    <w2:column dataType="text" id="sJugmCont" name="sJugmCont"></w2:column>
                    <w2:column dataType="text" id="sDgnsObjtYn" name="sDgnsObjtYn"></w2:column>
                    <w2:column dataType="text" id="sConuObjtYn" name="sConuObjtYn"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="nOthrInsurSeqno" name="nOthrInsurSeqno"></w2:column>
                    <w2:column dataType="text" id="nGroupInrpsSeqno" name="nGroupInrpsSeqno"></w2:column>
                    <w2:column dataType="text" id="sRqstCd" name="sRqstCd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Tmp" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sRenwlTrtyCd" name="sRenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sRenwlUseCrFlgcd" name="sRenwlUseCrFlgcd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Single" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sStndDate" name="sStndDate"></w2:column>
                    <w2:column dataType="text" id="sResno" name="sResno"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_TmpCnt" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="DrveFlag" name="DrveFlag"></w2:column>
                    <w2:column dataType="text" id="sRenwlTrtyCd" name="sRenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sRenwlUseCrFlgcd" name="sRenwlUseCrFlgcd"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIDA15" repeatNode="map" userData2="//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15">
            	<w2:columnInfo>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sGdTypeFlgCd" name="" dataType="text"></w2:column>
					<w2:column id="sUdrtkJugmCd" name="" dataType="text"></w2:column>
					<w2:column id="sJugmAuthCdName" name="" dataType="text"></w2:column>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="sJugmCont" name="" dataType="text"></w2:column>
					<w2:column id="sJugmGradCdName" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="sCcndName" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="sJugmAuthCd" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="sJugmGradCd" name="" dataType="text"></w2:column>
					<w2:column id="sCcndResno" name="" dataType="text"></w2:column>
					<w2:column id="nUdrtkTypeSeqno" name="" dataType="text"></w2:column>
					<w2:column id="nSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sSexFlag" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIEA10" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIEA10']/LTIEA10">
            	<w2:columnInfo>
					<w2:column id="sRpstName" name="" dataType="text"></w2:column>
					<w2:column id="sGroupName" name="" dataType="text"></w2:column>
					<w2:column id="sRpstCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupDcrt" name="" dataType="text"></w2:column>
					<w2:column id="sRowType" name="" dataType="text"></w2:column>
					<w2:column id="sGroupCrAdmNo" name="" dataType="text"></w2:column>
					<w2:column id="nFrstPsct" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_LTIDA00" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDA00']/LTIDA00">
            	<w2:columnInfo>
					<w2:column id="sHsecFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymTypeCd" name="" dataType="text"></w2:column>
					<w2:column id="nCrStatCarrSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sBsmnRgstNo" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzCd" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzName" name="" dataType="text"></w2:column>
					<w2:column id="sCrNoSeq" name="" dataType="text"></w2:column>
					<w2:column id="sCrStatFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtdate" name="" dataType="text"></w2:column>
					<w2:column id="sBunsAchvDgrmClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sDoer" name="" dataType="text"></w2:column>
					<w2:column id="sTaxPrfrYn" name="" dataType="text"></w2:column>
					<w2:column id="sUserID" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc1Dcrt" name="" dataType="text"></w2:column>
					<w2:column id="nMaxPrem" name="" dataType="text"></w2:column>
					<w2:column id="nObjtNum" name="" dataType="text"></w2:column>
					<w2:column id="sGdTypeFlgCd" name="" dataType="text"></w2:column>
					<w2:column id="sCrStatCd" name="" dataType="text"></w2:column>
					<w2:column id="sPeriMwayRqstDate" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="nMinPremRate" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc1Prem" name="" dataType="text"></w2:column>
					<w2:column id="nAddPaymPrem" name="" dataType="text"></w2:column>
					<w2:column id="sSrdoIssuDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerPartCd" name="" dataType="text"></w2:column>
					<w2:column id="sCpayDate" name="" dataType="text"></w2:column>
					<w2:column id="nDefrYct" name="" dataType="text"></w2:column>
					<w2:column id="sScanObjtYn" name="" dataType="text"></w2:column>
					<w2:column id="nGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sItemCd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymAge" name="" dataType="text"></w2:column>
					<w2:column id="sInsurCrLoanYn" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnlFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="nAnntPymCt" name="" dataType="text"></w2:column>
					<w2:column id="gUserID" name="" dataType="text"></w2:column>
					<w2:column id="sPaymCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanName" name="" dataType="text"></w2:column>
					<w2:column id="nRealInsurTerm" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="gUserIP" name="" dataType="text"></w2:column>
					<w2:column id="sPaymExptDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerUser" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt21" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt22" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc2Prem" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="nRealPaymTerm" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="nAuthID" name="" dataType="text"></w2:column>
					<w2:column id="sRowType" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymCyclCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupInsPsct" name="" dataType="text"></w2:column>
					<w2:column id="sGroupCrAdmNo" name="" dataType="text"></w2:column>
					<w2:column id="sStndDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="nBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymStrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sGdName" name="" dataType="text"></w2:column>
					<w2:column id="sDoerUser" name="" dataType="text"></w2:column>
					<w2:column id="nEndAge" name="" dataType="text"></w2:column>
					<w2:column id="sCrNoType" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt5" name="" dataType="text"></w2:column>
					<w2:column id="sEtcDc2Cd" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt6" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt3" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="sHndwritJugmYn" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt4" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt1" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt2" name="" dataType="text"></w2:column>
					<w2:column id="nCrChngNo" name="" dataType="text"></w2:column>
					<w2:column id="nEndRtnAmtCalElmnt10" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerHdqtCd" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoer" name="" dataType="text"></w2:column>
					<w2:column id="sEtcDc1Cd" name="" dataType="text"></w2:column>
					<w2:column id="sDvdnFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sConuResltName" name="" dataType="text"></w2:column>
					<w2:column id="nDcPrem" name="" dataType="text"></w2:column>
					<w2:column id="sLapsDate" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerTeamCd" name="" dataType="text"></w2:column>
					<w2:column id="sAnntPymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sCmMetd" name="" dataType="text"></w2:column>
					<w2:column id="sPpayAvaYn" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="nInrpsPsct" name="" dataType="text"></w2:column>
					<w2:column id="nExptEndRetrnAmt" name="" dataType="text"></w2:column>
					<w2:column id="nAccuPrem" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="sConuResltCd" name="" dataType="text"></w2:column>
					<w2:column id="sFinalPaymMthy" name="" dataType="text"></w2:column>
					<w2:column id="sHealDcYn" name="" dataType="text"></w2:column>
					<w2:column id="sFrstSaleChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sCedeStndYm" name="" dataType="text"></w2:column>
					<w2:column id="sApplDclrRato" name="" dataType="text"></w2:column>
					<w2:column id="nFinalPaymSeq" name="" dataType="text"></w2:column>
					<w2:column id="nTotPaymPrem" name="" dataType="text"></w2:column>
					<w2:column id="sFinalReviDate" name="" dataType="text"></w2:column>
					<w2:column id="sPeriMwayWdraYn" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnlDtal" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgRankName" name="" dataType="text"></w2:column>
					<w2:column id="sAnntOpnAgeCd" name="" dataType="text"></w2:column>
					<w2:column id="nMinPrem" name="" dataType="text"></w2:column>
					<w2:column id="sInsType" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDc2Dcrt" name="" dataType="text"></w2:column>
					<w2:column id="sRecvProgStat" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgTbNo" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="nExptEndRtnrt" name="" dataType="text"></w2:column>
					<w2:column id="nInsurTermGrntPremTot" name="" dataType="text"></w2:column>
					<w2:column id="sFinalRecpDate" name="" dataType="text"></w2:column>
					<w2:column id="sJugmGradCd" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sCrNo" name="" dataType="text"></w2:column>
					<w2:column id="sPsnGroupFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sPlanProgRankCd" name="" dataType="text"></w2:column>
					<w2:column id="nApplPrem" name="" dataType="text"></w2:column>
					<w2:column id="sTaxPrfrGdYn" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerCentrCd" name="" dataType="text"></w2:column>
					<w2:column id="sSsrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sJugmAuthCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdNm" name="" dataType="text"></w2:column>
					<w2:column id="sPectSaleYn" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupDcrt" name="" dataType="text"></w2:column>
					<w2:column id="sFrstDoerDeptOffcCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
					<w2:column id="nEtcDcrt" name="" dataType="text"></w2:column>
					<w2:column id="result" name="" dataType="text"></w2:column>
					<w2:column id="sApplyPrtDate" name="" dataType="text"></w2:column>
					<w2:column id="sAqamtChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sBunsMetdClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sBunsMetdDocuClsfCd" name="" dataType="text"></w2:column>
					<w2:column id="sChnlCd" name="" dataType="text"></w2:column>
					<w2:column id="sCmmcMeanCnclAgreYn" name="" dataType="text"></w2:column>
					<w2:column id="sCmprCrNotcCncl" name="" dataType="text"></w2:column>
					<w2:column id="sCmprCrNotcSsrt" name="" dataType="text"></w2:column>
					<w2:column id="sCrPrtrRole" name="" dataType="text"></w2:column>
					<w2:column id="sDrivFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sElecNtAgreDate" name="" dataType="text"></w2:column>
					<w2:column id="sElecNtltRvYn" name="" dataType="text"></w2:column>
					<w2:column id="sEmailClasYn" name="" dataType="text"></w2:column>
					<w2:column id="sFinalDueMthy" name="" dataType="text"></w2:column>
					<w2:column id="sFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtHms" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermName" name="" dataType="text"></w2:column>
					<w2:column id="sPlanPsnGroupCd" name="" dataType="text"></w2:column>
					<w2:column id="sRdchCrYn" name="" dataType="text"></w2:column>
					<w2:column id="sSaleChnl" name="" dataType="text"></w2:column>
					<w2:column id="sUseCustType" name="" dataType="text"></w2:column>
				</w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Pibo" repeatNode="map" userData2="//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01">
				<w2:columnInfo>
					<w2:column id="sInptDate" name="" dataType="text"></w2:column>
					<w2:column id="sInptHms" name="" dataType="text"></w2:column>
					<w2:column id="sCrtorRelnCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurStrtdate" name="" dataType="text"></w2:column>
					<w2:column id="sJobName" name="" dataType="text"></w2:column>
					<w2:column id="nEndAge" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsStatCd" name="" dataType="text"></w2:column>
					<w2:column id="sOrgJobCd" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsSexFlag" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpInrpsRelnName" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDler" name="" dataType="text"></w2:column>
					<w2:column id="sExisPftbpCd" name="" dataType="text"></w2:column>
					<w2:column id="nMailRvadChngSeq" name="" dataType="text"></w2:column>
					<w2:column id="nCrChngNo" name="" dataType="text"></w2:column>
					<w2:column id="sSubCvrgeYnName" name="" dataType="text"></w2:column>
					<w2:column id="nMaxPrem" name="" dataType="text"></w2:column>
					<w2:column id="sXcptPftbpInrpsRelnCd" name="" dataType="text"></w2:column>
					<w2:column id="sXcptPftbpCd" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanCd" name="" dataType="text"></w2:column>
					<w2:column id="nAddrChngSeq" name="" dataType="text"></w2:column>
					<w2:column id="sDgnsObjtYnName" name="" dataType="text"></w2:column>
					<w2:column id="sDrveFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInsurEndDate" name="" dataType="text"></w2:column>
					<w2:column id="sExisPftbpName" name="" dataType="text"></w2:column>
					<w2:column id="sExisPftbpInrpsRelnCd" name="" dataType="text"></w2:column>
					<w2:column id="sInptDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="sMinsrRelnCd" name="" dataType="text"></w2:column>
					<w2:column id="nManAge" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpTelno" name="" dataType="text"></w2:column>
					<w2:column id="nGrntPrem" name="" dataType="text"></w2:column>
					<w2:column id="sCstFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sPaymTermCd" name="" dataType="text"></w2:column>
					<w2:column id="nPaymAge" name="" dataType="text"></w2:column>
					<w2:column id="sRqstYn" name="" dataType="text"></w2:column>
					<w2:column id="sPlanNo" name="" dataType="text"></w2:column>
					<w2:column id="sCcndResno" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpName" name="" dataType="text"></w2:column>
					<w2:column id="nInrpsSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sOthrInsurCnt" name="" dataType="text"></w2:column>
					<w2:column id="sRqstYnName" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcHms" name="" dataType="text"></w2:column>
					<w2:column id="nMinPrem" name="" dataType="text"></w2:column>
					<w2:column id="sAddrFlgcd" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsName" name="" dataType="text"></w2:column>
					<w2:column id="sMNumCrInsAgreYn" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDlerIP" name="" dataType="text"></w2:column>
					<w2:column id="sApplPlanName" name="" dataType="text"></w2:column>
					<w2:column id="sJobCd" name="" dataType="text"></w2:column>
					<w2:column id="sPsnInfoOferAgreYn" name="" dataType="text"></w2:column>
					<w2:column id="nRealInsurTerm" name="" dataType="text"></w2:column>
					<w2:column id="sExisPftbpTelno" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsCd" name="" dataType="text"></w2:column>
					<w2:column id="sMailRvadAddrFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sUdrtkJugmCd" name="" dataType="text"></w2:column>
					<w2:column id="sMdfcDate" name="" dataType="text"></w2:column>
					<w2:column id="sCnclExtnEndDate" name="" dataType="text"></w2:column>
					<w2:column id="nExptGrntBussPrem" name="" dataType="text"></w2:column>
					<w2:column id="sOthrInsurCntName" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpCd" name="" dataType="text"></w2:column>
					<w2:column id="sInrpsCstId" name="" dataType="text"></w2:column>
					<w2:column id="sJobGradCd" name="" dataType="text"></w2:column>
					<w2:column id="sPftbpInrpsRelnCd" name="" dataType="text"></w2:column>
					<w2:column id="sXcptPftbpName" name="" dataType="text"></w2:column>
					<w2:column id="sDgnsObjtYn" name="" dataType="text"></w2:column>
					<w2:column id="nTelnoChngSeq" name="" dataType="text"></w2:column>
					<w2:column id="sXcptPftbpTelno" name="" dataType="text"></w2:column>
					<w2:column id="nRealPaymTerm" name="" dataType="text"></w2:column>
					<w2:column id="nInrpsAge" name="" dataType="text"></w2:column>
					<w2:column id="sSubCvrgeYn" name="" dataType="text"></w2:column>
					<w2:column id="sInsurTermCd" name="" dataType="text"></w2:column>
					<w2:column id="sRowType" name="" dataType="text"></w2:column>
					<w2:column id="sel" name="" dataType="text"></w2:column>
					<w2:column id="sXcptPftbpFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="nGroupSeqno" name="" dataType="text"></w2:column>
					<w2:column id="sInptDler" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="Ds_Trty_Backup" repeatNode="map">
            	<w2:columnInfo>
                    <w2:column dataType="text" id="chk" name="chk"></w2:column>
                    <w2:column dataType="text" id="sBascSlctFlagCd" name="sBascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd_H" name="BascSlctFlagCd_H"></w2:column>
                    <w2:column dataType="text" id="sTrtyName" name="sTrtyName"></w2:column>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd"></w2:column>
                    <w2:column dataType="text" id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno"></w2:column>
                    <w2:column dataType="text" id="sTrtyCd" name="sTrtyCd"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="nTrtyOrdr" name="nTrtyOrdr"></w2:column>
                    <w2:column dataType="text" id="sScrnIndcYn" name="sScrnIndcYn"></w2:column>
                    <w2:column dataType="text" id="sGdCd" name="sGdCd"></w2:column>
                    <w2:column dataType="text" id="sGnrzCd" name="sGnrzCd"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlAvaYn" name="sAutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="sAutoRenwlCyclCd" name="sAutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="nTrtyInsAmt" name="nTrtyInsAmt"></w2:column>
                    <w2:column dataType="text" id="nSelfChamt" name="nSelfChamt"></w2:column>
                    <w2:column dataType="text" id="sGrntAccuFlagCd" name="sGrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="nGrntPrem" name="nGrntPrem"></w2:column>
                    <w2:column dataType="text" id="nAccuPrem" name="nAccuPrem"></w2:column>
                    <w2:column dataType="text" id="nExptGrntBussPrem" name="nExptGrntBussPrem"></w2:column>
                    <w2:column dataType="text" id="nRiskPrem" name="nRiskPrem"></w2:column>
                    <w2:column dataType="text" id="nTrtyPrem" name="nTrtyPrem"></w2:column>
                    <w2:column dataType="text" id="nRenwlSeq" name="nRenwlSeq"></w2:column>
                    <w2:column dataType="text" id="sRenwlYn" name="sRenwlYn"></w2:column>
                    <w2:column dataType="text" id="sPaymTermCd" name="sPaymTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealPaymTerm" name="nRealPaymTerm"></w2:column>
                    <w2:column dataType="text" id="sInsurTermCd" name="sInsurTermCd"></w2:column>
                    <w2:column dataType="text" id="nRealInsurTerm" name="nRealInsurTerm"></w2:column>
                    <w2:column dataType="text" id="nPaymAge" name="nPaymAge"></w2:column>
                    <w2:column dataType="text" id="nEndAge" name="nEndAge"></w2:column>
                    <w2:column dataType="text" id="sTrtyStatCd" name="sTrtyStatCd"></w2:column>
                    <w2:column dataType="text" id="sInsurStrtdate" name="sInsurStrtdate"></w2:column>
                    <w2:column dataType="text" id="sInsurEndDate" name="sInsurEndDate"></w2:column>
                    <w2:column dataType="text" id="sCnclExtnEndDate" name="sCnclExtnEndDate"></w2:column>
                    <w2:column dataType="text" id="TrtyTypeCd" name="TrtyTypeCd"></w2:column>
                    <w2:column dataType="text" id="TrtyFlagCd" name="TrtyFlagCd"></w2:column>
                    <w2:column dataType="text" id="BascSlctFlagCd" name="BascSlctFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlAvaYn" name="AutoRenwlAvaYn"></w2:column>
                    <w2:column dataType="text" id="GrntAccuFlagCd" name="GrntAccuFlagCd"></w2:column>
                    <w2:column dataType="text" id="AutoRenwlCyclCd" name="AutoRenwlCyclCd"></w2:column>
                    <w2:column dataType="text" id="PmmiInsurFlagCd" name="PmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="RenwlUseCrFlagCd" name="RenwlUseCrFlagCd"></w2:column>
                    <w2:column dataType="text" id="PronCmpsTrtyYn" name="PronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPronCmpsTrtyYn" name="sPronCmpsTrtyYn"></w2:column>
                    <w2:column dataType="text" id="sPmmiInsurFlagCd" name="sPmmiInsurFlagCd"></w2:column>
                    <w2:column dataType="text" id="sResvAmtKey" name="sResvAmtKey"></w2:column>
                    <w2:column dataType="text" id="FxamtCmpsFlag" name="FxamtCmpsFlag"></w2:column>
                    <w2:column dataType="text" id="InsAvaDrveCd" name="InsAvaDrveCd"></w2:column>
                    <w2:column dataType="text" id="RenwlTrtyCd" name="RenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="DrveFlag" name="DrveFlag"></w2:column>
                    <w2:column dataType="text" id="sRenwlTrtyCd" name="sRenwlTrtyCd"></w2:column>
                    <w2:column dataType="text" id="sRenwlUseCrFlgcd" name="sRenwlUseCrFlgcd"></w2:column>
                    <w2:column dataType="text" id="TrtyHnglAbbName" name="TrtyHnglAbbName"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
            <w2:dataList baseNode="list" id="Ds_LTIDA03" repeatNode="map">
                <w2:columnInfo>
                    <w2:column dataType="text" id="sPlanNo" name="sPlanNo"></w2:column>
                    <w2:column dataType="text" id="nCrChngNo" name="nCrChngNo"></w2:column>
                    <w2:column dataType="text" id="sCrtorFlgcd" name="sCrtorFlgcd"></w2:column>
                    <w2:column dataType="text" id="sCrtorCd" name="sCrtorCd"></w2:column>
                    <w2:column dataType="text" id="sCrtorName" name="sCrtorName"></w2:column>
                    <w2:column dataType="text" id="nCrtorAge" name="nCrtorAge"></w2:column>
                    <w2:column dataType="text" id="sCrtorSexFlag" name="sCrtorSexFlag"></w2:column>
                    <w2:column dataType="text" id="sCrtorCstId" name="sCrtorCstId"></w2:column>
                    <w2:column dataType="text" id="nCstChngSeqno" name="nCstChngSeqno"></w2:column>
                    <w2:column dataType="text" id="sCstFlgcd" name="sCstFlgcd"></w2:column>
                    <w2:column dataType="text" id="sAddrFlgcd" name="sAddrFlgcd"></w2:column>
                    <w2:column dataType="text" id="nAddrChngSeq" name="nAddrChngSeq"></w2:column>
                    <w2:column dataType="text" id="nTelnoChngSeq" name="nTelnoChngSeq"></w2:column>
                    <w2:column dataType="text" id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd"></w2:column>
                    <w2:column dataType="text" id="nMailRvadChngSeq" name="nMailRvadChngSeq"></w2:column>
                    <w2:column dataType="text" id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd"></w2:column>
                    <w2:column dataType="text" id="sEndPftbpRelnCd" name="sEndPftbpRelnCd"></w2:column>
                    <w2:column dataType="text" id="sEndPftbpCd" name="sEndPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sEndPftbpName" name="sEndPftbpName"></w2:column>
                    <w2:column dataType="text" id="sEndPftbpCntad" name="sEndPftbpCntad"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntFlagCd" name="sAsmtAgntFlagCd"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntRelnCd" name="sAsmtAgntRelnCd"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntCd" name="sAsmtAgntCd"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntName" name="sAsmtAgntName"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntCntad" name="sAsmtAgntCntad"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpCd" name="sInsurPftbpCd"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpName" name="sInsurPftbpName"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpCntad" name="sInsurPftbpCntad"></w2:column>
                    <w2:column dataType="text" id="sZip1" name="sZip1"></w2:column>
                    <w2:column dataType="text" id="sZip2" name="sZip2"></w2:column>
                    <w2:column dataType="text" id="sAdrs1" name="sAdrs1"></w2:column>
                    <w2:column dataType="text" id="sAdrsAdd" name="sAdrsAdd"></w2:column>
                    <w2:column dataType="text" id="sHomeTel1" name="sHomeTel1"></w2:column>
                    <w2:column dataType="text" id="sHomeTel2" name="sHomeTel2"></w2:column>
                    <w2:column dataType="text" id="sHomeTel3" name="sHomeTel3"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel1" name="sOfficeTel1"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel2" name="sOfficeTel2"></w2:column>
                    <w2:column dataType="text" id="sOfficeTel3" name="sOfficeTel3"></w2:column>
                    <w2:column dataType="text" id="sCellPhone1" name="sCellPhone1"></w2:column>
                    <w2:column dataType="text" id="sCellPhone2" name="sCellPhone2"></w2:column>
                    <w2:column dataType="text" id="sCellPhone3" name="sCellPhone3"></w2:column>
                    <w2:column dataType="text" id="sFax1" name="sFax1"></w2:column>
                    <w2:column dataType="text" id="sFax2" name="sFax2"></w2:column>
                    <w2:column dataType="text" id="sFax3" name="sFax3"></w2:column>
                    <w2:column dataType="text" id="sEmail1" name="sEmail1"></w2:column>
                    <w2:column dataType="text" id="RvadAddr" name="RvadAddr"></w2:column>
                    <w2:column dataType="text" id="sEnntmPftbpYn" name="sEnntmPftbpYn"></w2:column>
                    <w2:column dataType="text" id="sAsmtAgntYn" name="sAsmtAgntYn"></w2:column>
                    <w2:column dataType="text" id="sInptDler" name="sInptDler"></w2:column>
                    <w2:column dataType="text" id="sInptDlerIP" name="sInptDlerIP"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfmRgcr" name="sRlnmCnfmRgcr"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfmDate" name="sRlnmCnfmDate"></w2:column>
                    <w2:column dataType="text" id="sRlnmCnfm" name="sRlnmCnfm"></w2:column>
                    <w2:column dataType="text" id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn"></w2:column>
                </w2:columnInfo>
            </w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_PvcrJob" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="sJobCd" name="" dataType="text" ></w2:column>
					<w2:column id="sInrpsCd" name="" dataType="text" ></w2:column>
					<w2:column id="sJobName" name="" dataType="text" ></w2:column>
					<w2:column id="sCrNo" name="" dataType="text" ></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Goods" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="sMaxAge" name="" dataType="text"></w2:column>
					<w2:column id="sGdCd" name="" dataType="text"></w2:column>
					<w2:column id="sMinAge" name="" dataType="text"></w2:column>
					<w2:column id="GdTypeFlagCd" name="" dataType="text"></w2:column>
					<w2:column id="sGdName" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzCd" name="" dataType="text"></w2:column>
					<w2:column id="sGnrzName" name="" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_BascTrty" repeatNode="map" userData2="//hashtable/data[@hashkey='BascList']/vector/data/LTIBA01"></w2:dataList>
            <w2:dataList baseNode="list" id="DsWs_Napgi" repeatNode="map" userData2="//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_Basic" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="LTIDB07Cnt" repeatNode="map"></w2:dataList>
            <w2:dataList baseNode="list" id="Ds_Trty_ReStore" repeatNode="map"></w2:dataList>
			<w2:dataList baseNode="list" id="Ds_Trty_ReStore_Temp" repeatNode="map"></w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Trty_TermChng" repeatNode="map" userData2="//hashtable/data[@hashkey='multi']/vector/data/multi"></w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_LTIDB01Cnt" repeatNode="map" userData2="//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt"></w2:dataList>
			<w2:dataMap baseNode="map" id="TrtyCmpsContAmtLimitVo">
				<w2:keyInfo>
					<w2:key id="gdCd" name="gdCd" dataType="text"></w2:key>
					<w2:key id="gnrzCd" name="gnrzCd" dataType="text"></w2:key>
					<w2:key id="planCd" name="planCd" dataType="text"></w2:key>
					<w2:key id="ssrtDate" name="ssrtDate" dataType="text"></w2:key>
					<w2:key id="trtyCd" name="trtyCd" dataType="text"></w2:key>
					<w2:key id="trtyInsAmt" name="trtyInsAmt" dataType="text"></w2:key>
				</w2:keyInfo>
			</w2:dataMap>
			<w2:dataList baseNode="list" id="TrtyCmpsContAmtLimitDtalVo" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="amtAftrPrgp" name="amtAftrPrgp" dataType="text"></w2:column>
					<w2:column id="amtSpclGu" name="amtSpclGu" dataType="text"></w2:column>
					<w2:column id="bosangAmt" name="bosangAmt" dataType="text"></w2:column>
					<w2:column id="calcStnd" name="calcStnd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd" name="connCvrgeCd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd1" name="connCvrgeCd1" dataType="text"></w2:column>
					<w2:column id="conts" name="conts" dataType="text"></w2:column>
					<w2:column id="cvrgeCd" name="cvrgeCd" dataType="text"></w2:column>
					<w2:column id="cvrgeName" name="cvrgeName" dataType="text"></w2:column>
					<w2:column id="pymStndSpec" name="pymStndSpec" dataType="text"></w2:column>
					<w2:column id="seqno" name="seqno" dataType="text"></w2:column>
					<w2:column id="stndVarb" name="stndVarb" dataType="text"></w2:column>
					<w2:column id="stndVarb1" name="stndVarb1" dataType="text"></w2:column>
					<w2:column id="trtyCd" name="trtyCd" dataType="text"></w2:column>
					<w2:column id="trtyName" name="trtyName" dataType="text"></w2:column>
					<w2:column id="unit" name="unit" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList id="DS_TrtyCmpsContAmtLimitInfo" baseNode="list" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="sTrtyCd" name="sTrtyCd" dataType="text"></w2:column>
					<w2:column id="nTrtyInsAmt" name="nTrtyInsAmt" dataType="text"></w2:column>
					<w2:column id="sInfo" name="sInfo" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Warning" repeatNode="map" userData2="//*/WARNING"></w2:dataList>
		</w2:dataCollection>
	</xf:model>
	<script src="/cm/js/convertJs/Global_Script.js"/>
    <script src="/cm/js/convertJs/comm_Webservice.js"/>
    <script src="/cm/js/convertJs/NewGen_Script.js"/>
    <script src="/cm/js/convertJs/LongTerm_Script.js"/>
    <script src="/cm/js/convertJs/Marine_Script.js"/>
    <script type="javascript"><![CDATA[
	var runOnCellPosChanged = false;
	var nMaxPrem = 0; //최대보험료
	var nMinPrem = 0; //최소보험료
	var nInrpsAgeOld = ""; //변경전 보험나이 보관
	var nInrpsAgeNew = ""; //변경후 보험나이 보관
	var sGdCd;  //상품코드
	var oldPlanNo = "";//읽어온청약번호
	var oldSsrtDate = "";
	//체크 플래그
	var modifyFlag = false;
	//종형코드
	var sPlanCd = "00";
	var scmb_plan = false; //프랜변경 flag
	var except = "";
	var sGnrzCd;//종형코드
	var CalcPremFlag = false;//보험료 계산 체크
	var sSimpleCd = "";
	var nManAgeOld = ""; //변경전 만나이 보관
	var nManAgeNew = ""; //변경후 만나이 보관
	var sInrpsCd_Backup;//피보험자번호 Backup
	var drive_Backup;//운전용도 Backup

	scwin.setChk_sPsnGropFlgcd = function(val){
		chk_sPsnGroupFlgcd.setValue(val);
	}

	//화면 초기화
	scwin.fn_init = function(){
		if (parent.sSimpleYn != "Y") {
	        if (Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "20") {
	            chk_sPsnGroupFlgcd.setValue("1");
	            chk_sPsnGroupFlgcd.trigger("oncheckboxclick", [0, true, "1"]);
	        } else {
	            chk_sPsnGroupFlgcd.setValue("0");
	            chk_sPsnGroupFlgcd.trigger("oncheckboxclick", [0, false, "0"]);
	        }
	    }
	
	    //정기중도인출여부
	    if (DsWs_PrdAttr.getCellData(0, "PeriMwayWdraAvaYn") == "Y") {
	        //chk_sPeriMwayWdraYn.setStyle("display", "");
	        chk_sPeriMwayWdraYn.setDisabled(false);
	    } else {
	        //chk_sPeriMwayWdraYn.setStyle("display", "none");
	        chk_sPeriMwayWdraYn.setDisabled(true);
	    }
	
	    //정기추가납입가능여부
	    /*20171228 제도개선
	    if (DsWs_PrdAttr.getCellData(0, "PeriAddPaymPremYn") == "Y") {
	        //Static0.show();
	        //Static0.setStyle("display", "");
	        //medt_nAddPaymPrem.show();
	        //medt_nAddPaymPrem.setStyle("display", "");
	        medt_nAddPaymPrem.setDisabled(false);
	    } else {
	        //Static0.hide();
	        //Static0.setStyle("display", "none");
	        //medt_nAddPaymPrem.hide();
	        //medt_nAddPaymPrem.setStyle("display", "none");
	        medt_nAddPaymPrem.setDisabled(true);
	    }
		*/
	    //건강체할일여부
	    if (parent.cal_sSsrtDate.getValue() >= "20170701" && ((Ds_LTIDA00.getCellData(0, "sGdCd") == "2400" || Ds_LTIDA00.getCellData(0, "sGdCd") == "2401" || Ds_LTIDA00.getCellData(0, "sGdCd") == "2402"))) {
	        //chk_sHealDcYn.show();
	        chk_sHealDcYn.setStyle("display", "");
	    } else {
	        //chk_sHealDcYn.hide();
	        chk_sHealDcYn.setStyle("display", "none");
	    }
	    
	    if((parent.Ds_LTIDA00.getCellData(0, "sApplyPrtDate") != "") && (parent.Ds_LTIDA00.getCellData(0, "sApplyPrtDate") != null)){
			Btn_next.setDisabled(true);
		}else{
			Btn_next.setDisabled(false);
		}
	
	    //피보험자번호 백업
	    //sInrpsCd_Backup = Ds_Pibo.GetColumn(0,"sInrpsCd");
	    scwin.lfn_backup_Pibo();
	};
	
	/*-----------------------------------
	// function 명 : scwin.lfn_commCodeSetting
	// 내용        : 공통 코드호출
	-----------------------------------*/
	scwin.lfn_commCodeSetting = function() {
		//json 데이터를 가져와서 DataSet에 바인딩 해준다
	    var json = gfn_getJsonCommonCode("CcndFlagCd DrivFlagCd JobGradCd CrtorRelnCd");
	    if(json != null){
	    	//alert(JSON.stringify(json));
	    	DsWs_CmCd.setJSON(json, false);
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_searchJobCd
	// 내용        : 피보험자의 직업 찾기
	-----------------------------------*/
	scwin.lfn_searchJobCd = function(nRow){
		//보험나이 누락시 나이계산
	    if (parent.sSimpleYn == "Y" && wconv.length(wconv.toString(Ds_Pibo.getCellData(nRow, "nInrpsAge"))) <= 0) {
	        //보험나이계산
	        Ds_Pibo.setCellData(nRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        Ds_Pibo.setCellData(nRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	    }
	    if (wconv.length(wconv.toString(Ds_Pibo.getCellData(nRow, "nInrpsAge"))) <= 0) {
	        alert("주민번호를 정확히 입력해 주세요.");
	        Grd_Pibo.wconv.moveToPrevCell();
	        Grd_Pibo.wconv.moveToPrevCell();
	        return;
	    }
	    var promise = Promise.resolve();
	    
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	var popInfo = {
				"width"     : 845,
				"height"    : 565,  
				"indata"    : indata,
				"title"     : "직업코드 조회",
				"callback"  : scwin.popupCallback
			};
	        return wprom.popupOpen("/ui/cbso/CBSO021P.xml", popInfo);//직업코드 조회   
	    });
	    promise = promise.then(function(result) {
	        /*wprom.popupOpen(가이드참조)*/
	        if (wconv.length(result) != 0) {
	            var jobretArr = result.split("^");
	            Ds_Pibo.setCellData(nRow, "sJobCd", jobretArr[1]); //직업코드 
	            Ds_Pibo.setCellData(nRow, "sJobName", jobretArr[0]); //직업명
	            Ds_Pibo.setCellData(nRow, "sJobGradCd", jobretArr[2]); //직업급수코드 
	            Ds_Pibo.setCellData(nRow, "sDrveFlagCd", jobretArr[3]); //운전용도코드 
	            if (wconv.length(parent.edt_sGdCdNm.text) > 0) {
	                if (Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") != Ds_Pibo.getCellData(nRow, "sInrpsCd") || Ds_Pibo_BackUp.getCellData(nRow, "sDrveFlagCd") != Ds_Pibo.getCellData(nRow, "sDrveFlagCd")) {
	                    if (!mfn_IsEmpty(edt_sGdcd.getValue())) {
	                        //fn_setRule();
	                        //피보험자별 특약을 조회하기 위해 먼저 셋팅
	                        //Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
	                        //해당 피보험자로 선택 시킨 후 피보험자특약 조회
	                        scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, -1); //lfn_searchPiboTrty("", nRow);
	                    }
	                }
	            }
	            Ds_Pibo_BackUp.setCellData(nRow, "sJobCd", jobretArr[1]);
	            Ds_Pibo_BackUp.setCellData(nRow, "sDrveFlagCd", jobretArr[3]);
	        }
	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_ChkPersonID
	// 내용        : 주민번호 체크
	//---------------------------------------------------------------------------
	scwin.lfn_ChkPersonID = function(sPersonCd) {
	    if (parent.sSimpleYn == "Y") {
	    	return scwin.lfn_simpleChkPersonID(sPersonCd);
	    } else {
	        return checkPersonID(sPersonCd);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_simpleChkPersonID
	// 내용        : 주민번호 날자만 체크
	//---------------------------------------------------------------------------
	scwin.lfn_simpleChkPersonID = function(sPersonCd) {
	    var yy = "";
	
	    // 나이 (-) 체크
	    if (wconv.charAt(sPersonCd, 6) == "1" || wconv.charAt(sPersonCd, 6) == "2" || wconv.charAt(sPersonCd, 6) == "5" || wconv.charAt(sPersonCd, 6) == "6") {
	        yy = "19";
	    } else if (wconv.charAt(sPersonCd, 6) == "9" || wconv.charAt(sPersonCd, 6) == "0") {
	        yy = "18";
	    } else {
	        yy = "20";
	    }
	    gfn_getServerTime();//서버시간
		sToday = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
	    if (wconv.toNumber(wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 4)) - wconv.toNumber(yy + wconv.substr(sPersonCd, 0, 2)) < 0) {
	        return false;
	    }
	    
	    //날짜 체크
	    if (!wconv.isDate(yy + wconv.substr(sPersonCd, 0, 6))) {
	        return false;
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_searchCust
	// 내용        : 고객팝업호출
	//---------------------------------------------------------------------------
	scwin.lfn_searchCust = function(nRow, nCell, nX, nY) {
		var sCustNo = Ds_Pibo.getCellData(nRow, "sInrpsCd");
	    //trace(sCustNo);
	    //대리점일때
	    if (parent.sAgncYn == "Y") {
	        if (wconv.length(Ds_Pibo.getCellData(nRow, "nInrpsAge")) <= 0) {
	            return;
	        }
	    }
	    
	    //휴면계약 존재여부 확인
	    var rtnValue = gfn_checkDmcyInsurByCustNo("DsWs_Dmcy", wconv.trim(Ds_Pibo.getCellData(nRow, "sInrpsCd")));
	    if (rtnValue != "") {
	        alert(rtnValue);
	    }
	    var result;
	    var parentInfo = "";
	    Ds_long_mPlr.removeAll();
	    if (Ds_Pibo.getRowCount() > 0 && wconv.length(Ds_Pibo.getCellData(nRow, "sAddrFlgcd")) > 0 && Ds_Pibo.getCellData(nRow, "sInrpsCd") == Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") && wconv.length(Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd")) > 0) {
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCstId") + "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += Ds_Pibo.getCellData(nRow, "sAddrFlgcd") + "^"; //주소구분코드 자택
	        parentInfo += Ds_Pibo.getCellData(nRow, "nAddrChngSeq") + "^"; //주소변경회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "nTelnoChngSeq") + "^"; //전화회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명 
	        //parentInfo += " screenId=long"; //스크린id 
	        //parentInfo += " sStandDate=" + Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
	        //parentInfo += sCustNo; //VIP 여부 표시
	    } else {
	        parentInfo += "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += "^"; //주소구분코드 자택
	        parentInfo += "^"; //주소변경회차
	        parentInfo += "^"; //전화회차
	        parentInfo += "^"; //발송지주소구분
	        parentInfo += "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명 
	        //parentInfo += " screenId=long"; //스크린id
	        //parentInfo += " sStandDate=" + Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
	        //parentInfo += sCustNo; //VIP 여부 표시
	    }
		
		var promise = Promise.resolve();
	    //고객화면 오픈  
	    //대면/비대면체크  0 :  대면 , 1 : 비대면
	    if (util.getGdsValue("gUseCustType") == "0") {
	        promise = promise.then(function(rtnVal) {
		    	var indata = new Object();
	    		indata.parentInfo = parentInfo;
	    		indata.screenId = "long";
	    		indata.sStandDate = parent.cal_sSsrtDate.getValue();//Ds_LTIDA00.getCellData(0, "sInsurStrtdate");
	    		indata.fAgntFlagPop = "";
	    		indata.sPlanNo = parent.medt_PlanNo.getValue();
	    		indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
	    		indata.sScanObjtYn = Ds_LTIDA00.getCellData(0, "sScanObjtYn");
	    		var popInfo = {"width":800,
	    	                   "height":580,
	    	                   "indata":indata,
//	    	                   "callback"  : scwin.popupCallback,
							   "title"     : "개인고객 등록"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);//개인고객 등록              
		    });
		    promise = promise.then(function(rv) {
		    	return util.winTopShowModalPromise(rv);
			});
		    promise = promise.then(function(rv) {
		    	try{
		    		var rtnValue = wprom.getReturnData();
					//console.log("====CBSO002P promise close \n"+JSON.stringify(rtnValue));
					if (rtnValue != "") {
						scwin.cbso002pCallback(rtnValue);
					}
		    	}finally{
		    		util.winTopHideModal();
		    		bPopUpCheck = true;
		    	}
			});
	    } else {
	    	promise = promise.then(function(rtnVal) {
	        	return wprom.popupOpen("PROJECT_PATH_TEMP/cst_cin/CBSO021P.xml", arg, 800, 545);
		    });
		    promise = promise.then(function(result) {
		        /*wprom.popupOpen(가이드참조)*/
		        if (wconv.length(result) != 0) {
		            var jobretArr = result.split("^");
		            Ds_Pibo.setCellData(nRow, "sJobCd", jobretArr[1]); //직업코드 
		            Ds_Pibo.setCellData(nRow, "sJobName", jobretArr[0]); //직업명
		            Ds_Pibo.setCellData(nRow, "sJobGradCd", jobretArr[2]); //직업급수코드 
		            Ds_Pibo.setCellData(nRow, "sDrveFlagCd", jobretArr[3]); //운전용도코드 
		            if (wconv.length(parent.edt_sGdCdNm.text) > 0) {
		                if (Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") != Ds_Pibo.getCellData(nRow, "sInrpsCd") || Ds_Pibo_BackUp.getCellData(nRow, "sDrveFlagCd") != Ds_Pibo.getCellData(nRow, "sDrveFlagCd")) {
		                    if (!mfn_IsEmpty(edt_sGdcd.getValue())) {
		                        //fn_setRule();
		                        //피보험자별 특약을 조회하기 위해 먼저 셋팅
		                        //Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
		                        //해당 피보험자로 선택 시킨 후 피보험자특약 조회
		                        scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, -1); //lfn_searchPiboTrty("", nRow);
		                    }
		                }
		            }
		            Ds_Pibo_BackUp.setCellData(nRow, "sJobCd", jobretArr[1]);
		            Ds_Pibo_BackUp.setCellData(nRow, "sDrveFlagCd", jobretArr[3]);
		        }
		    });
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_custConfirm
	// 내용        : 고객팝업에서 확인버튼 클릭 후 처리
	//---------------------------------------------------------------------------
	scwin.cbso002pCallback = function(result){
		if(result.Ds_long_mPlr != undefined && result.Ds_long_mPlr.length > 0){
			Ds_long_mPlr.removeAll();
			Ds_long_mPlr.setJSON(result.Ds_long_mPlr);
			
			var nRow = wconv.findRow(Ds_Pibo, "sInrpsCd", Ds_long_mPlr.getCellData(0, "sCustNo"));
			
			//2014.12.04 By SDJ(N1411-00267)
		    if (nRow < 0) {
		        nRow = wconv.findRow(Ds_Pibo, "sel", "1"); //현재 선택된 피보험자
		    }
		    //END (N1411-00267)
		    if(cmb_Plan.getItemCount() <= 0) {
		    	scwin.fn_setRule(parent.edt_sGdCd.getValue());
		    	
		    	if(Ds_Pibo.getCellData(nRow, "sDrveFlagCd") != "" && Ds_Pibo.getCellData(nRow, "sDrveFlagCd") != null){
		    	}else{
		    		Ds_Pibo.setCellData(nRow, "sDrveFlagCd", "1");
		    	}
		    } else {
		        if (Ds_Pibo_BackUp.getCellData(nRow, "sInrpsCd") != Ds_Pibo.getCellData(nRow, "sInrpsCd") || Ds_Pibo_BackUp.getCellData(nRow, "sDrveFlagCd") != Ds_Pibo.getCellData(nRow, "sDrveFlagCd")) {
		            if (!mfn_IsEmpty(parent.edt_sGdCd.getValue())) {
		                //피보험자별 특약을 조회하기 위해 먼저 셋팅
						Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
						
		                scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, -1);//lfn_searchPiboTrty("", nRow);
		            }
		        }
		    }
		    
		    if (Ds_long_mPlr.getRowCount() > 0) {
				Ds_Pibo.setCellData(nRow, "sInrpsCd", Ds_long_mPlr.getCellData(0,"sCustNo"));	//주민번호
				Ds_Pibo.setCellData(nRow, "sInrpsFlagCd", Ds_long_mPlr.getCellData(0,"sCustType"));//구분코드
				Ds_Pibo.setCellData(nRow, "sInrpsName", Ds_long_mPlr.getCellData(0,"sName"));//성명
				Ds_Pibo.setCellData(nRow, "sJobCd", Ds_long_mPlr.getCellData(0,"sJobCode"));//직업코드
				Ds_Pibo.setCellData(nRow, "sJobName", Ds_long_mPlr.getCellData(0,"sJobName"));//직업명
				Ds_Pibo.setCellData(nRow, "sJobGradCd", Ds_long_mPlr.getCellData(0,"sJobCls"));//직업급수
				//Ds_Pibo.setCellData(nRow, "sDrveFlagCd", Ds_long_mPlr.getCellData(0,"sDrvCls"));//운전용도
				Ds_Pibo.setCellData(nRow, "sInrpsSexFlag", scwin.lfn_getSex(Ds_Pibo.getCellData(nRow, "sInrpsCd")));	 //피보험자성별구분           
				Ds_Pibo.setCellData(nRow, "sInrpsCstId", Ds_long_mPlr.getCellData(0, "sCstId"));	      //피보험자고객ID             
				Ds_Pibo.setCellData(nRow, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo"));	      //고객변경일련번호         
				Ds_Pibo.setCellData(nRow, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType"));	      //고객구분코드             
				Ds_Pibo.setCellData(nRow, "sAddrFlgcd", "1");	      //주소구분코드   1 자택 2 직장          
				Ds_Pibo.setCellData(nRow, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo"));	      //주소변경회차             
				Ds_Pibo.setCellData(nRow, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo"));	      //전화번호변경회차         
				//MS DisplayFormat 적용
				
				//보험나이계산
				Ds_Pibo.setCellData(nRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue()));//나이
				Ds_Pibo.setCellData(nRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue()));//만나이
		        nInrpsAgeNew= Ds_Pibo.getCellData(nRow, "nInrpsAge"); 
		        nManAgeNew = gfn_getAge(Ds_Pibo.getCellData(nRow,"sInrpsCd"), parent.cal_sSsrtDate.getValue());
		        
		        //trace("nInrpsAgeOld:" + nInrpsAgeOld);
        		//trace("nInrpsAgeNew:" + nInrpsAgeNew);
        		//주민번호, 운전용도backup
		        Ds_Pibo_BackUp.setCellData(nRow, "sInrpsCd", Ds_Pibo.getCellData(nRow, "sInrpsCd"));
		        Ds_Pibo_BackUp.setCellData(nRow, "sDrveFlagCd", Ds_Pibo.getCellData(nRow, "sDrveFlagCd"));
		        
		        //운전용도 셋팅
        		/*MS 확인 컬럼속성
        		//Grd_Pibo.SetCellProp("body", 11, "edit", "combo"); //ldh
        		MS 확인 컬럼속성*/
        		
        		//첫번째 피보험자로 계약자 셋팅
        		if (nRow == 0){
        			if (parent.medt_PlanNo.getValue() == "" || parent.Ds_LTIDA03.getRowCount() == 0 || Ds_Pibo.getCellData(nRow, "sInrpsCd") == parent.Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
		                //계약자사항 setting;
		                //Ds_LTIDA03.setCellData(0, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo"));	      //설계번호
		                if (parent.Ds_LTIDA03.getRowCount() == 0) {
		                    util.appendRow(parent.Ds_LTIDA03);
		                    parent.Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드     
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
		                    parent.Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처         
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처 		 
		                    parent.Ds_LTIDA03.setCellData(0, "sEnntmPftbpYn", "N"); //만기수익자입력상태
		                    parent.Ds_LTIDA03.setCellData(0, "sAsmtAgntYn", "N"); //지정대리인입력상태		
		                    parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
		                }
		                parent.Ds_LTIDA03.setCellData(0, "nCrChngNo", "0"); //계약변경번호             
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //계약자구분코드           
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //계약자코드               
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorName", Ds_long_mPlr.getCellData(0, "sName")); //계약자명
		                parent.Ds_LTIDA03.setCellData(0, "nCrtorAge", gfn_getInsAge(parent.Ds_LTIDA03.getCellData(0, "sCrtorCd"), parent.cal_sSsrtDate.getValue())); //계약자연령
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorSexFlag", scwin.lfn_getSex(parent.Ds_LTIDA03.getCellData(0, "sCrtorCd"))); //계약자성별구분           
		                parent.Ds_LTIDA03.setCellData(0, "sCrtorCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //계약자고객ID             
		                parent.Ds_LTIDA03.setCellData(0, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
		                parent.Ds_LTIDA03.setCellData(0, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
		                parent.Ds_LTIDA03.setCellData(0, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
		                parent.Ds_LTIDA03.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
		                parent.Ds_LTIDA03.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
		                parent.Ds_LTIDA03.setCellData(0, "sMailRvadAddrFlagCd", Ds_long_mPlr.getCellData(0, "sDMAdrsTyp")); //우편물수령처주소구분코드 
		                parent.Ds_LTIDA03.setCellData(0, "nMailRvadChngSeq", Ds_long_mPlr.getCellData(0, "nAdrsChangeNo")); //우편물수령처변경회차     
		                parent.Ds_LTIDA03.setCellData(0, "sZip1", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 0, 3)); //우편번호
		                parent.Ds_LTIDA03.setCellData(0, "sZip2", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 3, 3)); //우편번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax1", Ds_long_mPlr.getCellData(0, "sFax1")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax2", Ds_long_mPlr.getCellData(0, "sFax2")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sFax3", Ds_long_mPlr.getCellData(0, "sFax3")); //fax번호
		                parent.Ds_LTIDA03.setCellData(0, "sEmail1", Ds_long_mPlr.getCellData(0, "sEmail1")); //이메일
		                parent.Ds_LTIDA03.setCellData(0, "RvadAddr", Ds_long_mPlr.getCellData(0, "sAdrs1") + " " + Ds_long_mPlr.getCellData(0, "sAdrs2")); //우편물수령처주소
		                parent.Ds_LTIDA03.setCellData(0, "sAdrs1", Ds_long_mPlr.getCellData(0, "sHomAdr1")); //집주소
		                parent.Ds_LTIDA03.setCellData(0, "sAdrsAdd", Ds_long_mPlr.getCellData(0, "sHomAdr2")); //집주소
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel1", Ds_long_mPlr.getCellData(0, "sHomeTel1")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel2", Ds_long_mPlr.getCellData(0, "sHomeTel2")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sHomeTel3", Ds_long_mPlr.getCellData(0, "sHomeTel3")); //집전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel1", Ds_long_mPlr.getCellData(0, "sOfficeTel1")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel2", Ds_long_mPlr.getCellData(0, "sOfficeTel2")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sOfficeTel3", Ds_long_mPlr.getCellData(0, "sOfficeTel3")); //사무실전화번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone1", Ds_long_mPlr.getCellData(0, "sCellPhone1")); //핸드폰번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone2", Ds_long_mPlr.getCellData(0, "sCellPhone2")); //핸드폰번호
		                parent.Ds_LTIDA03.setCellData(0, "sCellPhone3", Ds_long_mPlr.getCellData(0, "sCellPhone3")); //핸드폰번호
		                //			if (wconv.length(parent.medt_PlanNo.getValue()) > 0){
		                //				fn_calPrem();
		                //			}
		            }
		            // 피보험자가 변경되었을때 기 보험종목이 선택되었다면 특약 셋팅 초기화 처리.(예외처리 : 피보험자의 나이가 같은 경우는 초기화 제외)
		            if ((wconv.length(parent.edt_sGdCd.getValue()) > 0) && ((nInrpsAgeOld != nInrpsAgeNew || nManAgeOld != nManAgeNew))) {
		                //if (length(parent.edt_sGdCd.getValue()) > 0 ){
		                var info = new Object();
		                info.oldValue = ""; 
						info.newValue = ""; 
						info.oldSelectedIndex = ""; 
						info.newSelectedIndex = ""; 
		                scwin.lfn_PlanChanged(info);
		                scwin.lfn_TrtyInsAmtInit(cmb_Plan);
		                scwin.lfn_PaymCyclSet();
		            }
        		}
			}
			//MS텝 정보 출력
			if(parent.sSimpleYn != "Y"){
	    		parent.scwin.lfn_set_Tab_Info("S1", "T1");
	    	}
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_mkGrdPassWord()
	// 내용        : 그리드 패스워드 처리
	//---------------------------------------------------------------------------
	scwin.lfn_mkGrdPassWord = function(){
		//var ds_columnName = ["sInrpsCd"];
	    //var grd_idx = [2];
	    //var grd_cellSize;
	    //if (parent.sSimpleYn == "Y") {
	    //    grd_cellSize = [128];
	    //}
	    //var edt_event = "lfn_Edt_Mask_OnKillFocus";
	    //var grd_mask = ["######-#******"];
	    //gfn_mkGrdPassWord(Grd_Pibo, Ds_Pibo, ds_columnName, grd_idx, grd_mask, grd_cellSize, edt_event);
	};
	
	// function 명 : lfn_addRow
	// 내용        : 피보험자 추가
	//---------------------------------------------------------------------------
	var chkMedical = true;
	scwin.lfn_addRow = function(nSeq) {
		//최대피보험목적수 <= 피보험자일때  추가금지
	    if (DsWs_PrdAttr.getRowCount() > 0 && wconv.length(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        if (Number(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) <= Ds_Pibo.getRowCount()) {
	            alert("피보험자 " + Number(DsWs_PrdAttr.getCellData(0, "MaxInsrdObjctCt")) + "명까지 가입 가능한 상품입니다.");
	            return false;
	        }
	    }
	    
	    //청약일이 입력되어 있어야 한다.
	    if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
	        alert("청약일을 입력해 주세요");
	        parent.cal_sSsrtDate.focus();
	        return false;
	    }
	    
	    if (Ds_Trty.getRowCount() > 0) {
	        chkMedical = false;
	        validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	        chkMedical = true;
	        if (validFlag == true) {
	            return;
	        }
	    }
	    
	    //공통코드dataset에 코드가 없으면 조회해 온다.
	    if (DsWs_FlagCd.getRowCount() == 0) {
	        scwin.lfn_commCodeSetting();
	    }
		
	    //Ds_Pibo.FireEvent = false;
	    var arrpibo = util.getDataListEvent(Ds_Pibo);
	    util.removeAllDataListEvent(Ds_Pibo);
	    var nCurrow = -1;
	    if (nSeq != undefined && nSeq >= 0) {
	    	//var insRow = util.insertRow(Ds_Pibo, nSeq);
	        /*수작업 변환 개발자 가이드(테스트 중)
	        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	        // Dataset에 빈 Record한줄 추가
	        //var insRow = util.insertRow(Ds_Pibo_BackUp, nSeq);
	        /*수작업 변환 개발자 가이드(테스트 중)
	        dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	        nCurrow = nSeq;
	        Ds_Pibo.insertRow(nSeq);
	        Ds_Pibo_BackUp.insertRow(nSeq);
	    } else {
	        //util.appendRow(Ds_Pibo); // Dataset에 빈 Record한줄 추가
	        //util.appendRow(Ds_Pibo_BackUp);
	        Ds_Pibo.insertRow();
	        Ds_Pibo_BackUp.insertRow();
	        nCurrow = (Ds_Pibo.getTotalRow() - 1);
	        /*수작업 변환 가이드 (getTotalRow)
	         필터 적용이 되어있는 row의 건수는 getRowCount API를 사용합니다.*/
	    }
	    
	    Ds_Pibo.setCellData(nCurrow, "sel", "1");
	    Ds_Pibo.setCellData(nCurrow, "sInrpsFlagCd", "1");
	    Ds_Pibo.setCellData(nCurrow, "sCrtorRelnCd", "10"); //피보험자관계(본인)
	    Ds_Pibo.setCellData(nCurrow, "sGroupInrpsDrveFlagCd", "1");
	    Ds_Pibo.setCellData(nCurrow, "sPftbpInrpsRelnCd", "99");
	    Ds_Pibo.setCellData(nCurrow, "sPftbpName", "법정상속인");
	    Ds_Pibo.setCellData(nCurrow, "sXcptPftbpInrpsRelnCd", "");
	    Ds_Pibo.setCellData(nCurrow, "sXcptPftbpName", "");
	    Ds_Pibo.setCellData(nCurrow, "sPsnInfoOferAgreYn", "N");
	    Ds_Pibo.setCellData(nCurrow, "sMNumCrInsAgreYn", "N");
	    Ds_Pibo.setCellData(nCurrow, "nInrpsSeqno", (nCurrow + 1));
	    Ds_Pibo.setCellData(nCurrow, "sApplPlanCd", Ds_Pibo.getCellData(0, "sApplPlanCd"));
	    Ds_Pibo.setCellData(nCurrow, "sApplPlanName", Ds_Pibo.getCellData(0, "sApplPlanName"));
	    if (nCurrow == 0) {
	        Ds_Pibo.setCellData(nCurrow, "sMinsrRelnCd", "10");
	    }
	    Ds_Pibo_BackUp.setCellData(nCurrow, "MediFlag", "N");
	    Ds_Pibo_BackUp.setCellData(nCurrow, "fixFlag", "N");
	    
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (i != nCurrow && Ds_Pibo.getCellData(i, "sel") == "1") {
	            Ds_Pibo.setCellData(i, "sel", "0");
	        }
	    }
	    Ds_Pibo.setCellData(nCurrow, "sel", "1");
	    
	    scwin.lfn_changeTrty();
	    
	    //MS 피보험자 그리드에서 직업 찾기 버튼 숨기기
	    if(parent.sSimpleYn == "N"){
	    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
	    }
		
	    //Grd_Pibo.focus();
	    //wconv.moveToNextCell(Grd_Pibo.getID());
	    //wconv.moveToNextCell(Grd_Pibo.getID());
	    //Ds_Pibo.FireEvent = true;
	    
	    var focusFunction = function() {
	    	Grd_Pibo.setFocusedCell(Ds_Pibo.getRowPosition(), 2, true);
	    }
	    setTimeout(focusFunction, 500);
	    
	    util.setDataListEvent(Ds_Pibo, arrpibo);
	};
	
	/*-----------------------------------
	// function 명 : lfn_changeTrty
	// 내용        : 피보험자의 해당 특약으로 필터링
	-----------------------------------*/
	scwin.lfn_changeTrty = function() {
		//Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
		var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
		
	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'");
		
	    //일시납 납입기간에 따른 납입주기 세팅
	    //lfn_PaymCyclSet();	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    
	    scwin.lfn_PlanEnable(nFindRow);
	    //Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	/*MSDev*/
	/*-----------------------------------
	// function 명 : lfn_PlanEnable
	// 내용        : 플랜,납입주기,납만 화면 활성화/비활성화
	-----------------------------------*/
	scwin.lfn_PlanEnable = function(nRow) {
		//주피보험자가 아닌경우 청약,시작일,납입주기,플랜콤포넌트 비활성화 처리
	    /*20170920 MS 수정(설계자 차장요청)
	    cmb_InsurTermPaymTerm DataSet Binding 전에
	    cmb_InsurTermPaymTerm.getValue()의 값의 null 처리를 위해 변경
	    as-is  var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    */
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sPaymTermCd = exArr[1];
	    if (nRow == 0) {
	        //cal_sSsrtDate.Enable = true;
	        //cal_sInsurStrtdate.Enable = true;
	        //cmb_PaymCycl.Enable = true;
	        cmb_Plan.setDisabled(false);
	        cmb_InsurTermPaymTerm.setDisabled(false);
	        if (sPaymTermCd == "000") {
	            cmb_PaymCycl.setDisabled(true);
	        } else {
	            cmb_PaymCycl.setDisabled(false);
	        }
	    } else {
	        //cal_sSsrtDate.Enable = false;
	        //cal_sInsurStrtdate.Enable = false;
	        cmb_PaymCycl.setDisabled(true);
	        cmb_Plan.setDisabled(true);
	        cmb_InsurTermPaymTerm.setDisabled(true); //일괄적용을 한경우 버튼 비활성화 처리
	        //if(AllCalcPremFlag){
	        //	btn_AllCalPrem.Enable = false;
	        //}
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_InsurTermInit
	// 내용        : 보험기간,가입금액 초기값 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_InsurTermInit = function(obj) {
	    if (Ds_Trty.getRowCount() > 0) {
	        //보험기간종료일자 setting
	        if (Ds_Trty.getCellData(0, "sInsurTermCd") == "") {
	            alert("보험가입 가능한 나이가 아닙니다");
	            return;
	        }
	        cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(0, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	
	//alert(cal_sInsurStrtdate.getValue());
	//alert(cal_sInsurEndDate.getValue());
	
	        //보험기간/납입기간 세팅
	        Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(0, "sInsurTermCd")); //보험기간
	        Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(0, "sPaymTermCd")); //납입기간
	        Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(0, 3) + "/" + grd_sTrty.getCellDisplayData(0, 4)); //보기납기
	    }
	    scwin.lfn_TrtyInsAmtInit(obj);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_endDate()
	// 내용        : 개시일, 보험기간, 연령을 입력받아 종료일구하기
	//---------------------------------------------------------------------------
	scwin.lfn_endDate = function(startDate, sInsurTermCd, age) {
	    var insurTermCd_Gubun = wconv.substr(sInsurTermCd, 0, 1);
	    var insurTermCd_Value = wconv.substr(sInsurTermCd, 1, 3);
	    var endDate;
	    var month;
	    
	    switch (wconv.toInteger(insurTermCd_Gubun)) {
	        case 1:
	            month = (wconv.toInteger(insurTermCd_Value) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 2:
	        	month = (((wconv.toInteger(insurTermCd_Value) - wconv.toInteger(age))) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 9:
	            endDate = "99991231";
	            break;
	        default:
	            break;
	    }
	    return endDate;
	};
	
	/*-----------------------------------
	// function 명 : lfn_TrtyList_Relation_Check
	// 내용        : 특약전체 관계체크
	-----------------------------------*/
	scwin.lfn_TrtyList_Relation_Check = function(nRow) {
		//Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
		var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        //베타그룹체크
	        scwin.lfn_Trty_Relation_sExcluGroupCd(i, "all");
	    }
	    
	    scwin.lfn_Trty_Drv_chk(nRow);
	    //Ds_Trty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_sExcluGroupCd
	// 내용        : 특약간 관계 체크(베타그룹체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_sExcluGroupCd = function(nRow, all) {
	    //베타그룹체크1
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") != "1") {
	            continue;
	        }
	        
	        //그룹코드가 없으면 체크필요없음
	        if (wconv.length(Ds_Trty.getCellData(i, "sGroupCd")) <= 0) {
	            continue;
	        }
	        var sGroupCd = Ds_Trty.getCellData(i, "sGroupCd");
	        var sExcluGroupCd1 = Ds_Trty.getCellData(nRow, "sExcluGroupCd1");
	        var sExcluGroupCd2 = Ds_Trty.getCellData(nRow, "sExcluGroupCd2");
	        var sExcluGroupCd3 = Ds_Trty.getCellData(nRow, "sExcluGroupCd3");
	        var sExcluGroupCd4 = Ds_Trty.getCellData(nRow, "sExcluGroupCd4");
	        var sExcluGroupCd5 = Ds_Trty.getCellData(nRow, "sExcluGroupCd5");
	        var sExcluGroupCd6 = Ds_Trty.getCellData(nRow, "sExcluGroupCd6");
	        var sExcluGroupCd7 = Ds_Trty.getCellData(nRow, "sExcluGroupCd7");
	        var sExcluGroupCd8 = Ds_Trty.getCellData(nRow, "sExcluGroupCd8");
	        var sExcluGroupCd9 = Ds_Trty.getCellData(nRow, "sExcluGroupCd9");
	        var sExcluGroupCd10 = Ds_Trty.getCellData(nRow, "sExcluGroupCd10");
	        var sExcluGroupCd11 = Ds_Trty.getCellData(nRow, "sExcluGroupCd11");
	        var TrtyHnglAbbName = Ds_Trty.getCellData(nRow, "TrtyHnglAbbName");
	
	        //베타그룹값과 같은 그룹코드값을 찾는다.		
	        if (sGroupCd == sExcluGroupCd1 || sGroupCd == sExcluGroupCd2 || sGroupCd == sExcluGroupCd3 || sGroupCd == sExcluGroupCd4 || sGroupCd == sExcluGroupCd5 || sGroupCd == sExcluGroupCd6 || sGroupCd == sExcluGroupCd7 || sGroupCd == sExcluGroupCd8 || sGroupCd == sExcluGroupCd9 || sGroupCd == sExcluGroupCd10 || sGroupCd == sExcluGroupCd11) {
	            if (wconv.length(all) == 0) {
	                alert("'" + Ds_Trty.getCellData(i, "TrtyHnglAbbName") + "' 특약과 '" + TrtyHnglAbbName + "' 특약은 동시가입이 불가합니다.");
	            }
	            Ds_Trty.setCellData(nRow, "chk", "0");
	            scwin.lfn_Trty_Relation_Pkg(Ds_Trty, Ds_Trty.getCellData(nRow, "sPkgCd"), false);
	            break;
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Drv_chk
	// 내용        : 운전용도 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Drv_chk = function(nRow) {
	    var sDrveFlagCd = "";
	    if (nRow != undefined && nRow != null && nRow >= 0) {
	        sDrveFlagCd = Ds_Pibo.getCellData(nRow, "sDrveFlagCd"); //운전용도
	    } else {
	        sDrveFlagCd = Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd"); //운전용도
	    }
	
	    //trace("sDrveFlagCd:" + sDrveFlagCd);
	    if (sDrveFlagCd == "2") {
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            if (Ds_Trty.getCellData(i, "BussInsAvaYn") != "Y") {
	                Ds_Trty.setCellData(i, "chk", "0");
	            }
	        }
	    }
	    if ((sDrveFlagCd == "1") || (sDrveFlagCd == "2")) {
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            if (Ds_Trty.getCellData(i, "DrveFlag") == "2") {
	                Ds_Trty.setCellData(i, "chk", "0");
	            }
	        }
	    }
	    if (sDrveFlagCd == "3") {
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            if (Ds_Trty.getCellData(i, "DrveFlag") == "1") {
	                Ds_Trty.setCellData(i, "chk", "0");
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Pkg
	// 내용        : 특약간 관계 체크(패키지체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Pkg = function(obj, sPkgCd, chk){
	    //패키지체크
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        var isEssnTrtyYn = false;
	
	        //패키지값과 같은 그룹코드값을 찾는다.		
	        if (wconv.length(obj.getCellData(i, "sPkgCd")) > 0 && wconv.length(sPkgCd) > 0 && (obj.getCellData(i, "sPkgCd") == sPkgCd)) {
//	            wconv.trace("sPkgCd==" + obj.getCellData(i, "sPkgCd") + "==sPkgCd==" + sPkgCd + "==sTrtyCd==" + obj.getCellData(i, "sTrtyCd") + "==TrtyFlagCd==" + obj.getCellData(i, "TrtyFlagCd"));
	            //체크인경우
	            if (chk) {
	                obj.setCellData(i, "chk", "1");
	            } else {
	                for (var j = 0; j < obj.getRowCount(); j++) {
	                    if (wconv.length(obj.getCellData(j, "sPkgCd")) > 0 && wconv.length(sPkgCd) > 0 && (obj.getCellData(j, "sPkgCd") == sPkgCd)) {
	                        if (obj.getCellData(j, "TrtyFlagCd") == "01") {
	                            isEssnTrtyYn = true;
	                            break;
	                        }
	                    }
	                }
	                if (isEssnTrtyYn == true) {
	                    alert("기본특약 패키지 특약은 필수입니다.");
	                    for (var k = 0; k < obj.getRowCount(); k++) {
	                        if (wconv.length(obj.getCellData(k, "sPkgCd")) > 0 && wconv.length(sPkgCd) > 0 && (obj.getCellData(k, "sPkgCd") == sPkgCd)) {
	                            obj.setCellData(k, "chk", "1");
	                        }
	                    }
	                    break;
	                } else {
	                    obj.setCellData(i, "chk", "0");
	                    //보험료 초기화
	                    obj.setCellData(i, "nGrntPrem", ""); //보장보험료
	                    obj.setCellData(i, "nExptGrntBussPrem", ""); //예상보장영업보험료				
	                }
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : chk_sPsnGroupFlgcd_OnClick()
	// 내용        : 단체취급체크시 화면처리
	//---------------------------------------------------------------------------
	scwin.chk_sPsnGroupFlgcd_oncheckboxclick = function(index, checked, value) {
		if((Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "20" && !checked) || (((Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "10" || Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd") == "")) && checked)) {
	        scwin.fn_setRule(parent.edt_sGdCd.getValue());
	    }
	    
	    if(chk_sPsnGroupFlgcd.getValue() == "1" && checked) {
	        btn_GroupList.setStyle("display", "");
	        Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "20");
	    } else {
	        btn_GroupList.setStyle("display", "none");
	        Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "10");
	        Ds_LTIEA10.removeAll();
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : setRule()
	// 내용        : 상품선택시 납입주기, 플랜사항조회
	//---------------------------------------------------------------------------
	scwin.fn_setRule = function(prodCd) {
		txtTrtyInfo.setValue("");
	    nMaxPrem = "";
	    Ds_LTIDA00.setCellData(0, "sGdCd", prodCd); //상품코드세팅
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드세팅
	    
	    if (Ds_Pibo.getCellData(0, "sel") != "1") {
	        //해당 피보험자로 선택 시킨 후 조회
	        scwin.Grd_Pibo_OnCellPosChanged(0, 0, 0, -1);
	    }
	    
	    sGdCd = prodCd;
	    if (!mfn_IsEmpty(sGdCd)) {
	    	//MS 상품의 변경에 따라 보상한도 정보 초기화
	    	wconv.clear(DS_TrtyCmpsContAmtLimitInfo);
	    	
	        //납입주기조회
	        wconv.clear(DsWs_PaymCycl);
	        //플랜사항조회
	        wconv.clear(DsWs_Plan);
	        //특약사항조회
	        wconv.clear(DsWs_Trty);
	        wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화		
	        wconv.clear(DsWs_PrdAttr); //상품속성 초기화
	        wconv.clear(DsWs_BascTrty); //대표특약 초기화
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB022Task", "getCommCode", "", "");
		    MethodObj.setId("getCommCode");
		    MethodObj.setParam("sFlagCd", "1");
		    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd"));//상품코드
		    MethodObj.setParam("sStndDate", parent.cal_sSsrtDate.getValue());//청약일
		    MethodObj.setParam("sPlanCd", sPlanCd);//플랜코드
		    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd"));//종형코드
		    MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd"));//주민번호
		    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(0, "sDrveFlagCd"));//운전용도
		    if (Ds_LTIDA00.getCellData(0, "sDoer") == null || Ds_LTIDA00.getCellData(0, "sDoer") == "") {
	            MethodObj.setParam("sDoer", parent.edt_sDoer.getValue());//취급자
	            MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue());//사용인
	            MethodObj.setParam("sChnlCd", parent.sSaleChnl);
	        } else {
	            MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	            MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	            MethodObj.setParam("sChnlCd", Ds_LTIDA00.getCellData(0, "sSaleChnl"));
	        }
	        if (chk_sPsnGroupFlgcd.getValue() == "1") {
	            MethodObj.setParam("sPlanPsnGroupCd", "2");
	        } else {
	            MethodObj.setParam("sPlanPsnGroupCd", "1");
	        }
			MethodObj.setUrl("/contract/CBSC015MController.do");
			MethodObj.setXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");
			MethodObj.addXPath("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi");
			MethodObj.addXPath("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi");
			MethodObj.addXPath("//hashtable/data[@hashkey='applPlanList']/vector/data/multi");
			//특약 xpath 변경
	        MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	        MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
	        MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
	        MethodObj.addXPath("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd");
	        MethodObj.addXPath("//WARNING");
	        MethodObj.setXPathDs();
			MethodObj.sync();
			MethodObj.send();
			
			//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용
	        DsWs_PaymCycl.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"));
	       	DsWs_MinsrReln.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='MinsrReln']/vector/data/multi"));
	       	//DsWs_PrdAttr.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"));
	       	util.copyM(DsWs_PrdAttr, _tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"));
	        DsWs_Plan.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"));
	        DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
	        DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
	        Dsws_InsAmt.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"));
	        DsWs_InsurTermPaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"));
	        DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
	        DsWs_TrtyTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_0.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_1.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_2.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_3.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_4.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_5.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_6.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_7.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_TrtyTerm_8.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	        DsWs_Napgi.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"));
	        DsWs_LTIDA15.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"));
	        DsWs_LTIDA00.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
        	//사용 안하는것으로 예상됨
        	//Dsws_BaseSlct.setJSON(_tranSync.getDsJson(""));
	        //DsWs_Bogi.setJSON(_tranSync.getDsJson(""));
	        util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
	        if (DsWs_Warning.getRowCount() != 0) {
	        	alert(DsWs_Warning.getCellData(0, "msg"));
	            return;
	        } else {
	        	if (DsWs_PaymCycl.getRowCount() == 0) {
	                alert("납입주기 조회건이 없습니다.");
	            } else {
	                //납입주기 선택옵션추가
					var insRow = util.insertRow(DsWs_PaymCycl, 0);
	                /*수작업 변환 개발자 가이드(테스트 중)
	                dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
	                DsWs_PaymCycl.setCellData(0, "sGdCd", "");
	                DsWs_PaymCycl.setCellData(0, "sPaymCyclCd", "");
	                DsWs_PaymCycl.setCellData(0, "sPaymCyclName", "- 선택 -");
	                cmb_PaymCycl.setRef("data:Ds_LTIDA00.sPaymCyclCd");
	                if (wconv.length(Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) == 0) {
	                    cmb_PaymCycl.setSelectedIndex(1);
	                }
	            }

	            //trace(DsWs_Trty.saveXML());
	            //정기중도인출여부
	            //trace("PeriMwayWdraAvaYn : " + DsWs_PrdAttr.getCellData(0,"PeriMwayWdraAvaYn") );
	            if (DsWs_PrdAttr.getCellData(0, "PeriMwayWdraAvaYn") == "Y") {
	                chk_sPeriMwayWdraYn.setStyle("display", "");
	            } else {
	                chk_sPeriMwayWdraYn.setStyle("display", "none");
	                chk_sPeriMwayWdraYn.setValue("0");
	                //wconv.trace("chk_sPeriMwayWdraYn.getValue() : " + chk_sPeriMwayWdraYn.getValue());
	            }

	            //정기추가납입가능여부
	            /*20171228 제도개선
	            if (DsWs_PrdAttr.getCellData(0, "PeriAddPaymPremYn") == "Y") {
	            	//medt_nAddPaymPrem.show();
	                medt_nAddPaymPrem.setDisabled(false);
	            } else {
	                //medt_nAddPaymPrem.hide();
	                medt_nAddPaymPrem.setDisabled(true);
	                medt_nAddPaymPrem.setValue(0);
	            }
	            */
	            
	            if (DsWs_Trty.getRowCount() == 0) {
	                alert("특약사항 조회건이 없습니다.");
	            } else {
	                //플랜 첫번째 세팅
	                cmb_Plan.setSelectedIndex(0);
	                for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	                	if(i == 0){
	                		Ds_Pibo.setCellData(0, "sMinsrRelnCd", "10");
	                	}
	                    Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	                    Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText()); //ldh
	                }
	                //보기납기 첫번째 세팅
	                cmb_InsurTermPaymTerm.setSelectedIndex(0);
	                //일시납 납입기간에 따른 납입주기 세팅
	                scwin.lfn_PaymCyclSet();
	                //wconv.copy(Ds_Trty, DsWs_Trty);
	                util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
	                //util.setCompBindRefresh(Ds_Trty.getID());
	    			//util.setRowPosition(Ds_Trty, 0);
	                //trace("DsWs_Trty:"+DsWs_Trty.SaveXML());
	                //테이블 필드도 추가한다.
	                scwin.lfn_TrtyDataSetSet();
	                util.insertColumn(Ds_LTIDA00, [["sApplPlanCd","sApplPlanCd","text"]
	                , ["sApplPlanName","sApplPlanName","text"]
	                , ["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]
	                , ["sSaleChnl","sSaleChnl","text"]
	                , ["sSaleChnlDtal","sSaleChnlDtal","text"]
	                , ["sGdTypeFlgCd","sGdTypeFlgCd","text"]
	                , ["sInsType","sInsType","text"]
	                , ["sBunsMetdDocuClsfCd","sBunsMetdDocuClsfCd","text"]
	                , ["sApplDclrRato","sApplDclrRato","text"]
	                , ["sGdFlgcd","sGdFlgcd","text"]
	                , ["sDvdnFlagCd","sDvdnFlagCd","text"]
	                , ["sPpayAvaYn","sPpayAvaYn","text"]
	                , ["sHsecFlagCd","sHsecFlagCd","text"]
	                , ["sPsnGroupFlgcd","sPsnGroupFlgcd","text"]
	                , ["sGroupCrAdmNo","sGroupCrAdmNo","text"]
	                , ["sBsmnRgstNo","sBsmnRgstNo","text"]
	                , ["nMinPremRate","nMinPremRate","text"]
	                ]);
					util.setCompBindRefresh(Ds_LTIDA00.getID());
	    			util.setRowPosition(Ds_LTIDA00, 0);

	                //보험기간,가입금액 초기값 세팅
	                scwin.lfn_InsurTermInit(btn_CalcPrem);

	                //피보험자 추가시 특약샛트를 넣어주기 위해 필요
	                //wconv.copy(Ds_Trty_Set, Ds_Trty);
	                util.copyM(Ds_Trty_Set, Ds_Trty.getAllJSON());
	                util.setCompBindRefresh(Ds_Trty_Set.getID());
	    			
	                //특약중 화면출력특약만 화면에 보여줌
	                Ds_Trty.removeColumnFilterAll();
	    			Ds_Trty_Backup.removeColumnFilterAll();
	                wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                
	                util.setCompBindRefresh(Ds_Pibo.getID());
				    //util.setRowPosition(Ds_Pibo, 0);
				    //MS 피보험자 그리드에서 직업 찾기 버튼 숨기기
				    if(parent.sSimpleYn == "N"){
				    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
				    }
	            }
	            
	            if ((Ds_LTIDA00.getCellData(0, "sGdCd") == "2104" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2106" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2109" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2112" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02")  
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2115" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02") 
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2119" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02") 
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2125" && Ds_LTIDA00.getCellData(0, "sGnrzCd") == "02")	//2018 상품개정
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2400") 
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2401") 
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2402") // 2018 상품개정
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2103") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2105") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2108") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2111") || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2114") 
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2117")
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2123") // 2018 상품개정  
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2118")
	            || (Ds_LTIDA00.getCellData(0, "sGdCd") == "2124") // 2018 상품개정
	            ) {
	                Btn_RtnAmtList.setDisabled(false);
	            } else {
	                Btn_RtnAmtList.setDisabled(true);
	            }
	            //건강체할일여부
	            if (parent.cal_sSsrtDate.getValue() >= "20170701" && ((Ds_LTIDA00.getCellData(0, "sGdCd") == "2400" 
	            || Ds_LTIDA00.getCellData(0, "sGdCd") == "2401"
	            || Ds_LTIDA00.getCellData(0, "sGdCd") == "2402" // 2018 상품개정
	            ))) {
	                //chk_sHealDcYn.show();
	                chk_sHealDcYn.setStyle("display", "");
	            } else {
	                //chk_sHealDcYn.hide();
	                chk_sHealDcYn.setStyle("display", "none");
	                chk_sHealDcYn.setValue("0");
	            }
	            if (parent.sSimpleYn != "Y") {
	            	if (DsWs_PrdAttr.getCellData(0, "GroupHndlGdYn") == "Y") {
	                    chk_sPsnGroupFlgcd.setStyle("display", "");
	                    if(chk_sPsnGroupFlgcd.getValue() == "1"){
	                    	//btn_GroupList.show();
	                    	btn_GroupList.setStyle("display", "");
	                    }
	                } else {
	                    chk_sPsnGroupFlgcd.setStyle("display", "none");
	                    //btn_GroupList.hide();
	                    btn_GroupList.setStyle("display", "none");
	                }
	            }

	            //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	            if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	                medt_nBussPrem.setDisabled(true);
	            } else {
	                medt_nBussPrem.setDisabled(false);
	            }

	            //특약데이터셋 변경시 이벤트처리를 위해 이벤트 정의함
	            //Ds_Trty.unbind("oncelldatachange", scwin.ds_Trty_OnColumnChanged);
	            //Ds_Trty.bind("oncelldatachange", scwin.lfn_Trty_OnColumnChanged);
	            util.setBind(Ds_Trty, "oncelldatachange", "scwin.lfn_Trty_OnColumnChanged");
	            
	            //2400상품 기본계약 담보 %가입금액세팅을 위해 호출
	            var info = new Object();
	            info.oldValue = "";
	            info.newValue = "";
	            info.rowIndex = "0";
	            info.colID = "nTrtyInsAmt";
	            scwin.lfn_Trty_OnColumnChanged(info);
	            
	            modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	            //특약관계체크
	            
	            scwin.lfn_TrtyList_Relation_Check();
				
	            //합계보험료쪽 INITIALIZE
	            scwin.lfn_init_Prem();
	            Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N"); //세금우대사항 setting
	            //피보험자 추가버튼 활성화
	            scwin.lfn_setBtnAddPibo(DsWs_PrdAttr);
	            for (var i = 1; i < Ds_Pibo.getTotalRow(); i++) {
	                scwin.lfn_searchPiboTrty(cmb_Plan, i); //lfn_searchPiboTrty(cmb_InsurTermPaymTerm,i);
	            }
	            //2018 상품개정
	            //20171229 안준영 차장님 요청으로 마지막 특약 선택되는거 수정
	            //if ((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")) {
	            	Ds_Trty.removeColumnFilterAll();
	                for (var j = 0; j < Ds_Pibo.getRowCount(); j++) {
	                    if (Ds_Pibo.getCellData(j, "sel") == "1") {
	                        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(j, "nInrpsSeqno") + "'");
	                        break;
	                    }
	                }
	            //}
	
	            //당사 자동차가입현황 버튼 활성화
	            if (DsWs_PrdAttr.getCellData(0, "DrvrGdYn") == "Y") {
	                //Btn_carList.setDisabled(false);
	            }
	
	            //세금우대 상품 버튼 활성화
	            if (DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn") == "Y") {
	            	if(parent.sSimpleYn == "N"){
	            		if(parent.Tab_Step2 != null){
	                		parent.Tab_Step2.cmb_sTaxPrfrYn.setDisabled(false);
	                		parent.tab2Tax = false;
	                	}else{
	                		parent.tab2Tax = true;
	                	}
	                }
	            }
	
	            //세만기 표시 
	            if (DsWs_Plan.getCellData(0, "sRenwlAvaYn") == "Y") {
	                //Static29.hide();
	                //cmb_InsurTermPaymTerm.hide();
	                //edt_insuredPaym.hide();
	                //Sta_Title1.show();
	                //edt_RenwlAva.show();
	                //Sta_Title1.Left = 584;
	                //edt_RenwlAva.Left = 693;
	                Sta_Title1.setStyle("display", "");
	            } else {
	                //Static29.show();
	                //cmb_InsurTermPaymTerm.show();
	                //edt_insuredPaym.show();
	                //Sta_Title1.hide();
	                //edt_RenwlAva.hide();
	                //Sta_Title1.Left = 816;
	                //edt_RenwlAva.Left = 925;
	                Sta_Title1.setStyle("display", "none");
	            }
	            
	            parent.scwin.lfn_ThcpCarInsCrst(DsWs_PrdAttr); //trace("DsWs_TrtyTerm:"+DsWs_TrtyTerm.SaveXML());			
	            //N1503-00329:장기 신상품 전산개발 요청 Start
	            //보기납기EVENT 처리->미처리 원복(2015.04.28 안준영)
	            //Ds_Pibo.setCellData(0,"sel", "0");
	            //Grd_PiboLIst_OnCellClick(Grd_Pibo, 0, 0, 0, 0, 0);
	            //N1503-00329:장기 신상품 전산개발 요청 end
	        }
	    }
	    // 2018 상품개정
	    if ((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")) {
	        parent.wconv.copy(parent.Ds_TrtyTerm_0, DsWs_TrtyTerm_0);
	        parent.wconv.copy(parent.Ds_TrtyTerm_1, DsWs_TrtyTerm_1);
	        parent.wconv.copy(parent.Ds_TrtyTerm_2, DsWs_TrtyTerm_2);
	        parent.wconv.copy(parent.Ds_TrtyTerm_3, DsWs_TrtyTerm_3);
	        parent.wconv.copy(parent.Ds_TrtyTerm_4, DsWs_TrtyTerm_4);
	        parent.wconv.copy(parent.Ds_TrtyTerm_5, DsWs_TrtyTerm_5);
	        parent.wconv.copy(parent.Ds_TrtyTerm_6, DsWs_TrtyTerm_6);
	        parent.wconv.copy(parent.Ds_TrtyTerm_7, DsWs_TrtyTerm_7);
	        parent.wconv.copy(parent.Ds_TrtyTerm_8, DsWs_TrtyTerm_8);
	        //grd_sTrty.SetCellProp("Body", 3, "Edit", "expr:iif((InrtMdfcYn=='Y' && (sGdCd=='2900' || sGdCd=='2901' || sGdCd=='2120' || sGdCd=='2122')), 'combo', 'none')");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 단체취급체크 팝업
	//---------------------------------------------------------------------------
	scwin.btn_GroupList_onclick = function() {
		var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	indata.sGroupCrAdmNo = Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo");
	    	indata.sGroupName = Ds_LTIEA10.getCellData(0, "sGroupName");
	    	indata.nFrstPsct = Ds_LTIEA10.getCellData(0, "nFrstPsct");
	    	indata.nGroupDcrt = Ds_LTIEA10.getCellData(0, "nGroupDcrt");
    		var popInfo = {"width":480,
    	                   "height":146,
    	                   "indata":indata,
    	                   "callback"  : scwin.popupCallback,
						   "title"     : "단체취급"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC134P.xml", popInfo, "pop_S");     
	    });
	    promise = promise.then(function(result) {
	    	if (result != "") {
	    		if(Ds_LTIEA10.getRowCount() < 1){
					Ds_LTIEA10.insertRow();
				}
				Ds_LTIEA10.setCellData(0, "sGroupCrAdmNo", result.sGroupCrAdmNo);
				Ds_LTIEA10.setCellData(0, "sGroupName", result.sGroupName);
				Ds_LTIEA10.setCellData(0, "nFrstPsct", result.nFrstPsct);
				Ds_LTIEA10.setCellData(0, "nGroupDcrt", result.nGroupDcrt);
				util.setRowPosition(Ds_LTIEA10, 0);
				//msk_sGroupCrAdmNo.setValue(result.sGroupCrAdmNo);
        		//edt_sGroupName.setValue(result.sGroupName);
        		//medt_nFrstPsct.setValue(result.nFrstPsct);
        		//edt_nGroupDcrt.setValue(result.nGroupDcrt);
			}
		});
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_backup_Pibo
	// 내용        : 피보험자 백업
	//---------------------------------------------------------------------------
	scwin.lfn_backup_Pibo = function() {
		Ds_Pibo_BackUp.removeAll();
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        util.appendRow(Ds_Pibo_BackUp);
	        wconv.mi_copyRow(Ds_Pibo.getID(), i, Ds_Pibo_BackUp.getID(), i);
	        Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N");
	        Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "N");
	        Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	        Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	    }
	};
	
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_getSex
	// 내용        : 성별을 체크한다.
	//---------------------------------------------------------------------------
	scwin.lfn_getSex = function(val) {
	    if ("1357".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "1";
	    } else if ("2468".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "2";
	    } else {
	        return "";
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_PaymCyclSet
	// 내용        : 일시납 납입기간에 따른 납입주기 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_PaymCyclSet = function() {
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    //var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //일사납일겨우 납입주기를 일시납으로 변경
	    if (sPaymTermCd == "000") {
	        cmb_PaymCycl.setValue("99");
	        cmb_PaymCycl.setDisabled(true);
	        wconv.filter(DsWs_PaymCycl, ("Number(sPaymCyclCd) < 100"));
	    } else {
	        if (wconv.length(Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) == 0 || Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	            cmb_PaymCycl.setSelectedIndex(1);
	        }
	        cmb_PaymCycl.setDisabled(false);
	        wconv.filter(DsWs_PaymCycl, ("Number(sPaymCyclCd) < 99"));
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_TrtyDataSetSet
	// 내용        : 특약 데이터셋에 copy를 할경우 정의된 컬럼이 삭제되어서 추가해줌
	//---------------------------------------------------------------------------
	scwin.lfn_TrtyDataSetSet = function() {
	    util.insertColumn(Ds_Trty, [["sBascSlctFlagCd","sBascSlctFlagCd","text"]
	    , ["sTrtyName","sTrtyName","text"]
	    , ["sPlanNo","sPlanNo","text"]
	    , ["sPsnPrprtGroupFlgcd","sPsnPrprtGroupFlgcd","text"]
	    , ["nPsnPrprtGroupSeqno","nPsnPrprtGroupSeqno","text"]
	    , ["nCrChngNo","nCrChngNo","text"]
	    , ["nTrtyOrdr","nTrtyOrdr","text"]
	    , ["sScrnIndcYn","sScrnIndcYn","text"]
	    , ["sGdCd","sGdCd","text"]
	    , ["sGnrzCd","sGnrzCd","text"]
	    , ["sAutoRenwlAvaYn","sAutoRenwlAvaYn","text"]
	    , ["sAutoRenwlCyclCd","sAutoRenwlCyclCd","text"]
	    , ["nSelfChamt","nSelfChamt","text"]
	    , ["sGrntAccuFlagCd","sGrntAccuFlagCd","text"]
	    , ["nAccuPrem","nAccuPrem","text"]
	    , ["nExptGrntBussPrem","nExptGrntBussPrem","text"]
	    , ["nRiskPrem","nRiskPrem","text"]
	    , ["nTrtyPrem","nTrtyPrem","text"]
	    , ["nRenwlSeq","nRenwlSeq","text"]
	    , ["sRenwlYn","sRenwlYn","text"]
	    , ["nRealPaymTerm","nRealPaymTerm","text"]
	    , ["nRealInsurTerm","nRealInsurTerm","text"]
	    , ["nPaymAge","nPaymAge","text"]
	    , ["nEndAge","nEndAge","text"]
	    , ["sTrtyStatCd","sTrtyStatCd","text"]
	    , ["sInsurStrtdate","sInsurStrtdate","text"]
	    , ["sInsurEndDate","sInsurEndDate","text"]
	    , ["sCnclExtnEndDate","sCnclExtnEndDate","text"]
	    , ["TrtyFlagCd","TrtyFlagCd","text"]
	    , ["sResvAmtKey","sResvAmtKey","text"]
	    ]);
	    util.setCompBindRefresh(Ds_Trty.getID());
	    //util.setRowPosition(Ds_Trty, 0);
	    //MS 헤더 체크박스
        scwin.grd_Trty_head_Check();
	    
	    util.insertColumn(Ds_Pibo, [["sPmmiInsurFlagCd","sPmmiInsurFlagCd","text"]
	    , ["sPsnInfoOferAgreYn","sPsnInfoOferAgreYn","text"]
	    , ["sMNumCrInsAgreYn","sMNumCrInsAgreYn","text"]
	    ]);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Btn_RtnAmt_OnClick
	// 내용        : 갱신보험료 버튼 클릭이벤트
	//---------------------------------------------------------------------------
	scwin.lfn_Btn_RtnAmt_OnClick = function() {
	    var validFlag = false;
	    obj = Ds_LTIDA00;
	    if (obj.getRowCount() > 0) {
	        //trace(Ds_LTIDA00.savexml());
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            } 
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                var colID = obj.getColumnID(j);
	                //설계번호
	                if (colID == "sPlanNo") {} else if (colID == "sGdCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("상품을  선택하세요");
	                        //as-is 부모창 포커스이나 실제 버튼이 존재 하지 않음
	                        //btn_sGdCd.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //청약일자
	                } else if (colID == "sSsrtDate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("청약일자를 입력하세요");
	                        cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                }
	            }
	        }
	    }
	    if (validFlag) {
	        return false;
	    }
	    if (modifyFlag) {
	        alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
	        return false;
	    }
	
	    //청약일이 입력되어 있어야 한다.
	    if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
	        alert("청약일을 입력해 주세요");
	        cal_sSsrtDate.focus();
	        return false;
	    }
		
	    //갱신보험료처리
	    parent.scwin.lfn_RenwlPrem();
//	    wconv.trace("scwin.lfn_Btn_RtnAmt_OnClick called");
	    Ds_LTIDA00.setCellData(0, "sGdName", parent.edt_sGdCdNm.getValue());
	    
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var indata = new Object();
	    	indata.sPlanNo = parent.medt_PlanNo.getValue();	//청약번호 	// 수정(추가): 2017.10.31, by 진태만 
			indata.sInrpsName = Ds_Pibo.getCellData(0,"sInrpsName");	//피보험자
			var pObj = {   // 수정(추가): 2017.10.31, by 진태만 
					"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds 
					, "DsWs_PaymCycl" : DsWs_PaymCycl		// 보험 기본사항 정보 Ds 
					,"edt_sGdCdNm" : parent.edt_sGdCdNm 	// 상품명
					,"Ds_Pibo" : Ds_Pibo
			} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
			
	    	var popInfo = {"width":680,	 	// 수정(width, height): 2017.10.31, by 진태만   --> 800, 550
						   "height":640,
						   "indata":indata,
						   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트  	// 수정(추가): 2017.10.31, by 진태만 
						   "callback"  : scwin.popupCallback,
						   "title"     : "갱신형 특약 경과기간별 보험료"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC023P.xml", popInfo);		// 갱신보험료처리 팝업
	    });
        promise = promise.then(function(rv) {
        	var rtnValue = wprom.getReturnData();
			if (rtnValue != ""){
				
			}
        });
	};
	
	/*-----------------------------------
	// function 명 : lfn_CompChangeCheck
	// 내용        : 각 항목 변경여부체크
	-----------------------------------*/
	scwin.lfn_CompChangeCheck = function(obj, i, colID) {
		if (obj.getID() == "Ds_Pibo") {
	        if (Ds_Pibo.getCellData(i, colID) != Ds_Pibo_BackUp.getCellData(i, colID)) {
	            modifyFlag = true;
	        }
	    } else {
	        //변경여부체크
	        if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
	            modifyFlag = true;
	        } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
	            modifyFlag = true;
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_TrtyInsAmtInit
	// 내용        : 가입금액 초기값 세팅
	//---------------------------------------------------------------------------
	scwin.lfn_TrtyInsAmtInit = function(obj) {
	    //보험기간 콤보 초기값세팅
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //가입금액 초기값세팅
	        //보기납기EVENT 처리->미처리 원복(2015.04.28 안준영)
	        if ((obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") || (wconv.length(util.getCellDataF(Ds_Trty, i, "nTrtyInsAmt")) == 0)) {
	            Ds_InsAmt.setCondition("filter", "sTrtyCd == '"+util.getCellDataF(Ds_Trty, i, "sTrtyCd")+"'");
	            for (var j = 0; j < Ds_InsAmt.getRowCount(); j++) {
	            	util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Ds_InsAmt.getCellData(j, "sCd"));
                    break;
	            }
	        } else if (!(mfn_IsEmpty(obj))) {
	        	Ds_InsAmt.setCondition("filter", "sTrtyCd == '"+util.getCellDataF(Ds_Trty, i, "sTrtyCd")+"'");
	            for (var j = 0; j < Ds_InsAmt.getRowCount(); j++) {
	            	util.setCellDataF(Ds_Trty, i, "nTrtyInsAmt", Ds_InsAmt.getCellData(j, "sCd"));
                    break;
	            }
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_OnColumnChanged
	// 내용        : 특약그리드 값 변경시 처리
	//---------------------------------------------------------------------------
	var trtyCheckFlag = false;
	//setColumn처리시 다시 반복해서 이벤트가 발생하므로 제어가 필요함
	scwin.lfn_Trty_OnColumnChanged = function(info) {
		//alert(JSON.stringify(info));
		//info.oldValue
		//info.newValue
		//info.rowIndex
		//info.colID
		//trace("lfn_Trty_OnColumnChanged : " + info.colID);
	    switch (info.colID) {
	        case "chk":
	        	util.jSonDsCreate(Ds_Trty.getAllJSON(), "ds_Temp");
	        	wconv.filter($w.data["ds_Temp"], "TrtyFlagCd == '01' && chk == '1'");
	        	if ($w.data["ds_Temp"].getRowCount() < 1) {
	        		$w.data.remove("ds_Temp");
					return;
				}else{
					$w.data.remove("ds_Temp");
				}
				
	            var sRelTrtyCd;
	            //종속 특약셋팅.
	            //Ds_Trty.FireEvent = false;
	            var arrtrty = util.getDataListEvent(Ds_Trty);
	            util.removeAllDataListEvent(Ds_Trty);
	            
	            //체크 해제시 해당row 초기화(보험료)
	            //if (Ds_Trty.getCellData(info.rowIndex,"chk") == "0" && !trtyCheckFlag){
	            //trtyCheckFlag = true;
	            if (Ds_Trty.getCellData(info.rowIndex, "chk") == "0") {
	                Ds_Trty.setCellData(info.rowIndex, "nGrntPrem", ""); //보장보험료
	                Ds_Trty.setCellData(info.rowIndex, "nExptGrntBussPrem", ""); //예상보장영업보험료
	                //trace("0일경우="+Ds_Trty.getCellData(info.rowIndex,"chk"));		
	                sRelTrtyCd = Ds_Trty.getCellData(info.rowIndex, "sSubTrtyCd");
	
	                //특약간 관계 체크
	                scwin.lfn_Trty_Relation_Check(info.rowIndex, Ds_Trty.getCellData(info.rowIndex, "sPkgCd"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd1"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd2"), Ds_Trty.getCellData(info.rowIndex, "TrtyHnglAbbName"), "", sRelTrtyCd, false);
	            } else if (Ds_Trty.getCellData(info.rowIndex, "chk") == "1") {
	                trtyCheckFlag = false;
	                sRelTrtyCd = Ds_Trty.getCellData(info.rowIndex, "sMainTrtyCd");
	
	                //특약간 관계 체크
	                scwin.lfn_Trty_Relation_Check(info.rowIndex, Ds_Trty.getCellData(info.rowIndex, "sPkgCd"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd1"), Ds_Trty.getCellData(info.rowIndex, "sExcluGroupCd2"), Ds_Trty.getCellData(info.rowIndex, "TrtyHnglAbbName"), "", sRelTrtyCd, true);
	                
					for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
						if(util.getCellDataF(Ds_Trty, i, "chk") == "1" && util.getCellDataF(Ds_Trty, i, "nGrntPrem") == ""){
							util.setCellDataF(Ds_Trty, i, "nGrntPrem", (Ds_Trty_Backup.getTotalRow()==Ds_Trty.getTotalRow()?util.getCellDataF(Ds_Trty_Backup, i, "nGrntPrem"):""));
							util.setCellDataF(Ds_Trty, i, "nExptGrntBussPrem", (Ds_Trty_Backup.getTotalRow()==Ds_Trty.getTotalRow()?util.getCellDataF(Ds_Trty_Backup, i, "nExptGrntBussPrem"):""));
						}
					}
	            }
	            //Ds_Trty.FireEvent = true;
	            util.setDataListEvent(Ds_Trty, arrtrty);
	            scwin.grd_Trty_head_Check();
	            break;
	        case "sInsurTermCd":
	        	var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);
				
				if(sGdCd == "2122" || sGdCd == "2128") { //레이디플러스  // 2018 상품개정(2128)
					//패키지체크(패키지특약 보험기간 동시변경)
					for(var i=0; i < Ds_Trty.getRowCount(); i++){
						//패키지값과 같은 그룹코드값을 찾는다.		
						if(wconv.length(Ds_Trty.getCellData(i,"sPkgCd")) > 0 && wconv.length(Ds_Trty.getCellData(info.rowIndex,"sPkgCd")) > 0 && (Ds_Trty.getCellData(i,"sPkgCd") == Ds_Trty.getCellData(info.rowIndex,"sPkgCd"))){
							Ds_Trty.setCellData(i,"sInsurTermCd", info.newValue);
						}
					}
				}
				
				util.setDataListEvent(Ds_Trty, arrtrty);
	        break;    
	        case "sPaymTermCd":
	            if (DsWs_PaymTerm.getRowCount() == 0) {
	                alert("보험기간을 선택하세요.");
	            }
	            //보험기간/납입기간 세팅
	            if (info.rowIndex == 0) {
	                Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(info.rowIndex, "sInsurTermCd")); //보험기간
	                Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(info.rowIndex, "sPaymTermCd")); //납입기간
	                Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(info.rowIndex, 3) + "/" + grd_sTrty.getCellDisplayData(info.rowIndex, 4)); //보기납기
	            }
	            break;
	        case "sTrtyCd":
	        	//txtTrtyInfo.setValue("");
	        	scwin.lfn_Trty_OnCellClick(info.rowIndex, 2);
	        	break;    
	        case "nTrtyInsAmt":
	        	//txtTrtyInfo.setValue("");
	        	scwin.lfn_Trty_OnCellClick(info.rowIndex, 2);
	            //grd_sTrty.Redraw = false;
	            //Ds_Trty.FireEvent = false;
	            var arrtrty = util.getDataListEvent(Ds_Trty);
	            util.removeAllDataListEvent(Ds_Trty);
	            //기본계약 담보 가입금액세팅
	            if ((sGdCd == "2400") || (sGdCd == "2401") || (sGdCd == "2402")) {
	                if (wconv.substr(Ds_Trty.getCellData(info.rowIndex, "sTrtyCd"), 4, 4) == "0001") {
	                    var fRow;
	                    //실버소액암진단비 50%
	                    fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "0002");
	                    Ds_Trty.setCellData(fRow, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(info.rowIndex, "nTrtyInsAmt")) * 0.5);
	                    //실버유사암진단비 10%
	                    fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "0003");
	                    Ds_Trty.setCellData(fRow, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(info.rowIndex, "nTrtyInsAmt")) * 0.1);
	                }
	            } 
	            //N1611-00024:장기보험 신상품 전산개발 요청(큰병진단)
	            else if (sGdCd == "2117" || sGdCd == "2123") { // 2018 상품개정(2123)
	                if (wconv.substr(Ds_Trty.getCellData(info.rowIndex, "sTrtyCd"), 4, 4) == "0201") {
	                    var fRow;
	                    //유사암 진단비는 3대질병진단비 20%
	                    fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "0301");
	                    Ds_Trty.setCellData(fRow, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(info.rowIndex, "nTrtyInsAmt")) * 0.2);
	                }
	                if (wconv.substr(Ds_Trty.getCellData(info.rowIndex, "sTrtyCd"), 4, 4) == "2101") {
	                    var fRow;
	                    //유사암 진단비(갱신형)는 3대질병진단비(갱신형) 20%
	                    fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "2201");
	                    Ds_Trty.setCellData(fRow, "nTrtyInsAmt", wconv.toNumber(Ds_Trty.getCellData(info.rowIndex, "nTrtyInsAmt")) * 0.2);
	                }
	            }else if(sGdCd == "2122" || sGdCd == "2128") { //여성특화 // 2018 상품개정(2128)
	            	if (wconv.substr(Ds_Trty.getCellData(info.rowIndex, "sTrtyCd"), 4, 4) == "0701") {
	                    var fRow;
	                    //유사암 진단비는 3대질병진단비 20%
	                    fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "1001");
	                    if(wconv.toNumber(Ds_Trty.getCellData(info.rowIndex,"nTrtyInsAmt"))*0.2 > 6000000 ) {
							Ds_Trty.setCellData(fRow,"nTrtyInsAmt",6000000);
						} else {
							Ds_Trty.setCellData(fRow,"nTrtyInsAmt",wconv.toNumber(Ds_Trty.getCellData(info.rowIndex,"nTrtyInsAmt"))*0.2);
						}
	                }
	                if (wconv.substr(Ds_Trty.getCellData(info.rowIndex, "sTrtyCd"), 4, 4) == "5701") {
	                	var fRow;
	                	//유사암진단비는 암진단비(소액암제외) 가입금액의 20%(21225701)
	                	fRow = wconv.findRow(Ds_Trty, "sTrtyCd", sGdCd + "6001");
	                	if(wconv.toNumber(Ds_Trty.getCellData(info.rowIndex,"nTrtyInsAmt"))*0.2 > 6000000 ) {
							Ds_Trty.setCellData(fRow,"nTrtyInsAmt",6000000);
						} else {
							Ds_Trty.setCellData(fRow,"nTrtyInsAmt",wconv.toNumber(Ds_Trty.getCellData(info.rowIndex,"nTrtyInsAmt"))*0.2);
						}
	                }
	            }
	            //Ds_Trty.FireEvent = true;
	            util.setDataListEvent(Ds_Trty, arrtrty);
	            //grd_sTrty.Redraw = true;
	            break;
	        default:
	            break;
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Check
	// 내용        : 특약간 관계 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Check = function(nRow, sPkgCd, sExcluGroupCd1, sExcluGroupCd2, TrtyHnglAbbName, all, sRelTrtyCd, chk) {
	    //grd_sTrty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
		util.removeAllDataListEvent(Ds_Trty);
	    
	    //trace(grd_sTrty.getID()+"==="+nRow+"==="+sPkgCd+"==="+sExcluGroupCd1+"==="+sExcluGroupCd2);
	    //패키지체크
	    scwin.lfn_Trty_Relation_Pkg(Ds_Trty, sPkgCd, chk);
	
	    //베타그룹체크
	    scwin.lfn_Trty_Relation_sExcluGroupCd(nRow, all);
	
	    //특약간 종속 체크
	    scwin.lfn_Trty_Relation_Subo(Ds_Trty, nRow, sRelTrtyCd, chk);
	
	    //피보험자중 1명만 가입가능 특약체크
	    scwin.lfn_Trty_Relation_OnlyOne(Ds_Trty, nRow, "1");
	    scwin.lfn_Trty_Drv_chk();
	    
	    //grd_sTrty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_init_Prem
	// 내용        : 합계보험료column초기화
	//---------------------------------------------------------------------------
	scwin.lfn_init_Prem = function() {
	    //사전조회사항초기화
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "MediFlag", "N");
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "fixFlag", "N");
	    btn_Medical.setDisabled(true);
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "N"); //실손가입 확인
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "N");
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo.setCellData(i, "sPsnInfoOferAgreYn", "N");
	        Ds_Pibo.setCellData(i, "sMNumCrInsAgreYn", "N");
	    }
	    Ds_LTIDA00.setCellData(0, "nGrntPrem", 0); //보장보험료
	    Ds_LTIDA00.setCellData(0, "nAccuPrem", 0); //적립보험료
	    Ds_LTIDA00.setCellData(0, "nDcPrem", 0); //할인보험료
	    Ds_LTIDA00.setCellData(0, "nApplPrem", 0); //적용보험료
	    Ds_LTIDA00.setCellData(0, "nMinPrem", 0); //최소보험료
	    Ds_LTIDA00.setCellData(0, "nMaxPrem", 0); //최대보험료
	    Ds_LTIDA00.setCellData(0, "nBussPrem", 0); //영업보험료
	    Ds_LTIDA00.setCellData(0, "nExptEndRetrnAmt", 0); //예상환급금
	    Ds_LTIDA00.setCellData(0, "nExptEndRtnrt", 0); //예상환급율
	    Ds_LTIDA00.setCellData(0, "nAddPaymPrem", 0); //추가납입보험료
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc(wconv.findRow(Ds_Pibo, "sel", "1"), "N");
	
	    //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	    if (DsWs_Plan.getCellData(0, "sPremAmtChgYn") == "N") {
	        medt_nBussPrem.setDisabled(true);
	    } else {
	        medt_nBussPrem.setDisabled(false);
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_deleteEtc
	// 내용        : 피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	//---------------------------------------------------------------------------
	scwin.lfn_deleteEtc = function(nSeq, delLTIDA01YN) {
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "delete_PiboDetail", "", "");
		MethodObj.setId("delete_PiboDetail");
		MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue());
		MethodObj.setParam("sPsnGroupFlgcd", parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));//개인단체구분코드
		MethodObj.setParam("sPsnPrprtGroupFlgcd", "1");//인물단체구분코드(인) 
		MethodObj.setParam("nPsnPrprtGroupSeqno", nSeq + 1);//일련번호 
		//MethodObj.setParam("sDriveYn", Ds_Pibo.getCellData(0, "sDrveFlagCd"));//운전용도
		MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(nSeq, "sInrpsCd"));//피보험자코드
		//MethodObj.setParam("sInrpsName", Ds_Pibo.getCellData(0, "sInrpsName"));//성명
		//MethodObj.setParam("sSsrtDate", parent.cal_sSsrtDate.getValue());//청약일자
		MethodObj.setParam("sCrChngNo", "0"); //변경seq
		MethodObj.setParam("nInrpsSeqno", nSeq + 1); //변경seq
		MethodObj.setParam("delLTIDA01YN", delLTIDA01YN); //피보험자 테이블 삭제 여부
		//trace("sPlanProgRankCd:"+Ds_LTIDA00.getCellData(0,"sPlanProgRankCd"));
	    //설계상태를 지움. 산출을 다시 시키기 위해
	    if (delLTIDA01YN == "Y") {
	    	Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "10"); //설계진행단계코드(보험료산출(인))
	        MethodObj.setParam("sPlanProgRankCd", "10");
	    }
	    MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N"); //세금우대사항 setting	
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_setBtnAddPibo
	// 내용        : 피보험자 추가/삭제버튼 활성화
	//---------------------------------------------------------------------------
	scwin.lfn_setBtnAddPibo = function(dsPrdAttr) {
	    //최대피보험목적수가 > 0 일때 버튼 활성화
	    if (parseInt(dsPrdAttr.getCellData(0, "MaxInsrdObjctCt")) > 1) {
	        //N1412-00135:FY2015 장기보험 제도개선에 따른 전산 개발 요청(임시로 세만기 상품은 피보험자 한명만 가능토록)
	        /*N1501-00167:장기 세만기 환급금계산 프로그램 개발
	        if( (sGdCd == "2106" && parent.edt_sGnrzCd.getValue() == "01") || 
	            (sGdCd == "2307" && parent.edt_sGnrzCd.getValue() == "02") || 
	            (sGdCd == "2601") ){
	            btnAddPibo.show();
	        	btnAddPibo.Visible = false;
	        	btnDelPibo.Visible = false;
	        	grd_sTrty.SetCellProp("Body",3,"Edit","None");
	        	grd_sTrty.SetCellProp("Body",4,"Edit","None");
			
	        	Grd_Pibo.SetCellProp("Body",7,"Edit","None");	//피보험자 주피보험자와 관계
			
	        	for(var k = Ds_Pibo.getRowCount() - 1 ; k >= 1 ; k--){
	        		lfn_deleteEtc(k , "Y");
	        		Ds_Pibo.deleteRow(k); // Dataset에 빈 Record한줄 추가
	        		Ds_Pibo_BackUp.deleteRow(k);
	        	}
	        }else{
	        */
	        //btnAddPibo.show();
	        //btnDelPibo.show();
	        btnAddPibo.visible(true);
	        btnDelPibo.visible(true);
	        //grd_sTrty.SetCellProp("Body",3,"Edit","Combo"); //나중에 개별 수정 필요시(20120713)
	        //grd_sTrty.SetCellProp("Body",4,"Edit","Combo"); //나중에 개별 수정 필요시(20120713)
	        //Grd_Pibo.SetCellProp("Body", 7, "Edit", "Combo"); //피보험자 주피보험자와 관계
	        //}
	    } else {
	    	//btnAddPibo.hide();
	        //btnDelPibo.hide();
	        btnAddPibo.visible(false);
	        btnDelPibo.visible(false);
//	        if ((sGdCd != "2900") && (sGdCd != "2901") && (sGdCd != "2120") && (sGdCd != "2122")) {
	            //grd_sTrty.SetCellProp("Body", 3, "Edit", "None");
//	        } else {
	            //grd_sTrty.SetCellProp("Body", 3, "Edit", "expr:iif((InrtMdfcYn=='Y' && (sGdCd=='2900' || sGdCd=='2901' || sGdCd=='2120' || sGdCd=='2122')), 'combo', 'none')");
//	        }
	        //grd_sTrty.SetCellProp("Body", 4, "Edit", "None");
	        //Grd_Pibo.SetCellProp("Body", 7, "Edit", "None"); //피보험자 주피보험자와 관계
	        for (var k = Ds_Pibo.getRowCount() - 1; k >= 1; k--) {
	            scwin.lfn_deleteEtc(k, "Y");
	            Ds_Pibo.deleteRow(k);
	            Ds_Pibo_BackUp.deleteRow(k);
	        }
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_searchPiboTrty
	// 내용        : 피보험자에 해당하는 특약정보를 조회한다.
	-----------------------------------*/
	scwin.lfn_searchPiboTrty = function(obj, nRow) {
	    //고객찾기를 하지 않으면 조회를 하지 않는다
	    if (wconv.length(wconv.trim(Ds_Pibo.getCellData(nRow, "sInrpsName"))) <= 0) {
	        scwin.lfn_changeTrty();
	        return;
	    }
		//trace("Ds_Trty:" + Ds_Trty.SaveXML());
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    //wconv.clear(DsWs_DoerInfo);
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
	    MethodObj.setId("getPiboTrty");
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
	        MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    	MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    } else {
	        MethodObj.setParam("sPlanCd", Ds_Pibo.getCellData(nRow, "sApplPlanCd")); //플랜코드
	    	MethodObj.setParam("sPlanName", Ds_Pibo.getCellData(nRow, "sApplPlanName")); //플랜명 
	    }
	    MethodObj.setParam("sPsnGroupFlgcd", Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));//개인단체구분코드
	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(nRow, "sDrveFlagCd")); //운전용도 
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sInrpsCd")); //피보험자주민번호
	    //N1502-00095(모집인별 마이플랜 조회 위해 추가	)
	    /*if( Ds_LTIDA00.getCellData(0,"sDoer") == NULL || Ds_LTIDA00.getCellData(0,"sDoer") == "" ) {
	    	gfn_SetParam(MethodObj, "sDoer", gDoer);//취급자
	    	gfn_SetParam(MethodObj, "sDoerUser", gDoerUser);//사용인
	    }
	    else{
	    	gfn_SetParam(MethodObj, "sDoer", Ds_LTIDA00.getCellData(0,"sDoer"));//취급자
	    	gfn_SetParam(MethodObj, "sDoerUser", Ds_LTIDA00.getCellData(0,"sDoerUser"));//사용인
	    }//END*/
	    MethodObj.setParam("sDoer", parent.edt_sDoer.getValue());
	    MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue());
	    //피보험자 추가일때는 특약DB조회를 하지 않기 위해
	    //보기납기EVENT 처리->미처리 원복(2015.04.28 안준영)
	    //if((Ds_Trty.getRowCount() > 0) && (obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() != "cmb_InsurTermPaymTerm")){
	    if (Ds_Trty.getRowCount() > 0) {
	        MethodObj.setParam("nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno"));//일련번호
	    }
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //trace("sInsurTermCd:"+sInsurTermCd);
	    //trace("sPaymTermCd:"+sPaymTermCd);
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		//납입기간
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    //특약중 화면출력특약만 화면에 보여줌
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
	    util.removeAllDataListEvent(Ds_Trty);
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }else{
        	DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));	// dataset 데이터
		    DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));	// dataset 데이터
		    DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));	// dataset 데이터
		    if (DsWs_Trty.getRowCount() == 0) {
	            alert(Ds_Pibo.getCellData(nRow, "sInrpsName") + "피보험자의 특약사항 조회건이 없습니다.");
	        }
	        if (obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan") {
	            //wconv.copy(Ds_Trty_Basic, Ds_Trty);
	            util.copyM(Ds_Trty_Basic, Ds_Trty.getAllJSON())
	            wconv.filter(Ds_Trty_Basic, "chk=='" + "1" + "'");
	            scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno"));
	            scwin.lfn_TrtyInsAmtInit(obj);
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check(nRow);
	        } else {
	            //요청인 경우 처리
	            if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 52) {
	                //피보험자 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {
	                    scwin.lfn_changeTrty();
	                } else {
	                    //특약세팅
	                    scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno")); //lfn_TrtyDataSetSet();
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                    //Ds_Trty_Backup.Copy("Ds_Trty");
	                    //Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                }
	            } else {
	                //일시납 납입기간에 따른 납입주기 세팅
	                scwin.lfn_PaymCyclSet();
	                //피보험자 추가일때만 특약 추가
	                if (Ds_Trty.getRowCount() > 0) {
	                    scwin.lfn_changeTrty();
	                    scwin.lfn_Trty_Age_Limit();
	                } else {
	                	//플랜,납입주기,납만 화면 활성화/비활성화
	                    scwin.lfn_PlanEnable(nRow);
	
	                    //특약세팅
	                    scwin.lfn_trtyAddRow(obj, Ds_Pibo.getCellData(nRow, "nInrpsSeqno"));
	                    
	                    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                    //Ds_Trty_Backup.Copy("Ds_Trty");
	                    //Ds_Trty_Backup.Filter("wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                    
	                    //보험기간,가입금액 초기값 세팅
	                    scwin.lfn_InsurTermInit(obj);
	                    
	                    //특약관계체크
	                    scwin.lfn_TrtyList_Relation_Check();
	                }
	            }
	            //피보험자 추가일때만 특약 추가
	            if (Ds_Trty.getRowCount() <= 0) {
	                for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	                    //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
	                    if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" || Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                        btn_Medical.setDisabled(false); //사전조회버튼 활성화
	                    }
	
	                    //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                    if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
	                        Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "Y"); //실손가입 확인
	                    }
	
	                    //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                    if (Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                        Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "Y"); //사전조회버튼 활성화
	                    }
	                }
	            }
	        }
	    }    
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(nRow, "nInrpsSeqno") + "'");
	    //Ds_Trty.FireEvent = true; //피보험자 체크박스 플래그 초기화
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	/*-----------------------------------
	// function 명 : lfn_trtyAddRow
	// 내용        : 조회된 특약을 Ds_Tyty에 추가함.
	-----------------------------------*/
	scwin.lfn_trtyAddRow = function(obj, nPsnPrprtGroupSeqno){
		//grd_sTrty.Redraw = false;
		var nRowPos = Ds_Trty.getRowCount();
		var jCnt = Ds_Trty_Basic.getRowCount();
		
		for(var i=0 ; i < DsWs_Trty.getRowCount() ; i++){
			Ds_Trty.insertRow(nRowPos);
			Ds_Trty.setRowJSON(nRowPos, DsWs_Trty.getRowJSON(i), true);
			Ds_Trty.setCellData(nRowPos, "nPsnPrprtGroupSeqno", nPsnPrprtGroupSeqno);
			
			if(obj != undefined && obj.getID != undefined && typeof obj.getID == "function" && obj.getID() == "cmb_Plan"){
				if (cmb_Plan.getText().indexOf("자유") >= 0) {
					for(var j=0; j < jCnt ; j++){
						if(Ds_Trty.getCellData(nRowPos,"TrtyCd") == Ds_Trty_Basic.getCellData(j,"TrtyCd"))  {
							Ds_Trty.setCellData(nRowPos,"chk","1");
							break;
						}else{
							Ds_Trty.setCellData(nRowPos,"chk",0);
						}
					}
				}else {
					Ds_Trty.setCellData(nRowPos,"chk","1");
				}
				Ds_Trty.setCellData(nRowPos,"nTrtyPrem","");
				Ds_Trty.setCellData(nRowPos,"nExptGrntBussPrem","");
				Ds_Trty.setCellData(nRowPos,"nGrntPrem","");

				//2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
				if (Ds_Trty.getCellData(nRowPos, "PronCmpsTrtyYn") == "Y"){
					Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "nInrpsSeqno", nPsnPrprtGroupSeqno), "hasPronCmpsTrty","Y"); //실손가입 확인
				}				
				//2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
				if (Ds_Trty.getCellData(nRowPos, "FxamtCmpsFlag") == "Y"){
					Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "nInrpsSeqno", nPsnPrprtGroupSeqno), "hasFxamtCmps","Y");//사전조회버튼 활성화
				}	
			}
			nRowPos++;
		}
		
		//trace("Ds_Trty:"+Ds_Trty.SaveXML());
		//grd_sTrty.Redraw = true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_Subo
	// 내용        :  특약간 종속 특약 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_Subo = function(obj, nRow, sRelTrtyCd, chk) {
	    //trace(obj.SaveXML());
	    var sSubTrtyHaveCnt = 0;
	    //특약간 종속 특약 체크
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        if (obj.getCellData(i, "sTrtyCd") == sRelTrtyCd) {
	            if (chk) {
	                obj.setCellData(i, "chk", "1");
	            } else {
	                sSubTrtyHaveCnt = 0;
	                for (var j = 0; j < obj.getRowCount(); j++) {
	                    if ((obj.getCellData(j, "sSubTrtyCd") == sRelTrtyCd) && (obj.getCellData(j, "chk") == "1")) {
	                        sSubTrtyHaveCnt++;
	                    }
	                }
	                if (sSubTrtyHaveCnt == 0) {
	                    obj.setCellData(i, "chk", "0");
	                    obj.setCellData(i, "nGrntPrem", ""); //보장보험료
	                    obj.setCellData(i, "nExptGrntBussPrem", ""); //예상보장영업보험료				
	                }
	            }
	        }
	    }
	
	    //N1511-00187:2016년 장기보험 제도개선에 따른 전산개발 요청
	    //특약간 주.종 관계에 있어서 주특약이 2개이고 종특약이 1개일 경우 로직 추가
	    //특약을 check할 경우 sRelTrtyCd = 주특약 
	    if (chk) {
	        var sTrtyCd = obj.getCellData(nRow, "sTrtyCd");
	        var sMainTrtyChecked = false;
	        var sMsg = "";
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if ((obj.getCellData(i, "sSubTrtyCd") == sTrtyCd) && (obj.getCellData(i, "chk") == "1")) {
	                sMainTrtyChecked = true;
	            }
	        }
	        sSubTrtyHaveCnt = 0;
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (obj.getCellData(i, "sSubTrtyCd") == sTrtyCd) {
	                if (sSubTrtyHaveCnt == 0) {
	                    sMsg += obj.getCellData(i, "TrtyHnglAbbName") + ", ";
	                } else {
	                    sMsg += obj.getCellData(i, "TrtyHnglAbbName");
	                }
	                sSubTrtyHaveCnt++;
	            }
	        }
	        if (sSubTrtyHaveCnt == 0) {
	            sMainTrtyChecked = true;
	        }
	        if (sMainTrtyChecked == false) {
	            alert(sMsg + "중 적어도 하나는 가입하셔야합니다.");
	            obj.setCellData(nRow, "chk", "0");
	            obj.setCellData(nRow, "nGrntPrem", ""); //보장보험료
	            obj.setCellData(nRow, "nExptGrntBussPrem", ""); //예상보장영업보험료				
	            return false;
	        }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_OnlyOne
	// 내용        : 특약간 관계 체크(피보험자 중복 가입 체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_OnlyOne = function(obj, nRow, all) {
	    var sInrpsDoubInsImprYn = "";
	    var sTrtyCd = "";
	    var sTrtyName = "";
	    if (all == "all") {
	        nRow = wconv.findRow(Ds_Trty, "InrpsDoubInsImprYn", "Y");
	        sInrpsDoubInsImprYn = Ds_Trty.getCellData(nRow, "InrpsDoubInsImprYn");
	        sTrtyCd = Ds_Trty.getCellData(nRow, "sTrtyCd");
	        sTrtyName = Ds_Trty.getCellData(nRow, "TrtyHnglAbbName");
	    } else {
	        sInrpsDoubInsImprYn = obj.getCellData(nRow, "InrpsDoubInsImprYn");
	        sTrtyCd = obj.getCellData(nRow, "sTrtyCd");
	        sTrtyName = obj.getCellData(nRow, "TrtyHnglAbbName");
	    }
	    var nInsuCnt = 0;
	    if (sInrpsDoubInsImprYn == "Y") {
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	            if (util.getCellDataF(Ds_Trty, i, "chk") != "1") {
	                continue;
	            }
	            if (sTrtyCd == util.getCellDataF(Ds_Trty, i, "sTrtyCd")) {
	                nInsuCnt++;
	            }
	        }
	    }
	    if (nInsuCnt > 1) {
	        alert("'" + sTrtyName + "' 특약은 피보험자별 중복가입이 불가합니다.");
	        if (all == "all") {
	            return false;
	        } else {
	            obj.setCellData(nRow, "chk", "0");
	        }
	    }
	    return true;
	};
	
	//특약 연령에 따른 보기납기 처리
	scwin.lfn_Trty_Age_Limit = function(obj) {
	    //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrtrty = util.getDataListEvent(Ds_Trty);
	    util.removeAllDataListEvent(Ds_Trty);
	    
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "InrtmPytrMdfcYn") == "Y") {
	            Ds_Trty.setCellData(i, "sInsurTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurTermCd"));
	            Ds_Trty.setCellData(i, "sPaymTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPaymTermCd"));
	        }
	    }
	    
	    //Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};

	//---------------------------------------------------------------------------
	// function 명 : btn_SearchCust_OnClick
	// 내용        : 스마트폰앱고객 버튼클릭시 처리
	//2014.12.09 추가 By SDJ (N1411-00267)
	//---------------------------------------------------------------------------
	scwin.btn_SearchCust_onclick = function() {
		var arg = "sUserID=" + util.getGdsValue("gUserID");
	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1"); //현재 선택된 피보험자
	    if (nFindRow < 0) {
	        alert("피보험자를 먼저 선택하시기 바랍니다.");
	        return false;
	    }
	    var bfInrpsCd = Ds_Pibo.getCellData(nFindRow, "sInrpsCd");
	    
	    var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
            var indata = {sUserID : util.getGdsValue("gUserID")};
			var popInfo = {
							"width"     : 635,
							"height"    : 390,  
							"indata"    : indata,
							"title"     : "대면채널조회"
							};
		    return wprom.popupOpen("/ui/cbso/CBSO009P.xml", popInfo);	
        });
        promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
			if (wconv.length(rtnValue) != 0) {
				var args = wconv.split(rtnValue, "^", true);
	        	if (args.length > 2) {
	            	medt_sCrtorCd.setValue(wconv.trim(args[2]));
	        	}
	        }
		});
	};
	
	/*-----------------------------------
	// function 명 : Trty_ValidationCheck
	// 내용        : 특약정보 체크 여부 
	-----------------------------------*/
	scwin.Trty_ValidationCheck = function(obj) {
		var validFlag = true;
	    btn_Medical.setDisabled(true);
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "N"); //실손가입 확인
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "N"); //정액가입 확인
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            //trace(wconv.length(obj.getCellData(i, "sInsurTermCd"))+"==="+obj.getCellData(i, "sInsurTermCd")+"==="+obj.getCellData(i, "sPaymTermCd"));
	            if (obj.getCellData(i, "chk") == "1") {
	                //보험기간코드
	                if (wconv.length(obj.getCellData(i, "sInsurTermCd")) == 0) {
	                    alert("특약 보험기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(3);
	                    //grd_sTrty.wconv.showEditor();
	                    validFlag = true;
	                    break;
	                }
	
	                //lfn_CompChangeCheck(obj, i, "sInsurTermCd");						
	                //납입기간코드
	                if (wconv.length(obj.getCellData(i, "sPaymTermCd")) == 0) {
	                    alert("특약 납입기간을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(4);
	                    //grd_sTrty.wconv.showEditor();
	                    validFlag = true;
	                    break;
	                }

	                //lfn_CompChangeCheck(obj, i, "sPaymTermCd");	
	                //특약가입금액
	                if (wconv.length(obj.getCellData(i, "nTrtyInsAmt")) == 0) {
	                    alert("특약 가입금액을 선택하세요");
	                    grd_sTrty.focus();
	                    //Ds_Trty.Row = i;
	                    //grd_sTrty.setFocusedCell(5);
	                    //grd_sTrty.wconv.showEditor();
	                    validFlag = true;
	                    break;
	                }
	                
	                //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
	                // 사전조회 무조건 활성화. (2013.01.31) 다시 체크 
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" || Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    btn_Medical.setDisabled(false); //사전조회버튼 활성화
	                }
	
	                //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "Y"); //실손가입 확인
	                }
	
	
	                //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "Y"); //사전조회버튼 활성화
	                }
	
	                //특약변경여부 체크
	                validFlag = false; //break;			
	            }
	            scwin.lfn_Trty_CompChangeCheck(Ds_Trty, Ds_Trty_Backup, i);
	        }
	    }
	
	    if (chkMedical == true && except != "calPrem" && except != "allPrem") {
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            //trace("hasPronCmpsTrty:"+Ds_Pibo_BackUp.getCellData(i, "hasPronCmpsTrty"));//실손가입 확인
	            //trace("MediFlag:"+Ds_Pibo_BackUp.getCellData(i, "MediFlag"));
	            //trace("hasFxamtCmps:"+Ds_Pibo_BackUp.getCellData(i, "hasFxamtCmps")); //정액담보 가입 확인
	            //trace("fixFlag:"+Ds_Pibo_BackUp.getCellData(i, "fixFlag"));
	            if ((Ds_Pibo_BackUp.getCellData(i, "hasPronCmpsTrty") == "Y" && Ds_Pibo_BackUp.getCellData(i, "MediFlag") == "N") || (Ds_Pibo_BackUp.getCellData(i, "hasFxamtCmps") == "Y" && Ds_Pibo_BackUp.getCellData(i, "fixFlag") == "N")) {
	                if (parent.sScanObjtYn == "Y") {
	                    if (scwin.lfn_checkMedical(i) == false) {
	                        validFlag = true;
	                        return validFlag;
	                    }
	                }
	                alert(Ds_Pibo.getCellData(i, "sInrpsName") + "님의 보험계약정보 사전조회를 실행하십시오.");
	                btn_Medical.focus();
	                validFlag = true;
	                return validFlag;
	            }
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_Trty_CompChangeCheck
	// 내용        : 특약 데이터  변경여부 체크
	-----------------------------------*/
	scwin.lfn_Trty_CompChangeCheck = function(obj, objBack, i) {
	    //기존엔 체크/해지 변경된경우 변경으로 봄
	    if (obj.getCellData(i, "chk") != objBack.getCellData(i, "chk") && obj.getCellData(i, "sScrnIndcYn") == "Y") {
	        modifyFlag = true;
	        //trace("objid=="+obj.getID()+"==colID==chk변경==modifyFlag=="+modifyFlag);		
	        return false;
	    } else {
	        if (obj.getCellData(i, "chk") == "1") {
	            //보험기간코드
	            if (obj.getCellData(i, "sInsurTermCd") != objBack.getCellData(i, "sInsurTermCd")) {
	                modifyFlag = true;
	                return false;
	            }
	
	            //납입기간코드
	            if (obj.getCellData(i, "sPaymTermCd") != objBack.getCellData(i, "sPaymTermCd")) {
	                modifyFlag = true;
	                return false;
	            }
	
	            //특약가입금액
	            if (obj.getCellData(i, "nTrtyInsAmt") != objBack.getCellData(i, "nTrtyInsAmt")) {
	                modifyFlag = true;
	                return false;
	            }
	        }
	    }
	    return true;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_checkMedical
	// 내용        : 사전조회 이미지등록여부조회및 check
	//---------------------------------------------------------------------------
	scwin.lfn_checkMedical = function(nRow) {
	    var result;
	    result = true;
	    //사전조회 체크시 대면일 경우 (가입설계 동의가 없는 경우만 이미지 등록여부 체크
	    if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(nRow, "sInrpsCd")) == "Y") {
	        //데이터셋 초기화
	        wconv.clear(DsWs_LTIDB01Cnt);
	        
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB011Task", "selMedicImageCheck", "", "");
		    MethodObj.setId("selMedicImageCheck");
		    MethodObj.setParam("sImagClsfCd", "JCD10001");
		    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow,"sInrpsCd"));
		    MethodObj.setParam("sValdDate", parent.sToday);
		    MethodObj.setParam("sUserID", util.getGdsValue("gUserID"));
		    MethodObj.setUrl("/contract/CBSC015MController.do");
			MethodObj.setXPath("//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt");
			MethodObj.addXPath("//WARNING");
			MethodObj.sync();
			MethodObj.send();
			
			// 오류처리
	        util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
	        if (DsWs_Warning.getRowCount() != 0){
	        	alert(DsWs_Warning.getCellData(0, "msg"));
	        	result = false;
	            return false;
	        }
	        util.copyM(DsWs_LTIDB01Cnt, _tranSync.getDsJson("LTIDB07Cnt"));
	        
	        if (wconv.toNumber(DsWs_LTIDB01Cnt.getCellData(0, "nCount")) == 0) {
	            alert(Ds_Pibo.getCellData(nRow, "sInrpsName") + "님의 보험계약사전조회동의서 스캔처리후 조회가능합니다.");
	            result = false;
	            return false;
	        }
	
	        //본인 스캔한 고객인지 체크 
	        if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
	            if (DsWs_LTIDB01Cnt.getCellData(0, "sSelfWrcsYn") == "N") {
	                alert(Ds_Pibo.getCellData(nRow, "sInrpsName") + "님의 보험계약사전조회동의서의 담당자 스캔처리후 조회가능합니다.");
	                result = false;
	                return false;
	            }
	        }
	    }
	    return result;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_getCUSAA42Info()
	// 내용        : 가입설계 동의여부 확인 
	//---------------------------------------------------------------------------
	scwin.lfn_getCUSAA42Info = function(insrdID) {
	    //신용정보 동의 23조 동의여부 확인	 
	    wconv.clear(DsWs_Search42);
	    var RejectYN = "";
	    
	    var MethodObj = new callService("com.inswave.customer.task.CustTask", "getHandlerCUSAA42Info", "", "");
	    MethodObj.setId("getHandlerCUSAA42Info");
	    MethodObj.setParam("sCustNo", insrdID);
	    MethodObj.setParam("sProductType", "3");
	    MethodObj.setParam("sHandlerID", (wconv.trim(parent.edt_sDoerUser.getValue())==""?parent.edt_sDoer.getValue():parent.edt_sDoerUser.getValue()));
	    MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//*/CUSAA42");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	    
	    //util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		DsWs_Search42.setJSON(_tranSync.getDsJson("CUSAA42"));	// dataset 데이터
	    
	    // 가입설계 동의 여부 체크 
	    if (DsWs_Search42.getCellData(0, "result") > 0) {
	        if (DsWs_Search42.getCellData(0, "sAgmReq") == "Y") {
	            RejectYN = "Y"; //유효일자가 지난경우 다시 받기. 해당 칼럼이 다 체크해줌
	        }
	    } else {
	        RejectYN = "Y"; //가입동의 거부
	    }
	    return RejectYN;
	};
	
	scwin.btn_CalcPrem_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_CalcPrem_OnClick, arguments);
	}
	
	//---------------------------------------------------------------------------
	// function 명 : btn_CalcPrem_OnClick
	// 내용        : 보험료계산 버튼클릭시 처리
	//---------------------------------------------------------------------------
	scwin.btn_CalcPrem_OnClick = function() {
	    scmb_plan = false; //플랜변경 확인 
	    CalcPremFlag = false; // 보험료 계산 플래그 
	    //간편설계는 가입설계 동의 여부 체크 제외
	    if (parent.sSimpleYn != "Y") {
	        //가입설계 동의 여부 체크 
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(i, "sInrpsCd")) == "Y") {
	                alert(Ds_Pibo.getCellData(i, "sInrpsName") + "님의 가입설계 동의여부를 확인하세요");
	                return;
	            }
	        }
	    }
	
		//동일피보험자 청약이력확인
		wconv.clear(DsWs_SsrtCarr);
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getSsrtCarrCnfm", "", "");
		MethodObj.setId("getSsrtCarrCnfm");
		MethodObj.setParam("sSsrtDate", Ds_LTIDA00.getCellData(0, "sSsrtDate"));
		MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(0, "sInrpsCd"));
		MethodObj.setParam("sDoer", parent.edt_sDoer.getValue());//취급자
		MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue());//사용인
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//vector/data/LTIEA01Carr");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }
		
		//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		DsWs_SsrtCarr.setJSON(_tranSync.getDsJson("LTIEA01Carr"));
		if (wconv.substr(Ds_Pibo.getCellData(0, "sInrpsCd"), 7, 6) != "000000") {
		    if (DsWs_SsrtCarr.getRowCount() > 0){
	            alert("최근 1개월 내에 동일한 피보험자로 다른 모집인의 청약이 있습니다.");
	        }
	    }
	    /*피보험자 상령일 체크*/
	    var insurAgeChk = false;
	    var msg = "";
	    gfn_getServerTime();//서버시간
		var sToday = wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);
		for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
//	        wconv.trace("상령일 : " + Ds_Pibo.getCellData(i, "nInrpsAge") + " | " + gfn_getInsAge(Ds_Pibo.getCellData(i, "sInrpsCd"), wconv.addDateSimple(sToday, 10)) + " | " + wconv.addDateSimple(sToday, 10) + " | " + Ds_Pibo.getCellData(i, "sInrpsCd"));
	        if (Ds_Pibo.getCellData(i, "nInrpsAge") != gfn_getInsAge(Ds_Pibo.getCellData(i, "sInrpsCd"), wconv.addDateSimple(sToday, 10))) {
	            insurAgeChk = true;
	            if (msg == "") {
	                msg = Ds_Pibo.getCellData(i, "sInrpsName");
	            } else {
	                msg = msg + "," + Ds_Pibo.getCellData(i, "sInrpsName");
	            }
	        }
	    }
	    
	    if (insurAgeChk == true) {
	        alert("10일이내 보험나이(상령일)이 변경되는 피보험자가 있습니다.(" + msg + ")");
	    }
	    
	    if (!scwin.lfn_Pibo_Trty_Check()){return;}
	        
	    if (!scwin.lfn_Pibo_Relation_Check()){return;}
	
	    //피보험자중 1명만 가입가능 특약체크
	    if (!scwin.lfn_Trty_Relation_OnlyOne(null, -1, "all")){return;}
	
	    //패키지 특약 가입 체크 //funcldh
	    if (scwin.lfn_Trty_Relation_PkgErr()){return;}

	    //비운전자 특약 가입 체크
	    if (scwin.lfn_Trty_NonDrv_chk()){return;}
	
	    //특약간 관계 체크(패키지체크) - 마이플랜에서 패키지 누락되는 경우가 발생하여 추가
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	    	if (util.getCellDataF(Ds_Trty, i, "chk") == "0") {
	            scwin.lfn_Trty_Relation_Pkg(Ds_Trty, util.getCellDataF(Ds_Trty, i, "sPkgCd"), false);
	        } else if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	            scwin.lfn_Trty_Relation_Pkg(Ds_Trty, util.getCellDataF(Ds_Trty, i, "sPkgCd"), true);
	        }
	    }
	
	    //보험료계산
	    scwin.fn_calPrem();
	
	    //대면일 경우 보험료 계산후 다음 메세지 팝업.
	    if(util.getGdsValue("gFaceSalesYN") == "Y" && parent.sSimpleYn == "Y" && CalcPremFlag ){
	        alert("간편설계로서 인수심사결과에 따라 청약내용 달라질 수 있습니다");
	    }
	
		if(parent.sSimpleYn == "N"){
			//세금우대 처리시 보험료 계산하면 초기화
		    parent.scwin.lfn_Tab_Req2_init();
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Pibo_Trty_Check
	// 내용        : 피보험자별 특약사항 체크
	//---------------------------------------------------------------------------
	scwin.lfn_Pibo_Trty_Check = function() {
	    var rtnValue = true;
	    var PiboTrtyCnt = 0;
	    //var trtyFilter = Ds_Trty.getFilterList();
		//Ds_Trty.clearFilter();
	    if (Ds_Pibo.getTotalRow() > 1) {
	        for (var i = 0; i < Ds_Pibo.getTotalRow(); i++) {
	            PiboTrtyCnt = 0;
	            for (var j = 0; j < Ds_Trty.getTotalRow(); j++) {
	            	if (Ds_Pibo.getCellData(i, "nInrpsSeqno") == util.getCellDataF(Ds_Trty, j, "nPsnPrprtGroupSeqno")) {
	                    PiboTrtyCnt++;
	                }
	            }
	            if (PiboTrtyCnt == 0) {
	                alert(Ds_Pibo.getCellData(i, "sInrpsName") + " 피보험자의 가입특약이 없습니다.");
	                rtnValue = false;
	                break;
	            }
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    return rtnValue;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Inrps_Relation_Check
	// 내용        : 피보험자의 나이 체크(주피의 나이가 가장 적어야 함)
	//---------------------------------------------------------------------------
	scwin.lfn_Pibo_Relation_Check = function() {
	    var nMinsrAge = 0;
	    var rtnValue = true;
	    var nMinsrCnt = 0;
	    if (Ds_Pibo.getRowCount() > 1) {
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if ((i == 0) && (Ds_Pibo.getCellData(i, "sMinsrRelnCd") != "10")) {
	                alert("첫번째 피보험자는 주피와의 관계가 [본인]이어야 합니다.");
	                rtnValue = false;
	                return rtnValue;
	            }
	            
	            //주피의 나이를 저장한다.
	            if (Ds_Pibo.getCellData(i, "sMinsrRelnCd") == "10") {
	                nMinsrAge = Ds_Pibo.getCellData(i, "nInrpsAge");
	                nMinsrCnt++;
	            }
	        }
	        if (nMinsrCnt > 1) {
	            alert("주피와의관계 [본인]은 2명 이상일수 없습니다.");
	            rtnValue = false;
	            return rtnValue;
	        }
	        if ((sGdCd == "2106" && parent.edt_sGnrzCd.getValue() == "01") 
	        || (sGdCd == "2109" && parent.edt_sGnrzCd.getValue() == "01") 
	        || (sGdCd == "2112" && parent.edt_sGnrzCd.getValue() == "01") 
	        || (sGdCd == "2115" && parent.edt_sGnrzCd.getValue() == "01") 
	        || (sGdCd == "2119" && parent.edt_sGnrzCd.getValue() == "01") 
	        || (sGdCd == "2125" && parent.edt_sGnrzCd.getValue() == "01") //2018 상품개정
	        || (sGdCd == "2307" && parent.edt_sGnrzCd.getValue() == "02") 
	        || (sGdCd == "2308" && parent.edt_sGnrzCd.getValue() == "02") 
	        || (sGdCd == "2309" && parent.edt_sGnrzCd.getValue() == "02") 
	        || (sGdCd == "2310" && parent.edt_sGnrzCd.getValue() == "02") 
	        || (sGdCd == "2311" && parent.edt_sGnrzCd.getValue() == "02") 
	        || (sGdCd == "2312" && parent.edt_sGnrzCd.getValue() == "02")
	        || (sGdCd == "2313" && parent.edt_sGnrzCd.getValue() == "02")  //2018 상품개정
	        || (sGdCd == "2601") || (sGdCd == "2602") || (sGdCd == "2603") 
	        || (sGdCd == "2604") || (sGdCd == "2605") || (sGdCd == "2606") //2018 상품개정 
	        || (sGdCd == "2107") 
	        || (sGdCd == "2110") || (sGdCd == "2116") || (sGdCd == "2113") 
	        || (sGdCd == "2400") || (sGdCd == "2401") || (sGdCd == "2402") // 2018 상품개정 
	        || (sGdCd == "2117") || (sGdCd == "2123") // 2018 상품개정
	        || (sGdCd == "2120") || (sGdCd == "2126") // 2018 상품개정
	        || (sGdCd == "2122")
	        || (sGdCd == "2128") // 2018 상품개정
	        ) {
	            for (var j = 0; j < Ds_Pibo.getRowCount(); j++) {
	                if (eval(nMinsrAge) > eval(Ds_Pibo.getCellData(j, "nInrpsAge"))) {
	                    alert("주피보험자의 나이가 종피보험자의 나이보다 적어야합니다.");
	                    rtnValue = false;
	                }
	            }
	        }
	    }
	    return rtnValue;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_Relation_PkgErr
	// 내용        : 특약간 관계 체크(패키지체크)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_Relation_PkgErr = function() {
	    var sPkgFlag = ""; //기본 패키지 체크 구분
	    var sBascPkgCd = ""; //기본 패키지 코드 
	    var sPkgName = ""; //패키지 명칭
	    //패키지체크
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //기본 패키지 체크여부와 패키지 코드값을 찾는다.		
	        if (wconv.length(util.getCellDataF(Ds_Trty, i, "sPkgCd")) > 0) {
	            if (util.getCellDataF(Ds_Trty, i, "BascSlctFlagCd") == "1") {
	                if (util.getCellDataF(Ds_Trty, i, "chk") != "1") {
	                    sPkgFlag = "1";
	                    sBascPkgCd = util.getCellDataF(Ds_Trty, i, "sPkgCd");
	                    break;
	                }
	            }
	        }
	    }
	    if (sPkgFlag == "1") {
	        //패키지체크(기본패키지의 명칭 확인)
	        for (var j = 0; j < Ds_Trty.getRowCount(); j++) {
	            //패키지값과 같은 그룹코드값을 찾는다.		
	            if (wconv.length(Ds_Trty.getCellData(j, "sPkgCd")) > 0 && Ds_Trty.getCellData(j, "sPkgCd") == sBascPkgCd) {
	                sPkgName = sPkgName + Ds_Trty.getCellData(j, "TrtyHnglAbbName") + ",";
	            }
	        }
	        alert("기본패키지 특약(" + wconv.substr(sPkgName, 0, wconv.length(sPkgName) - 1) + ")은 선택 필수입니다");
	        return true;
	    }
	    return false;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_NonDrv_chk
	// 내용        : 비운전자 가입특약 체크
	// 수정        : 비운전자 특약 추가로 운전자의 경우 비운전자 특약 가입 제어 체크 추가
	//               (N1511-00187:2016년 장기보험 제도개선에 따른 전산개발 요청)
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_NonDrv_chk = function() {
	    var sDrveFlagCd = "";
	    for (var j = 0; j < Ds_Pibo.getTotalRow(); j++) {
	        sDrveFlagCd = Ds_Pibo.getCellData(j, "sDrveFlagCd"); //운전용도
	        if (sDrveFlagCd == "3") {
	            for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	                if (Ds_Pibo.getCellData(j, "nInrpsSeqno") == util.getCellDataF(Ds_Trty, i, "nPsnPrprtGroupSeqno")) {
	                    if ((util.getCellDataF(Ds_Trty, i, "DrveFlag") == "1") && (util.getCellDataF(Ds_Trty, i, "chk") == "1")) {
	                        alert(Ds_Pibo.getCellData(j, "sInrpsName") + " 피보험자의 " + util.getCellDataF(Ds_Trty, i, "TrtyHnglAbbName") + " 특약은 비운전자 가입이 불가합니다.");
	                        return true;
	                    }
	                }
	            }
	        }
	        if ((sDrveFlagCd == "1") || (sDrveFlagCd == "2")) {
	            for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	                if (Ds_Pibo.getCellData(j, "nInrpsSeqno") == util.getCellDataF(Ds_Trty, i, "TrtyHnglAbbName")) {
	                    if ((util.getCellDataF(Ds_Trty, i, "DrveFlag") == "2") && (util.getCellDataF(Ds_Trty, i, "chk") == "1")) {
	                        alert(Ds_Pibo.getCellData(j, "sInrpsName") + " 피보험자의 " + util.getCellDataF(Ds_Trty, i, "TrtyHnglAbbName") + " 특약은 운전자 가입이 불가합니다.");
	                        return true;
	                    }
	                }
	            }
	        }
	    }
	    return false;
	};
	
	// function 명 : lfn_deleteRow
	// 내용        : 보험자 삭제 행삭제
	//---------------------------------------------------------------------------
	scwin.lfn_deleteRow = function() {
	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	    if (nFindRow == 0) {
	        alert("첫번째 피보험자는 삭제할 수 없습니다.");
	        return;
	    }
	    if (nFindRow < Ds_Pibo.getRowCount() - 1) {
	        alert("마지막 피보험자를 먼저 삭제 하세요.");
	        return;
	    }
	    //Ds_Pibo.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    var arrpibo = util.getDataListEvent(Ds_Pibo);
	    util.removeAllDataListEvent(Ds_Pibo);
	    
	    //피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	    scwin.lfn_deleteEtc(nFindRow, "Y");
	
	    //특약 삭제
	    scwin.lfn_ClearTrty(nFindRow);
	    
	    //util.deleteRow(Ds_Pibo, nFindRow); // Dataset에 빈 Record한줄 추가
	    Ds_Pibo.removeRow(nFindRow);
	    //util.deleteRow(Ds_Pibo_BackUp, nFindRow);
	    Ds_Pibo_BackUp.removeRow(nFindRow);
	    
	    scwin.Grd_Pibo_OnCellPosChanged(nFindRow - 1, 0, nFindRow - 1, -1);
	    //Ds_Pibo.FireEvent = true;
	    util.setDataListEvent(Ds_Pibo, arrpibo);
	    //MS텝 정보 출력
	    if(parent.sSimpleYn != "Y"){
	    	parent.scwin.lfn_set_Tab_Info("S1", "T1");
    	}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_ClearTrty
	// 내용        : 해당 피보험자의 특약을 데이터셋에서 삭제
	//---------------------------------------------------------------------------
	scwin.lfn_ClearTrty = function(nRow) {
	    //grd_sTrty.Redraw = false;
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
	    util.removeAllDataListEvent(Ds_Trty);
	    
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    for (var k = Ds_Trty.getRowCount() - 1; k >= 0; k--) {
	        if (Ds_Trty.getCellData(k, "nPsnPrprtGroupSeqno") == Ds_Pibo.getCellData(nRow, "nInrpsSeqno")) {
	            util.removeRow(Ds_Trty, k);
	            util.removeRow(Ds_Trty_Backup, k);
	        }
	    }
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    
	    //Ds_Trty.FireEvent = true;
	    //grd_sTrty.Redraw = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_calPrem
	// 내용        : 보험료계산
	//---------------------------------------------------------------------------
	scwin.fn_calPrem = function(obj) {
	    //trace("계약자사항(전)==> " + Ds_LTIDA03.SaveXML());
	    btn_Medical.setDisabled(true);
	    except = "calPrem";
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	    	if ((Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") && (parent.edt_sGdCd.getValue() == "2312" || parent.edt_sGdCd.getValue() == "2313")){
	            alert("영업용운전자는 가입금지입니다");
	            return;
	        }
	    }
	
	    // 보험중에 복사 제외 (LDH 2012.5.21)
	    if ((wconv.findRow(Ds_Trty, "TrtyCd", "22011801") != "-1") && (Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "nTrtyInsAmt") == 3000000) && (Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "chk") == "1")) {
	        if (obj != null && obj != undefined && obj == "copy") {
	            alert("복사할수 없는 특약(" + Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "TrtyHnglAbbName") + ")이 있습니다");
	        } else {
	            alert("보험료 계산 문제 특약(" + Ds_Trty.getCellData(wconv.findRow(Ds_Trty, "TrtyCd", "22011801"), "TrtyHnglAbbName") + ")이 있습니다");
	        }
	        return;
	    }
	    
	    // 청약진행중인 가입설계 보험료 계산 불가 처리.
	    if (parent.sSimpleYn == "Y" && (obj != null && obj != undefined && obj != "copy") && wconv.length(parent.medt_PlanNo.getValue()) > 0) {
	        parent.scwin.lfn_ProgRankCd();
	        if (wconv.length(parent.sSimpleProg) > 0) {
	            alert("청약진행중인 가입설계입니다 \n간편산출을 할수 없습니다.");
	            return;
	        }
	    }
	    
	    util.insertColumn(Ds_LTIDA00, [["nMinPremRate","nMinPremRate","text"]
	    , ["sRenwlAvaYn","sRenwlAvaYn","text"]
	    ]);
	    util.setCompBindRefresh(Ds_LTIDA00.getID());
		util.setRowPosition(Ds_LTIDA00, 0);

	   	//해당 plan이 전체 갱신대상인지 확인
	    Ds_LTIDA00.setCellData(0, "gUserID", util.getGdsValue("gUserID"));
	    Ds_LTIDA00.setCellData(0, "gUserIP", util.getGdsValue("gUserIP"));
	    Ds_LTIDA00.setCellData(0, "sSaleChnl", parent.sSaleChnl); //판매채널구분코드
	    Ds_LTIDA00.setCellData(0, "sSaleChnlDtal", parent.sSaleChnlDtal); //판매채널상세코드
	    Ds_LTIDA00.setCellData(0, "sDoer", parent.edt_sDoer.getValue()); //취급자
	    Ds_LTIDA00.setCellData(0, "sDoerUser", parent.edt_sDoerUser.getValue()); //최초취급자사용인	
	    Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    Ds_LTIDA00.setCellData(0, "sApplPlanCd", cmb_Plan.getValue()); //플랜코드(화면에서 선택된 플랜을 가져감)
	    Ds_LTIDA00.setCellData(0, "sApplPlanName", cmb_Plan.getText()); //플랜명
	    Ds_LTIDA00.setCellData(0, "sGdCd", parent.edt_sGdCd.getValue()); //상품코드
	    Ds_LTIDA00.setCellData(0, "sGdNm", parent.edt_sGdCdNm.getValue()); //상품명
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드
	    Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20"); //설계진행단계코드(보험료산출(인))
	    Ds_LTIDA00.setCellData(0, "sPsnPrprtGroupFlgcd", "1"); //인물단체구분코드(인)
	    Ds_LTIDA00.setCellData(0, "sGdTypeFlgCd", DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd")); //상품유형구분
	    Ds_LTIDA00.setCellData(0, "sBunsMetdDocuClsfCd", DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd")); //사업실적표분류코드
	    Ds_LTIDA00.setCellData(0, "sApplDclrRato", DsWs_PrdAttr.getCellData(0, "ApplDclrRato")); //적용공시이율
	    Ds_LTIDA00.setCellData(0, "sGdFlgcd", DsWs_PrdAttr.getCellData(0, "GdFlgcd"));
	    Ds_LTIDA00.setCellData(0, "sDvdnFlagCd", DsWs_PrdAttr.getCellData(0, "DvdnFlagCd")); //배당구분코드
	    Ds_LTIDA00.setCellData(0, "sPpayAvaYn", DsWs_PrdAttr.getCellData(0, "PpayAvaYn")); //선납가능여부
	    Ds_LTIDA00.setCellData(0, "sHsecFlagCd", DsWs_PrdAttr.getCellData(0, "HsecFlagCd")); //가계구분코드
	    Ds_LTIDA00.setCellData(0, "sGroupCrAdmNo", Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo")); //단체관리번호
	    Ds_LTIDA00.setCellData(0, "sBsmnRgstNo", Ds_LTIEA10.getCellData(0, "sGroupCd")); //단체코드
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrGdYn", DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn")); //세금우대상품여부
	    Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "");
	    Ds_LTIDA00.setCellData(0, "nMaxPrem", nMaxPrem);
	    Ds_LTIDA00.setCellData(0, "nInrpsPsct", Ds_Pibo.getRowCount()); //피보험자인원수
	    Ds_LTIDA00.setCellData(0, "sRenwlAvaYn", DsWs_Plan.getCellData(0, "sRenwlAvaYn")); //전체 갱신 plan인지 구분
	    Ds_LTIDA00.setCellData(0, "sSsrtDate", parent.cal_sSsrtDate.getValue());
	    Ds_LTIDA00.setCellData(0, "sInsurStrtdate", cal_sInsurStrtdate.getValue());
	    Ds_LTIDA00.setCellData(0, "sInsurEndDate", cal_sInsurEndDate.getValue());
	    
	    //간편산출인 경우 간편 산출 구분자 셋팅.	
	    if (parent.sSimpleYn == "Y") {
	        util.insertColumn(Ds_LTIDA00, [
	            [
	                "sSimpleYn",
	                "sSimpleYn",
	                "text"
	            ]
	        ]);
	        Ds_LTIDA00.setCellData(0, "sSimpleYn", "Y");
	        for (var k = 0; Ds_Pibo.getRowCount() > k; k++) {
	            //간편산출에서 직업코드가 없는 경우 
	            if (wconv.length(Ds_Pibo.getCellData(k, "sJobCd")) < 1) {
	                Ds_Pibo.setCellData(k, "sJobCd", "000000"); // 간편산출의 경우 강제 셋팅(000000) 
	            }
	
	            //간편설계에서 주민번호가 들어오는 경우  주민번호 0 처리 N1405-00243
	            if (wconv.right(Ds_Pibo.getCellData(k, "sInrpsCd"), 6) != "000000") {
	                Ds_Pibo.setCellData(k, "sInrpsCd", wconv.left(Ds_Pibo.getCellData(k, "sInrpsCd"), 7) + "000000");
	            }
	        }
	    }
	    if (parent.medt_PlanNo.getValue() == "") {
	        Ds_LTIDA00.setCellData(0, "sCrNo", ""); //계약번호
	        Ds_LTIDA00.setCellData(0, "sCmMetd", ""); //입금방법
	    }
	    
	    if (chk_sPsnGroupFlgcd.getValue() == "1") {
	        Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "20");
	        Ds_LTIDA00.setCellData(0, "sGroupCrAdmNo", Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo")); //단체계약관리번호
	        Ds_LTIDA00.setCellData(0, "sBsmnRgstNo", Ds_LTIEA10.getCellData(0, "sBsmnRgstNo")); //사업자번호
	        Ds_LTIDA00.setCellData(0, "sInsType", "40"); //가입유형
	    } else {
	        Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "10");
	        Ds_LTIDA00.setCellData(0, "sInsType", "10"); //가입유형
	    }
	    //util.setCompBindRefresh(Ds_LTIDA00.getID());
		util.setRowPosition(Ds_LTIDA00, 0);
	
	    //정기중도인출
	    if (DsWs_PrdAttr.getCellData(0, "PeriMwayWdraAvaYn") == "Y") {
	        Ds_LTIDA00.setCellData(0, "sPeriMwayWdraYn", chk_sPeriMwayWdraYn.getValue());
	        if (chk_sPeriMwayWdraYn.getValue() == "Y") {
	            Ds_LTIDA00.setCellData(0, "sPeriMwayRqstDate", parent.cal_sSsrtDate.getValue());
	        } else {
	            Ds_LTIDA00.setCellData(0, "sPeriMwayRqstDate", "");
	        }
	    } else {
	        Ds_LTIDA00.setCellData(0, "sPeriMwayWdraYn", "");
	        Ds_LTIDA00.setCellData(0, "sPeriMwayRqstDate", "");
	    }
	
	    Ds_LTIDA00.setCellData(0, "sScanObjtYn", (util.getGdsValue("gFaceSalesYN") == "Y"?util.getGdsValue("gFaceSalesYN"):"N")); //대면일때 스캔대상 = Y
	    parent.sScanObjtYn = (util.getGdsValue("gFaceSalesYN")=="Y"?util.getGdsValue("gFaceSalesYN"):"N");
	
	    //밸리데이션 체크
	    if (obj == null || obj == undefined || obj != "copy") {
	        if (scwin.lfn_ValidationCheck("all")) {
	            return false;
	        }
	    }
	
	    //로딩처리
	    //scwin.lfn_ShowWaitImage(true);
	    //Idle();
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB010Task", "setBasicPibo", "", "");
	    MethodObj.setId("setBasicPibo");
	    
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        //설계번호 셋팅
	        Ds_Pibo.setCellData(i, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo"));
	        //피보험자에 플랜세팅
	        Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText());
	        //피보험자 일련번호
	        Ds_Pibo.setCellData(i, "nInrpsSeqno", i + 1);
	        
	        //피보험자 운전용도
			Ds_Pibo.setCellData(i, "sPiboDrivCd", Ds_Pibo.getCellData(0, "sDrveFlagCd"));
	    }
	    Ds_LTIDA00.setCellData(0, "sDrivFlagCd", Ds_Pibo.getCellData(0, "sDrveFlagCd"));
	    
	    //체크된 특약만 보관
	    scwin.lfn_make_Ds_Trty_Save();
	    MethodObj.setParam("sUserId", util.getGdsValue("gUserID"));
		//계약기본사항을 담는다
		MethodObj.addSingleData("LTIDA00", "LTIDA00", Ds_LTIDA00.getID());// 계약기본사항정보
		if(Ds_LTIEA10.getRowCount() < 1){Ds_LTIEA10.insertRow();}
		MethodObj.addSingleData("LTIEA10", "LTIEA10", Ds_LTIEA10.getID());// 단체취급정보
		wconv.clear(Ds_LTIDA03);
		util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
		MethodObj.addSingleData("LTIDA03", "LTIDA03", "Ds_LTIDA03:A");
		MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID());//피보험자사항
		MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID());//특약사항정보담음
		/*setData*/
		//복사건일때 과거번호, 과거청약일을 가지고감(질의서, 전산심사테이블 복사를위해)
	    //과거증번
	    util.jSonDsCreate([{"oldPlanNo":""}], "DSoldPlanNo");
		$w.data["DSoldPlanNo"].setCellData(0, "oldPlanNo", oldPlanNo);
		MethodObj.addSingleData("oldPlanNo", "oldPlanNo", "DSoldPlanNo:A", "type02");
	    
	    //과거청약일
	    util.jSonDsCreate([{"oldSsrtDate":""}], "DSoldSsrtDate");
	    $w.data["DSoldSsrtDate"].setCellData(0, "oldSsrtDate", oldSsrtDate);
	    MethodObj.addSingleData("oldSsrtDate", "oldSsrtDate", "DSoldSsrtDate:A", "type02");
	    
	    //플랜에서 나온 영업보험료
	    util.jSonDsCreate([{"nBussPrem":""}], "DSnBussPrem");
	    $w.data["DSnBussPrem"].setCellData(0, "nBussPrem", DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "nBussPrem"));
	    MethodObj.addSingleData("nBussPrem", "nBussPrem", "DSnBussPrem:A", "type02");
		
		MethodObj.setHashTable();
		wconv.clear(DsWs_LTIDA00);
	    wconv.clear(DsWs_Pibo);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(Ds_Trty_Backup); //특약 백업용	
		
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");//기본사항
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01");//피보험자 xpath 변경 
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02");//특약 xpath 변경
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15");//인수제한사항 xpath변경
		MethodObj.addXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");//단체사항
		//MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA03']/LTIDA03");//계약자사항
		MethodObj.addXPath("//WARNING");
		
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	
        	util.setCompBindRefresh(Ds_LTIDA00.getID());
			util.setRowPosition(Ds_LTIDA00, 0);
		
        	return;
        } else {
		    //util.interfaceKey(_tranSync.result.serviceDs);
		    DsWs_LTIDA00.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
			DsWs_Pibo.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01"));
			DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"));
	        DsWs_LTIDA15.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15"));
	        DsWs_LTIEA10.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIEA10']/LTIEA10"));
	        //계약기본정보의 보험료를 세팅
	        //wconv.copy(Ds_LTIDA00, DsWs_LTIDA00);
	        util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON());
	        
	        //피보험자 그리드로 옮긴다.
	        //trace("DsWs_Pibo=="+DsWs_Pibo.SaveXML());
	        //단체관리복사
	        //wconv.copy(Ds_LTIEA10, DsWs_LTIEA10);
	        util.copyM(Ds_LTIEA10, DsWs_LTIEA10.getAllJSON());
	        //인수제한사항 세팅
	        //wconv.copy(Ds_LTIDA15, DsWs_LTIDA15);
	        util.copyM(Ds_LTIDA15, DsWs_LTIDA15.getAllJSON());
	        //trace("DsWs_Pibo:" + DsWs_Pibo.SaveXML());
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            //DsWs_Pibo 해당된 피보험자만 세팅한다.
	            wconv.mi_copyRow(DsWs_Pibo.getID(), i, Ds_Pibo.getID(), i);
	            wconv.mi_copyRow(DsWs_Pibo.getID(), i, Ds_Pibo_BackUp.getID(), i);
	        }
	        
	        //특약정보중 체크된것의 특약코드를 찾아서 보험료를 넣어준다.
	        if (Ds_Trty.getTotalRow() > 0) {
	        	var trtyFilter = Ds_Trty.getFilterList();
	    		Ds_Trty.clearFilter();
	            for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	                if (Ds_Trty.getCellData(i, "chk") == "1") {
	                    //var nFondTrtyRow = DsWs_Trty.wconv.searchRow("sTrtyCd='" + Ds_Trty.getCellData(i, "sTrtyCd") + "' && nPsnPrprtGroupSeqno=='" + Ds_Trty.getCellData(i, "nPsnPrprtGroupSeqno") + "'");
	                    //var nFondTrtyRow = wconv.jsearchRow(DsWs_Trty, "sTrtyCd='" + Ds_Trty.getCellData(i, "sTrtyCd") + "' && nPsnPrprtGroupSeqno=='" + Ds_Trty.getCellData(i, "nPsnPrprtGroupSeqno") + "'");
	                    //var nFondTrtyRow = -1;
	                    wconv.filter(DsWs_Trty, "sTrtyCd == '"+Ds_Trty.getCellData(i, "sTrtyCd")+"' && nPsnPrprtGroupSeqno == '"+ Ds_Trty.getCellData(i, "nPsnPrprtGroupSeqno")+"'");
                    	if(DsWs_Trty.getRowCount() > 0){
                    		//가입시보장보험료
		                    Ds_Trty.setCellData(i, "nGrntPrem", DsWs_Trty.getCellData(0, "nGrntPrem"));
		                    //예상보장영업보험료  
		                    Ds_Trty.setCellData(i, "nExptGrntBussPrem", DsWs_Trty.getCellData(0, "nExptGrntBussPrem"));
		                    //저장하면서 추가된 사항 복사한다.
		                    Ds_Trty.setCellData(i, "sPlanNo", DsWs_Trty.getCellData(0, "sPlanNo")); //설계번호		
		                    Ds_Trty.setCellData(i, "sPsnPrprtGroupFlgcd", DsWs_Trty.getCellData(0, "sPsnPrprtGroupFlgcd")); //인물단체구분코드
		                    Ds_Trty.setCellData(i, "sGdCd", DsWs_Trty.getCellData(0, "sGdCd")); //상품코드
		                    Ds_Trty.setCellData(i, "nPsnPrprtGroupSeqno", DsWs_Trty.getCellData(0, "nPsnPrprtGroupSeqno")); //인물단체일련번호
		                    Ds_Trty.setCellData(i, "nCrChngNo", DsWs_Trty.getCellData(0, "nCrChngNo")); //계약변경번호
		                    Ds_Trty.setCellData(i, "sInsurStrtdate", DsWs_Trty.getCellData(0, "sInsurStrtdate")); //보험시작일자
		                    Ds_Trty.setCellData(i, "sInsurEndDate", DsWs_Trty.getCellData(0, "sInsurEndDate")); //보험종료일자
		                    Ds_Trty.setCellData(i, "sTrtyStatCd", DsWs_Trty.getCellData(0, "sTrtyStatCd")); //
		                    Ds_Trty.setCellData(i, "nTrtyOrdr", DsWs_Trty.getCellData(0, "nTrtyOrdr")); //특약순서
		                    Ds_Trty.setCellData(i, "sBascSlctFlagCd", DsWs_Trty.getCellData(0, "sBascSlctFlagCd")); //기본선택구분코드
		                    Ds_Trty.setCellData(i, "sAutoRenwlAvaYn", DsWs_Trty.getCellData(0, "sAutoRenwlAvaYn")); //자동갱신가능여부
		                    Ds_Trty.setCellData(i, "sGrntAccuFlagCd", DsWs_Trty.getCellData(0, "sGrntAccuFlagCd")); //보장적립구분코드
		                    Ds_Trty.setCellData(i, "RenwlUseCrFlagCd", DsWs_Trty.getCellData(0, "RenwlUseCrFlagCd")); //갱신구분코드
		                    Ds_Trty.setCellData(i, "RenwlTrtyCd", DsWs_Trty.getCellData(0, "RenwlTrtyCd")); //갱신특약코드
		                    Ds_Trty.setCellData(i, "sRenwlUseCrFlgcd", DsWs_Trty.getCellData(0, "RenwlUseCrFlagCd")); //갱신구분코드
		                    Ds_Trty.setCellData(i, "sRenwlTrtyCd", DsWs_Trty.getCellData(0, "RenwlTrtyCd")); //갱신특약코드
		                    Ds_Trty.setCellData(i, "TrtyTypeCd", DsWs_Trty.getCellData(0, "TrtyTypeCd")); //특약유형코드
		                    Ds_Trty.setCellData(i, "nAccuPrem", DsWs_Trty.getCellData(0, "nAccuPrem")); //적립보험료					
		                    Ds_Trty.setCellData(i, "nRealInsurTerm", DsWs_Trty.getCellData(0, "nRealInsurTerm")); //실보험기간
		                    Ds_Trty.setCellData(i, "nRealPaymTerm", DsWs_Trty.getCellData(0, "nRealPaymTerm")); //실납입기간
		                    Ds_Trty.setCellData(i, "nEndAge", DsWs_Trty.getCellData(0, "nEndAge")); //만기연령
		                    Ds_Trty.setCellData(i, "nPaymAge", DsWs_Trty.getCellData(0, "nPaymAge")); //납입연령					
		                    Ds_Trty.setCellData(i, "sGnrzCd", DsWs_Trty.getCellData(0, "sGnrzCd")); //종형코드					
		                    Ds_Trty.setCellData(i, "nTrtyPrem", DsWs_Trty.getCellData(0, "nTrtyPrem")); //특약보험료					
		                    Ds_Trty.setCellData(i, "sResvAmtKey", DsWs_Trty.getCellData(0, "sResvAmtKey")); //준비금
		                    if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "N") {
		                        Ds_Trty.setCellData(i, "sPaymTermCd", DsWs_Trty.getCellData(0, "sPaymTermCd")); //납입기간코드					
		                        Ds_Trty.setCellData(i, "sInsurTermCd", DsWs_Trty.getCellData(0, "sInsurTermCd")); //보험기간코드
		                    }
                    	}
	                    DsWs_Trty.removeColumnFilterAll();
	                }
	            }
	            for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	        }
	        nMaxPrem = Ds_LTIDA00.getCellData(0, "nMaxPrem");
	    }
	    //trace("Ds_Trty : " + Ds_Trty.SaveXML());
	    //로딩처리
	    //scwin.lfn_ShowWaitImage(false);
		
		util.setCompBindRefresh(Ds_LTIDA00.getID());
		util.setRowPosition(Ds_LTIDA00, 0);
		
		//trace("+++--++"+ Ds_Trty.savexml());// 
	    if (parent.medt_PlanNo.getValue() == "") {
	        //대리점일때 대리점 이력생성	
	        if (util.getGdsValue("gUserDuty") == "30" || util.getGdsValue("gUserDuty") == "33" || util.getGdsValue("gUserDuty") == "35") {
	            //gfn_insertAgencyHistory(SODJ_AgencyHistory, DODJ_AgencyHistory, "DsWs_AgencyHistory", DsWs_LTIDA00.getCellData(0, "sPlanNo"), Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sMinsrRelnCd", "10"), "sInrpsCd"), parent.edt_sGdCdNm.getValue(), "2"); //sApplyStat 2:보험료산출, 청약복사
	        }
	        alert("청약번호 " + DsWs_LTIDA00.getCellData(0, "sPlanNo") + "로 보관되었습니다.");
	        parent.medt_PlanNo.setValue(DsWs_LTIDA00.getCellData(0, "sPlanNo"));
	    }
	    
		// 이력저장(산출)
	    parent.scwin.saveHistory("2");
	
	    //가입설계서 발행버튼 활성화
	    btn_PrintAgmt.setDisabled(false);
	    btn_PrintInfo.setDisabled(false);
	    
	    if (Ds_LTIDA15.getRowCount() > 0) {
	    	//btn_Insu.Color = "red";
	    	$("#btn_Insu").find("a").css("color", "red");
	        if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
	            alert("인수금지 대상입니다. 인수제한사유를 확인하세요");
	            btn_PrintAgmt.setDisabled(true);
	            btn_PrintInfo.setDisabled(true);
	        }
	    }
	    //MS 복사하기 위해 필터 제거
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    //피보험자정보세팅
	    //DsWs_Pibo.copy("DsWs_Pibo");
	    //wconv.copy(parent.Ds_Pibo, Ds_Pibo);
	    //wconv.copy(parent.Ds_Trty, Ds_Trty);
	    //wconv.copy(parent.Ds_LTIDA15, Ds_LTIDA15);
	    parent.util.copyM(parent.Ds_Pibo, Ds_Pibo.getAllJSON());
	    parent.util.copyM(parent.Ds_Trty, Ds_Trty.getAllJSON());
	    parent.util.copyM(parent.Ds_LTIDA15, Ds_LTIDA15.getAllJSON());
	    
	    //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	    //wconv.copy(Ds_Trty_Backup, Ds_Trty);
	    util.copyM(Ds_Trty_Backup, Ds_Trty.getAllJSON());
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nInrpsSeqno") + "'");
	    
	    modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	    CalcPremFlag = true;
	    
	    //보험료 완료시 과거청약번호 clear
	    oldPlanNo = "";
	    oldSsrtDate = "";
	    except = "";
	
	    //trace("계약자사항(후)==> " + Ds_LTIDA03.SaveXML());
	    //개인정보 조회 이력 쌓기
	    gfn_LogCreditInfoVt(Ds_Pibo, "", "I", "sInrpsCd");
	};
	
	/*-----------------------------------
	// function 명 : lfn_make_Ds_Trty_Save
	// 내용        : 산출을 위해 해당피보험자의 특약만 보관
	-----------------------------------*/
	scwin.lfn_make_Ds_Trty_Save = function() {
	    //Ds_Trty_Save.removeAll();
	    wconv.clear(Ds_Trty_Save);
	    //var trtyFilter = Ds_Trty.getFilterList();
	    //Ds_Trty.clearFilter();
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	    	if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	            util.appendRow(Ds_Trty_Save);
	            for (var j = 0; j < Ds_Trty.getTotalCol(); j++) {
	                Ds_Trty_Save.setCellData((Ds_Trty_Save.getRowCount() - 1), Ds_Trty.getColumnID(j), util.getCellDataF(Ds_Trty, i, Ds_Trty.getColumnID(j)));
	            }
	        }
	    }
	    //for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	
	    //갱신plan의 경우 갱신주기 셋팅 체크 (N1404-00314 :20140425)
	    //갱신플랜의 경우 해당 특약 모두를 갱신 주기를 보기 주기로 변경 (2014.04.01)
	    if (DsWs_Plan.getCellData(0, "sRenwlAvaYn") == "Y") {
	        for (var k = 0; k < Ds_Trty_Save.getRowCount(); k++) {
	            if ((Ds_Trty_Save.getCellData(k, "sAutoRenwlCyclCd") != wconv.substr(DsWs_InsurTerm.getCellData(0, "sInsurTermCd"), 1, 3)) || (Ds_Trty_Save.getCellData(k, "AutoRenwlCyclCd") != wconv.substr(DsWs_InsurTerm.getCellData(0, "sInsurTermCd"), 1, 3))) {
	                Ds_Trty_Save.setCellData(k, "sAutoRenwlCyclCd", wconv.substr(DsWs_InsurTerm.getCellData(0, "sInsurTermCd"), 1, 3));
	                Ds_Trty_Save.setCellData(k, "AutoRenwlCyclCd", wconv.substr(DsWs_InsurTerm.getCellData(0, "sInsurTermCd"), 1, 3));
	            }
	        }
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_ShowWaitImage
	// 내용        : 엑셀로드시 로딩처리
	-----------------------------------*/
	var gv_bShowImage = false;
	scwin.lfn_ShowWaitImage = function(bFlag) {
	    if (gv_bShowImage == false) {
	        //var strProp = 'Height="60" Left="0" Visible="False" Top="0" Width="300"';
	        //Create("Div","div_wait",strProp);
	        //var strContents = '<Contents>\n';
	        //strContents += '<Shape Bottom="90" Height="60" Id="shp_SearchBoder" Left="0" LineColor="INACTIVECAPTION" LineWidth="5" Right="300" TabOrder="101" RoundHeight="0" RoundUnit="Pixel" RoundWidth="0" Top="0" Type="RoundRect" Width="300"></Shape>\n';
	        //strContents += '<Image Height="20" Id="Image0" ImageID="IMAGE::dataProcess.gif" Left="0" Left="23" Top="56" Width="255"></Image>\n';
	        //strContents += '<Static Align="Center" Font="굴림체,9,Bold" Height="13" Id="st_title01" Left="23" TabOrder="102" Text="데이터&#32;처리중" Top="13" Width="255"></Static>\n';
	        //strContents += '<Static Align="Center" Font="굴림체,9,Bold" Height="13" Id="Static0" Left="23" TabOrder="103" Text="잠시만&#32;기다려&#32;주시기&#32;바랍니다." Top="29" Width="255"></Static>\n';
	        //strContents += '</Contents>\n';
	        //div_wait.Contents = strContents;
	        gv_bShowImage = true;
	    }
	    if (bFlag) {
	        var sWidth = wconv.toNumber(GetDeviceInfo("CYScreen")) - 200;
	        var sHeight = wconv.toNumber(GetDeviceInfo("CYScreen")) - 200;
	        var nLeft = wconv.toInteger(((sWidth - div_wait.width)) / 2);
	        var nTop = wconv.toInteger(((sHeight - div_wait.height)) / 2) - 5;
	        div_wait.left = nLeft;
	        div_wait.top = nTop - 100;
	        div_wait.show();
	    } else {
	        div_wait.hide();
	    }
	};
	
	scwin.lfn_next_Async = function() {
		util.eventAsyncCall(this, scwin.lfn_next, arguments);
	};
	
	/*-----------------------------------
	// function 명 : lfn_next
	// 내용        : 다음버튼
	-----------------------------------*/
	var tabNextkey = "";
	scwin.lfn_next = function(obj) {
		var flag = parent.scwin.lfn_TabChanging(0, 1);
	    if (flag) {
	    	parent.scwin.lfn_Tab_Focus(1);
	    	
	    	parent.scwin.lfn_set_Tab_Info("S2", "T1");
    		parent.scwin.lfn_set_Tab_Info("S2", "T2");
	    }
	};
	
	scwin.btn_Copy_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_Copy_OnClick, arguments);
	};
	
	/*-----------------------------------
	// function 명 : btn_Copy_OnClick
	// 내용        : 복사버튼 클릭시 데이타복사
	-----------------------------------*/
	scwin.btn_Copy_OnClick = function() {
	    if (util.getGdsValue("gDoer") == "A000271" && parent.sToday >= "20161001" && parent.sToday <= "20161010") {
	        alert("2016.10.10까지 처리불가합니다.");
	        return;
	    }
	
	    //가입설계 동의 유효기간이 지난것은 안되도록 처리(20120801)
	    var sInrpsNameEtc = "";
	    for (var j = 0; j < Ds_Pibo.getRowCount(); j++) {
	        if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(j, "sInrpsCd")) == "Y") {
	            sInrpsNameEtc = sInrpsNameEtc + Ds_Pibo.getCellData(j, "sInrpsName") + ",";
	        }
	    }
	    if (wconv.length(sInrpsNameEtc) > 0) {
	        if (wconv.substr(Ds_Pibo.getCellData(0, "sInrpsCd"), 7, 6) != "000000") {
	            sInrpsNameEtc = wconv.mid(sInrpsNameEtc, 0, wconv.length(sInrpsNameEtc) - 1);
	            alert(sInrpsNameEtc + "님의 가입설계를 위한 동의 유효기간(3개월)이 만료되었습니다. 재동의 수행하시기 바랍니다.");
	            return false;
	        }
	    }
	    var sStdDate = "20110805"; //질의서 B230_Div3_Pop 기준일scwin.lfn_set_Tab_Info
	    if (util.getGdsValue("gProdYN") == "N") {
	        sStdDate = "20110804";
	    }

	    //가입가능상품 check
	    if (scwin.lfn_GoodsSearch() == false) {
	        alert("복사가 불가능한 청약번호입니다.");
	        return false;
	    }
	
	    //가입가능상품 check
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "nInrpsAge") != gfn_getInsAge(Ds_Pibo.getCellData(i, "sInrpsCd"), parent.sToday)) {
	            alert("복사가 불가능한 청약번호입니다..");
	            return false;
	        }
	        if ((Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") && (parent.edt_sGdCd.getValue() == "2312" || parent.edt_sGdCd.getValue() == "2313")){
	            alert("영업용운전자는 가입금지입니다");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sSsrtDate") < sStdDate) {
	        alert("복사가 불가능한 청약번호입니다...");
	        return false;
	    }
	    
	    //과거 청약번호를 보관한다.(질의서, 전산심사테이블 복사를위해)
	    oldPlanNo = parent.medt_PlanNo.getValue();
	    oldSsrtDate = parent.cal_sSsrtDate.getValue();
	    parent.medt_PlanNo.setValue("");
	    parent.cal_sSsrtDate.setValue(parent.sToday);
	    cal_sInsurStrtdate.setValue(parent.sToday);
	    cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(0, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	        Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	        Ds_Pibo.setCellData(i, "sPsnInfoOferAgreYn", ""); //개인정보제공동의여부
	        Ds_Pibo.setCellData(i, "sMNumCrInsAgreYn", ""); //다수계약가입동의여부
	    }
	
	    //세금우대 미가입
	    Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
	
	    //청약서발행일자
	    Ds_LTIDA00.setCellData(0, "sSrdoIssuDate", "");

	    //수익자 약정과 / 통신수단 해지는 초기화.
	    parent.Ds_LTIDA03.setCellData(0, "sInsurPftbpAsmtYn", "");
	    Ds_LTIDA00.setCellData(0, "sCmmcMeanCnclAgreYn", "");
	    if (parent.sSimpleYn != "Y") {
	    	if(parent.Tab_Step4 != null){
	        	parent.Tab_Step4.scwin.initDescrFlag();
	        	tab4InitDescr = false;
	        }else{
	        	tab4InitDescr = true;
	        }
	    }
	
	    //복사시 심의결과코드 지움(2011.05.18 김상운)
	    Ds_LTIDA00.setCellData(0, "sConuResltCd", "");
	
	    //복사시 비교계약안내 확인여부 제거
	    Ds_LTIDA00.setCellData(0, "sCmprCrNotcSsrt", "");
	    Ds_LTIDA00.setCellData(0, "sCmprCrNotcCncl", "");
	    //복사시 실명확인증표 제거
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmPstnFlgcd", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmRgcr", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmInfoRvMatt1", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmInfoRvMatt2", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfmDate", "");
	    parent.Ds_LTIDA03.setCellData(0, "sRlnmCnfm", "");
	
	    //2011.04.25 김상운추가(품의결과 내용 삭제)
	    parent.scwin.lfn_clearConuReslt();
	    
	    //비운전자 특약 가입 체크
	    if (scwin.lfn_Trty_NonDrv_chk())
	        return;
	    scwin.fn_calPrem("copy");
	    if (parent.sSimpleYn != "Y") {
	        //화면항목비활성화처리
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", true);
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", true);
	        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step3, "", true);
	    }
	    
	    //납이주기별 콤보활성화구분
	    scwin.lfn_PaymCyclSet();
	
	    //플랜,납입주기,납만 화면 활성화/비활성화
	    scwin.lfn_PlanEnable(wconv.findRow(Ds_Pibo, "sel", "1"));
	
	    //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	    if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	        medt_nBussPrem.setDisabled(true);
	    } else {
	        medt_nBussPrem.setDisabled(false);
	    }
	    
	    //MS텝 정보 출력
	    if(parent.sSimpleYn != "Y"){
		    parent.scwin.lfn_set_Tab_Info("S1", "T1");
		    
		    parent.scwin.lfn_set_Tab_Info("S2", "T1");
		    parent.scwin.lfn_set_Tab_Info("S2", "T2");
		    
		    parent.scwin.lfn_set_Tab_Info("S3", "T1");
		    parent.scwin.lfn_set_Tab_Info("S3", "T2");
		    //개인정보 조회 이력 쌓기
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Search
	// 내용        : 현재판매중인 상품리스트를 조회
	//---------------------------------------------------------------------------
	scwin.lfn_GoodsSearch = function() {
		wconv.clear(DsWs_Goods);
	    var MethodObj = new callService("com.inswave.longterm.prd.rle.task.BCA710Task", "getInsAvaGdList", "", "");
	    MethodObj.setId("getInsAvaGdList");
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sInrpsCd"));
	    MethodObj.setParam("sUserID", util.getGdsValue("gUserID"));
	    MethodObj.setParam("sGdCd", wconv.trim(parent.edt_sGdCd.getValue()));
		if (chk_sPsnGroupFlgcd.getValue() == "1") {
			MethodObj.setParam("sPsnGroupFlag", "20");
	    }
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//*/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		DsWs_Goods.setJSON(_tranSync.getDsJson("//*/vector/data/multi"));	// dataset 데이터
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (!_tranSync.CallServiceResult){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return false;
        }else{
        	if (DsWs_Goods.getRowCount() == 0) {
		        //		alert("가입가능한 상품이 없습니다.");
		        return false;
		    } else {
		        return true;
		    }
        }	    
	};
	
	// function 명 : lfn_trtyOnHeadClick
	// 내용        : 특약전체 체크/해제
	//---------------------------------------------------------------------------
	var trtyChk = "0";
	scwin.lfn_trtyOnHeadClick = function(headerId) {
		if(headerId == "gh101"){
			if(grd_sTrty.getColumnDisabled("chk")){
				return;
			}
			var chk = trtyChk;
			if (Ds_Trty.getRowCount() > 0) {
				for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
					if(Ds_Trty.getCellData(i, "TrtyFlagCd") != "01"){
						//화면에 표시되지않은 특약은 체크처리에서 뺀다.
						if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "Y"){
							Ds_Trty.setCellData(i, "chk", chk);
						}
					}
	            }
			}else{
				scwin.grd_Trty_head_Check();
			}
			trtyChk = (trtyChk=="1"?"0":"1");
		}
	};
	
	/*-----------------------------------
	// function 명 : lfn_TrtyEnableCheck
	// 내용        : 기본특약 비활성화 처리
	-----------------------------------*/
	scwin.lfn_TrtyEnableCheck = function(nRow) {
		if (Ds_Trty.getCellData(nRow, "TrtyFlagCd") == "01" || Ds_Trty.getCellData(nRow, "sScrnIndcYn") == "N") {
	        var tmpRsData = Ds_Trty.getMatchedJSON("TrtyFlagCd","01");
			if (typeof tmpRsData.getMatchedJSON == "function" && (tmpRsData.getMatchedJSON("chk","1")).getRowCount() == 0) {
				var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);
		        Ds_Trty.setCellData(nRow, "chk", "1");
		        util.setDataListEvent(Ds_Trty, arrtrty);
	        	return 1;
		    } else {
		    	return 2;
		    }
	    }
	    return 2;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Trty_OnCellClick
	// 내용        : 특약사항 Cell click시 처리
	//---------------------------------------------------------------------------
	scwin.lfn_Trty_OnCellClick = function(nRow, nCell) {
	    if (grd_sTrty.getColumnID(nCell) == "chk") {
	        if (Ds_Trty.getCellData(nRow, "TrtyFlagCd") == "01" && Ds_Trty.getCellData(nRow, "chk") == "0") {
	        	var trtyFilter = Ds_Trty.getFilterList();
	        	wconv.filter(Ds_Trty, "TrtyFlagCd == '01' && chk == '1'");
	        	if (Ds_Trty.getRowCount() < 1) {
	        		Ds_Trty.removeColumnFilterAll();
					for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
				
					//MS 마이플레폼이 readonly 속성에 의해서 값이 변경되는걸 막는걸 구현 하기 위해 강제로 1을 다시 set
		        	var arrtrty = util.getDataListEvent(Ds_Trty);
					util.removeAllDataListEvent(Ds_Trty);
		        	Ds_Trty.setCellData(nRow, "chk", "1");
		        	util.setDataListEvent(Ds_Trty, arrtrty);
	                alert("기본특약은 필수입니다.");
	                var applyEnable = "N";
	                if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
	                    applyEnable = "N";
	                } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0 && //완료
	                    wconv.substr(Ds_LTIDA00.getCellData(0, "sPlanNo"), 0, 1) == "M") {
	                    //최초설계
	                    applyEnable = "N";
	                } else if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
	                    applyEnable = "N";
	                } else if (Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	                    //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
	                    applyEnable = "N";
	                } else {
	                    applyEnable = "Y";
	                }
	                if (applyEnable == "Y") {
	                    Ds_Trty.setCellData(nRow, "chk", "1");
	                }
	                return;
	            }else{
	            	Ds_Trty.removeColumnFilterAll();
					for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	            }
	        }
	    }else if(grd_sTrty.getColumnID(nCell) == "TrtyHnglAbbName"){
	    	txtTrtyInfo.setValue("");
	    	var params = new Object();
	    	params.sTrtyCd = Ds_Trty.getCellData(nRow, "sTrtyCd");
	    	params.nTrtyInsAmt = Ds_Trty.getCellData(nRow, "nTrtyInsAmt");
	    	DS_TrtyCmpsContAmtLimitInfo.setColumnFilter({"type":"func", "colIndex":"sTrtyCd", "key":scwin.filterTrtyCmpsContAmtLimit, "condition":"and", param:params});
	    	if(DS_TrtyCmpsContAmtLimitInfo.getRowCount() > 0){
	        	txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(0, "sInfo"));
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        }else{
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        	TrtyCmpsContAmtLimitVo.set("gdCd", Ds_LTIDA00.getCellData(0, "sGdCd"));
				TrtyCmpsContAmtLimitVo.set("gnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd"));
				TrtyCmpsContAmtLimitVo.set("planCd", cmb_Plan.getValue());
				TrtyCmpsContAmtLimitVo.set("ssrtDate", parent.cal_sSsrtDate.getValue());
				TrtyCmpsContAmtLimitVo.set("trtyCd", Ds_Trty.getCellData(nRow, "sTrtyCd"));
				TrtyCmpsContAmtLimitVo.set("trtyInsAmt", Ds_Trty.getCellData(nRow, "nTrtyInsAmt"));
				
				var trans = new transSub();      // transaction 보낼 객체 생성
				trans.setId("retrieveTrtyCmpsContAmtLmit");     // transaction 보낼 SubmissionID
				trans.setUrl("/contract/longterm/CBSC0011.do");  // Controller 쪽으로 보낼 주소
				trans.setDs("TrtyCmpsContAmtLimitVo");
				trans.targetDs("TrtyCmpsContAmtLimitDtalVo");
				trans.callBack("scwin.subCallBack"); // 받을 Dataset을 처리시 콜백함수
				trans.send();
	        }
	        
	    }else if(grd_sTrty.getColumnID(nCell) == "nTrtyInsAmt"){
	    	//가입금액
            //  - 실버소액암진단비, 실버유사암진단비 담보는 개별로 가입금액 선택 불가
            if ((sGdCd == "2400") || (sGdCd == "2401") || (sGdCd == "2402")) {
                if (wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "0002" || wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "0003") {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "none");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), true);
                } else {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "combo");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), false);
                }
            } else if (sGdCd == "2117" || sGdCd == "2123") {
                if (wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "0301" || wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "2201") {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "none");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), true);
                } else {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "combo");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), false);
                }
            } else if (sGdCd == "2122" || sGdCd == "2128") { //여성특화(21221001,21226001)
                if (wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "1001" || wconv.substr(Ds_Trty.getCellData(nRow, "sTrtyCd"), 4, 4) == "6001") {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "none");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), true);
                } else {
                    //grd_sTrty.SetCellProp("body", nCell, "Edit", "combo");
                    grd_sTrty.setCellReadOnly(nRow, grd_sTrty.getColumnID(nCell), false);
                }
            }
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도 DataList Filter
	//---------------------------------------------------------------------------
	scwin.filterTrtyCmpsContAmtLimit = function(cellData, param, rowIndex){
		if(Number(DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "nTrtyInsAmt")) == Number(param.nTrtyInsAmt)
		&& DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "sTrtyCd") == param.sTrtyCd){
			return true;
		}else{
			return false;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도내용
	//---------------------------------------------------------------------------
	scwin.subCallBack = function(e) {
		//alert(JSON.stringify(e));
		switch (e.subID) {
			case "retrieveTrtyCmpsContAmtLmit":
				if(e.flag == "s"){
					//TrtyCmpsContAmtLimitDtalVo.setJSON(e.result.listTrtyCmpsContAmtLimitDtalVo);
					util.copyM(TrtyCmpsContAmtLimitDtalVo, e.result.listTrtyCmpsContAmtLimitDtalVo);
					var contMsg = "";
					var cvrgeCd = "";
	     			for (var i=0; i<TrtyCmpsContAmtLimitDtalVo.getRowCount();i++) {
		      			if(cvrgeCd != wconv.trim(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName"))){
		      				cvrgeCd = wconv.trim(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName"));
		      				
		      				contMsg += "[ " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName") + " ]<br/>";
		      				contMsg += TrtyCmpsContAmtLimitDtalVo.getCellData(i, "pymStndSpec") + "<br/>";
			      			contMsg += "# 보상한도 " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts") + (wconv.length(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts")) == 0?"":"<br/>");
		      			}else{
		      				contMsg += TrtyCmpsContAmtLimitDtalVo.getCellData(i, "pymStndSpec") + "<br/>";
		      				contMsg += (wconv.length(TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts"))==0?"":"# 보상한도 " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts") +"<br/>");
		      			}
		      			contMsg += "<br/>";
	     			}
	     			//alert("조회완료\n\n"+contMsg);
	     			//txtTrtyInfo.setValue(contMsg);
	     			var row = grd_sTrty.getRealRowIndex(grd_sTrty.getFocusedRowIndex());
	     			var idx = DS_TrtyCmpsContAmtLimitInfo.getRowCount();
	     			DS_TrtyCmpsContAmtLimitInfo.insertRow(idx);
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sTrtyCd", TrtyCmpsContAmtLimitVo.get("trtyCd"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "nTrtyInsAmt", TrtyCmpsContAmtLimitVo.get("trtyInsAmt"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sInfo", contMsg);
	     			txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(idx, "sInfo"));
				}else{
					wprom.alert(e.msg);
				}
			break;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : openPrint()
	// 내용        : 가입설계서
	//---------------------------------------------------------------------------
	scwin.openPrint = function() {
		if (scwin.lfn_checkPrint("")) {
	        //해약환급처리
	        parent.scwin.lfn_RtnAmt();
	
	        //갱신보험료처리
	        parent.scwin.lfn_RenwlPrem();
	        
	        var sPlanNo = parent.medt_PlanNo.getValue();
	        var sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"); //개인단체구분코드
	        var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	        var sDmCode = "";
	        
	        var reportInfo = new Object();
	        if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        	reportInfo.rptName = "longterm/B400_Rep";
	        	
	        }else{
	        	//reportInfo.rptName = "longterm/B400_Rep";
	        	alert("출력할수 없습니다.");
	        	return;
	        }
	        
	     	reportInfo.dataType       = "xml";
			reportInfo.taskValue      = "com.inswave.longterm.psv.ens.task.EBE200Task";
			reportInfo.actionValue    = "printB400_RepV01";
			reportInfo.sInterfaceType = "Y";
			reportInfo.gUserID        = util.getGdsValue("gUserID");
			reportInfo.setParam       = [ "sPlanNo|"+ sPlanNo
			                             ,"sPsnGroupFlgcd|"+sPsnGroupFlgcd
			                             ,"sGdCd|"+parent.edt_sGdCd.getValue()];
			reportInfo.title          = "가입설계서";
			wprom.reportOpen(reportInfo);
	    }
	};
	
	scwin.lfn_calSave_onClick_Async = function(){
		util.eventAsyncCall(this, scwin.lfn_calSave_onClick, arguments);
	};
	
	/*-----------------------------------
	// function 명 : lfn_calSave_onClick
	// 내용        : 영업보험료 입력후 클릭시 보험료를 계산 저장한다.
	-----------------------------------*/
	scwin.lfn_calSave_onClick = function() {
		except = "allPrem";
	    //피보험자나 특약정보가 변경되었는지 체크한다.
	    if (scwin.lfn_ValidationCheck("level3")) {
	        return false;
	    }
	    //납입주기변경체크
	    scwin.lfn_CompChangeCheck(Ds_LTIDA00, 0, "sPaymCyclCd");
	    //최소영업보험료 체크
	    if (scwin.lfn_checkMinPremAmt() == false) {
	        return false;
	    }
	    if (modifyFlag) {
	        alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
	        return false;
	    }
	
	    // 간편산출에서 계산할수 없도록 처리(청약진행중인건)
	    if (parent.sSimpleYn == "Y" && wconv.length(parent.medt_PlanNo.getValue()) > 0) {
	        parent.scwin.lfn_ProgRankCd();
	        if (wconv.length(parent.sSimpleProg) > 0) {
	            alert("청약진행중인 가입설계입니다 \n간편산출을 할수 없습니다.");
	            return;
	        }
	    }
	    
	    var nGrntPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nGrntPrem")); //보장보험료
	    var nAccuPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nAccuPrem")); //적립보험료
	    var nBussPrem = wconv.toNumber(medt_nBussPrem.getValue()); //영업보험료
	    var nDcPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nDcPrem")); //할인보험료
	    var nApplPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")); //적용보험료
	    var nMinPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMinPrem")); //최소보험료
	    var nMaxPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMaxPrem")); //최대보험료
	    var nGroupDcrt = wconv.toNumber(Ds_LTIEA10.getCellData(0, "nGroupDcrt")) / 100; //단체할인율
	    //입력된 영업보험료가 최대/최소값 사이인지 체크
	    if (!mfn_IsEmpty(wconv.toString(nBussPrem)) && nBussPrem >= nMinPrem && nBussPrem <= nMaxPrem) {} else {
	        alert("영업보험료는 최소/최대보험료 사이값으로 입력해야 합니다,");
	        medt_nBussPrem.focus();
	        return false;
	    }
	    wconv.clear(DsWs_LTIDA00);
	
	    //N1503-00329:장기 신상품 전산개발 요청
	    //영업보험료 입력후 만기환급금 변경되는 사항 때문에 초기화
	    Ds_LTIDA00.setCellData(0, "nEndRtnAmtCalElmnt1", 0);
	    Ds_LTIDA00.setCellData(0, "nEndRtnAmtCalElmnt2", 0);
	    Ds_LTIDA00.setCellData(0, "nEndRtnAmtCalElmnt3", 0);
	    Ds_LTIDA00.setCellData(0, "nEndRtnAmtCalElmnt4", 0);
	    Ds_LTIDA00.setCellData(0, "nEndRtnAmtCalElmnt5", 0);
	
	    //trace("Ds_Trty=="+Ds_Trty.SaveXML());
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "updateCalcPrem", "", "");
	    MethodObj.setId("updateCalcPrem");
	    //계약기본사항을 담는다
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", Ds_LTIDA00.getID());// 계약기본사항정보
	    //피보험자
	    MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID()); //피보험자정보
	    //보장적립구분코드가 0일경우 주계약에 적립보험료 넣음
	    if (Ds_Trty.getTotalRow() > 0) {
	        wconv.clear(Ds_Trty_Tmp);
	        //var trtyFilter = Ds_Trty.getFilterList();
	    	//Ds_Trty.clearFilter();
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        	if (util.getCellDataF(Ds_Trty, i, "chk") == "1") {
	                util.appendRow(Ds_Trty_Tmp);
	                for (var j = 0; j < Ds_Trty.getColCnt(); j++) {
	                	Ds_Trty_Tmp.setCellData((Ds_Trty_Tmp.getRowCount() - 1), Ds_Trty.getColumnID(j), util.getCellDataF(Ds_Trty, i, Ds_Trty.getColumnID(j)));
	                }
	            }
	        }
			//for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    }
	    /*if (Ds_Trty.getTotalRow() > 0) {
	        wconv.clear(Ds_Trty_Tmp);
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	            if (Ds_Trty.getCellData(i, "chk") == "1") {
	                util.appendRow(Ds_Trty_Tmp);
	                for (var j = 0; j < Ds_Trty.getColCnt(); j++) {
	                    Ds_Trty_Tmp.setCellData((Ds_Trty_Tmp.getRowCount() - 1), Ds_Trty.getColumnID(j), Ds_Trty.getCellData(i, Ds_Trty.getColumnID(j)));
	                }
	            }
	        }
	    }*/
    
	    //trace("Ds_Trty_Tmp=="+Ds_Trty_Tmp.SaveXML());
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Tmp.getID()); //특약사항정보담음
	    MethodObj.setHashTable();
	    MethodObj.setParam("sUserId", util.getGdsValue("gUserID"));
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else {
        	DsWs_LTIDA00.setJSON(_tranSync.getDsJson("LTIDA00"));
			//계약기본정보의 보험료를 세팅(변경된 환급금/율때문에 세팅)
			wconv.copy(Ds_LTIDA00, DsWs_LTIDA00);
	        Ds_LTIDA00.setRowPosition(0, false);
	        
	        alert("보험료 계산이 처리되었습니다");
	    }
	    except = "";
	};
	
	scwin.lfn_PlanChanged_Async = function(info){
		util.eventAsyncCall(this, scwin.lfn_PlanChanged, info);
	};
	
	/*-----------------------------------
	// function 명 : lfn_PlanChanged
	// 내용        : 플랜변경조회
	-----------------------------------*/
	scwin.lfn_PlanChanged = function(info) {
		//info.oldValue 
		//info.newValue 
		//info.oldSelectedIndex 
		//info.newSelectedIndex 
		if (wconv.length(wconv.trim(Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsName"))) <= 0) {
			cmb_Plan.setSelectedIndex(info.oldSelectedIndex );
	        alert("고객등록을 먼저 해주세요.");
	        return;
	    }
	    //Ds_Pibo.FireEvent = false;
	    var arrpibo = util.getDataListEvent(Ds_Pibo);
	    util.removeAllDataListEvent(Ds_Pibo);
	    
	    scmb_plan = true; //plan변경 flag.
	    for (var i = 0; i < Ds_Pibo.getTotalRow(); i++) {
	        Ds_Pibo.setCellData(i, "sApplPlanCd", cmb_Plan.getValue());
	        Ds_Pibo.setCellData(i, "sApplPlanName", cmb_Plan.getText());
	    }
	
	    //trace("nNewIndex==="+nNewIndex);
	    //nMinPrem = DsWs_Plan.getCellData(nNewIndex,"");
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(DsWs_InsurTermPaymTerm);
	    wconv.clear(Dsws_InsAmt);
	    wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화
	    wconv.clear(DsWs_TrtyTerm);
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    MethodObj.setParam("sFlagCd", "1");
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    MethodObj.setParam("sDoer", parent.edt_sDoer.getValue()); //취급자
	    MethodObj.setParam("sDoerUser", parent.edt_sDoerUser.getValue()); //사용인
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sInrpsCd")); //피보험자주민번호
	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd")); //주민번호
	    MethodObj.setUrl("/contract/CBSC015MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	    MethodObj.addXPath("//WARNING");
        MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        } else {
        	DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
	    	DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
	    	DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
	    	DsWs_InsurTermPaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"));
	    	Dsws_InsAmt.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"));
	    	DsWs_TrtyTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
	    	
	        //trace("보험기간=="+DsWs_InsurTerm.SaveXML());	
	        //trace("특약=="+DsWs_Trty.SaveXML());	
	        //보기납기 첫번째 세팅
	       	
	        cmb_InsurTermPaymTerm.setSelectedIndex(0);
	        //lfn_InsurTermPaymTermChanged(obj,cmb_InsurTermPaymTerm.getValue(),cmb_InsurTermPaymTerm.getValue(),0,0);
	        //Ds_Trty.FireEvent = false;
	        var arrtrty = util.getDataListEvent(Ds_Trty);
	        util.removeAllDataListEvent(Ds_Trty);
	
	        //특약세팅
	        wconv.copy(Ds_Trty, DsWs_Trty);
	        //trace("Ds_Trty:" + Ds_Trty.SaveXML());
	        scwin.lfn_TrtyDataSetSet();

	        //특약중 화면출력특약만 화면에 보여줌
	        Ds_Trty.removeColumnFilterAll();
	    	Ds_Trty_Backup.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");

	        //보험기간,가입금액 초기값 세팅
	        scwin.lfn_InsurTermInit(cmb_Plan);
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);

	        //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	        if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	            medt_nBussPrem.setDisabled(true);
	        } else {
	            medt_nBussPrem.setDisabled(false);
	        }
	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
	    }
	
	    //trace("Ds_Trty:"+Ds_Trty.SaveXml());
	    //피보험자가 여러명일때 나머지 피보험자의 특약도 조회
	    for (var i = 1; i < Ds_Pibo.getTotalRow(); i++) {
	        scwin.lfn_searchPiboTrty(cmb_Plan, i);
	    }
	
	    //N1602-00252:장기보험 신상품 전산 개발 요청(피보험자별 보기/납기 재조회)
		// 2018 상품개정
	    if ((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")) {// 2018 상품개정
	        wconv.clear(DsWs_TrtyTerm_0);
	        wconv.clear(DsWs_TrtyTerm_1);
	        wconv.clear(DsWs_TrtyTerm_2);
	        wconv.clear(DsWs_TrtyTerm_3);
	        wconv.clear(DsWs_TrtyTerm_4);
	        wconv.clear(DsWs_TrtyTerm_5);
	        wconv.clear(DsWs_TrtyTerm_6);
	        wconv.clear(DsWs_TrtyTerm_7);
	        wconv.clear(DsWs_TrtyTerm_8);
	        for (var i = 0; i < Ds_Pibo.getTotalRow(); i++) {
	            scwin.lfn_getInsPaymTerm(eval("DsWs_TrtyTerm_" + i), cmb_Plan.getValue(), Ds_Pibo.getCellData(i, "sInrpsCd"));
	        }
	        wconv.copy(parent.Ds_TrtyTerm_0, DsWs_TrtyTerm_0);
	        wconv.copy(parent.Ds_TrtyTerm_1, DsWs_TrtyTerm_1);
	        wconv.copy(parent.Ds_TrtyTerm_2, DsWs_TrtyTerm_2);
	        wconv.copy(parent.Ds_TrtyTerm_3, DsWs_TrtyTerm_3);
	        wconv.copy(parent.Ds_TrtyTerm_4, DsWs_TrtyTerm_4);
	        wconv.copy(parent.Ds_TrtyTerm_5, DsWs_TrtyTerm_5);
	        wconv.copy(parent.Ds_TrtyTerm_6, DsWs_TrtyTerm_6);
	        wconv.copy(parent.Ds_TrtyTerm_7, DsWs_TrtyTerm_7);
	        wconv.copy(parent.Ds_TrtyTerm_8, DsWs_TrtyTerm_8);       
	    }
	    Ds_Trty.removeColumnFilterAll();
	    Ds_Trty_Backup.removeColumnFilterAll();
	    wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno == '1'");
	    wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno == '1'");
	    //Ds_Pibo.FireEvent = true;
	    util.setDataListEvent(Ds_Pibo, arrpibo);
	    
	    util.setCompBindRefresh(Ds_Pibo.getID());
	    if(parent.sSimpleYn == "N"){
	    	Grd_Pibo.setColumnVisible("btn_Job_Search", false);
	    }
				    
	    //포커스 이동
	    btn_CalcPrem.focus();
	};
	
	// 주기선택후 포커스 이동
	scwin.lfn_OnKillFocus_OnChanged = function(e) {
		if (this.getID() == "cmb_InsurTermPaymTerm") {
	        btn_CalcPrem.focus();
	    } else if (this.getID() == "cmb_Plan") {
	        btn_CalcPrem.focus();
	    } else if (this.getID() == "cmb_PaymCycl") {
	        //edt_insuredPaym.focus();
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_InsurTermPaymTermChanged
	// 내용        : 보험기간/납입기간변경시 조회
	-----------------------------------*/
	scwin.lfn_InsurTermPaymTermChanged = function() {
		wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    // 2018 상품개정
	    if ((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")) {// 2018 상품개정
	        wconv.clear(DsWs_TrtyTerm);
	        wconv.clear(DsWs_Trty_TermChng);
	        wconv.clear(DsWs_TrtyTerm_0);
	        wconv.clear(DsWs_TrtyTerm_1);
	        wconv.clear(DsWs_TrtyTerm_2);
	        wconv.clear(DsWs_TrtyTerm_3);
	        wconv.clear(DsWs_TrtyTerm_4);
	        wconv.clear(DsWs_TrtyTerm_5);
	        wconv.clear(DsWs_TrtyTerm_6);
	        wconv.clear(DsWs_TrtyTerm_7);
	        wconv.clear(DsWs_TrtyTerm_8);
	    }
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명

	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd")); //주민번호

	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];

	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC015MController.do");
	    //보험기간
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
	    // 2018 상품개정
	    if ((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")) {// 2018 상품개정
	    	MethodObj.addXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
	    	MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
	    }
	    MethodObj.addXPath("//WARNING");
	    
	    //Ds_Trty.FireEvent = false;
	    var arrtrty = util.getDataListEvent(Ds_Trty);
	    util.removeAllDataListEvent(Ds_Trty);
	    wconv.clear(Ds_Trty_ReStore);

	    for (var k = 0; k < Ds_Pibo.getTotalRow(); k++) {
	    	MethodObj.setParam("sResno", Ds_Pibo.getCellData(k, "sInrpsCd")); //피보험자주민번호
	    	MethodObj.setXPathDs();
			MethodObj.sync();
			MethodObj.send();
	    	
	        util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
	        if (DsWs_Warning.getRowCount() != 0){
	        	alert(DsWs_Warning.getCellData(0, "msg"));
	        	return;
	        }else{
	        	Ds_Trty.removeColumnFilterAll();
				wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='" + Ds_Pibo.getCellData(k, "nInrpsSeqno") + "'");
				
				//============= START =========================
				DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
				DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
				// 2018 상품개정
				if((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128") ) { // 2018 상품개정
					DsWs_TrtyTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi"));
					util.copyM(DsWs_Trty_TermChng, _tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"));
					
					for (var t = 0; t < DsWs_Trty_TermChng.getRowCount(); t++) {
	                    for (var u = 0; u < Dsws_InsAmt.getRowCount(); u++) {
	                        if (DsWs_Trty_TermChng.getCellData(t, "sTrtyCd") == $w.data[Dsws_InsAmt.getID()].getCellData(u, "sTrtyCd")) {
	                            DsWs_Trty_TermChng.setCellData(t, "nTrtyInsAmt", $w.data[Dsws_InsAmt.getID()].getCellData(u, "sCd"));
	                            break;
	                        }
	                    }
	                }
	                
	                wconv.clear(Ds_Trty_ReStore_Temp);
	                //wconv.copyF(Ds_Trty_ReStore_Temp, Ds_Trty);
	                util.copyM(Ds_Trty_ReStore_Temp, Ds_Trty.getAllJSON());
	                
	                var isAdd = true;
	                var insRow = 0;
	                for (var a = 0; a < DsWs_Trty_TermChng.getRowCount(); a++) {
	                    isAdd = true;
	                    insRow = 0;
	                    for (var b = 0; b < Ds_Trty_ReStore_Temp.getRowCount(); b++) {
	                        if (DsWs_Trty_TermChng.getCellData(a, "sTrtyCd") == Ds_Trty_ReStore_Temp.getCellData(b, "sTrtyCd")) {
	                            isAdd = false;
	                            break;
	                        }
	                        if (wconv.toNumber(Ds_Trty_ReStore_Temp.getCellData(b, "nSeqno")) < wconv.toNumber(DsWs_Trty_TermChng.getCellData(a, "nSeqno"))) {
	                            insRow = b + 1; //해당위치에 추가하기위해
	                        }
	                    }
	                    if (isAdd) {
	                        if (insRow == 0){
	                        	insRow = Ds_Trty_ReStore_Temp.getRowCount() - 1;
	                        }
	                        util.insertRow(Ds_Trty_ReStore_Temp, insRow);
	                        DsWs_Trty_TermChng.setCellData(a, "nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(k, "nInrpsSeqno"));
	                        //Ds_Trty_ReStore_Temp.CopyRow(Ds_Trty_ReStore_Temp.GetRowCount()-1, DsWs_Trty_TermChng, a);
	                        Ds_Trty_ReStore_Temp.setRowJSON(a, DsWs_Trty_TermChng.getRowJSON(insRow), true);
	                    }
	                }
	                
	                var isDel = true;
	                for(var x = (Ds_Trty_ReStore_Temp.getRowCount()-1); x >= 0 ; x--){
	                    isDel = true;
	                    if (Ds_Trty_ReStore_Temp.getCellData(x, "sScrnIndcYn") == "N") {
	                        continue;
	                    }
	                    
	                    for (var y = 0; y < DsWs_Trty_TermChng.getRowCount(); y++) {
	                        if (Ds_Trty_ReStore_Temp.getCellData(x, "sTrtyCd") == DsWs_Trty_TermChng.getCellData(y, "sTrtyCd")) {
	                            isDel = false;
	                            break;
	                        }
	                    }
	                    
	                    if (isDel == true) {
	                    	Ds_Trty_ReStore_Temp.removeRow(x);
	                    }
	                }
	                
	                //보험기간,납입기간 초기값 세팅
	                for (var i = 0; i < Ds_Trty_ReStore_Temp.getRowCount(); i++) {
	                    for (var j = 0; j < DsWs_InsurTerm.getTotalRow(); j++) {
	                        //갱신플랜의 경우 해당 특약 모두를 갱신 주기를 보기 주기로 변경 (2014.04.01)
	                        if (DsWs_Plan.getCellData(0, "sRenwlAvaYn") == "Y") {
	                        	Ds_Trty_ReStore_Temp.setCellData(i, "sAutoRenwlCyclCd", wconv.substr(util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermCd"), 1, 3));
	                        }
	                        
	                        if (Ds_Trty_ReStore_Temp.getCellData(i, "sTrtyCd") == util.getCellDataF(DsWs_InsurTerm, j, "sTrtyCd")) {
	                            Ds_Trty_ReStore_Temp.setCellData(i, "sInsurTermCd", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermCd"));
	                            Ds_Trty_ReStore_Temp.setCellData(i, "sInsurTermName", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermName"));
	                            //break;
	                        }
	                    }
	
	                    //보험기간종료일자 setting
	                    if (i == 0) {
	                        cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty_ReStore_Temp.getCellData(i, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	                    }
	                    
	                    //납입기간 초기값세팅
	                    for (var j = 0; j < DsWs_PaymTerm.getTotalRow(); j++) {
	                        if (Ds_Trty_ReStore_Temp.getCellData(i, "sTrtyCd") == util.getCellDataF(DsWs_PaymTerm, j, "sTrtyCd")) {
	                            Ds_Trty_ReStore_Temp.setCellData(i, "sPaymTermCd", util.getCellDataF(DsWs_PaymTerm, j, "sPaymTermCd"));
	                            Ds_Trty_ReStore_Temp.setCellData(i, "sPaymTermName", util.getCellDataF(DsWs_PaymTerm, j, "sPaymTermName"));
	                            break;
	                        }
	                    }
	
	                    //보험기간/납입기간 세팅
	                    if (i == 0) {
	                        Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty_ReStore_Temp.getCellData(i, "sInsurTermCd")); //보험기간
	                        Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty_ReStore_Temp.getCellData(i, "sPaymTermCd")); //납입기간
	                        Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", Ds_Trty_ReStore_Temp.getCellData(i, "sInsurTermName") + "/" + Ds_Trty_ReStore_Temp.getCellData(i, "sPaymTermName")); //보기납기
	                        //일시납 납입기간에 따른 납입주기 세팅
	                        scwin.lfn_PaymCyclSet();
	                    }
	                }
	                //Ds_Trty_ReStore.AppendDataset(Ds_Trty_ReStore_Temp);
	                util.copyM(Ds_Trty_ReStore, Ds_Trty_ReStore_Temp.getAllJSON(), false, true);
	                scwin.lfn_getInsPaymTerm(eval("DsWs_TrtyTerm_" + k), cmb_Plan.getValue(), Ds_Pibo.getCellData(k, "sInrpsCd"));
	                wconv.copy(eval("parent.Ds_TrtyTerm_" + k), eval("DsWs_TrtyTerm_" + k));
				}else{
					//============= END =========================
	                //보험기간,납입기간 초기값 세팅
	                for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	                    for (var j = 0; j < DsWs_InsurTerm.getTotalRow(); j++) {
	                        //갱신플랜의 경우 해당 특약 모두를 갱신 주기를 보기 주기로 변경 (2014.04.01)
	                        if (DsWs_Plan.getCellData(0, "sRenwlAvaYn") == "Y") {
	                        	Ds_Trty.setCellData(i, "sAutoRenwlCyclCd", wconv.substr(util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermCd"), 1, 3));
	                        }
	                        if (Ds_Trty.getCellData(i, "sTrtyCd") == util.getCellDataF(DsWs_InsurTerm, j, "sTrtyCd")) {
	                            Ds_Trty.setCellData(i, "sInsurTermCd", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermCd"));
	                            Ds_Trty.setCellData(i, "sInsurTermName", util.getCellDataF(DsWs_InsurTerm, j, "sInsurTermName"));
	                            break;
	                        }
	                    }
	
	                    //보험기간종료일자 setting
	                    if (i == 0) {
	                        cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(i, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nInrpsAge")));
	                    }
	
	                    //납입기간 초기값세팅
	                    for (var j = 0; j < DsWs_PaymTerm.getTotalRow(); j++) {
	                        if (Ds_Trty.getCellData(i, "sTrtyCd") == util.getCellDataF(DsWs_PaymTerm, j, "sTrtyCd")) {
	                            Ds_Trty.setCellData(i, "sPaymTermCd", util.getCellDataF(DsWs_PaymTerm, j, "sPaymTermCd"));
	                            Ds_Trty.setCellData(i, "sPaymTermName", util.getCellDataF(DsWs_PaymTerm, j, "sPaymTermName"));
	                            break;
	                        }
	                    }
	
	                    //보험기간/납입기간 세팅
	                    if (i == 0) {
	                        Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(i, "sInsurTermCd")); //보험기간
	                        Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(i, "sPaymTermCd")); //납입기간
	                        Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(i, 3) + "/" + grd_sTrty.getCellDisplayData(i, 4)); //보기납기
	                        //일시납 납입기간에 따른 납입주기 세팅
	                        scwin.lfn_PaymCyclSet();
	                    }
	                }
				}
			}
			// 2018 상품개정
			if((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128") ) { // 2018 상품개정
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check(k + 1);
	        } else {
	            scwin.lfn_TrtyList_Relation_Check();
	        }
	    }
	    // 2018 상품개정
		if((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128") ) { // 2018 상품개정
	    	Ds_Trty.removeColumnFilterAll();
	        wconv.clear(Ds_Trty);
	        util.copyM(Ds_Trty, Ds_Trty_ReStore.getAllJSON());
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0 && nPsnPrprtGroupSeqno=='0'");
	        //trace("DsWs_TrtyTerm:"+DsWs_TrtyTerm.SaveXML());
	        //trace("Ds_Trty:"+Ds_Trty.SaveXML());
	        
	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
	    }
	
	    //특약 납기 보기 별도 셋팅(납기 보기 수정 데이터가 있는 경우)
	    if (wconv.findRowNF(Ds_Trty.getID(), "InrtmPytrMdfcYn", "Y") > -1) {
	        for (var k = 1; k < Ds_Pibo.getTotalRow(); k++) {
	            scwin.lfn_InsurTermPaymTermChangedPibo(k);
	        }
	    }
	    //Ds_Trty.FireEvent = true;
	    util.setDataListEvent(Ds_Trty, arrtrty);
	    //wconv.trace("sPaymTermCd : " + Ds_Trty.getCellData(0, "sPaymTermCd"));
	    //추가납입보험료(자동이체) 일시납일경우 비활성화
	    /*20171228 제도개선
	    if (Ds_Trty.getCellData(0, "sPaymTermCd") == "000") {
	    	medt_nAddPaymPrem.setValue("0");
	        medt_nAddPaymPrem.setDisabled(true);
	    } else {
	        medt_nAddPaymPrem.setDisabled(false);
	    }
	    */
	    Ds_Pibo.setCellData(0, "sel", "0");
	    //return scwin.Grd_PiboLIst_OnCellClick(Grd_Pibo, 0, 0, 0, 0, 0);
    	scwin.Grd_Pibo_OnCellClick(0, 0);
	    
	    //포커스 이동
        btn_CalcPrem.focus();
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_Medical()
	// 내용        : 사전조회(비례보상제도)
	//---------------------------------------------------------------------------
	scwin.fn_Medical = function() {
		//사전조회시에도 고객등록 여부 확인
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (wconv.length(Ds_Pibo.getCellData(i, "sAddrFlgcd")) <= 0) {
	            alert("고객등록을 먼저 해주세요");
	            fFlag = false;
	            return fFlag;
	        }
	    }
	    
	    // scan 이 아직 셋팅전. 
	    if ((parent.sScanObjtYn == "Y" && scwin.lfn_checkMedical(wconv.findRow(Ds_Pibo, "sel", "1"))) || parent.sScanObjtYn != "Y") {
	        var pi_nRow = wconv.findRow(Ds_Pibo, "sel", "1");
	        if (Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty") == "N" && Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps") == "N") {
	            scwin.Trty_ValidationCheck(Ds_Trty);
	        }
			var promise = Promise.resolve();
	    	promise = promise.then(function(rtnVal) {
				var indata = new Object();
				indata.sInrpsCd = Ds_Pibo.getCellData(pi_nRow, "sInrpsCd"); //피보험자코드
				indata.sInrpsName = Ds_Pibo.getCellData(pi_nRow, "sInrpsName"); //피보험자명
				indata.sPlanNo = parent.medt_PlanNo.getValue(); //설계번호
				indata.hasPronCmpsTrty = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty"); //실손가입여부(2011.05.13 김상운추가)
				indata.hasFxamtCmps = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps"); //정액담보가입여부(2011.05.13 김상운추가)
				indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
				var sSvtYn = "N";
		        if (DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2") {
		            sSvtYn = "Y";
		        }
		        indata.sSvtYn = sSvtYn;
		        var pObj = {  // 수정(추가) 2017.10.20, by 진태만 
					"Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds 
					,"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds 
					,"Ds_Pibo_BackUp" : Ds_Pibo_BackUp 		//부모창 Ds_Pibo_BackUp  
				} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
				
		        //알림메세지
		        var popInfo = {"width":826,
							   "height":695,
							   "indata"    : indata,	 			// 자식으로 보낼 부모 파라미터  리스트
							   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.20, by 진태만 
							   "callback"  : scwin.popupCallback,
							   "title"     : "보험계약정보조회"
							  };
				return wprom.popupOpen("/ui/cbsc/CBSC056P.xml", popInfo);//보험계약정보조회
			});
			promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
				if (rtnValue != ""){
					
				}
			});
			return promise;
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_insuDetail
	// 내용        : 인수제한사유조회
	-----------------------------------*/
	scwin.fn_insuDetail = function() {
		//var result = Open("ssr_pln::B080_Pop.xml", 800, 550, "TaskBar=true Resize=true");
		var promise = Promise.resolve();
		promise = promise.then(function(rtnVal) {
			var indata = new Object();
	 		var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					 	"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
						, "Ds_Pibo" : Ds_Pibo 							// 피보험자 정보 Ds Set 
						, "Ds_LTIDA03" : parent.Ds_LTIDA03  		// 계약자 정보 Ds Set
						, "Ds_LTIDA15" : Ds_LTIDA15  		// 부모창 심사 정보 Ds Set  
						, "medt_PlanNo" : parent.medt_PlanNo 		// 설계번호 Set
						, "edt_sGdCdNm" : parent.edt_sGdCdNm	// 상품명 Set  
					} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
  
			var popInfo = {"width":834,	// 수정(추가) 2017.10.31, by 진태만  --> 834, 449
						   "height":480,
						   "indata":indata,
						   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "callback"  : scwin.popupCallback,
						   "title"     : "인수제한사유조회"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);//인수제한사유조회
		});
		return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : fn_summary()
	// 내용        : 보험료 요약
	//---------------------------------------------------------------------------
	scwin.fn_summary = function() {
		var promise = Promise.resolve();
	    if (wconv.length(Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	        alert("보험료 산출이 되지 않았습니다");
	        return false;
	    }
	    if (Ds_Pibo.getRowCount() == 0) {
	        alert("피보험자 정보가 없습니다");
	        return false;
	    }
	    promise = promise.then(function(rtnVal) {
			var indata = new Object();
			indata.sPlanNo = Ds_LTIDA00.getCellData(0, "sPlanNo"); //설계번호
			indata.sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
			
			var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					 	"Ds_LTIDA00" : Ds_LTIDA00 	// 보험 기본사항 정보 Ds Set	 
						, "Ds_Pibo" : Ds_Pibo 						// 피보험자 정보 Ds Set 
						, "Ds_LTIEA10" : Ds_LTIEA10  			// 부모창 단체 정보 Ds Set
					} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
					
			var popInfo = {"width":825,	// 수정(width, height): 2017.10.31, by 진태만   --> 847, 575
						   "height":550,
						   "indata":indata,
						    "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "callback"  : scwin.popupCallback,
						   "title"     : "보험료 요약"
						  }; 
			return wprom.popupOpen("/ui/cbsc/CBSC058P.xml", popInfo);	// 보험료 요약 팝업
		});
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_hwangup()
	// 내용        : 예상환급금조회
	//---------------------------------------------------------------------------
	scwin.lfn_hwangup = function() {
		var promise = Promise.resolve();
	    if (!CalcPremFlag) {
	        alert("보험료 산출을 해주세요");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) <= 0) {
	        alert("영업보험료가 0원 입니다.\n예상환급금 조회를 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")) <= 0) {
	        alert("적용보험료가 0원 입니다.\n예상환급금 조회를 할수 없습니다.");
	        return false;
	    }
	    promise = promise.then(function(rtnVal) {
			var indata = new Object();
			indata.sPsnGroupFlgcd = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
   
			
			var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
					, "Ds_Pibo" : Ds_Pibo 							// 피보험자 정보 Ds Set 
					, "Ds_Trty" : Ds_Trty  							// 계약자 특약사항 Ds Set 
				} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
				
			var popInfo = {"width":870,
						   "height":700,
						   "indata":indata,
						   "parentObject"    : pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트 // 수정(추가) 2017.10.31, by 진태만 
						   "callback"  : scwin.popupCallback,
						   "title"     : "해지환급금 조회"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC131P.xml", popInfo);	//해지환급금 조회
		});
	    return promise;
	};
	
	/*-----------------------------------
	// function 명 : fn_printInfo
	// 내용        : 안내문발송
	-----------------------------------*/
	scwin.fn_printInfo = function() {
	    var promise = Promise.resolve();
	    if (scwin.lfn_checkPrint("")) {
	        //해약환급금처리
	        parent.scwin.lfn_RtnAmt();
	        var sArg = "";
	        var sPlanNo = parent.medt_PlanNo.getValue();
	        var sPsnGroupFlgcd;
	        if (chk_sPsnGroupFlgcd.getValue() == "1") {
	            sPsnGroupFlgcd = "20";
	        } else {
	            sPsnGroupFlgcd = "10";
	        }
	        
	        var indata = new Object();
	        indata.sPlanNo = sPlanNo;
	        indata.sPsnGroupFlgcd = sPsnGroupFlgcd;//개인단체구분코드
	        indata.sGdCd = parent.edt_sGdCd.getValue();
	        indata.sGdCdNm = parent.edt_sGdCdNm.getValue();
	        indata.sPlanProgRankCd = Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
	        indata.sRdchCrYn = Ds_LTIDA00.getCellData(0, "sRdchCrYn");
	        indata.sCmprCrNotcSsrt = Ds_LTIDA00.getCellData(0, "sCmprCrNotcSsrt");
	        indata.tab = 1;
	        if (parent.sSimpleYn != "Y") {
	        	if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        		promise = promise.then(function(rtnVal) {
	        			var pObj = { 
								"Ds_Pibo" : Ds_Pibo  
								, "DsWs_PrdAttr" : DsWs_PrdAttr
								, "DsWs_LTIDA00" :  parent.DsWs_LTIDA00
       							, "Ds_LTIDA00"   :  Ds_LTIDA00 
						}
				    	var popInfo = {"width":1208,
			    	                   "height":770,
			    	                   "indata":indata,
			    	                   "parentObject"    : pObj,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "안내문발송"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC103M.xml", popInfo);
				    });
				    promise = promise.then(function(rv) {
				    	/*wprom.popupOpen(가이드참조)*/
	                    //if (!mfn_IsEmpty(rv)){
	                    //   parent.DsWs_LTIDA00.setCellData(0, "sSrdoIssuDate", rv);
	                    //   Ds_LTIDA00.setCellData(0, "sSrdoIssuDate", rv);
	                    //}
	
	                    //청약서발행건은 재산출 / 수정 금지
	                    if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && wconv.length(parent.Ds_LTIDA00.getCellData(0, "sSrdoIssuDate")) > 0) {
	                        parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", false); //parent.lfn_ComponentEnable(Tab_Req_Step2, "", false);	
	                    }
					});
	        	}else{
	        		wprom.alert("비대면 채널로 설계한 청약입니다. 상담원시스템으로 로그인하세요.");
	        	/*MS 설계자 요청
	        		promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":656,
			    	                   "height":200,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "대면채널조회"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/D190.xml", popInfo);
				    });*/
	        	}
	        }else{
	        	if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        		var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	                indata.sPlanNo = sPlanNo;
	                indata.sInrpsName = sInrpsName;
	                indata.sSimpleYn = parent.sSimpleYn;
	                indata.sPsnGroupFlgcd = DsWs_LTIDA00.getCellData(0, "DsWs_LTIDA00");
	                promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":690,
			    	                   "height":255,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "증명서신청"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC102P.xml", popInfo);
				    });
	        	}else{
	        		wprom.alert("비대면 채널로 설계한 청약입니다. 상담원시스템으로 로그인하세요.");
	        	/*MS 설계자 요청
	        		var sInrpsName = Ds_Pibo.getCellData(0, "sInrpsName");
	                indata.sPlanNo = sPlanNo;
	                indata.sInrpsName = sInrpsName;
	                promise = promise.then(function(rtnVal) {
				    	var popInfo = {"width":697,
			    	                   "height":210,
			    	                   "indata":indata,
			    	                   "callback"  : scwin.popupCallback,
									   "title"     : "증명서출력"
			    	                  };
			    	    return wprom.popupOpen("/ui/cbsc/CBSC104P.xml", popInfo);
				    });*/
	        	}
	        }
	    }
	    return promise;
	};
	
	/*-----------------------------------
	// function 명 : lfn_ValidationCheck
	// 내용        : 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_ValidationCheck = function(gubun) {
	    var validFlag = false;
	    //변경여부 초기화
	    modifyFlag = false;
	
	    //전체 데이터 체크
	    if (gubun == "all") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00);
	
	        //단체관리 체크
	        if (!validFlag) {
	            //alert("단체관리케드 ==> " + chk_sPsnGroupFlgcd.Value);
	            if ((chk_sPsnGroupFlgcd.getValue() == "1")) {
	                validFlag = scwin.lfn_LTIEA10_ValidationCheck(Ds_LTIEA10);
	            }

	            //피보험자 밸리데이션체크
	            if (!validFlag) {
	                validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	                //특약사항 밸리데이션체크
	                if (!validFlag) {
	                    validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	                }
	            }
	        }
	    } else if (gubun == "level1") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00); //계약기본사항,피보험자 체크
	    } else if (gubun == "level2") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(Ds_LTIDA00);
	        //피보험자 밸리데이션체크
	        if (!validFlag) {
	            validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	        }
	    } else if (gubun == "level3") {
	        validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	
	        //특약사항 밸리데이션체크
	        if (!validFlag) {
	            validFlag = scwin.Trty_ValidationCheck(Ds_Trty);
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_checkMinPremAmt
	// 내용        : 최소영업보험료 체크
	-----------------------------------*/
	scwin.lfn_checkMinPremAmt = function() {
	    /*
	    sPaymCyclCd
	    월납:12
	    2월:06
	    3월:04
	    6월:02
	    연납:01
	    일시납:99
		
	    nMinPremAmt1 : 월납
	    nMinPremAmt2 : 2월납
	    nMinPremAmt3 : 3월납
	    nMinPremAmt4 : 6월납
	    nMinPremAmt5 : 연납
	    nMinPremAmt6 : 일시납
	    */
	    var nPlanRow = wconv.findRow(DsWs_Plan, "sPlanCd", cmb_Plan.getValue());
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12") {
	        var nMinPremAmt1 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt1"));
	        if (nMinPremAmt1 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt1, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "06") {
	        var nMinPremAmt2 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt2"));
	        if (nMinPremAmt2 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt2, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "04") {
	        var nMinPremAmt3 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt3"));
	        if (nMinPremAmt3 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt3, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "02") {
	        var nMinPremAmt4 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt4"));
	        if (nMinPremAmt4 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt4, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "01") {
	        var nMinPremAmt5 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt5"));
	        if (nMinPremAmt5 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt5, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	        var nMinPremAmt6 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt6"));
	        if (nMinPremAmt6 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            alert("영업보험료 " + wconv.numFormat(nMinPremAmt6, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    return true;
	};
	
	/*-----------------------------------
	// function 명 : lfn_LTIEA10_ValidationCheck
	// 내용        : 단체관리 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_LTIEA10_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                colID = obj.getColumnID(j);
	                //trace("colID==="+colID);
	                //단체계약관리번호
	                if (colID == "sGroupCrAdmNo") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("단체계약관리을 선택하세요");
	                        btn_GroupList.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                }
	            }
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_Pibo_ValidationCheck
	// 내용        : 피보험자 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_Pibo_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        var nMinsrRelnCnt = 0;
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                colID = obj.getColumnID(j);
	
	                //피보험자코드
	                if (colID == "sInrpsCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("피보험자코드를 입력하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    var oldModiFlag = modifyFlag;
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                    if (oldModiFlag != "1" && modifyFlag == "1") {
	                        alert("피보험자코드가 변경되었습니다.");
	                        break;
	                    }
	                } else if (colID == "sInrpsName") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        if (parent.sSimpleYn == "Y") {
	                            alert("피보험자명을 입력하세요");
	                        } else {
	                            alert("고객등록을 먼저 해주세요");
	                        }
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //피보험자직업코드
	                } else if (colID == "sJobCd") {
	                    //trace("obj.getCellData(i, colID)::: " + obj.getCellData(i, colID));
	                    if ((mfn_IsEmpty(obj.getCellData(i, colID)) || obj.getCellData(i, colID) == "000000") && parent.sSimpleYn != "Y"){
	                        alert("피보험자직업을 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //피보험자운전용도코드
	                } else if (colID == "sDrveFlagCd") {
	                    /*
	                    if(Ds_LTIDA00.getCellData(0, "sBunsMetdDocuClsfCd") == "2"){
	                    	obj.setCellData(i, colID, "1");	// 1-자가용
	                    }
	                    */
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("피보험자운전용도를 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //주피와의 관계
	                } else if (colID == "sMinsrRelnCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("주피와의 관계를 선택하세요");
	                        obj.getCellData(i, colID);
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                    if (obj.getCellData(i, "sMinsrRelnCd") == "10") {
	                        nMinsrRelnCnt++;
	                    }
	                }
	            }
	            if (validFlag) {
	                return validFlag;
	            }
	            if (parent.sSimpleYn != "Y") {
	                if (wconv.length(Ds_Pibo.getCellData(i, "sAddrFlgcd")) <= 0) {
	                    alert("고객등록을 먼저 해주세요");
	                    validFlag = true;
	                    break;
	                }
	            }
	        }
	        if (nMinsrRelnCnt <= 0) {
	            alert("주피와의관계 [본인]이 없습니다.");
	            validFlag = true;
	        } else if (nMinsrRelnCnt > 1) {
	            alert("주피와의관계 [본인]은 2명 이상일수 없습니다.");
	            validFlag = true;
	        }
	    }
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_LTIDA00_ValidationCheck
	// 내용        : 기본사항 필수값 입력 여부 체크
	-----------------------------------*/
	scwin.lfn_LTIDA00_ValidationCheck = function(obj) {
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        //trace(Ds_LTIDA00.savexml());
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                colID = obj.getColumnID(j);
	
	                //설계번호
	                if (colID == "sPlanNo") {} else if (colID == "sGdCd") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("상품을  선택하세요");
	                        /*MS note 사용여부 문의 필요 설계자 S*/
	                        //btn_sGdCd.focus();
	                        /*MS note 사용여부 문의 필요 설계자 E*/
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //청약일자
	                } else if (colID == "sSsrtDate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("청약일자를 입력하세요");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	                    //trace("gFaceSalesYN = "+gFaceSalesYN);
	                    //trace("sPlanProgRankCd = "+Ds_LTIDA00.getCellData(0,"sPlanProgRankCd"));
	                    //trace("일자 " + substr(parent.sToday,0,6) + ":" + substr(obj.getCellData(i, colID),0,6));
	                    //비대면이고, 청약일이 현재일이 아니면(월)
	                    if (parent.sScanObjtYn != "Y" && 
	                    	Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "00" && //완료
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "52" && //인수요청	
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "53" && //진단심사중
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "57" && //인수불가(거절)
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "58" && 
	                        //parent.sToday != obj.getCellData(i, colID)){
	                        //조건부승인
	                        //parent.sToday != obj.getCellData(i, colID)){
	                        wconv.substr(parent.sToday, 0, 6) != wconv.substr(obj.getCellData(i, colID), 0, 6)) {
	                        alert("복사후 재설계하여 주시기 바랍니다. ");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	
	                    //대면이고, 청약월 현재일인지 체크(월)
	                    if (parent.sScanObjtYn == "Y" && 
	                    	Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "00" && //완료
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "52" && //인수요청	
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "53" && //진단심사중
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "57" && //인수불가(거절)
	                        Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "58" && //조건부승인
	                        wconv.substr(parent.sToday, 0, 6) != wconv.substr(obj.getCellData(i, colID), 0, 6)) {
	                        //substr(parent.sToday,0,6) != substr(obj.getCellData(i, colID),0,4)){ //잠시 테스트를 위해서 해제.(ldh)
	                        alert("복사후 재설계하여 주시기 바랍니다. ");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	
	                    //10영업일이 지난건인지 확인. ->15일(2016.03.07)
	                    //alert( parent.sToday + ":" + addBizDaysForBank(obj.getCellData(i, colID), 7) + ":" + Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") + ":" + obj.getCellData(i, colID));
	                    /*	 if (parent.sScanObjtYn == "Y" && 
	                    		Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "00" && 	//완료
	                    		Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "52" &&	//인수요청	
	                    		Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "53" &&	//진단심사중
	                    		Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "57" &&	//인수불가(거절)
	                    		Ds_LTIDA00.getCellData(0,"sPlanProgRankCd") != "58" &&	//조건부승인
	                    		parent.sToday >= addBizDaysForBank(obj.getCellData(i, colID), 15)){ 
	                    		alert("청약일자로부터 15영업일 이내 입금가능합니다. ");
	                    	    
	                    		cal_sSsrtDate.SetFocus();
	                    		validFlag = true;
	                    		break;
	                    	}
	                    */
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //보험시작일자
	                } else if (colID == "sInsurStrtdate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("보험시작일자를 입력하세요");
	                        cal_sInsurStrtdate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //보험종료일자
	                } else if (colID == "sInsurEndDate") {
	                    if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("보험종료일자를 입력하세요");
	                        cal_sInsurEndDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //납입주기코드
	                } else if (colID == "sPaymCyclCd") {
	                	if (mfn_IsEmpty(obj.getCellData(i, colID))) {
	                        alert("납입주기를 입력하세요");
	                        cmb_PaymCycl.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //영업보험료
	                } else if (colID == "nBussPrem") {
	                    //보험료계산시엔 check하지않는다.
	                    if (except != "calPrem") {
	                        if (wconv.toNumber(obj.getCellData(i, colID)) < wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMinPrem")) || wconv.toNumber(obj.getCellData(i, colID)) > wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMaxPrem"))) {
	                            if (medt_nBussPrem.getDisabled() == false) {
	                                alert("영업보험료는 최소/최대보험료 사이값으로 입력해야 합니다..");
	                            } else {
	                                if (DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd") == "1") {
	                                    alert("자유설계형으로 설계바랍니다.");
	                                } else {
	                                    alert("종합형으로 설계바랍니다.");
	                                }
	                            }
	                            medt_nBussPrem.focus();
	                            validFlag = true;
	                            break;
	                        }
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                } else if (colID == "sPeriMwayWdraYn") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //개인단체구분
	                } else if (colID == "sPsnGroupFlgcd") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                }
	            }
	        }
	    }
	
	    //플랜체크
	    if (wconv.length(Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) > 0) {
	        if (cmb_Plan.getValue() != Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) {
	            modifyFlag = true;
	        }
	    }
	    //trace(cmb_Plan.Value+"==="+Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")); 
	    return validFlag;
	};
	
	/*-----------------------------------
	// function 명 : lfn_getInsPaymTerm
	// 내용        : 피보험자별 특약별 보기/납기를 조회한다.
	-----------------------------------*/
	scwin.lfn_getInsPaymTerm = function(obj, sPlanCd, sInrpsCd) {
		obj.removeAll();
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB022Task", "getInsPaymTerm", "", "");
		MethodObj.setId("getInsPaymTerm");
	   	MethodObj.setParam("sGdCd", sGdCd); //상품코드
	   	MethodObj.setParam("sGnrzCd", sGnrzCd); //종형코드
	   	MethodObj.setParam("sPlanCd", sPlanCd); //플랜코드
	   	MethodObj.setParam("sResno", sInrpsCd); //피보험자주민번호
	   	
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간	
	    MethodObj.setXPath("//hashtable/data[@hashkey='trtyTermList']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
			if (obj.getID() == "DsWs_TrtyTerm_0") {
				DsWs_TrtyTerm_0.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_1") {
		        DsWs_TrtyTerm_1.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_2") {
		        DsWs_TrtyTerm_2.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_3") {
		        DsWs_TrtyTerm_3.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_4") {
		        DsWs_TrtyTerm_4.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_5") {
		        DsWs_TrtyTerm_5.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_6") {
		        DsWs_TrtyTerm_6.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_7") {
		        DsWs_TrtyTerm_7.setJSON(_tranSync.getDsJson("multi"));
		    } else if (obj.getID() == "DsWs_TrtyTerm_8") {
		        DsWs_TrtyTerm_8.setJSON(_tranSync.getDsJson("multi"));
		    }			
		}
	};
	
	/*-----------------------------------
	// function 명 : lfn_InsurTermPaymTermChangedPibo
	// 내용        : 피보험자별 납입기간 셋팅
	-----------------------------------*/
	scwin.lfn_InsurTermPaymTermChangedPibo = function(rowIdx) {
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(rowIdx, "sInrpsCd")); //피보험자주민번호
	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(rowIdx, "sDrveFlagCd")); //운전자 구분코드
	    //var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var exArr = cmb_InsurTermPaymTerm.getValue()!=null?cmb_InsurTermPaymTerm.getValue().split("/"):"/".split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    MethodObj.setUrl("/contract/CBSC015MController.do");
	    MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
	    MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
			//보험기간
			DsWs_InsurTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"));
			DsWs_PaymTerm.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"));
			
			//trace("보험기간=="+DsWs_InsurTerm.SaveXML());	
	        //trace("납입기간=="+DsWs_PaymTerm.SaveXML());	
	        //Ds_Trty.FireEvent = false;
	        var arrtrty = util.getDataListEvent(Ds_Trty);
	        util.removeAllDataListEvent(Ds_Trty);
	        
	        //보험기간,납입기간 초기값 세팅
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        	if (util.getCellDataF(Ds_Trty, i, "nPsnPrprtGroupSeqno") == Ds_Pibo.getCellData(rowIdx, "nInrpsSeqno")) {
	                for (var j = 0; j < DsWs_InsurTerm.getRowCount(); j++) {
	                	if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == DsWs_InsurTerm.getCellData(j, "sTrtyCd")) {
	                		util.setCellDataF(Ds_Trty, i, "sInsurTermCd", DsWs_InsurTerm.getCellData(j, "sInsurTermCd"));
	                        if (util.getCellDataF(Ds_Trty, i, "InrtmPytrMdfcYn") == "Y" && util.getCellDataF(Ds_Trty, i, "sTrtyCd") == "21020401") {}
	                        //trace(i+"==sInsurTermCd=="+Ds_Trty.getCellData(i, "sInsurTermCd")+"]");
	                        break;
	                    }
	                }
	                //납입기간 초기값세팅
	                for (var j = 0; j < DsWs_PaymTerm.getTotalRow(); j++) {
	                	if (util.getCellDataF(Ds_Trty, i, "sTrtyCd") == DsWs_PaymTerm.getCellData(j, "sTrtyCd")) {
	                		util.setCellDataF(Ds_Trty, i, "sPaymTermCd", DsWs_PaymTerm.getCellData(j, "sPaymTermCd"));
	                        //trace("sPaymTermCd=="+Ds_Trty.getCellData(i, "sPaymTermCd")+"]");					
	                        break;
	                    }
	                }
	            }
	        }
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_checkPrint
	// 내용        : 인쇄시 check사항
	//---------------------------------------------------------------------------
	scwin.lfn_checkPrint = function(PrintGubun) {
	    if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
	        alert("인수금지 대상입니다. 인수제한사유를 확인하세요\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) <= 0) {
	        alert("영업보험료가 0원 입니다.\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")) <= 0) {
	        alert("적용보험료가 0원 입니다.\n" + PrintGubun + "발송을 할수 없습니다.");
	        return false;
	    }
	    return true;
	};
	
	// function 명 : Ds_Pibo_OnRowPosChanged
	// 내용        : 피보험자 선택 변경시
	//2015.01.29 추가 By PCM
	//---------------------------------------------------------------------------
	scwin.Ds_Pibo_OnRowPosChanged = function(info) {
		//alert(JSON.stringify(info));
		//info.oldRowIndex
		//info.newRowIndex
	    //첫번째 피보험자를 주피로 설정
	    if(info.newRowIndex != null && info.newRowIndex == 0) {
	    	Ds_Pibo.setCellData(info.newRowIndex, "sMinsrRelnCd", "10");
	    }
	    if(info.oldRowIndex != null && info.oldRowIndex == 0) {
	    	Ds_Pibo.setCellData(info.oldRowIndex, "sMinsrRelnCd", "10");
	    }
	};

	//---------------------------------------------------------------------------
	// function 명 : Ds_Pibo_OnColumnChanged
	// 내용        : 피보험자의 운전용도 변경
	//2015.12.04 추가 By PCM
	//---------------------------------------------------------------------------
	scwin.Ds_Pibo_OnColumnChanged = function(info) {
	//info.rowIndex
	//info.colID
	//info.oldValue
	//info.newValue를
	//alert("pibo-columnchanged")
	//alert(JSON.stringify(info));
		if(info.colID == "sDrveFlagCd"){
			var sDrveFlagCd = "";
	        scwin.Grd_Pibo_OnCellClick(info.rowIndex, 0);
			
			if(info.rowIndex >= 0){
				sDrveFlagCd = Ds_Pibo.getCellData(info.rowIndex, "sDrveFlagCd");//운전용도
			}else{
				sDrveFlagCd = Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sDrveFlagCd");//운전용도
			}
			
			//Ds_Trty.FireEvent = false;
			var arrtrty = util.getDataListEvent(Ds_Trty);
			util.removeAllDataListEvent(Ds_Trty);
			
			if(wconv.substr(sSimpleCd,7,6) != "000000"){
				if(sDrveFlagCd == "2"){
					for(var i=0; i < Ds_Trty.getRowCount(); i++){
						if(Ds_Trty.getCellData(i,"BussInsAvaYn") != "Y"){
							Ds_Trty.setCellData(i, "chk", "0");
						}
					}
				}
				
				if((sDrveFlagCd == "1") || (sDrveFlagCd == "2")){
					for(var i=0; i < Ds_Trty.getRowCount(); i++){
			
						if(Ds_Trty.getCellData(i,"DrveFlag") == "2"){
							Ds_Trty.setCellData(i,"chk", "0");
						}else if(Ds_Trty.getCellData(i,"DrveFlag") == "1"){
							Ds_Trty.setCellData(i,"chk", "1");
						}
						//교통사고처리지원금,중상해교통사고처리지원금 베타관계로 중상해교통사고처리지원금기본세팅을 교통사고처리지원금으로 세팅하기위해.
						if( Ds_Trty.getCellData(i,"sTrtyCd") == "23092301"
						 || Ds_Trty.getCellData(i,"sTrtyCd") == "23102301"
						 || Ds_Trty.getCellData(i,"sTrtyCd") == "23112301"
						 || Ds_Trty.getCellData(i,"sTrtyCd") == "23122301"
						 || Ds_Trty.getCellData(i,"sTrtyCd") == "23132301"   // 2018 상품개정
						  ) {
							Ds_Trty.getCellData(i,"chk", "0");
						}
					}
				}
				
				if(sDrveFlagCd == "3"){
					for(var i=0; i < Ds_Trty.getRowCount(); i++){
						if(Ds_Trty.getCellData(i, "DrveFlag") == "1"){
							Ds_Trty.setCellData(i, "chk", "0");
						}else if(Ds_Trty.getCellData(i, "DrveFlag") == "2"){
							Ds_Trty.setCellData(i, "chk", "1");
						}
					}
				}
			}
			
			sSimpleCd = "";
			//특약관계체크
			scwin.lfn_TrtyList_Relation_Check();	
			//Ds_Trty.FireEvent = true;
			util.setDataListEvent(Ds_Trty, arrtrty);
		}
		
		//고객선택시 기존계약의 직업과 현재 직업차이 확인
		if(info.colID == "sJobCd"){
			if(info.newValue != "" && parent.sSimpleYn != "Y") {
				//trace("sJobCd : " + sJobCd);
				wconv.clear(DsWs_PvcrJob);
				
				var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getPvcrJobCnfm", "", "");
                MethodObj.setId("getPvcrJobCnfm");
                MethodObj.setParam("sInrpsCd", Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"));
                MethodObj.setParam("sJobCd", info.newValue);
                MethodObj.setUrl("/contract/CBSC015MController.do");
				MethodObj.setXPath("//vector/data/LTIEA01Job");
				MethodObj.addXPath("//WARNING");
				MethodObj.sync();
				MethodObj.send();
                
                util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
		        if (DsWs_Warning.getRowCount() != 0){
		        	alert(DsWs_Warning.getCellData(0, "msg"));
		        	return;
		        }else{
					//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
					DsWs_PvcrJob.setJSON(_tranSync.getDsJson("LTIEA01Job"));	// dataset 데이터
				    
				    if (DsWs_PvcrJob.getRowCount() > 0) {
	                    var msg = Ds_Pibo.getCellData(info.rowIndex, "sInrpsName") + " 고객님의 직업은 당사기존에 체결된 계약에서의 직업과 \n상이합니다.\n" + "확인 후 기존계약의 직업을 변경하거나 신규 직업을 변경하여 \n등록하시기 바랍니다.\n" + "[중요]직업이 정확하지 않은 경우 향후 고지의무위반이나 통지\n의무위반으로 " + "가입자 및 모집자 모두에게 불이익이 발생할 수 \n있습니다.\n\n" + "* 기존계약번호 : " + DsWs_PvcrJob.getCellData(0, "sCrNo") + "\n" + "* 직업 : " + DsWs_PvcrJob.getCellData(0, "sJobName") + "(" + DsWs_PvcrJob.getCellData(0, "sJobCd") + ")";
	                    alert(msg);
	                }
				}
			}
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : ds_Trty_OnColumnChanged()
	// 내용        : 특약그리드 값 변경시 처리
	//---------------------------------------------------------------------------
	scwin.ds_Trty_OnColumnChanged = function(info) {
	    //wconv.trace(strColumnID);
	    switch (info.colID) {
	        case "sInsurTermCd":
	            //보험기간별 납입기간 조회
	            scwin.lfn_PaymTerm(info.rowIndex, info.colID);
	            //보험기간종료일자 setting
	            cal_sInsurEndDate.setValue(scwin.lfn_endDate(cal_sInsurStrtdate.getValue(), Ds_Trty.getCellData(info.rowIndex, "sInsurTermCd"), Ds_Pibo.getCellData(0, "sInrpsCd")));
	            //ds_Trty.SetColumn(info.rowIndex, "sPaymTermCd", DsWs_PaymTerm.getCellData(0, "sPaymTermCd"));
	            break;
	        default:
	            break;
	    }
	};
	
	/*-----------------------------------
	// function 명 : lfn_PaymTerm
	// 내용        : 보험기간별 납입기간 조회
	-----------------------------------*/
	scwin.lfn_PaymTerm = function(nRow, strColumnID) {
	    if (Ds_Pibo.getRowCount() == 0) {
	        alert("피보험자를 입력하세요");
	        //Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	        var arrtrty = util.getDataListEvent(Ds_Trty);
	        util.removeAllDataListEvent(Ds_Trty);
	        Ds_Trty.setCellData(nRow, "sInsurTermCd", "");
	        //Ds_Trty.FireEvent = true;
	        util.setDataListEvent(Ds_Trty, arrtrty);
	        return false;
	    }
	    wconv.clear(DsWs_PaymTerm);
	    var MethodObj = new callService("com.inswave.longterm.prd.rle.task.BCA730Task", "getPaymTermRule", "", "");
	    MethodObj.setId("getPaymTermRule");
	    Ds_Single.removeAll();
	    Ds_InPayTerm.removeAll();
	    util.appendRow(Ds_Single);
	    Ds_Single.setCellData(0, "sGdCd", sGdCd);
	    Ds_Single.setCellData(0, "sStndDate", parent.cal_sSsrtDate.getValue());
	    Ds_Single.setCellData(0, "sResno", Ds_Pibo.getCellData(0, "sInrpsCd"));
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") == 1 && Ds_Trty.getCellData(i, "sInsurTermCd") != "") {
	            util.appendRow(Ds_InPayTerm);
	            wconv.mi_copyRow(Ds_Trty.getID(), i, Ds_InPayTerm.getID(), Ds_InPayTerm.getRowPosition());
	            Ds_InPayTerm.setCellData(Ds_InPayTerm.getRowPosition(), "sStandardDate", parent.cal_sSsrtDate.getValue());
	        }
	    }
	    if (Ds_InPayTerm.getRowCount() == 0) {
	        alert("특약사항을 선택하세요");
	        return false;
	    }
	    MethodObj.addSingleData("single", "single", Ds_Single.getID());
	    MethodObj.addVectorData("multi", "LTmultiIDA02", Ds_InPayTerm.getID());
		MethodObj.setHashTable();
	
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), warn);
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
	    	DsWs_PaymTerm.setJSON(_tranSync.getDsJson("multi"));
	        if (DsWs_PaymTerm.getRowCount() == 0) {
	            alert("납입기간이 없습니다.");
	        }
	    }
	};
	
	scwin.lfn_InitInsPaymTerm = function() {
	    // 2018 상품개정
		if((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128") ){ // 2018 상품개정
	        for (var i = 0; i < Ds_Pibo.getTotalRow(); i++) {
	            scwin.lfn_getInsPaymTerm(eval("DsWs_TrtyTerm_" + i), cmb_Plan.getValue(), Ds_Pibo.getCellData(i, "sInrpsCd"));
	        }
	        
	        //grd_sTrty.SetCellProp("Body", 3, "ComboDataset", "DsWs_TrtyTerm_0");
	        //util.setLinkedDataListChangeBind(lk_InsurTerm, "DsWs_TrtyTerm_0", util.getLinkedCondition(lk_InsurTerm));
	        wconv.clear(DsWs_TrtyTerm);
	        util.copyM(DsWs_TrtyTerm, DsWs_TrtyTerm_0.getAllJSON());
	        
	        parent.wconv.copy(parent.Ds_TrtyTerm_0, DsWs_TrtyTerm_0);
	        parent.wconv.copy(parent.Ds_TrtyTerm_1, DsWs_TrtyTerm_1);
	        parent.wconv.copy(parent.Ds_TrtyTerm_2, DsWs_TrtyTerm_2);
	        parent.wconv.copy(parent.Ds_TrtyTerm_3, DsWs_TrtyTerm_3);
	        parent.wconv.copy(parent.Ds_TrtyTerm_4, DsWs_TrtyTerm_4);
	        parent.wconv.copy(parent.Ds_TrtyTerm_5, DsWs_TrtyTerm_5);
	        parent.wconv.copy(parent.Ds_TrtyTerm_6, DsWs_TrtyTerm_6);
	        parent.wconv.copy(parent.Ds_TrtyTerm_7, DsWs_TrtyTerm_7);
	        parent.wconv.copy(parent.Ds_TrtyTerm_8, DsWs_TrtyTerm_8);
	    }
	};
	
	//Grd_Pibo 클릭된 Row Cell 값 저장
	var nPiboRow = 0;
	var nPiboCell = 0;
	var bPopUpCheck = true; //중복팝업 제어
	//---------------------------------------------------------------------------
	// function 명 : Grd_PiboLIst_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
	// 내용        : 그리드에서 클릭시 처리
	//---------------------------------------------------------------------------
	scwin.Grd_Pibo_OnCellClick = function(nRow, nCell) {
		switch (Grd_Pibo.getColumnID(nCell)){
			case "sel":
				window.top.util.winTopShowModalChk = "T"
 				util.winTopShowModal();
 				setTimeout(
 					function(){
						try{
							//runOnCellPosChanged = false;
							//if (Ds_Pibo.getCellData(nRow, "sel") == "1") {
							    runOnCellPosChanged = true;
							    scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, 0);
				            //}
						}
						finally{
							util.winTopHideModal();
						}
 					}
					,500
 				);
			break;
			case "sInrpsCd":
				nInrpsAgeOld = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        	nManAgeOld = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
			break;
			case "btn_GridRow_Search":
				nInrpsAgeOld = gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        	nManAgeOld = gfn_getAge(Ds_Pibo.getCellData(nRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	        	if(bPopUpCheck){
		        	runOnCellPosChanged = true;
		            //CellClick 과 PosChanged 동시에 발생을 막기 위해
		            if (nPiboRow == nRow && nPiboCell == nCell) {
		            	scwin.Grd_Pibo_OnCellPosChanged(nRow, nCell, nRow, 2);
		            }
	            }
			break;
			case "btn_Job_Search":
				var promise = Promise.resolve();
				promise = promise.then(function(rv) {
					return scwin.lfn_searchJobCd(nRow);
				});
				promise = promise.then(function(rv) {
					if ((wconv.length(parent.edt_sGdCd.getValue()) > 0) && (Ds_Trty.getRowCount() < 1)) {
	                    //특약이 없는 경우 특약조회 
	                    runOnCellPosChanged = true;
	                    scwin.Grd_Pibo_OnCellPosChanged(nRow, 0, nRow, 0);
	                }
	                nPiboCell = nCell;
        			nPiboRow = nRow;
                });
                return;
			break;
		}
		nPiboCell = nCell;
        nPiboRow = nRow;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Grd_Pibo_OnCellPosChanged
	// 내용        : Cell Index Changed
	//---------------------------------------------------------------------------
	scwin.Grd_Pibo_OnCellPosChanged = function(nRow, nCell, nOldRow, nOldCell) {
		//최초생성시 혹은 다른 포커스에서 변경시 -1이 nOldRow로 넘어옴 다른 로직에 영향을 주므로 Return 시킨다
		
		nPiboCell = nCell;
		nPiboRow = nRow;
		
		if(runOnCellPosChanged == false){
			return;
		}
		
		//주민번호 선택
		if((Grd_Pibo.getColumnID(nOldCell) != null && Grd_Pibo.getColumnID(nOldCell) == "sInrpsCd") || Grd_Pibo.getColumnID(nCell) == "btn_GridRow_Search"){
			if(wconv.length(Ds_Pibo.getCellData(nOldRow, "sInrpsCd")) > 0 && scwin.lfn_ChkPersonID(Ds_Pibo.getCellData(nOldRow, "sInrpsCd"))) {
				//보험나이계산
				Ds_Pibo.setCellData(nOldRow, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nOldRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
				Ds_Pibo.setCellData(nOldRow, "nManAge", gfn_getAge(Ds_Pibo.getCellData(nOldRow, "sInrpsCd"), parent.cal_sSsrtDate.getValue())); //만나이
			}else{
				//Ds_Pibo.FireEvent = false;
				var arrpibo = util.getDataListEvent(Ds_Pibo);
				util.removeAllDataListEvent(Ds_Pibo);
				//Ds_Pibo.row = nOldRow;
				Ds_Pibo.setRowPosition(nOldRow, false);
								
				if(parent.sSimpleYn != "Y"){
					if(Grd_Pibo.getColumnID(nCell) == "btn_GridRow_Search"){
						alert("주민번호를 정확히 입력해 주세요.");
					}else if(Grd_Pibo.getColumnID(nCell) == "sel"){
						wconv.moveToNextCell(Grd_Pibo.getID());
						wconv.moveToNextCell(Grd_Pibo.getID());
					}else if(Grd_Pibo.getColumnID(nCell) == "sInrpsFlagCd"){
						alert("주민번호를 정확히 입력해 주세요.");
					}
					
					if(scwin.lfn_simpleChkPersonID(Ds_Pibo.getCellData(nOldRow, "sInrpsCd")) == false){
						Ds_Pibo.setCellData(nOldRow, "nInrpsAge", "");
						Ds_Pibo.setCellData(nOldRow, "nManAge", "");
						wconv.moveToNextCell(Grd_Pibo.getID());
						return;
					}
				}
				//Ds_Pibo.FireEvent = true;
				util.setDataListEvent(Ds_Pibo, arrpibo);
			}
		}

		if(Grd_Pibo.getColumnID(nCell) == "sel"){
			//현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
			for(var i=0; i < Ds_Pibo.getRowCount(); i++){
				if(i == nRow){
					Ds_Pibo.setCellData(i, "sel", "1");
				}else{
					Ds_Pibo.setCellData(i, "sel", "0");
				}
			}
			
			//피보험자에 해당하는 특약사항을 조회한다.
			if(wconv.length(parent.edt_sGdCd.getValue()) > 0){
				scwin.lfn_searchPiboTrty(Grd_Pibo, nRow);
			}
			
			if(wconv.length(parent.cal_sSsrtDate.getValue()) == 0){
				alert("청약일을 선택하세요.");
				return;
			}
	 		if(Number(nOldRow) >= 0 && wconv.length(Ds_Pibo.getCellData(nOldRow, "sInrpsCd")) == 0){
				alert("피보험자주민번호를 입력하세요");
				if(Grd_Pibo.getColumnID(nCell) == "btn_GridRow_Search"){
					wconv.moveToPrevCell(Grd_Pibo.getID());
				}
				return;
			}
			
			if(Ds_Trty.getRowCount() > 0){
				chkMedical = false;
				validFlag = scwin.Trty_ValidationCheck(Ds_Trty);	
				chkMedical = true;
				if(validFlag == true){
					return;
				}
			}
			
			//N1602-00252:장기보험 신상품 전산 개발 요청
			// 2018 상품개정
			if((sGdCd == "2900") || (sGdCd == "2901") || (sGdCd == "2902") || (sGdCd == "2120") || (sGdCd == "2126") || (sGdCd == "2122") || (sGdCd == "2128")){// 2018 상품개정
				scwin.lfn_getInsPaymTerm(eval("DsWs_TrtyTerm_"+nRow), cmb_Plan.getValue(), Ds_Pibo.getCellData(nRow, "sInrpsCd"));
				wconv.copy(eval("parent.Ds_TrtyTerm_"+nRow), eval("DsWs_TrtyTerm_"+nRow));
				//grd_sTrty.SetCellProp("Body",3,"ComboDataset","DsWs_TrtyTerm_"+nRow);
				//util.setLinkedDataListChangeBind(lk_InsurTerm, "DsWs_TrtyTerm_"+nRow, util.getLinkedCondition(lk_InsurTerm));
				wconv.clear(DsWs_TrtyTerm);
	        	util.copyM(DsWs_TrtyTerm, $w.data["DsWs_TrtyTerm_"+nRow].getAllJSON());
			}else{
				//grd_sTrty.SetCellProp("Body",3,"ComboDataset","DsWs_TrtyTerm");
				//util.setLinkedDataListChangeBind(lk_InsurTerm, "DsWs_TrtyTerm", util.getLinkedCondition(lk_InsurTerm));
			}
			
			runOnCellPosChanged = false;  // 재실행 방지
		}
		
		if((Grd_Pibo.getColumnID(nOldCell) != null && Grd_Pibo.getColumnID(nOldCell) == "sInrpsCd") && Grd_Pibo.getColumnID(nCell) == "btn_GridRow_Search"){
			//Grd_Pibo.SetCellPos(3);
			//Grd_Pibo_OnKillFocus(obj);
			//고객화면 오픈
			if(bPopUpCheck){
				bPopUpCheck = false;
				scwin.lfn_searchCust(nRow, nCell, 0, 0);
			}
		}
		//nOldRow
		//nOldCell
	};
	
	// 간편설계시 주민번호 뒷자리를 모두 "000000" 셋팅
	scwin.Grd_Pibo_OnChar = function(info) {
		if(Grd_Pibo.getColumnID(info.colIndex) == "sInrpsCd" && parent.sSimpleYn == "Y" && wconv.length(wconv.replace(wconv.replace(info.newValue,"_",""),"-","")) >= 7){
			wconv.moveToNextCell(Grd_Pibo.getID());
			wconv.moveToNextCell(Grd_Pibo.getID());

			Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	        Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "nManAge", gfn_getAge(Ds_Pibo.getCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
			Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd", wconv.left(wconv.replace(info.newValue,"-",""),7)+"000000");

			//MS 이벤트 이후 SetValue 가 되어서 Value 설정
			//setTimeout(function(){Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(info.rowIndex), "sInrpsCd", wconv.left(wconv.replace(info.newValue,"-",""),7)+"000000");},500);
		}
	};
	
	//간편산출 주민번호 복사시에 기존 데이터 삭제후 복사 처리.
	//Ctrl+v(붙여넣기)시에 기존 데이터 삭제후 처리.
	scwin.Grd_Pibo_OnKeyDown = function(e) {
		if ((Grd_Pibo.getFocusedColumnID() == "sInrpsCd") && ((parent.sSimpleYn == "Y"))) {
		    if (crtlDown && e.keyCode == 86) {
				Ds_Pibo.setCellData(Grd_Pibo.getRealRowIndex(Grd_Pibo.getFocusedRowIndex()), "sInrpsCd", "");
	        }    
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Moni
	// 내용        : 모니터링 클릭시 이벤트 처리
	//---------------------------------------------------------------------------
	scwin.lfn_Moni = function(obj) {
		var promise = Promise.resolve();
    	promise = promise.then(function(rtnVal) {
			var indata = new Object();
			indata.sPlanNo = parent.medt_PlanNo.getValue();
			indata.sFlag = "b";
			var popInfo = {"width":737,
						   "height":471,
						   "indata":indata,
						   "callback"  : scwin.popupCallback,
						   "title"     : "모니터링"
						  };
			return wprom.popupOpen("/ui/cbsc/CBSC051P.xml", popInfo);//모니터링
		});
		promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
			if (rtnValue != ""){
				
			}
		});
		return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 그리드 헤더 체크
	//---------------------------------------------------------------------------
	scwin.grd_Trty_head_Check = function(){
		if(trtyChk == "1" && (Ds_Trty.getRowCount() == 0 || wconv.length(Ds_Trty.getMatchedData("chk", "0", true)) < 1)){
	        $("#grd_sTrty_gh101").html("<img src='/cm/images/chkon.jpg'/>");
	    }else{
	    	$("#grd_sTrty_gh101").html("<img src='/cm/images/chkoff.jpg'/>");
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : MY Plan 조회
	//---------------------------------------------------------------------------
	scwin.btn_MyPlanView_onclick = function() {
		var promise = Promise.resolve();
		if (Ds_Pibo.getRowCount() != 0 && wconv.length(Ds_Pibo.getCellData(0, "sInrpsName")) > 0) {
			promise = promise.then(function(value) {
				var indata = new Object();
				indata.sJupiCode = Ds_Pibo.getCellData(0, "sInrpsCd");
				indata.sGdCd = parent.edt_sGdCd.getValue();
				indata.sGdName = parent.edt_sGdCdNm.getValue();
				indata.sGnrzCd = parent.edt_sGnrzCd.getValue();
				indata.sPsnPrprtGroupFlgcd = "0";
				indata.sDoer = parent.scwin.lfn_GetDoerUser();
				indata.sDoerTeamCd = parent.edt_sDoerCentrCd.getValue();
				var popInfo = {"width":756,
	    	                   "height":537,
	    	                   "indata":indata,
//	    	                   "callback"  : scwin.call_Plan_Search,
							   "title"     : "마이플랜조회"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbsc/CBSC049P.xml", popInfo);
			});
			promise = promise.then(function(result) {
				return util.winTopShowModalPromise(result);
			});
		    promise = promise.then(function(result) {
		    	//alert(JSON.stringify(result));
		    	if (result != null && result != undefined) {
		    		scwin.call_Plan_Search(result);
				}
				util.winTopHideModal();
		    });
	    }else {
	        alert("피보험자사항을 등록해 주세요.");
	    }
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 플렌조회
	//---------------------------------------------------------------------------
	scwin.call_Plan_Search = function(result){
		var data = result.split("^");
   		if(data.length == 2){
			if (wconv.length(data[0]) == 0) {
		        alert("등록된 플렌의 청약번호에 이상이 있습니다.");
		        return false;
		    }else{
		    	parent.scwin.lfn_Plan_Search(data[0]);
		    }
		}
	}
	
	scwin.btn_MyPlanReg_onclick_Async = function(){
		util.eventAsyncCall(this, scwin.btn_MyPlanReg_onclick, arguments);
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : MY Plan 등록
	//---------------------------------------------------------------------------
	scwin.btn_MyPlanReg_onclick = function() {
		var planNo = "";
		try{
			if (wconv.length(wconv.trim(parent.edt_sGdCd.getValue())) < 1) { 
				alert("상품을 선택하세요.");
				return false;
			}
			//가입가능상품 check
		    if (scwin.lfn_GoodsSearch() == false) {
		        alert("플랜등록이 불가능한 청약번호입니다.");
		        return false;
		    }
			//가입가능상품 check
		    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
		        if (Ds_Pibo.getCellData(i, "sDrveFlagCd") == "2") {
		            alert("영업용운전자는 가입금지입니다");
		            return false;
		        }
		    }
		    var sStdDate = "20110805"; //질의서 B230_Div3_Pop 기준일
		    if (util.getGdsValue("gProdYN") == "N") {
		        sStdDate = "20110804";
		    }
		    if (Ds_LTIDA00.getCellData(0, "sSsrtDate") < sStdDate) {
		        alert("플랜등록이 불가능한 청약번호입니다.");
		        return false;
		    }
			if (!CalcPremFlag) {
		        alert("보험료 산출을 해주세요");
		        return false;
		    }
	    	if (parent.sSimpleYn == "Y") {
	    		Ds_Pibo.setCellData(0, "sInrpsSexFlag", scwin.lfn_getSex(Ds_Pibo.getCellData(0, "sInrpsCd")));	 //피보험자성별구분
	    	}
	    	planNo = scwin.lfn_Plan_Calc();
	    }finally{
	    }
		
		if (wconv.length(planNo) <= 0) {
	        alert("플랜등록을 생성할수 없습니다.");
	        return;
	    }
		var promise = Promise.resolve();
		promise = promise.then(function(value) {
			var indata = new Object();
			indata.sPlanNo = planNo;
			var popInfo = {"width":570,
               "height":205,
               "indata":indata,
               //"callback"  : scwin.popupCallback,
				"title"     : "마이플랜관리"
			};
			return wprom.popupOpen("/ui/cbsc/CBSC135P.xml", popInfo);
		});
//	    promise = promise.then(function(result) {
	    	//alert(JSON.stringify(result));
//	    	var rtnValue = wprom.getReturnData();
//	    	if (rtnValue != "") {
				//id_rtn.setValue( rtnValue );
//			}
//	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 플렌 등록을 위한 계산
	//---------------------------------------------------------------------------
	scwin.lfn_Plan_Calc = function(){
		var result = "";
		
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB010Task", "setBasicPibo", "", "");
	    MethodObj.setId("setBasicPibo");
	    
	    //체크된 특약만 보관
	    scwin.lfn_make_Ds_Trty_Save();
	    
	    MethodObj.setParam("sUserId", util.getGdsValue("gUserID"));
		//계약기본사항을 담는다
		util.dataListCloneCopy(Ds_LTIDA00, "tm_LTIDA00", "0");
		$w.data["tm_LTIDA00"].setCellData(0, "sPlanNo", "");
		//세금우대 미가입
	    $w.data["tm_LTIDA00"].setCellData(0, "sTaxPrfrYn", "N");
	    //청약서발행일자
	    $w.data["tm_LTIDA00"].setCellData(0, "sSrdoIssuDate", "");
		//복사시 심의결과코드 지움(2011.05.18 김상운)
	    $w.data["tm_LTIDA00"].setCellData(0, "sConuResltCd", "");
	    //복사시 비교계약안내 확인여부 제거
	    $w.data["tm_LTIDA00"].setCellData(0, "sCmprCrNotcSsrt", "");
	    $w.data["tm_LTIDA00"].setCellData(0, "sCmprCrNotcCncl", "");
	    //MS 플랜등록시 추가 설정값
	    $w.data["tm_LTIDA00"].setCellData(0, "sPlanProgRankCd", "99");
	    
		MethodObj.addSingleData("LTIDA00", "LTIDA00", "tm_LTIDA00");// 계약기본사항정보
		
		if(Ds_LTIEA10.getRowCount() < 1){Ds_LTIEA10.insertRow();}
		MethodObj.addSingleData("LTIEA10", "LTIEA10", Ds_LTIEA10.getID());// 단체취급정보
		wconv.clear(Ds_LTIDA03);
		util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
		MethodObj.addSingleData("LTIDA03", "LTIDA03", "Ds_LTIDA03:A");
		MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID());//피보험자사항
		MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID());//특약사항정보담음
		
		//복사건일때 과거번호, 과거청약일을 가지고감(질의서, 전산심사테이블 복사를위해)
	    util.jSonDsCreate([{"oldPlanNo":""}], "DSoldPlanNo");
		$w.data["DSoldPlanNo"].setCellData(0, "oldPlanNo", "");
		MethodObj.addSingleData("oldPlanNo", "oldPlanNo", "DSoldPlanNo:A", "type02");
	    
	    //과거청약일
	    util.jSonDsCreate([{"oldSsrtDate":""}], "DSoldSsrtDate");
	    $w.data["DSoldSsrtDate"].setCellData(0, "oldSsrtDate", "");
	    MethodObj.addSingleData("oldSsrtDate", "oldSsrtDate", "DSoldSsrtDate:A", "type02");
	    
	    //플랜에서 나온 영업보험료
	    util.jSonDsCreate([{"nBussPrem":""}], "DSnBussPrem");
	    $w.data["DSnBussPrem"].setCellData(0, "nBussPrem", DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "nBussPrem"));
	    MethodObj.addSingleData("nBussPrem", "nBussPrem", "DSnBussPrem:A", "type02");
		
		MethodObj.setHashTable();
		//wconv.clear(DsWs_LTIDA00);
	    //wconv.clear(DsWs_Pibo);
	    //wconv.clear(DsWs_Trty);
	    //wconv.clear(Ds_Trty_Backup); //특약 백업용	
		
		MethodObj.setUrl("/contract/CBSC015MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");//기본사항
		//MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01");//피보험자 xpath 변경 
		//MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02");//특약 xpath 변경
		//MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15");//인수제한사항 xpath변경
		//MethodObj.addXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");//단체사항
		//MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA03']/LTIDA03");//계약자사항
		MethodObj.addXPath("//WARNING");
		
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
		if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        } else {
		    //util.interfaceKey(_tranSync.result.serviceDs);
		    //DsWs_LTIDA00.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"));
			//DsWs_Pibo.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA01']/vector/data/LTIDA01"));
			//DsWs_Trty.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"));
	        //DsWs_LTIDA15.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA15']/vector/data/LTIDA15"));
	        //DsWs_LTIEA10.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIEA10']/LTIEA10"));
	        //계약기본정보의 보험료를 세팅
	        //util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON());
	        	        
	    	result = _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00")[0].sPlanNo;
	    }

	    return result;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_changeInsurTermExpandShow
	// 내용        : 보험기간 멀티입력 가능여부
	//---------------------------------------------------------------------------
	scwin.lfn_changeInsurTermExpandShow = function(sTrtyCd, InrtMdfcYn) {
	    var rtnExpandShow = false;
	    wconv.clear(Ds_InsurTerm);
	    util.copyM(Ds_InsurTerm, DsWs_TrtyTerm.getAllJSON());
	    
	    var insuFilter = Ds_InsurTerm.getFilterList();
		Ds_InsurTerm.clearFilter();
	    wconv.filter(Ds_InsurTerm, "sTrtyCd != '" + sTrtyCd + "'");
	    util.copyM(Ds_InsurTerm_Tmp, Ds_InsurTerm.getAllJSON());
	    for(var i = 0; i < insuFilter.length; i++){Ds_InsurTerm.setColumnFilter(insuFilter[i]);}
	
	    var nInsurTermCnt = 0;
	    var sPreInsurTermCd = "";
	    for (var i = 0; i < Ds_InsurTerm_Tmp.getRowCount(); i++) {
	        if (sPreInsurTermCd != Ds_InsurTerm_Tmp.getCellData(i, "nInsurTermCd")) {
	            nInsurTermCnt++;
	        }
	        sPreInsurTermCd = Ds_InsurTerm_Tmp.getCellData(i, "nInsurTermCd");
	    }
	    if (nInsurTermCnt > 1) {
	        if (InrtMdfcYn == "Y") {
	            rtnExpandShow = true;
	        }
	    }
	    return rtnExpandShow;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_changeExpandShow
	// 내용        : 가입금액 멀티입력 가능여부
	//---------------------------------------------------------------------------
	scwin.lfn_changeExpandShow = function(sTrtyCd) {
	    var rtnExpandShow = false;
		
		Ds_InsAmt.setCondition("filter", "sTrtyCd == '" + sTrtyCd + "'");
	    if (Ds_InsAmt.getRowCount() > 1) {
	        rtnExpandShow = true;
	    }
	    
		return rtnExpandShow;
	};

	/*-----------------------------------
	// function 명 : 신규
	// 내용        : scwin.ExprDis
	-----------------------------------*/
	//chk, sInsurTermCd, sPaymTermCd, nTrtyInsAmt, 
	scwin.ExprDis = function(ExprChk, ExprTrtyFlagCd, ExprsScrnIndcYn, ExprsTrtyCd, ExprInrtMdfcYn, ExprInrtmPytrMdfcYn, rowIndex){
		//scwin.ExprDis(display('chk'), display('TrtyFlagCd'), display('sScrnIndcYn'), display('sTrtyCd'), display('InrtMdfcYn'), display('InrtmPytrMdfcYn'), rowIndex())
		
		var rChk = grd_sTrty.getCellReadOnly(rowIndex, "chk");
		if (scwin.lfn_TrtyEnableCheck(rowIndex) == "1") {
			if (rChk == false) {
				//grd_sTrty.setCellBackgroundColor( rowIndex, 0, gds.user5);
				grd_sTrty.setCellReadOnly(rowIndex, 0, true);
			}
		} else {
			if (rChk == true || util.isNull(rChk)) {
				//grd_sTrty.setCellBackgroundColor(rowIndex, 0, "");
				grd_sTrty.setCellReadOnly(rowIndex, 0, false);
			}
		}
		
		if(ExprInrtMdfcYn == "Y" && (sGdCd=='2900' || sGdCd=='2901' || sGdCd=='2902' || sGdCd=='2120' || sGdCd=='2122' || sGdCd=='2126' || sGdCd=='2128')){
			if(grd_sTrty.getCellReadOnly(rowIndex, "sInsurTermCd") || grd_sTrty.getCellReadOnly(rowIndex, "sInsurTermCd") == ""){
				grd_sTrty.setCellReadOnly(rowIndex, "sInsurTermCd", false);
			}
		}else{
			if(!grd_sTrty.getCellReadOnly(rowIndex, "sInsurTermCd") || grd_sTrty.getCellReadOnly(rowIndex, "sInsurTermCd") == ""){
				grd_sTrty.setCellReadOnly(rowIndex, "sInsurTermCd", true);
			}
		}
		
		if(ExprInrtmPytrMdfcYn == "Y"){
			if(grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd") || grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd") == ""){
				grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd", false);
			}
		}else{
			if(!grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd") || grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd") == ""){
				grd_sTrty.setCellReadOnly(rowIndex, "sPaymTermCd", true);
			}
		}
		
		return "";
	};
	
	//---------------------------------------------------------------------------
	// function 명 : Grd_Pibo_OnKillFocus
	// 내용        : 피보험자그리드 Losing Focus시 처리
	//---------------------------------------------------------------------------
	scwin.Grd_Pibo_OnKillFocus = function(info) {
		//info.rowIndex
		//info.colIndex
		//info.oldValue
		//info.newValue
		if(Grd_Pibo.getColumnID(info.colIndex) == "sInrpsCd"){
			if (wconv.length(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd")) > 0 && Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd") != Ds_Pibo_BackUp.getCellData(info.rowIndex,"sInrpsCd")){
				var arrpibo = util.getDataListEvent(Ds_Pibo);
				util.removeAllDataListEvent(Ds_Pibo);
				runOnCellPosChanged = false;
				
				//MS Logic 변경
				nInrpsAgeNew = gfn_getInsAge(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	            nManAgeNew = gfn_getAge(Ds_Pibo_BackUp.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue());
	            if (nInrpsAgeOld != nInrpsAgeNew || nManAgeOld != nManAgeNew) {
	                //Newage와 oldage가 다른 때만 초기화
	                //scwin.lfn_ClearTrty(info.rowIndex);
	                scwin.fn_setRule(parent.edt_sGdCd.getValue());
	            }
				
				//피보험자에 종속되어있는 데이타삭제(타보험, 질의서, 부담보)
	            scwin.lfn_deleteEtc(info.rowIndex, "N");
	            var sInrpsdCd = Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd");
	            var sApplPlanCd = Ds_Pibo.getCellData(info.rowIndex, "sApplPlanCd");
	            //var sDrveFlagCd = Ds_Pibo.GetColumn(i, "sDrveFlagCd");
				//alert(Ds_Pibo_BackUp.GetColumn(i,"sInrpsCd"));
				sSimpleCd = Ds_Pibo_BackUp.getCellData(0, "sInrpsCd");
				
	            //util.deleteRow(Ds_Pibo, info.rowIndex);
			    Ds_Pibo.removeRow(info.rowIndex);
			    //util.deleteRow(Ds_Pibo_BackUp, info.rowIndex);
			    Ds_Pibo_BackUp.removeRow(info.rowIndex)
	
	            //alert(Ds_Pibo.getRowCount());			
	            scwin.lfn_addRow(info.rowIndex);
	            //Ds_Pibo.row = i;
	
	            Ds_Pibo.setCellData(info.rowIndex, "sInrpsCd", sInrpsdCd);
	            Ds_Pibo.setCellData(info.rowIndex, "sApplPlanCd", sApplPlanCd);
	            ////Ds_Pibo.setCellData(info.rowIndex,"sDrveFlagCd", sDrveFlagCd);
	            
	            if (parent.sSimpleYn == "Y") {
	                if (wconv.length(Ds_Pibo_getCellData(info.rowIndex, "sInrpsCd")) > 0) {
	                    if (scwin.lfn_ChkPersonID(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"))) {
	                        //보험나이계산
	                        Ds_Pibo.setCellData(info.rowIndex, "nInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	                        Ds_Pibo.setCellData(info.rowIndex, "nManAge", gfn_getAge(Ds_Pibo.getCellData(info.rowIndex, "sInrpsCd"), parent.cal_sSsrtDate.getValue()));
	                    } else {
	                        //Ds_Pibo.row = i;
	                        Ds_Pibo.setCellData(info.rowIndex, "sInrpsName", Ds_Pibo.getCellData(info.rowIndex, "sInrpsName"));
	                        wprom.alert("주민번호를 정확히 입력해 주세요.");
	                        wconv.moveToNextCell(Grd_Pibo.getID());
	                        wconv.moveToNextCell(Grd_Pibo.getID());
	                    }
	                }
	                scwin.lfn_backup_Pibo();
	            }
				
				util.setDataListEvent(Ds_Pibo, arrpibo);
			}
		}
	}
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_Btn_goChung_OnClick
	// 내용        : 청약화면으로 이동
	//---------------------------------------------------------------------------
	scwin.lfn_Btn_goChung_OnClick = function(e) {
	    parent.scwin.lfn_goChung();
	};
	
	var showPop = true;
	scwin.btn_View_onclick = function() {
		if (showPop) {
			top_main.setStyle("display", "none");
			right_main.setStyle("display", "none");
			grd_sTrty.setStyle("height", "500px");
			body_main.removeClass("layout_7_3 mt15");
			showPop = false;
		} else {
			top_main.setStyle("display", "");
			right_main.setStyle("display", "");
			grd_sTrty.setStyle("height", "338px");
			body_main.addClass("layout_7_3 mt15");
			showPop = true;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : B010_Div1_OnLoadCompleted(obj)
	// 내용        : 화면오픈시 처리
	//---------------------------------------------------------------------------
	scwin.init = function(){};
	
	//화면 로딩처리 키보드 crtl + v Event 처리 
	var crtlDown=false, crtlKey=17, cmdKey=91;
	$(document).ready(function(){
		$("#grd_sTrty_gh101").html("<img src='/cm/images/chkoff.jpg'/>");
		
		util.setLinkedCondition(lk_InsAmt,"sTrtyCd==ref('data:Ds_Trty.sTrtyCd')");
		util.setLinkedCondition(lk_InsurTerm,"sTrtyCd==ref('data:Ds_Trty.sTrtyCd')");
		util.setLinkedCondition(lk_PaymTerm,"sTrtyCd==ref('data:Ds_Trty.sTrtyCd')");
	}).keydown(function(e){
		if(e.keyCode == crtlKey || e.keyCode == cmdKey){crtlDown=true;}
	}).keyup(function(e){
		if(e.keyCode == crtlKey || e.keyCode == cmdKey){crtlDown=false;}
	});
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 확인 0인경우 Null 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onfocus = function(e) {
		if(medt_nBussPrem.getValue() == "0"){
			medt_nBussPrem.setValue("");
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 아웃 확인 Null일경우 0 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onblur = function(e) {
		if(wconv.length(wconv.trim(medt_nBussPrem.getValue())) == 0){
			if(wconv.length(wconv.trim(parent.edt_sGdCd.getValue())) > 0){
				medt_nBussPrem.setValue("0");
			}
		}
	};
	]]></script>
	</head>
	<body>
			<!-- group:s -->
			<!-- group:e -->
			
	    	<!-- group:s -->
    	<xf:group id="top_main" style="" class="">
	    	<xf:group id="" style="" class="section">
		    	<xf:group id="" style="" class="w2tb tb" tagname="table">
					<w2:attributes>
						<w2:summary></w2:summary>
					</w2:attributes>
					<xf:group tagname="colgroup">
						<xf:group style="width:80.00px;" tagname="col"></xf:group>
						<xf:group style="width:195.00px;" tagname="col"></xf:group>
						<xf:group style="width:80.00px;" tagname="col"></xf:group>
						<xf:group style="width:95.00px;" tagname="col"></xf:group>
						<xf:group style="width:80.00px;" tagname="col"></xf:group>
						<xf:group style="" tagname="col"></xf:group>
					</xf:group>
					<xf:group style="" tagname="tr">
						<xf:group style="" class="w2tb_th" tagname="th">보험기간</xf:group>
						<xf:group style="" class="w2tb_td" tagname="td">
							<xf:group class="" style="">
								<xf:input id="cal_sInsurStrtdate" style="width:80px" readOnly="true" ref="data:Ds_LTIDA00.sInsurStrtdate" displayFormat="####-##-##"/>
								<w2:textbox class="txt_bw" id="" label="~" tagname="span"></w2:textbox>
								<xf:input id="cal_sInsurEndDate" style="width:80px" readOnly="true" ref="data:Ds_LTIDA00.sInsurEndDate" displayFormat="####-##-##"/>
							</xf:group>
						</xf:group>
						<xf:group class="w2tb_th" tagname="th">납입주기</xf:group>
						<xf:group class="w2tb_td" tagname="td">
							<!-- group:s -->
							<!-- group:e -->
							<xf:select1 id="cmb_PaymCycl" allOption="" appearance="minimal" chooseOption="" direction="auto" displayMode="label" style="" renderType="native" ref="data:Ds_LTIDA00.sPaymCyclCd" selectedData="false" ev:onblur="scwin.lfn_OnKillFocus_OnChanged">
								<xf:choices>
				    				<xf:itemset nodeset="data:DsWs_PaymCycl">
				    					<xf:label ref="sPaymCyclName" />
				    					<xf:value ref="sPaymCyclCd" />
				    				</xf:itemset>
				    			</xf:choices>
							</xf:select1>
						</xf:group>
						<xf:group style="" class="w2tb_th" tagname="th">보기/납기</xf:group>
						<xf:group style="" class="w2tb_td" tagname="td">
							<xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="" displayMode="label"  ev:onviewchange="scwin.lfn_InsurTermPaymTermChanged" ev:onblur="scwin.lfn_OnKillFocus_OnChanged" style="width:140px;" submenuSize="" renderType="native" ref="" id="cmb_InsurTermPaymTerm">
								<xf:choices>
				    				<xf:itemset nodeset="data:DsWs_InsurTermPaymTerm">
				    					<xf:label ref="sInsurPaymName" />
				    					<xf:value ref="sInsurPaymCd" />
				    				</xf:itemset>
				    			</xf:choices>
							</xf:select1>
							<w2:textbox label="갱신종료연령 : 100세" id="Sta_Title1" style="width:130px;height:20px;display:none;text-align:center;position:absolute;top:6px;" tagname="span">
							</w2:textbox>
							<xf:select appearance="full" id="chk_sPeriMwayWdraYn" cols="1" rows="" falseValue="" selectedindex="-1" style="display:none;" class="ml5" ref="data:Ds_LTIDA00.sPeriMwayWdraYn">
								<xf:choices>
									<xf:item>
										<xf:label><![CDATA[정기중도인출]]></xf:label>
										<xf:value><![CDATA[Y]]></xf:value>
									</xf:item>
								</xf:choices>
							</xf:select>
							<xf:input id="msk_sGroupCrAdmNo" style="display:none;" disabled="true" readonly="true" ref="data:Ds_LTIEA10.sGroupCrAdmNo"></xf:input>
							<xf:input id="edt_sGroupName" style="display:none;" disabled="true" readonly="true" ref="data:Ds_LTIEA10.sGroupName"></xf:input>
							<xf:input id="medt_nFrstPsct" style="display:none;" disabled="true" readonly="true" ref="data:Ds_LTIEA10.nFrstPsct"></xf:input>
							<xf:input id="edt_nGroupDcrt" style="display:none;" disabled="true" readonly="true" ref="data:Ds_LTIEA10.nGroupDcrt"></xf:input>
							<xf:select appearance="full" id="chk_sPsnGroupFlgcd" cols="1" rows="" falseValue="0" selectedindex="-1" style="" class="ml5" ev:oncheckboxclick="scwin.chk_sPsnGroupFlgcd_oncheckboxclick">
								<xf:choices>
									<xf:item>
										<xf:label><![CDATA[단체취급]]></xf:label>
										<xf:value><![CDATA[1]]></xf:value>
									</xf:item>
								</xf:choices>
							</xf:select>
							<w2:anchor class="btn_search ml5" ev:onclick="scwin.btn_GroupList_onclick" id="btn_GroupList" outerDiv="false" style="display:none;position:absolute; top:3px;">
								<xf:label><![CDATA[검색]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
			<!-- group:e -->
			
			<!-- group:s -->
			<xf:group id="" style="" class="section">
				<xf:group id="" style="" class="defaultbox">
					<w2:textbox id="" style="" class="df_tt fl" label="피보험자"></w2:textbox>
					<xf:group id="" style="" class="box_left_line fl">
						<w2:anchor id="btn_SearchCust" ev:onclick="scwin.btn_SearchCust_onclick" class="btn_nml" outerDiv="true">
							<xf:label><![CDATA[대면고객정보]]></xf:label>
						</w2:anchor>
					</xf:group>
					<xf:group class="fr" id="" style="">
						<w2:anchor id="btnAddPibo" ev:onclick="scwin.lfn_addRow" class="btn_add" outerDiv="false" style="visibility:hidden;">
							<xf:label><![CDATA[보상한도]]></xf:label>
						</w2:anchor>
						<w2:anchor id="btnDelPibo" ev:onclick="scwin.lfn_deleteRow" class="btn_del ml3" outerDiv="false" style="visibility:hidden;">
							<xf:label><![CDATA[보험료계산]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
				<w2:gridView id="Grd_Pibo" dataList="Ds_Pibo" noResultMessageVisible="false"
					autoFit="allColumn" scrollByColumn="false" useShiftKey="true"
					editModeEvent="onClick" ignoreCellClick="false"
					rowStatusHeaderValue="상태" rowNumWidth="10" rowStatusWidth="20"
					class="cm_grid" style="height:72px"
					ev:oncellclick="scwin.Grd_Pibo_OnCellClick"
					ev:onkeydown="scwin.Grd_Pibo_OnKeyDown"
					ev:oneditkeyup="scwin.Grd_Pibo_OnChar"
					ev:oncellindexchange="scwin.Grd_Pibo_OnCellPosChanged"
					ev:onviewchange="scwin.Grd_Pibo_OnKillFocus">
					<w2:header id="" style="">
						<w2:row id="" style="">
							<w2:column id="gh101" blockSelect="false" style="height:20px;" width="40" inputType="text" value="선택" displayMode="label">
							</w2:column>
							<w2:column id="gh102" blockSelect="false"
								style="height:20px;" width="90" inputType="text" value="구분"
								displayMode="label">
							</w2:column>
							<w2:column id="gh103" blockSelect="false"
								style="height:20px;" width="160" inputType="text" value="주민번호"
								displayMode="label" colSpan="2">
							</w2:column>
							<w2:column id="gh104" blockSelect="false"
								style="height:20px;" width="110" inputType="text" value="성명"
								displayMode="label">
							</w2:column>
							<w2:column id="gh105" blockSelect="false"
								style="height:20px;" width="70" inputType="text" value="나이"
								displayMode="label">
							</w2:column>
							<w2:column id="gh106" blockSelect="false"
								style="height:20px;" width="105" inputType="text" value="주피와관계"
								displayMode="label">
							</w2:column>
							<w2:column id="gh107" blockSelect="false"
								style="height:20px;" width="180" inputType="text" value="직업"
								displayMode="label" colSpan="2">
							</w2:column>
							<w2:column id="gh108" blockSelect="false"
								style="height:20px;" width="70" inputType="text" value="급수"
								displayMode="label">
							</w2:column>
							<w2:column id="gh109" blockSelect="false"
								style="height:20px;" width="90" inputType="text" value="운전용도"
								displayMode="label">
							</w2:column>
							<w2:column id="gh110" blockSelect="false"
								style="height:20px;" width="115" inputType="text" value="보장보험료"
								displayMode="label">
							</w2:column>
						</w2:row>
					</w2:header>
					<w2:gBody id="" style="">
						<w2:row id="" style="">
							<w2:column id="sel" blockSelect="false"
								width="30" inputType="checkbox" displayMode="label"
								valueType="other" trueValue="1" falseValue="0">
							</w2:column>
							<w2:column id="sInrpsFlagCd"
								blockSelect="false" width="90" inputType="select" dataType="own"
								chooseOption="false" defaultValue="1">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_FlagCd">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column id="sInrpsCd" blockSelect="false"
								width="135" inputType="text" maxLength="13"
								displayFormat="######-#######">
							</w2:column>
							<w2:column id="btn_GridRow_Search" blockSelect="false" style="height:20px" inputType="image" width="25" displayMode="label"
								imageSrc="/cm/images/contents/ico_btn_input_sch.png">
							</w2:column>
							<w2:column id="sInrpsName"
								blockSelect="false" width="110" inputType="text"
								displayMode="label" readOnly="true">
							</w2:column>
							<w2:column id="nInrpsAge"
								blockSelect="false" width="70" inputType="text"
								displayMode="label" readOnly="true">
							</w2:column>
							<w2:column id="sMinsrRelnCd" dataType="own" blockSelect="false" width="90" inputType="select" selectedData="true" chooseOption="false">
								<w2:choices>
									<w2:itemset nodeset="data:DsWs_MinsrReln">
										<w2:label ref="sName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column> 
							<w2:column id="sJobName" blockSelect="false" width="150" inputType="text" displayMode="label" readOnly="true"></w2:column>
							<w2:column id="btn_Job_Search"
								blockSelect="false" style="height:20px" inputType="image"
								width="19" displayMode="label"
								imageSrc="/cm/images/contents/ico_btn_input_sch.png">
							</w2:column>
							<w2:column id="sJobGradCd" blockSelect="false" width="70" inputType="select" displayMode="label" readOnly="true">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_Grade">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column id="sDrveFlagCd"
								blockSelect="false" width="90" inputType="select" dataType="own"
								chooseOption="false">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_Drive">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column id="nGrntPrem"
								blockSelect="false" width="115" inputType="text"
								displayMode="label"  readOnly="true" textAlign="right" displayFormat="###,###,###,###,###,###">
							</w2:column>
						</w2:row>
					</w2:gBody>
				</w2:gridView>
			</xf:group>
		</xf:group>
			<!-- group:e -->
			<xf:group id="body_main" style="" class="layout_7_3 mt15">
				<xf:group id="" style="" class="leftarea">
					<!-- group:s -->
					<xf:group id="" style="" class="section">
						<xf:group id="" style="" class="defaultbox">
							<w2:textbox id="" style="" class="df_tt fl" label="특약사항"></w2:textbox>
							<w2:anchor id="btn_View" outerDiv="false" class="fl btn_expand" style="" ev:onclick="scwin.btn_View_onclick">
							    <xf:label>확대</xf:label>
							</w2:anchor>
							<xf:group id="" style="" class="fl ml10">
								<xf:select1 allOption="" appearance="minimal" chooseOption="" direction="auto" disabled="false" disabledClass="" displayMode="label" ev:onviewchange="scwin.lfn_PlanChanged_Async" id="cmb_Plan" optionOrder=""
									ref="data:Ds_Pibo.sApplPlanCd" style="width:140px;" submenuSize="" renderType="native" ev:onchange="" ev:onblur="scwin.lfn_OnKillFocus_OnChanged">
									<xf:choices>
					    				<xf:itemset nodeset="data:DsWs_Plan">
					    					<xf:label ref="sPlanName" />
					    					<xf:value ref="sPlanCd" />
					    				</xf:itemset>
					    			</xf:choices>
								</xf:select1>
								<w2:anchor class="btn_nml1" ev:onclick="scwin.btn_MyPlanView_onclick" id="btn_MyPlanView" outerDiv="true" style="">
									<xf:label><![CDATA[플랜조회]]></xf:label>
								</w2:anchor>
								<w2:anchor class="btn_nml1" ev:onclick="scwin.btn_MyPlanReg_onclick_Async" id="btn_MyPlanReg" outerDiv="true" style="">
									<xf:label><![CDATA[플랜등록]]></xf:label>
								</w2:anchor>
							</xf:group>
							<xf:group id="" style="" class="fr">
								<w2:anchor id="Btn_RtnAmtList" ev:onclick="scwin.lfn_Btn_RtnAmt_OnClick" class="btn_nml" outerDiv="true">
									<xf:label><![CDATA[갱신보험료]]></xf:label>
								</w2:anchor>
								<w2:anchor id="btn_CalcPrem" ev:onclick="scwin.btn_CalcPrem_OnClick_Async" class="btn_blue sum" outerDiv="true">
									<xf:label><![CDATA[보험료계산]]></xf:label>
								</w2:anchor>
							</xf:group>
						</xf:group>
		                <w2:gridView id="grd_sTrty" dataList="Ds_Trty" noResultMessageVisible="false"
							autoFit="allColumn" scrollByColumn="false" useShiftKey="true" ignoreCellClick="false"
							gnoreCellClick="false" rowStatusWidth="20" class="cm_grid" 
							style="height:338px;" rowStatusHeaderValue="상태"
							rowNumWidth="10" ev:onheaderclick="scwin.lfn_trtyOnHeadClick" ev:oncellclick="scwin.lfn_Trty_OnCellClick">
							<w2:header id="" style="">
								<w2:row id="" style="">
									<w2:column id="gh101" blockSelect="false" style="height:20px;" width="30" inputType="text" value="" displayMode="label"></w2:column>
									<w2:column id="gh102" blockSelect="false" style="height:20px;" width="70" inputType="text" value="구분" displayMode="label"></w2:column>
									<w2:column id="gh103" blockSelect="false" style="height:20px;" width="190" inputType="text" value="특약" displayMode="label"></w2:column>
									<w2:column id="gh104" blockSelect="false" style="height:20px;" width="110" inputType="text" value="보험기간" displayMode="label"></w2:column>
									<w2:column id="gh105" blockSelect="false" style="height:20px;" width="100" inputType="text" value="납입기간" displayMode="label"></w2:column>
									<w2:column id="gh106" blockSelect="false" style="height:20px;" width="105" inputType="text" value="가입금액" displayMode="label"></w2:column>
									<w2:column id="gh107" blockSelect="false" style="height:20px;" width="105" inputType="text" value="보장보험료" displayMode="label"></w2:column>
									<w2:column id="gh108" blockSelect="false" style="height:20px;" width="30" inputType="text" value="FORMATTER" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh109" blockSelect="false" style="height:20px;" width="30" inputType="text" value="TrtyFlagCd" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh110" blockSelect="false" style="height:20px;" width="30" inputType="text" value="sScrnIndcYn" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh111" blockSelect="false" style="height:20px;" width="30" inputType="text" value="sTrtyCd" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh112" blockSelect="false" style="height:20px;" width="30" inputType="text" value="InrtMdfcYn" displayMode="label" hidden="true"></w2:column>
									<w2:column id="gh113" blockSelect="false" style="height:20px;" width="30" inputType="text" value="InrtmPytrMdfcYn" displayMode="label" hidden="true"></w2:column>
								</w2:row>
							</w2:header>
							<w2:gBody id="" style="">
								<w2:row id="" style="">
									<w2:column id="chk" blockSelect="false" style="" width="30" inputType="checkbox" displayMode="label" defaultValue="0" falseValue="0" trueValue="1"></w2:column>
									<w2:column id="BascSlctFlagCd_H" blockSelect="false" style="" width="70" inputType="text" displayMode="label" readOnly="true"></w2:column>
									<w2:column id="TrtyHnglAbbName" blockSelect="false" style="" width="190" inputType="text" displayMode="label" textAlign="left" readOnly="true"></w2:column>
									<w2:column id="sInsurTermCd" blockSelect="false" style="" width="110" inputType="select" dataType="own" chooseOption="false" selectedData="false">
										<w2:choices>
											<w2:itemset nodeset="data:lk_InsurTerm">
												<w2:label ref="sInsurTermName"></w2:label>
												<w2:value ref="nInsurTermCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="sPaymTermCd" blockSelect="false" style="" width="110" inputType="select" dataType="own" chooseOption="false" selectedData="false">
										<w2:choices>
											<w2:itemset nodeset="data:lk_PaymTerm">
												<w2:label ref="sPaymTermName"></w2:label>
												<w2:value ref="nPaymTermCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="nTrtyInsAmt" blockSelect="false" style="" width="100" inputType="select" dataType="own"  chooseOption="false" selectedData="false" textAlign="right">
										<w2:choices>
											<w2:itemset nodeset="data:lk_InsAmt">
												<w2:label ref="sHnglCdName"></w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column id="nGrntPrem" blockSelect="false" style="" width="105" inputType="text" displayMode="label" readOnly="true" textAlign="right" displayFormat="###,###,###,###,###,###"></w2:column>
									<w2:column id="fFormatter" blockSelect="false" style="" width="30" expression="scwin.ExprDis(display('chk'), display('TrtyFlagCd'), display('sScrnIndcYn'), display('sTrtyCd'), display('InrtMdfcYn'), display('InrtmPytrMdfcYn'), rowIndex())" inputType="expression" readOnly="true"></w2:column>
									<w2:column blockSelect="false" id="TrtyFlagCd" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="sScrnIndcYn" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="sTrtyCd" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="InrtMdfcYn" style="" inputType="text" width="30" displayMode="label"></w2:column>
									<w2:column blockSelect="false" id="InrtmPytrMdfcYn" style="" inputType="text" width="30" displayMode="label"></w2:column>
								</w2:row>
							</w2:gBody>
						</w2:gridView>
					</xf:group>
					<!-- group:e -->
				</xf:group>
				
				<xf:group id="right_main" style="" class="rightarea">
					<!-- group:s -->
					<xf:group id="" style="" class="section">
						<xf:group id="" style="" class="defaultbox">
							<w2:textbox id="" style="" class="df_tt fl" label="보상내용 및 한도"></w2:textbox>
						</xf:group>
						<xf:group id="" style="height:157px;" class="txtbox">
							<w2:textbox id="txtTrtyInfo" style="" class="txt" label=""></w2:textbox>
						</xf:group>
					</xf:group>
					
					<xf:group id="" style="" class="w2tb tb mb0" tagname="table">
	<w2:attributes>
		<w2:summary></w2:summary>
	</w2:attributes>
	<xf:group tagname="colgroup">
		<xf:group style="width:100.00px;" tagname="col"></xf:group>
		<xf:group style="" tagname="col"></xf:group>
		<xf:group style="width:75.00px;" tagname="col"></xf:group>
		<xf:group style="" tagname="col"></xf:group>
	</xf:group>
	<xf:group style="" tagname="tr" id="1">
		<xf:group style="" class="w2tb_th" tagname="th">최소보험료</xf:group>
		<xf:group style="" class="w2tb_td" tagname="td">
			<xf:input id="medt_nMinPrem" style="text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nMinPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
		<xf:group class="w2tb_th" tagname="th">최대보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<xf:input disabled="true" id="medt_nMaxPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nMaxPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
	</xf:group>
	<xf:group tagname="tr" style="">
		<xf:group class="w2tb_th" tagname="th">보장보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<xf:input id="medt_nGrntPrem" style="text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nGrntPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
		<xf:group class="w2tb_th" tagname="th">적립보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<xf:input disabled="true" id="medt_nAccuPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nAccuPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
	</xf:group>
	<xf:group tagname="tr" style="">
		<xf:group class="w2tb_th" tagname="th">할인보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<xf:input id="medt_nDcPrem" style="text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nDcPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
		<xf:group class="w2tb_th" tagname="th">적용보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<xf:input disabled="true" id="medt_nApplPrem" style="text-align:right;" ref="data:Ds_LTIDA00.nApplPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
		</xf:group>
	</xf:group>
	<xf:group tagname="tr" style="">
		<xf:group class="w2tb_th" tagname="th">영업보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<w2:attributes>
				<w2:colspan>3</w2:colspan>
				<w2:rowspan>1</w2:rowspan>
			</w2:attributes>
			<xf:group class="input_btn icon" style="">
				<xf:input id="medt_nBussPrem" ref="data:Ds_LTIDA00.nBussPrem" style="text-align:right;" displayFormat="###,###,###,###,###,###" dataType="number" ev:onfocus="scwin.medt_nBussPrem_onfocus" ev:onblur="scwin.medt_nBussPrem_onblur"></xf:input>
				<w2:anchor class="" ev:onclick="scwin.lfn_calSave_onClick_Async" id="btn_Input_Save" outerDiv="" style="" >
					<xf:label><![CDATA[저장]]></xf:label>
				</w2:anchor>
			</xf:group>
		</xf:group>
	</xf:group>
	<xf:group id="Static0" tagname="tr" style="">
		<xf:group class="w2tb_th" tagname="th">추가납입보험료</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<w2:attributes>
				<w2:colspan>3</w2:colspan>
				<w2:rowspan>1</w2:rowspan>
			</w2:attributes>
			<xf:input id="medt_nAddPaymPrem" style="width:103px;text-align:right;" disabled="true" ref="data:Ds_LTIDA00.nAddPaymPrem" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
			<xf:select appearance="full" class="ml5" cols="" id="chk_sHealDcYn" ref="data.Ds_LTIDA00.sHealDcYn" rows="1" selectedindex="-1" style="display:none;" falseValue="0">
				<xf:choices>
					<xf:item>
						<xf:label><![CDATA[건강체할인적용]]></xf:label>
						<xf:value><![CDATA[1]]></xf:value>
					</xf:item>
				</xf:choices>
			</xf:select>
		</xf:group>
	</xf:group>
	<xf:group tagname="tr" style="">
		<xf:group class="w2tb_th" tagname="th">예상환급금</xf:group>
		<xf:group class="w2tb_td" tagname="td">
			<w2:attributes>
				<w2:colspan>3</w2:colspan>
				<w2:rowspan>1</w2:rowspan>
			</w2:attributes>
			<xf:input disabled="true" id="medit_nExptEndRetrnAmt" style="width:103px;text-align:right;" ref="data:Ds_LTIDA00.nExptEndRetrnAmt" displayFormat="###,###,###,###,###,###" dataType="number"></xf:input>
			<xf:input disabled="true" id="medt_nExptEndRtnrt" style="width:50px;text-align:right;" ref="data:Ds_LTIDA00.nExptEndRtnrt" dataType="number" displayFormat="###.##"></xf:input>
			<w2:textbox class="txt_bw" id="" label="%" tagname="span" style=""></w2:textbox>
		</xf:group></xf:group>
	</xf:group>
					<!-- group:e -->
				</xf:group>
				
			</xf:group>
			
			<!-- group:s -->
	    	<xf:group id="asdasd" style="" class="section">
	    		<xf:group id="" style="" class="defaultbox last">
	    			<xf:group id="" style="" class="fl">
	    				<w2:anchor id="btn_Medical" ev:onclick="scwin.fn_Medical" class="btn_nml" outerDiv="true">
	    					<xf:label><![CDATA[사전조회]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_Insu" ev:onclick="scwin.fn_insuDetail" class="btn_nml" outerDiv="true">
	    					<xf:label><![CDATA[인수제한사유]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_SummaryPrem" ev:onclick="scwin.fn_summary" class="btn_nml" outerDiv="true">
	    					<xf:label><![CDATA[보험료 요약]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_PrintAgmt" ev:onclick="scwin.openPrint" class="btn_nml" disabled="true" outerDiv="true">
	    					<xf:label><![CDATA[가입설계서]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_HwanGup" ev:onclick="scwin.lfn_hwangup" class="btn_nml" outerDiv="true">
	    					<xf:label><![CDATA[예상환급금]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_PrintInfo" ev:onclick="scwin.fn_printInfo" class="btn_nml" disabled="true" outerDiv="true">
	    					<xf:label><![CDATA[안내문발송]]></xf:label>
	    				</w2:anchor>
	    				<w2:anchor id="btn_Moni" ev:onclick="scwin.lfn_Moni" class="btn_nml" disabled="true" outerDiv="true">
	    					<xf:label><![CDATA[모니터링]]></xf:label>
	    				</w2:anchor>
	    			</xf:group>
	    			<xf:group id="" style="" class="fr">
	    				<w2:anchor id="btn_Copy" ev:onclick="scwin.btn_Copy_OnClick_Async" class="btn_nml1 bul" outerDiv="true"><xf:label><![CDATA[복사]]></xf:label></w2:anchor>
						<w2:anchor id="Btn_next" ev:onclick="scwin.lfn_next_Async" class="btn_nml1 bul" outerDiv="true"><xf:label><![CDATA[다음]]></xf:label></w2:anchor>
						<w2:anchor id="Btn_goChung" style="display:none;" ev:onclick="scwin.lfn_Btn_goChung_OnClick" class="btn_nml1 bul" outerDiv="true"><xf:label><![CDATA[청약]]></xf:label></w2:anchor>
	    			</xf:group>
	    		</xf:group>
	    	</xf:group>
			<!-- group:e -->
	</body>
</html>