<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
	<w2:type>DEFAULT</w2:type>
	<w2:buildDate />
	<xf:model>
		<xf:instance>
		    <data></data>
		</xf:instance>
		<w2:dataCollection>
			<w2:dataList baseNode="list" id="DsWs_DoerInfo"
				repeatNode="map" userData2="//*/CCCBF42">
				<w2:columnInfo>
					<w2:column id="sDoer" name="sDoer"
						dataType="text">
					</w2:column>
					<w2:column id="sDoerCentrCd" name="sDoerCentrCd"
						dataType="text">
					</w2:column>
					<w2:column id="afterEJBCall" name="afterEJBCall"
						dataType="text">
					</w2:column>
					<w2:column id="beforeEJBCall" name="beforeEJBCall"
						dataType="text">
					</w2:column>
					<w2:column id="sDoerName" name="sDoerName"
						dataType="text">
					</w2:column>
					<w2:column id="sDoerUser" name="sDoerUser"
						dataType="text">
					</w2:column>
					<w2:column id="sDoerCentrName" name="sDoerCentrName"
						dataType="text">
					</w2:column>
					<w2:column id="sDoerUserName" name="sDoerUserName"
						dataType="text">
					</w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList baseNode="list" id="DsWs_Warning"
				repeatNode="map" userData2="//*/WARNING">
			</w2:dataList>
			<w2:dataList id="DsWs_LTIDA00" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_LTIDA03" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_LTIEA10" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_LTIDA16" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_LTIDA15" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_InsurTerm" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_PaymTerm" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Pibo" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Bogi" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Napgi" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Dsws_BaseSlct" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Drive" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_FlagCd" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Grade" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_PaymCycl" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Plan" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_Trty" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_CrtorRelnCd" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Dsws_InsAmt" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_PrdAttr" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="DsWs_InsurTermPaymTerm" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Ds_LTIDA03" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Ds_LTIDA15" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList baseNode="list" id="Ds_LTIDA00"
				repeatNode="map">
				<w2:columnInfo>
					<w2:column dataType="text" id="sPlanNo"
						name="sPlanNo">
					</w2:column>
					<w2:column dataType="text" id="sCrNoType"
						name="sCrNoType">
					</w2:column>
					<w2:column dataType="text" id="sItemCd"
						name="sItemCd">
					</w2:column>
					<w2:column dataType="text" id="sCrNoSeq"
						name="sCrNoSeq">
					</w2:column>
					<w2:column dataType="text" id="nCrChngNo"
						name="nCrChngNo">
					</w2:column>
					<w2:column dataType="text" id="sHsecFlagCd"
						name="sHsecFlagCd">
					</w2:column>
					<w2:column dataType="text" id="sSaleChnl"
						name="sSaleChnl">
					</w2:column>
					<w2:column dataType="text" id="sGdCd"
						name="sGdCd">
					</w2:column>
					<w2:column dataType="text" id="sGnrzCd"
						name="sGnrzCd">
					</w2:column>
					<w2:column dataType="text" id="sBunsMetdDocuClsfCd"
						name="sBunsMetdDocuClsfCd">
					</w2:column>
					<w2:column dataType="text" id="sApplDclrRato"
						name="sApplDclrRato">
					</w2:column>
					<w2:column dataType="text" id="sDvdnFlagCd"
						name="sDvdnFlagCd">
					</w2:column>
					<w2:column dataType="text" id="sPpayAvaYn"
						name="sPpayAvaYn">
					</w2:column>
					<w2:column dataType="text" id="sTaxPrfrYn"
						name="sTaxPrfrYn">
					</w2:column>
					<w2:column dataType="text" id="sCrStatCd"
						name="sCrStatCd">
					</w2:column>
					<w2:column dataType="text" id="sCrStatFlgcd"
						name="sCrStatFlgcd">
					</w2:column>
					<w2:column dataType="text" id="nCrStatCarrSeqno"
						name="nCrStatCarrSeqno">
					</w2:column>
					<w2:column dataType="text" id="sInsurStrtdate"
						name="sInsurStrtdate">
					</w2:column>
					<w2:column dataType="text" id="sInsurEndDate"
						name="sInsurEndDate">
					</w2:column>
					<w2:column dataType="text" id="sSsrtDate"
						name="sSsrtDate">
					</w2:column>
					<w2:column dataType="text" id="sCpayDate"
						name="sCpayDate">
					</w2:column>
					<w2:column dataType="text" id="sPaymExptDate"
						name="sPaymExptDate">
					</w2:column>
					<w2:column dataType="text" id="sPaymTermCd"
						name="sPaymTermCd">
					</w2:column>
					<w2:column dataType="text" id="nRealPaymTerm"
						name="nRealPaymTerm">
					</w2:column>
					<w2:column dataType="text" id="sInsurTermCd"
						name="sInsurTermCd">
					</w2:column>
					<w2:column dataType="text" id="nRealInsurTerm"
						name="nRealInsurTerm">
					</w2:column>
					<w2:column dataType="text" id="nDefrYct"
						name="nDefrYct">
					</w2:column>
					<w2:column dataType="text" id="nPaymAge"
						name="nPaymAge">
					</w2:column>
					<w2:column dataType="text" id="nEndAge"
						name="nEndAge">
					</w2:column>
					<w2:column dataType="text" id="sPaymCyclCd"
						name="sPaymCyclCd">
					</w2:column>
					<w2:column dataType="text" id="sCmMetd"
						name="sCmMetd">
					</w2:column>
					<w2:column dataType="text" id="nGrntPrem"
						name="nGrntPrem">
					</w2:column>
					<w2:column dataType="text" id="nAccuPrem"
						name="nAccuPrem">
					</w2:column>
					<w2:column dataType="text" id="nBussPrem"
						name="nBussPrem">
					</w2:column>
					<w2:column dataType="text" id="nDcPrem"
						name="nDcPrem">
					</w2:column>
					<w2:column dataType="text" id="nApplPrem"
						name="nApplPrem">
					</w2:column>
					<w2:column dataType="text" id="nMinPrem"
						name="nMinPrem">
					</w2:column>
					<w2:column dataType="text" id="nMaxPrem"
						name="nMaxPrem">
					</w2:column>
					<w2:column dataType="text" id="sPsnGroupFlgcd"
						name="sPsnGroupFlgcd">
					</w2:column>
					<w2:column dataType="text" id="sGroupCrAdmNo"
						name="sGroupCrAdmNo">
					</w2:column>
					<w2:column dataType="text" id="sBsmnRgstNo"
						name="sBsmnRgstNo">
					</w2:column>
					<w2:column dataType="text" id="sAnntOpnAgeCd"
						name="sAnntOpnAgeCd">
					</w2:column>
					<w2:column dataType="text" id="sAnntPymTermCd"
						name="sAnntPymTermCd">
					</w2:column>
					<w2:column dataType="text" id="sAnntPymCyclCd"
						name="sAnntPymCyclCd">
					</w2:column>
					<w2:column dataType="text" id="sAnntPymTypeCd"
						name="sAnntPymTypeCd">
					</w2:column>
					<w2:column dataType="text" id="sAnntPymStrtDate"
						name="sAnntPymStrtDate">
					</w2:column>
					<w2:column dataType="text" id="nAnntPymCt"
						name="nAnntPymCt">
					</w2:column>
					<w2:column dataType="text" id="nFinalPaymSeq"
						name="nFinalPaymSeq">
					</w2:column>
					<w2:column dataType="text" id="sFinalPaymMthy"
						name="sFinalPaymMthy">
					</w2:column>
					<w2:column dataType="text" id="sFinalRecpDate"
						name="sFinalRecpDate">
					</w2:column>
					<w2:column dataType="text" id="nTotPaymPrem"
						name="nTotPaymPrem">
					</w2:column>
					<w2:column dataType="text" id="sInsurCrLoanYn"
						name="sInsurCrLoanYn">
					</w2:column>
					<w2:column dataType="text" id="sFinalReviDate"
						name="sFinalReviDate">
					</w2:column>
					<w2:column dataType="text" id="sLapsDate"
						name="sLapsDate">
					</w2:column>
					<w2:column dataType="text" id="sFrstSaleChnlCd"
						name="sFrstSaleChnlCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerHdqtCd"
						name="sFrstDoerHdqtCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerCentrCd"
						name="sFrstDoerCentrCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerTeamCd"
						name="sFrstDoerTeamCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerGroupCd"
						name="sFrstDoerGroupCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerPartCd"
						name="sFrstDoerPartCd">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoer"
						name="sFrstDoer">
					</w2:column>
					<w2:column dataType="text" id="sFrstDoerUser"
						name="sFrstDoerUser">
					</w2:column>
					<w2:column dataType="text" id="sDoer"
						name="sDoer">
					</w2:column>
					<w2:column dataType="text" id="sCrNo"
						name="sCrNo">
					</w2:column>
					<w2:column dataType="text" id="sPlanProgRankCd"
						name="sPlanProgRankCd">
					</w2:column>
					<w2:column dataType="text" id="sPlanProgTbNo"
						name="sPlanProgTbNo">
					</w2:column>
					<w2:column dataType="text" id="sJugmAuthCd"
						name="sJugmAuthCd">
					</w2:column>
					<w2:column dataType="text" id="sJugmGradCd"
						name="sJugmGradCd">
					</w2:column>
					<w2:column dataType="text" id="sConuResltCd"
						name="sConuResltCd">
					</w2:column>
					<w2:column dataType="text" id="sHndwritJugmYn"
						name="sHndwritJugmYn">
					</w2:column>
					<w2:column dataType="text" id="nInrpsPsct"
						name="nInrpsPsct">
					</w2:column>
					<w2:column dataType="text" id="nObjtNum"
						name="nObjtNum">
					</w2:column>
					<w2:column dataType="text" id="nGroupInsPsct"
						name="nGroupInsPsct">
					</w2:column>
					<w2:column dataType="text" id="sCedeStndYm"
						name="sCedeStndYm">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnrt"
						name="nEndRtnrt">
					</w2:column>
					<w2:column dataType="text" id="nExptEndRetrnAmt"
						name="nExptEndRetrnAmt">
					</w2:column>
					<w2:column dataType="text" id="nExptEndRtnrt"
						name="nExptEndRtnrt">
					</w2:column>
					<w2:column dataType="text" id="sPectSaleYn"
						name="sPectSaleYn">
					</w2:column>
					<w2:column dataType="text" id="sScanObjtYn"
						name="sScanObjtYn">
					</w2:column>
					<w2:column dataType="text" id="sApplPlanCd"
						name="sApplPlanCd">
					</w2:column>
					<w2:column dataType="text" id="sApplPlanName"
						name="sApplPlanName">
					</w2:column>
					<w2:column dataType="text" id="sSaleChnlDtal"
						name="sSaleChnlDtal">
					</w2:column>
					<w2:column dataType="text"
						id="sInsurTermPaymTermName" name="sInsurTermPaymTermName">
					</w2:column>
					<w2:column dataType="text" id="sPlanProgRankName"
						name="sPlanProgRankName">
					</w2:column>
					<w2:column dataType="text" id="sConuResltName"
						name="sConuResltName">
					</w2:column>
					<w2:column dataType="text" id="sGdTypeFlgCd"
						name="sGdTypeFlgCd">
					</w2:column>
					<w2:column dataType="text" id="sTaxPrfrGdYn"
						name="sTaxPrfrGdYn">
					</w2:column>
					<w2:column dataType="text" id="nMinPremRate"
						name="nMinPremRate">
					</w2:column>
					<w2:column dataType="text"
						id="nExptEndRtnStndAmtSum" name="nExptEndRtnStndAmtSum">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt1"
						name="nEndRtnAmtCalElmnt1">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt2"
						name="nEndRtnAmtCalElmnt2">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt3"
						name="nEndRtnAmtCalElmnt3">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt4"
						name="nEndRtnAmtCalElmnt4">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt5"
						name="nEndRtnAmtCalElmnt5">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt6"
						name="nEndRtnAmtCalElmnt6">
					</w2:column>
					<w2:column dataType="text" id="sSrdoIssuDate"
						name="sSrdoIssuDate">
					</w2:column>
					<w2:column dataType="text" id="sCmmcMeanCnclAgreYn"
						name="sCmmcMeanCnclAgreYn">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt10"
						name="nEndRtnAmtCalElmnt10">
					</w2:column>
					<w2:column dataType="text" id="sPeriMwayWdraYn"
						name="sPeriMwayWdraYn">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt21"
						name="nEndRtnAmtCalElmnt21">
					</w2:column>
					<w2:column dataType="text" id="nEndRtnAmtCalElmnt22"
						name="nEndRtnAmtCalElmnt22">
					</w2:column>
				</w2:columnInfo>
				<w2:data use="true">
					<w2:row>
						<nAccuPrem></nAccuPrem>
						<nAnntPymCt></nAnntPymCt>
						<nApplPrem></nApplPrem>
						<nBussPrem></nBussPrem>
						<nCrChngNo></nCrChngNo>
						<nCrStatCarrSeqno></nCrStatCarrSeqno>
						<nDcPrem></nDcPrem>
						<nDefrYct></nDefrYct>
						<nEndAge></nEndAge>
						<nEndRtnAmtCalElmnt1></nEndRtnAmtCalElmnt1>
						<nEndRtnAmtCalElmnt10></nEndRtnAmtCalElmnt10>
						<nEndRtnAmtCalElmnt2></nEndRtnAmtCalElmnt2>
						<nEndRtnAmtCalElmnt21></nEndRtnAmtCalElmnt21>
						<nEndRtnAmtCalElmnt22></nEndRtnAmtCalElmnt22>
						<nEndRtnAmtCalElmnt3></nEndRtnAmtCalElmnt3>
						<nEndRtnAmtCalElmnt4></nEndRtnAmtCalElmnt4>
						<nEndRtnAmtCalElmnt5></nEndRtnAmtCalElmnt5>
						<nEndRtnAmtCalElmnt6></nEndRtnAmtCalElmnt6>
						<nEndRtnrt></nEndRtnrt>
						<nExptEndRetrnAmt></nExptEndRetrnAmt>
						<nExptEndRtnrt></nExptEndRtnrt>
						<nExptEndRtnStndAmtSum></nExptEndRtnStndAmtSum>
						<nFinalPaymSeq></nFinalPaymSeq>
						<nGrntPrem></nGrntPrem>
						<nGroupInsPsct></nGroupInsPsct>
						<nInrpsPsct></nInrpsPsct>
						<nMaxPrem></nMaxPrem>
						<nMinPrem></nMinPrem>
						<nMinPremRate></nMinPremRate>
						<nObjtNum></nObjtNum>
						<nPaymAge></nPaymAge>
						<nRealInsurTerm></nRealInsurTerm>
						<nRealPaymTerm></nRealPaymTerm>
						<nTotPaymPrem></nTotPaymPrem>
						<sAnntOpnAgeCd></sAnntOpnAgeCd>
						<sAnntPymCyclCd></sAnntPymCyclCd>
						<sAnntPymStrtDate></sAnntPymStrtDate>
						<sAnntPymTermCd></sAnntPymTermCd>
						<sAnntPymTypeCd></sAnntPymTypeCd>
						<sApplDclrRato></sApplDclrRato>
						<sApplPlanCd></sApplPlanCd>
						<sApplPlanName></sApplPlanName>
						<sBsmnRgstNo></sBsmnRgstNo>
						<sBunsMetdDocuClsfCd></sBunsMetdDocuClsfCd>
						<sCedeStndYm></sCedeStndYm>
						<sCmmcMeanCnclAgreYn></sCmmcMeanCnclAgreYn>
						<sCmMetd></sCmMetd>
						<sConuResltCd></sConuResltCd>
						<sConuResltName></sConuResltName>
						<sCpayDate></sCpayDate>
						<sCrNo></sCrNo>
						<sCrNoSeq></sCrNoSeq>
						<sCrNoType></sCrNoType>
						<sCrStatCd></sCrStatCd>
						<sCrStatFlgcd></sCrStatFlgcd>
						<sDoer></sDoer>
						<sDvdnFlagCd></sDvdnFlagCd>
						<sFinalPaymMthy></sFinalPaymMthy>
						<sFinalRecpDate></sFinalRecpDate>
						<sFinalReviDate></sFinalReviDate>
						<sFrstDoer></sFrstDoer>
						<sFrstDoerCentrCd></sFrstDoerCentrCd>
						<sFrstDoerGroupCd></sFrstDoerGroupCd>
						<sFrstDoerHdqtCd></sFrstDoerHdqtCd>
						<sFrstDoerPartCd></sFrstDoerPartCd>
						<sFrstDoerTeamCd></sFrstDoerTeamCd>
						<sFrstDoerUser></sFrstDoerUser>
						<sFrstSaleChnlCd></sFrstSaleChnlCd>
						<sGdCd></sGdCd>
						<sGdTypeFlgCd></sGdTypeFlgCd>
						<sGnrzCd></sGnrzCd>
						<sGroupCrAdmNo></sGroupCrAdmNo>
						<sHndwritJugmYn></sHndwritJugmYn>
						<sHsecFlagCd></sHsecFlagCd>
						<sInsurCrLoanYn></sInsurCrLoanYn>
						<sInsurEndDate></sInsurEndDate>
						<sInsurStrtdate></sInsurStrtdate>
						<sInsurTermCd></sInsurTermCd>
						<sInsurTermPaymTermName></sInsurTermPaymTermName>
						<sItemCd></sItemCd>
						<sJugmAuthCd></sJugmAuthCd>
						<sJugmGradCd></sJugmGradCd>
						<sLapsDate></sLapsDate>
						<sPaymCyclCd></sPaymCyclCd>
						<sPaymExptDate></sPaymExptDate>
						<sPaymTermCd></sPaymTermCd>
						<sPectSaleYn></sPectSaleYn>
						<sPeriMwayWdraYn></sPeriMwayWdraYn>
						<sPlanNo></sPlanNo>
						<sPlanProgRankCd></sPlanProgRankCd>
						<sPlanProgRankName></sPlanProgRankName>
						<sPlanProgTbNo></sPlanProgTbNo>
						<sPpayAvaYn></sPpayAvaYn>
						<sPsnGroupFlgcd></sPsnGroupFlgcd>
						<sSaleChnl></sSaleChnl>
						<sSaleChnlDtal></sSaleChnlDtal>
						<sScanObjtYn></sScanObjtYn>
						<sSrdoIssuDate></sSrdoIssuDate>
						<sSsrtDate></sSsrtDate>
						<sTaxPrfrGdYn></sTaxPrfrGdYn>
						<sTaxPrfrYn></sTaxPrfrYn>
					</w2:row>
				</w2:data>
			</w2:dataList>
			<w2:dataList id="Ds_Pibo" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Ds_Trty" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Ds_LTIEA10" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
			<w2:dataList id="Ds_RecvComm" baseNode="list"
				saveRemovedData="true" repeatNode="map">
			</w2:dataList>
		</w2:dataCollection>
	</xf:model>
	<script src="/cm/js/convertJs/Global_Script.js"/>
	<script src="/cm/js/convertJs/comm_Webservice.js"/>
	<script src="/cm/js/convertJs/LongTerm_Script.js"/>
	<script src="/cm/js/convertJs/NewGen_Script.js"/>
	<script src="/cm/js/convertJs/Marine_Script.js"/>	
		<script type="javascript"><![CDATA[
    /*
 	 *===================================File description================================================
 	 * 파일명 : CBSC042M.xml
 	 * 프로그램명 : 단체청약설계
 	 * 설 명 : 
 	 * 작성자 : KMJ
 	 * 작성일 : 2017.10.19
 	 *
 	 * 수정일자       수정자        수정내용
 	 *==================================================
 	 * 2017.10.19		  KMJ		  신규개발
 	 *====================================================================================================
	 */


	var gUserID; 			// global 사용자 ID
	var gUserEmpName; 	    // global 사용자명 
	var gUserDepartCode;	// global 소속부서코드
	var gUserIP;			// global 사용자IP
	var gUserDuty;			// global
	var gDoer;				// global
	var gDoerUser;			// global
	var gFaceSalesYN;		// global ASIS 선언부 못찾음
	
	var sPlanNoChFlag = false;	//청약번호가 변경되었는지 체크플래그	
	var kcbiFlag = false; 		// KCBI 대리점 로그인 여부 플래그
	var sBizCode;				//가입설계조회에서 넘어오는 청약번호
	var sJupiCode;				//가입설계조회에서 넘어오는 주민번호 
	var sIsdCsmNum;				//가입설계조회에서 넘어오는 주민번호 
	var sIsdNam;				//가입설계조회에서 넘어오는 이름
	var sPlanNo;
	var sPlanNoBack = "";		//(엑셀로드시,일괄적용시,조회시)
	var sSaleChnl = "";			//판매채널구분코드 
	var sSaleChnlDtal = "";		//판매채널상세코드
	var sToday = "";	
	var sAgncYn = "N";
	var sScanObjtYn = "N";		//비대면 계약여부 
	//화면별활성/비활성 예외 항목리스트
	var defaultExList = "보험료산출,cal_sSsrtDate,medt_sInsurStrtdate,medt_sInsurEndDate,edt_sInsurTermPaymTermName,medt_sGroupCrAdmNo,edt_sGroupName,medt_nFrstPsct,edt_nGroupDcrt,medt_nMinPrem,medt_nMaxPrem,medit_nExptEndRetrnAmt,medt_nExptEndRtnrt,medt_nGrntPrem,medt_nDcPrem,medt_nApplPrem,medt_nAccuPrem,btn_PrintSulgye,btn_InsuDetail,btn_Summary,btn_Hwang,btn_Bosang,btn_PiboDetail,btn_GetHwangup,btn_View_Pibo,btn_View_Trty,청약사항입력,edt_sCrtorName,edt_sZip1,edt_sZip2,edt_sAdrs1,edt_sAdrsAdd,edt_sHomeTel1,edt_sHomeTel2,edt_sHomeTel3,edt_sOfficeTel1,edt_sOfficeTel2,edt_sOfficeTel3,edt_sCellPhone1,edt_sCellPhone2,edt_sCellPhone3,edt_sFax1,edt_sFax2,edt_sFax3,edt_sEmail1,edt_RvadAddr,cmb_sMailRvadAddrFlagCd,edt_Insu,edt_UdrtkLmitCnt,계약요약,btn_PrintSulgye,btn_PrintInfo,chk_AgreDocuRecpYn";
	//세금우대 상품 버튼 활성화 Tab2 로드시 처리 변수
	var tab2Tax = false;
	//수익자 약정과 / 통신수단 해지는 초기화. Tab4 로드시 처리
	var tab4InitDescr = false;
	var Tab_Step1grd_PiboEnable = false;
	var Tab_Step2grd_PiboEnable = false;
	
	//탭전역변수
	var Tab_Step1 = null;
	var Tab_Step2 = null;
	var Tab_Step3 = null;
	var Tab_Step4 = null;
	
	//**********************************************************
	// 화면 초기화 
	//**********************************************************	
	var tabLoadkey = "";
	scwin.init = function(){
		//----- 버튼 처리(입력, 수정, 삭제, 결제, 취소, 인쇄, 엑셀, 닫기)
    	gfn_btnEnable(false, false, false, false, false, false, false, true);
		
		window.top.util.winTopShowModalChk = "T"
 		util.winTopShowModal();
		
		util.setBind(Tab_Req_Step1, "oniframeload", "scwin.Tab_Req_Step1_oniframeload");
		Tab_Req_Step1.setSrc("/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC043S.xml");
 			
		tabLoadkey = setInterval("scwin.tabLoadCompleted()", 100);
	};
	
	scwin.tabLoadCompleted = function(){
		if(tab1Load){
			clearInterval(tabLoadkey);
			
			scwin.fn_init();
		
			util.winTopHideModal();
		}
	};
	
	var tab1Load = false; 
	scwin.Tab_Req_Step1_oniframeload = function() {
		tab1Load = true;
		
		Tab_Step1 = Tab_Req_Step1.getWindow();
		
		if(Tab_Step1grd_PiboEnable) {
			Tab_Step1.grd_Pibo.setColumnReadOnly("sel", false);
			Tab_Step1.grd_Pibo.setDisabled("column", "sel", false);
		} 
						
	};
	
	var tab2Load = false;
	var tab2ComponentEnable = null;
	scwin.Tab_Req_Step2_oniframeload = function() {
		tab2Load = true;
		
		Tab_Step2 = Tab_Req_Step2.getWindow();
		
		if(tab2Tax){
			if (Tab_Step1.DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn") == "Y") {
           		Tab_Step2.cmb_sTaxPrfrYn.setDisabled(false);
            }
		}
		
		if(wconv.length(tab2InsuColor) > 0){
			eval(tab2InsuColor);
		}
		
		if(tab2ComponentEnable != null){
			scwin.lfn_ComponentEnable(Tab_Req_Step2, "", tab2ComponentEnable);
		}
		
		if(Tab_Step2grd_PiboEnable) {
			Tab_Step2.grd_Pibo.setColumnReadOnly("sel", false);
			Tab_Step2.grd_Pibo.setDisabled("column", "sel", false);
		} 
	};
	
	var tab3Load = false;
	var tab3ComponentEnable = null;
	var tab3Subkey = "";
	scwin.Tab_Req_Step3_oniframeload = function() {
		tab3Load = true;
		
		Tab_Step3 = Tab_Req_Step3.getWindow();
		
		if(tab3ComponentEnable != null){
			if(Tab_Step3.bLoadDivCmMetd05 != undefined && Tab_Step3.bLoadDivCmMetd05 && Tab_Step3.bLoadDivCmMetd03 != undefined && Tab_Step3.bLoadDivCmMetd03){
				scwin.lfn_ComponentEnable(Tab_Req_Step3, "", tab3ComponentEnable);
			}else{
				tab3Subkey = setInterval("scwin.tab3SubLoadCompleted()", 100);
			}
		}
	};
	
	scwin.tab3SubLoadCompleted = function(){
		if(Tab_Step3.bLoadDivCmMetd05 != undefined && Tab_Step3.bLoadDivCmMetd05 && Tab_Step3.bLoadDivCmMetd03 != undefined && Tab_Step3.bLoadDivCmMetd03){
			clearInterval(tab3Subkey);
			
			scwin.lfn_ComponentEnable(Tab_Req_Step3, "", tab3ComponentEnable);
		}
	}
	
	var tab4Load = false;
	var tab4ComponentEnable = null;
	scwin.Tab_Req_Step4_oniframeload = function() {
		tab4Load = true;
		
		Tab_Step4 = Tab_Req_Step4.getWindow();
		
		if(tab4InitDescr){
			Tab_Step4.scwin.initDescrFlag();
		}
		
		if(tab4ComponentEnable != null){
			scwin.lfn_ComponentEnable(Tab_Req_Step4, "", tab4ComponentEnable);
		}	
	};
	
	//============iframe 로딩완료 [END]================//
	
	scwin.fn_init = function() { //완료
		gfn_getServerTime();//서버시간
		sToday 			= wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8);	
		gUserID			= util.getGdsValue("gUserID");						// global 사용자 ID
		gUserEmpName 	= util.getGdsValue("gUserEmpName");    				// global 부서명
		gUserIP			= util.getGdsValue("gUserIP");						// global 사용자IP
		gUserDuty 		= util.getGdsValue("gUserDuty");
		gDoer 			= util.getGdsValue("gDoer");
		gDoerUser		= util.getGdsValue("gDoerUser");
		gFaceSalesYN	= util.getGdsValue("gFaceSalesYN");
		
		//특정그룹 설계금지
	    if (gfn_isCA(gUserID, gUserDuty)){
			scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
			scwin.lfn_ComponentEnable(Tab_Req_Step2, "", false);
	        scwin.lfn_ComponentEnable(Tab_Req_Step3, "", false);
	        scwin.lfn_ComponentEnable(Tab_Req_Step4, "", false);
	        alert("현재 상담그룹은 가입설계가 불가합니다.");
	        return;
		}
		
	    //현재 IP 정보없음
	    if (wconv.length(gUserIP) == 0){
			medt_PlanNo.setReadOnly(false);
			gFaceSalesYN = "Y";
			sSaleChnl = "3";
		}
	    
	    if (wconv.length(util.getGdsValue("gFaceSalesYN")) == 0){
        	util.setGdsValue("gFaceSalesYN", "N");
        }
		
	    //대리점인지 여부(30:대리점,33:사용인,35:TM사용인)
	   
	    if (gUserDuty == "30" || gUserDuty == "33" || gUserDuty == "35") {
	        //sAgncYn = "Y";
	    }
	    
	    // KCBI 대리점 로그인 확인  2010-02-05
	    var gManageEmpNo = util.getGdsValue("gManageEmpNo");
	    if (wconv.length(gManageEmpNo) > 0) {
	        if (wconv.charAt(gManageEmpNo, 0) == "A" || wconv.charAt(gds.gManageEmpNo, 0) == "B") {
	            kcbiFlag = true;
	        }
	    } else {
	        kcbiFlag = false;
	    }

		// 단체청약조회화면[CBSC041M]에서 들어오는 경우 청약번호로 조회
		if(gds.gDs_LinkArg.getRowCount() != 0) {
			sBizCode = gds.gDs_LinkArg.getCellData(0, "sKey");
	        sApplyNo = gds.gDs_LinkArg.getCellData(0, "sKey");
	        sJupiCode = gds.gDs_LinkArg.getCellData(0, "sInsuredCode");
	        sIsdCsmNum = gds.gDs_LinkArg.getCellData(0, "sInsuredCode");
			sPlanNo = gds.gDs_LinkArg.getCellData(0, "sInsuredNo");
	
	        gds.gDs_LinkArg.removeAll();
	    }

		//gfn_GetLinkList(obj.ID);  
	    		
		//청약번호를 넘겨받았을때 처리 
	    if (wconv.length(sPlanNo) != 0) {
	    	medt_PlanNo.setValue(sPlanNo);
	        scwin.lfn_Search();
	    } else {
	        //청약일자,보험기간 오늘날짜 세팅
	        cal_sSsrtDate.setValue(sToday);
	        
	        //보험료산출 화면 DataList Row Position 지정
        	Tab_Step1.Ds_LTIDA00.setRowPosition(0, false);
        	Tab_Step1.Ds_LTIDA00.setCellData(0, "sSsrtDate", sToday);
        	
	        Tab_Step1.medt_sInsurStrtdate.setValue(sToday);
			
	        /*취급자 사용인세팅*/
	        if(util.getGdsValue("gDoerUser") != ""){
	            scwin.lfn_getDoerInfo(util.getGdsValue("gDoerUser")); //취급자사용인정보조회
	        }else{
	            scwin.lfn_getDoerInfo(util.getGdsValue("gDoer"));
	        }

	    }
	    
//	    scwin.lfn_TabChanging();   
	};
	
	//**********************************************************
	// 취급자사용인정보조회
	//**********************************************************	
	scwin.lfn_getDoerInfo = function(sUserId) {
		wconv.clear(DsWs_DoerInfo);
	    var MethodObj = new callService("com.inswave.longterm.com.com.task.AXR970Task", "getDoerInfo", "", "");
	    MethodObj.setId("getDoerInfo");
	    MethodObj.setParam("sUserId", sUserId);
		MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//*/CCCBF42");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		//util.interfaceKey(_tranSync.result.serviceDs); //dataset 만들기 위한 로그 =>크롬 F12에서 복사해서 사용.
		util.copyM(DsWs_DoerInfo, _tranSync.getDsJson("CCCBF42"));
	    
	    if (DsWs_DoerInfo.getRowCount() > 0) {
	        /*취급자 사용인세팅*/
	        edt_sDoer.setValue(DsWs_DoerInfo.getCellData(0, "sDoer"));
	        edt_sDoerName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerName"));
	        edt_sDoerUser.setValue(DsWs_DoerInfo.getCellData(0, "sDoerUser"));
	        edt_sDoerUserName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerUserName"));
	        edt_sDoerCentrCd.setValue(DsWs_DoerInfo.getCellData(0, "sDoerCentrCd"));
	        edt_sDoerCentrName.setValue(DsWs_DoerInfo.getCellData(0, "sDoerCentrName"));
	        gfn_getEmpName(edt_sDoer.getValue());
	        if (gDsWs_SelectEmpName.getRowCount() != 0) {
	            sSaleChnl = gDsWs_SelectEmpName.getCellData(0, "sSalesChannel"); //판매채널구분코드 
	            sSaleChnlDtal = gDsWs_SelectEmpName.getCellData(0, "sSubChannel"); //판매채널상세코드
	        }
	    } else {
	        edt_sDoer.setValue("");
	        edt_sDoerUser.setValue("");
	        edt_sDoerCentrCd.setValue("");
	        edt_sDoerName.setValue("");
	        edt_sDoerUserName.setValue("");
	        edt_sDoerCentrName.setValue("");
	        /*취급자 사용인세팅*/
	        if (Ds_LTIDA00.getCellData(0, "sFrstDoer") != "") {
	            edt_sDoer.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoer"));
	            edt_sDoerUser.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoerUser"));
	            edt_sDoerCentrCd.setValue(Ds_LTIDA00.getCellData(0, "sFrstDoerCentrCd"));
	            gfn_getEmpName(edt_sDoer.getValue());
	            if (gDsWs_SelectEmpName.getRowCount() != 0) {
	                edt_sDoerName.setValue(gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
	                sSaleChnl = gDsWs_SelectEmpName.getCellData(0, "sSalesChannel"); //판매채널구분코드 
	                sSaleChnlDtal = gDsWs_SelectEmpName.getCellData(0, "sSubChannel"); //판매채널상세코드
	            }
	            if (edt_sDoerUser.getValue() != "") {
	                gfn_getEmpName(edt_sDoerUser.getValue());
	                if (gDsWs_SelectEmpName.getRowCount() != 0) {
	                    edt_sDoerUserName.setValue(gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
	                }
	            }
	            gfn_getDepartName(edt_sDoerCentrCd.getValue());
	            if (gds.gDsWs_getTeam.getRowCount() != 0) {
	                edt_sDoerCentrName.setValue(gds.gDsWs_getTeam.getCellData(0, "sDepartName"));
	            }
	        } else {
	            edt_sDoer.setValue(gds.gDoer);
	            edt_sDoerUser.setValue(gds.gDoerUser);
	            edt_sDoerCentrCd.setValue(gds.gDptOfficeCode);
	            edt_sDoerCentrName.setValue(gds.gDptOfficeName);
	            gfn_getEmpName(edt_sDoer.getValue());
	            if (gDsWs_SelectEmpName.getRowCount() != 0) {
	                edt_sDoerName.setValue(gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
	                sSaleChnl = gDsWs_SelectEmpName.getCellData(0, "sSalesChannel"); //판매채널구분코드 
	                sSaleChnlDtal = gDsWs_SelectEmpName.getCellData(0, "sSubChannel"); //판매채널상세코드
	            }
	            if (edt_sDoerUser.getValue() != "") {
	                gfn_getEmpName(edt_sDoerUser.getValue());
	                if (gDsWs_SelectEmpName.getRowCount() != 0) {
	                    edt_sDoerUserName.setValue(gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
	                }
	            }
	        }
	        return false;
	    }
	    return true;
	};
	
	//**********************************************************
	// 화면세팅에 필요한 정보를 조회
	//**********************************************************	
	scwin.lfn_Search_Async = function() { //완료
		util.eventAsyncCall(this, scwin.lfn_Search, arguments);	
	}
	var tab2InsuColor = "";	
	scwin.lfn_Search = function() {
		//화면항목비활성화처리
	    scwin.lfn_ComponentEnable(Tab_Req_Step1, "", true);
	    scwin.lfn_ComponentEnable(Tab_Req_Step2, "", true);
	
	    //초기화
	    wconv.clear(DsWs_Warning);
   	    wconv.clear(DsWs_LTIDA03);
	    wconv.clear(DsWs_LTIEA10);
	    wconv.clear(DsWs_LTIDA16);    
	    wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Pibo);
	    wconv.clear(DsWs_Bogi);
	    wconv.clear(DsWs_Napgi);
	    wconv.clear(Dsws_BaseSlct);
	    wconv.clear(DsWs_Drive);
	    wconv.clear(DsWs_FlagCd);
	    wconv.clear(DsWs_Grade);
	    wconv.clear(DsWs_PaymCycl);
	    wconv.clear(DsWs_Plan);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(DsWs_LTIDA15);
	    wconv.clear(DsWs_LTIDA00);
	    wconv.clear(DsWs_CrtorRelnCd);
	    wconv.clear(Dsws_InsAmt);
	    wconv.clear(DsWs_PrdAttr);
	    wconv.clear(DsWs_InsurTermPaymTerm);
	
	    //단체 보험료산출에서 콤포넌트 초기화
	    //Tab_Req.Tab_Step1.cal_sSsrtDate.Enable = true;
	    //Tab_Req.Tab_Step1.medt_sInsurStrtdate.Enable = true;
	    Tab_Step1.cmb_PaymCycl.setDisabled(false);
	    Tab_Step1.cmb_Plan.setDisabled(false);
	    Tab_Step1.cmb_InsurTermPaymTerm.setDisabled(false);
	    Tab_Step1.btn_AllCalPrem.setDisabled(false);
	    if (wconv.length(medt_PlanNo.getValue()) == 0) {
	        wprom.alert("설계번호를 입력하세요");
	        medt_PlanNo.focus();
	        return;
	    }
	    //보험료산출탭으로 이동
	    //Tab_Req.OnChanging = "";
	    //Tab_Req.TabIndex = 0;
	    //Tab_Req.OnChanging = "lfn_TabChanging";
	    //Tab_Req0.trigger("onclick");
	    scwin.lfn_Tab_Focus(0);
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB330Task", "getInsPlan", "", "");
	    MethodObj.setId("getInsPlan");
	    MethodObj.setParam("sPlanNo", medt_PlanNo.getValue()); //설계번호
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03");	// DsWs_LTIDA03
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIEA10Doc']/LTIEA10");	// DsWs_LTIEA10
		MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA16']/vector/data/LTIDA16");	// DsWs_LTIDA16
		MethodObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");			// DsWs_InsurTerm
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");			// DsWs_PaymTerm		
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA12ListDoc']/vector/data/LTIDA12");	// DsWs_Pibo
		MethodObj.addXPath("//hashtable/data[@hashkey='com_InsurTermCd']/vector/data/com_InsurTermCd");	// DsWs_Bogi		
		MethodObj.addXPath("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd");	// DsWs_Napgi
		MethodObj.addXPath("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd");	// Dsws_BaseSlct
		MethodObj.addXPath("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"); 	// DsWs_Drive
		MethodObj.addXPath("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd");	// DsWs_FlagCd
		MethodObj.addXPath("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd"); 	// DsWs_Grade
		MethodObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi");	// DsWs_PaymCycl
		MethodObj.addXPath("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"); 	// DsWs_Plan
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");	// DsWs_LTIDA15
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA00Doc']/LTIDA00");	// DsWs_LTIDA00
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");	// DsWs_Trty
		MethodObj.addXPath("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd");	// DsWs_CrtorRelnCd
		MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");	// Dsws_InsAmt
		MethodObj.addXPath("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi");	// DsWs_PrdAttr
		MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"); // DsWs_InsurTermPaymTerm
		MethodObj.addXPath("//WARNING");	// DsWs_Warning
		MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	//화면을 초기화한다.
	        scwin.lfn_Step0Init();
            return;
        }else{
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA03Doc']/LTIDA03"), "DsWs_LTIDA03", "Y");
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIEA10Doc']/LTIEA10"), "DsWs_LTIEA10", "Y");
 			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA16']/vector/data/LTIDA16"), "DsWs_LTIDA16", "Y");	
 			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");					
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA12ListDoc']/vector/data/LTIDA12"), "DsWs_Pibo", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_InsurTermCd']/vector/data/com_InsurTermCd"), "DsWs_Bogi", "Y");		
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"), "DsWs_Napgi", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"), "Dsws_BaseSlct", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"), "DsWs_Drive", "Y"); 	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd"), "DsWs_FlagCd", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd"), "DsWs_Grade", "Y"); 	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"), "DsWs_PaymCycl", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"), "DsWs_Plan", "Y"); 	 
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), "DsWs_LTIDA15", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA00Doc']/LTIDA00"), "DsWs_LTIDA00", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), "DsWs_Trty", "Y");	

			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd"), "DsWs_CrtorRelnCd", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"), "Dsws_InsAmt", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"), "DsWs_PrdAttr", "Y");	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"), "DsWs_InsurTermPaymTerm", "Y");  
	        	
   			//피보험자정보가 있으면 step1 피보험자데이터셋에 넘김
	        if (DsWs_Pibo.getRowCount() > 0) {
	           	wconv.clear(Tab_Step1.Ds_LTIDA00);
	           	wconv.clear(Tab_Step1.Ds_Pibo);
	            wconv.clear(Tab_Step1.Ds_Trty);
	            //상품명세팅
	            edt_sGdCdNm.setValue(DsWs_LTIDA00.getCellData(0, "sGdName"));
	            //종형세팅
	            edt_sGnrzCdNm.setValue(DsWs_LTIDA00.getCellData(0, "sGnrzName"));
	            //청약일자 세팅 
				cal_sSsrtDate.setValue(DsWs_LTIDA00.getCellData(0, "sSsrtDate"));
				
				util.insertColumn(DsWs_LTIDA00, [["gUserID","gUserID","text"]/*gUserID*/
									            ,["gUserIP","gUserIP","text"]/*gUserIP*/
									            ,["sHsecFlagCd","sHsecFlagCd","text"] /*가계구분코드*/
									            ,["sGnrzCd","sGnrzCd","text"]/*종형코드*/
									            ,["sBunsMetdDocuClsfCd","sBunsMetdDocuClsfCd","text"]/*사업방법서분류코드*/
									            ,["sApplDclrRato","sApplDclrRato","text"]/*적용공시이율*/
									            ,["sGdFlgcd","sGdFlgcd","text"]/*상품구분코드*/
									            ,["sGdTypeFlagCd","sGdTypeFlagCd","text"]/*상품유형구분코드*/
									            ,["sDvdnFlagCd","sDvdnFlagCd","text"]/*배당구분코드*/
									            ,["sPpayAvaYn","sPpayAvaYn","text"]/*선납가능여부*/
									            ,["sTaxPrfrGdYn","sTaxPrfrGdYn","text"]/*세금우대상품여부*/
									            ]);
	            
	            DsWs_LTIDA00.setCellData(0, "sHsecFlagCd", DsWs_PrdAttr.getCellData(0, "HsecFlagCd"));
	            DsWs_LTIDA00.setCellData(0, "sBunsMetdDocuClsfCd", DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd"));
	            DsWs_LTIDA00.setCellData(0, "sApplDclrRato", DsWs_PrdAttr.getCellData(0, "ApplDclrRato"));
	            DsWs_LTIDA00.setCellData(0, "sGdFlgcd", DsWs_PrdAttr.getCellData(0, "GdFlgcd"));
	            DsWs_LTIDA00.setCellData(0, "sGdTypeFlagCd", DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd"));
	            DsWs_LTIDA00.setCellData(0, "sDvdnFlagCd", DsWs_PrdAttr.getCellData(0, "DvdnFlagCd"));
	            DsWs_LTIDA00.setCellData(0, "sPpayAvaYn", DsWs_PrdAttr.getCellData(0, "PpayAvaYn"));
	            DsWs_LTIDA00.setCellData(0, "sTaxPrfrGdYn", DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn"));
	            DsWs_LTIDA00.setCellData(0, "gUserID", gUserID);
	            DsWs_LTIDA00.setCellData(0, "gUserIP", gUserIP);
	            
				
				wconv.clear(Tab_Step1.Ds_LTIDA00);
				Tab_Step1.util.copyM(Tab_Step1.Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);
				
				//보험계약설계 세팅
	            util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);
	            util.setCompBindRefresh(Ds_LTIDA00.getID());
				util.setRowPosition(Ds_LTIDA00, 0);
				
		        /*Tab_Step1.util.insertColumn(Tab_Step1.Ds_LTIDA00,   [["sApplPlanCd","sApplPlanCd","text"]
										            ,["sApplPlanName","sApplPlanName","text"]
										            ,["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]
										            ,["sSaleChnlDtal","sSaleChnlDtal","text"]
										            ]);*/
				
         		Tab_Step1.scwin.fn_init();
        		
	            //조회된 설계번호를 백업한다.
	            sPlanNoBack = DsWs_LTIDA00.getCellData(0, "sPlanNo");
	            sPlanNoChFlag = false;
	            
	            sScanObjtYn = DsWs_LTIDA00.getCellData(0, "sScanObjtYn");
	            
	            //전역변수 세팅
	            Tab_Step1.sGdCd = DsWs_LTIDA00.getCellData(0, "sGdCd"); //상품코드
	            Tab_Step1.sPlanCd = DsWs_Pibo.getCellData(0, "sApplPlanCd"); //플랜코드				
	            edt_sGdCd.setValue(DsWs_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	            edt_sGnrzCd.setValue(DsWs_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	            //단체관리세팅
	            Tab_Step1.util.copyM(Tab_Step1.Ds_LTIEA10, DsWs_LTIEA10.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIEA10.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIEA10, 0);
	            Tab_Step1.Ds_LTIEA10.setCellData(0, "nGroupDcrt", wconv.toNumber(Tab_Step1.Ds_LTIEA10.getCellData(0, "nGroupDcrt")) * 100); //단체율%표시
	            //2011.04.25 김상운추가(품의결과 내용 추가)
	            scwin.lfn_setConuReslt();        
	            //계약자 세팅
	            wconv.clear(Ds_LTIDA03);
                util.copyM(Ds_LTIDA03, DsWs_LTIDA03.getAllJSON(), true);
				util.setCompBindRefresh(Ds_LTIDA03.getID());
				util.setRowPosition(Ds_LTIDA03, 0);
//	            Tab_Step1.Ds_Pibo.unbind("oncelldatachange", scwin.Ds_Pibo_OnColumnChanged);
//	    		Tab_Step1.Ds_Pibo.unbind("onrowpositionchange", scwin.Ds_Pibo_OnRowPosChanged);
	            
	            //Tab_Step1.DsWs_CmCd.removeAll();
	            //피보험자구분세팅
	            wconv.clear(Tab_Step1.DsWs_FlagCd);
	            Tab_Step1.util.copyM(Tab_Step1.DsWs_FlagCd,DsWs_FlagCd.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_FlagCd.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_FlagCd, 0);
	            //급수세팅
                wconv.clear(Tab_Step1.DsWs_Grade);
	            Tab_Step1.util.copyM(Tab_Step1.DsWs_Grade,DsWs_Grade.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_Grade.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_Grade, 0);
	            //운전구분세팅
                wconv.clear(Tab_Step1.DsWs_Drive);
	            Tab_Step1.util.copyM(Tab_Step1.DsWs_Drive,DsWs_Drive.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_Drive.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_Drive, 0);
	            //계약자관계(수익자)세팅
	            wconv.clear(Tab_Step1.DsWs_CrtorRelnCd);
	            Tab_Step1.util.copyM(Tab_Step1.DsWs_CrtorRelnCd,DsWs_CrtorRelnCd.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_CrtorRelnCd.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_CrtorRelnCd, 0);
				//피보험자정보세팅
				wconv.clear(Tab_Step1.Ds_Pibo);
	            Tab_Step1.util.copyM(Tab_Step1.Ds_Pibo, DsWs_Pibo.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_Pibo.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_Pibo, 0);
	            //피보험자 첫번째 체크표시
	            Tab_Step1.Ds_Pibo.setCellData(0, "sel", "1");
	            //Tab_Step1.Ds_Pibo.FireEvent = true;
//	            Tab_Step1.Ds_Pibo.bind("oncelldatachange", Tab_Step1.scwin.Ds_Pibo_OnColumnChanged);
//	    		Tab_Step1.Ds_Pibo.bind("onrowpositionchange", Tab_Step1.scwin.Ds_Pibo_OnRowPosChanged);
	            
	            Tab_Step1.util.copyM(Tab_Step1.Ds_Pibo_BackUp, Tab_Step1.Ds_Pibo.getAllJSON(), true);
	            
	            Tab_Step1.util.insertColumn(Tab_Step1.Ds_Pibo_BackUp,   [["hasPronCmpsTrty","hasPronCmpsTrty","text"]
														            	,["hasFxamtCmps","hasFxamtCmps","text"]
														            	,["MediFlag","MediFlag","text"]
														            	,["fixFlag","fixFlag","text"]
														            	]);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_Pibo_BackUp.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_Pibo_BackUp, 0);
				
				for (var i=0; i<Tab_Step1.Ds_Pibo_BackUp.getRowCount(); i++) {
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N");
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "Y");
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	            }
	            for (var i=0; i<DsWs_Pibo.getRowCount(); i++) {
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "MediFlag", DsWs_Pibo.getCellData(i, "sPmmiBefoInqrYn"));
	                Tab_Step1.Ds_Pibo_BackUp.setCellData(i, "fixFlag", DsWs_Pibo.getCellData(i, "sFxBefoInqrYn"));
	            }
	            	            
		            
		        //보기/납기combo세팅
		        wconv.clear(Tab_Step1.DsWs_InsurTermPaymTerm);
//            	Tab_Step1.util.copyM(Tab_Step1.DsWs_InsurTermPaymTerm, DsWs_InsurTermPaymTerm.getAllJSON(),true);
            	Tab_Step1.DsWs_InsurTermPaymTerm.setJSON(DsWs_InsurTermPaymTerm.getAllJSON());
            	Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_InsurTermPaymTerm.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_InsurTermPaymTerm, 0);

            	Tab_Step1.cmb_InsurTermPaymTerm.setValue(DsWs_LTIDA00.getCellData(0, "sInsurTermCd") + "/" + DsWs_LTIDA00.getCellData(0, "sPaymTermCd"));
		            
 
          		wconv.clear(Tab_Step1.DsWs_PrdAttr);
           		Tab_Step1.util.copyM(Tab_Step1.DsWs_PrdAttr, DsWs_PrdAttr.getAllJSON(),true);
           		Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_PrdAttr.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_PrdAttr, 0);
	            //납입주기
				wconv.clear(Tab_Step1.DsWs_PaymCycl);
				Tab_Step1.DsWs_PaymCycl.setJSON(DsWs_PaymCycl.getAllJSON());
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_PaymCycl.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_PaymCycl, 0);
				
	            /* SELECTBOX속성으로 추가 안되면 스크립트로 하기
	            Tab_Step1.DsWs_PaymCycl.insertRow(0);
	            Tab_Step1.DsWs_PaymCycl.setCellData(0, "sGdCd", "");
	            Tab_Step1.DsWs_PaymCycl.setCellData(0, "sPaymCyclCd", "");
	            Tab_Step1.DsWs_PaymCycl.setCellData(0, "sPaymCyclName", "- 선택 -");*/
	            Tab_Step1.cmb_PaymCycl.setRef("data:Ds_LTIDA00.sPaymCyclCd");
            	
            	//보험기간
//	            Tab_Step1.util.copyM(Tab_Step1.DsWs_InsurTerm, DsWs_InsurTerm.getAllJSON());
	            Tab_Step1.DsWs_InsurTerm.setJSON(DsWs_InsurTerm.getAllJSON());
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_InsurTerm.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_InsurTerm, 0);
	            //납입기간
//	            Tab_Step1.util.copyM(Tab_Step1.DsWs_PaymTerm, DsWs_PaymTerm.getAllJSON());
	            Tab_Step1.DsWs_PaymTerm.setJSON(DsWs_PaymTerm.getAllJSON());
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_PaymTerm.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_PaymTerm, 0);
	            
	            //가입금액
	            Tab_Step1.util.copyM(Tab_Step1.Dsws_InsAmt, Dsws_InsAmt.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Dsws_InsAmt.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Dsws_InsAmt, 0);
				
				//플랜세팅
				wconv.clear(Tab_Step1.DsWs_Plan);
	            Tab_Step1.util.copyM(Tab_Step1.DsWs_Plan, DsWs_Plan.getAllJSON(),true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.DsWs_Plan.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.DsWs_Plan, 0);
	            Tab_Step1.cmb_Plan.setValue(DsWs_Pibo.getCellData(0, "sApplPlanCd"));

				wconv.clear(Tab_Step1.Ds_Trty);
	            Tab_Step1.util.copyM(Tab_Step1.Ds_Trty, DsWs_Trty.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_Trty.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_Trty, 0);
							
				wconv.clear(Tab_Step1.Ds_Trty_Backup);
	            Tab_Step1.util.copyM(Tab_Step1.Ds_Trty_Backup, DsWs_Trty.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_Trty_Backup.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_Trty_Backup, 0);
            
            	//특약중 화면출력특약만 화면에 보여줌 
	            Tab_Step1.wconv.filter(Tab_Step1.Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	            Tab_Step1.wconv.filter(Tab_Step1.Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	         	
	         	//보험기간,가입금액 초기값 세팅
	            Tab_Step1.scwin.lfn_InsurTermInit();	
  	         	//특약데이터셋 변경시 이벤트처리를 위해 이벤트 정의함
//	            Tab_Step1.Ds_Pibo.bind("oncelldatachange", Tab_Step1.scwin.lfn_Pibo_OnColumnChanged);
//				Tab_Step1.scwin.lfn_Pibo_OnColumnChanged();
//				Tab_Step1Ds_Trty.bind("oncelldatachange", Tab_Step1.scwin.lfn_Trty_OnColumnChanged);	
//				Tab_Step1.scwin.lfn_Trty_OnColumnChanged();
//  	         	Tab_Step1.medt_sInsurStrtdate.bind("onchanged", Tab_Step1.scwin.lfn_InsurStrtDateChange);
	//			Tab_Step1.scwin.lfn_InsurStrtDateChange();
				//설계번호에 이벤트 처리
	//			scwin.medt_PlanNo_onviewchange();	// 설계번호 변경시 밸리데이션 체크
					
							
				//전산심사복사
	            util.copyM(Ds_LTIDA15, DsWs_LTIDA15.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Ds_LTIDA15.getID());
				Tab_Step1.util.setRowPosition(Ds_LTIDA15, 0);
				
	            Tab_Step1.util.copyM(Tab_Step1.Ds_LTIDA15, DsWs_LTIDA15.getAllJSON(), true);
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIDA15.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA15, 0);
	            if (Ds_LTIDA15.getRowCount() > 0) {
	            	Tab_Step1.$("#btn_InsuDetail").find("a").css("color", "red");
//	            	Tab_Step2.$("#btn_InsuDetail").find("a").css("color", "red");
	            	if(Tab_Step2 != null){
	                	Tab_Step2.$("#btn_InsuDetail").find("a").css("color", "red");
	                	tab2InsuColor = "";
	                }else{
	                	tab2InsuColor = "Tab_Step2.$(\"#btn_InsuDetail\").find(\"a\").css(\"color\", \"red\")";
	                }
	            } else {
	                Tab_Step1.$("#btn_InsuDetail").find("a").css("color", "black");
//	            	Tab_Step2.$("#btn_InsuDetail").find("a").css("color", "black");
					if(Tab_Step2 != null){
	                	Tab_Step2.$("#btn_InsuDetail").find("a").css("color", "");
	                	tab2InsuColor = "";
	                }else{
	                	tab2InsuColor = "Tab_Step2.$(\"#btn_InsuDetail\").find(\"a\").css(\"color\", \"\")";
	                }
	            }
				
				Tab_Step1.modifyFlag = false; 		//화면값중 기존값에서 변경된 경우 체크
	            Tab_Step1.AllCalcPremFlag = true;	//일괄적용처리여부 체크
	            
	            //경과기간환급금배치처리
	            if (DsWs_LTIDA16.getRowCount() > 0) {
	                Tab_Step1.ExptRtnAmtFlag = true;
	            } else {
	                Tab_Step1.ExptRtnAmtFlag = false;
	            }
	            
	            //57:인수불가/58:조건부승인/59:보완/확정/수납대기시일경우 화면 비활성화
	            var sPlanProgRankCd = Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
//	            if ((wconv.toNumber(sPlanProgRankCd) >= 52 && wconv.toNumber(sPlanProgRankCd) <= 58) || 
	            if ((wconv.toNumber(sPlanProgRankCd) >= 52 && wconv.toNumber(sPlanProgRankCd) <= 59) || //sPlanProgRankCd 59:보완 추가 (20171219)
	                 wconv.toNumber(sPlanProgRankCd) == 0 || 
	                 wconv.toNumber(sPlanProgRankCd) == 90 || 
	                 Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	                //승인완료
	                //화면항목비활성화처리
	                scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
	                scwin.lfn_ComponentEnable(Tab_Req_Step2, "", false);
	                
	                //대상,요청일경우
					if(wconv.toNumber(sPlanProgRankCd) == 51 || wconv.toNumber(sPlanProgRankCd) == 52) {
					//	Tab_Req.Tab_Step1.eval("grd_Pibo").SetCellProp("BODY", 0, "Edit", "checkbox");
					//	Tab_Req.Tab_Step2.eval("grd_Pibo").SetCellProp("BODY", 0, "Edit", "checkbox");
						Tab_Step1grd_PiboDisabled = false;
						Tab_Step2grd_PiboDisabled = false;
						/*Tab_Step1.grd_Pibo.setColumnReadOnly("sel", false);
						Tab_Step1.grd_Pibo.setDisabled("column", "sel", false);
						
						Tab_Step2.grd_Pibo.setColumnReadOnly("sel", false);
						Tab_Step2.grd_Pibo.setDisabled("column", "sel", false);*/
					}	
	                if (wconv.toNumber(sPlanProgRankCd) == 57 || 
	                    wconv.toNumber(sPlanProgRankCd) == 58 || 
	                    wconv.toNumber(sPlanProgRankCd) == 59 ||	//sPlanProgRankCd 59:보완 추가 (20171219)
	                    wconv.toNumber(sPlanProgRankCd) == 0 || 
	                    wconv.toNumber(sPlanProgRankCd) == 90) {
	                    scwin.lfn_ComponentEnable(Tab_Req_Step3, "", false); //승인상태일때는 요약탭 활성화	
	                } else if (wconv.toNumber(sPlanProgRankCd) == 56) {
	                    scwin.lfn_ComponentEnable(Tab_Req_Step3, "", true);
	                }
	            } else {
	                //청약서발행건은 재산출 / 수정 금지
	                if (gFaceSalesYN == "Y" && wconv.length(Ds_LTIDA00.getCellData(0, "sSrdoIssuDate")) > 0) {
	                    scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
	                    scwin.lfn_ComponentEnable(Tab_Req_Step2, "", false);
	                } else {
	                    scwin.lfn_ComponentEnable(Tab_Req_Step1, "", true);
	                    scwin.lfn_ComponentEnable(Tab_Req_Step2, "", true);
	                    scwin.lfn_ComponentEnable(Tab_Req_Step3, "", true);
	                }
	            }
	            
	            //일시납 납입기간에 따른 납입주기 세팅
	            //일사납일경우 납입주기를 일시납으로 변경
	            //Tab_Step1.scwin.lfn_PaymCyclSet();
	            Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIDA00.getID());
				Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA00, 0);
	            
	            if (Tab_Step1.Ds_LTIDA00.getCellData(0, "sPaymTermCd") == "000") {
	                Tab_Step1.cmb_PaymCycl.setDisabled(true);
	            }
	                        
	            //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	            if (DsWs_Plan.getCellData(Tab_Step1.cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	                Tab_Step1.medt_nBussPrem.setDisabled(true);
	            } else {
	                Tab_Step1.medt_nBussPrem.setDisabled(false);
	            }
	            
	            //취급자사용인정보조회(신규)
	            if (Ds_LTIDA00.getCellData(0, "sFrstDoerUser") != "") {
	                scwin.lfn_getDoerInfo(Ds_LTIDA00.getCellData(0, "sFrstDoerUser"));
	            } else {
	                scwin.lfn_getDoerInfo(Ds_LTIDA00.getCellData(0, "sFrstDoer"));
	            }
	            util.setCompBindRefresh(Ds_LTIDA00.getID());
	            util.setRowPosition(Ds_LTIDA00, 0);
	        } 
	        else {
	            wprom.alert("해당설계번호에 대한 계약건이 없습니다.");
	        }
	    }
	    
	    //MS텝 정보 출력(신규)
	    scwin.lfn_set_Tab_Info("S1", "T1");
	    
	    scwin.lfn_set_Tab_Info("S2", "T1");
	    scwin.lfn_set_Tab_Info("S2", "T2");
	    
	    scwin.lfn_set_Tab_Info("S3", "T1");
	    scwin.lfn_set_Tab_Info("S3", "T2");
					         	
	    //고객정보 조회 이력쌓기
	    gfn_LogCreditInfoVt(DsWs_Pibo, "", "S", "sGroupInrpsCd");
	};
	
	//**********************************************************
	//보험료산출화면을 초기화
	//**********************************************************	
	scwin.lfn_Step0Init = function() {
		//화면을 초기화한다.
	    edt_sGdCd.setValue(""); // 상품코드
	    edt_sGdCdNm.setValue(""); // 상품명
	    edt_sGnrzCd.setValue(""); // 종형코드
	    edt_sGnrzCdNm.setValue(""); // 종형명	
	    medt_PlanNo.setValue(""); // 설계번호	
	    
	    wconv.clear(Tab_Step1.Ds_LTIDA00);
	    Tab_Step1.util.insertColumn(Tab_Step1.Ds_LTIDA00, [["sApplPlanCd","sApplPlanCd","text"]
														  ,["sApplPlanName","sApplPlanName","text"]
														  ,["sFrstSaleChnlCd","sFrstSaleChnlCd","text"]
														  ,["sSaleChnlDtal","sSaleChnlDtal","text"]]);
		
	    Tab_Step1.Ds_LTIDA00.insertRow();
	    Tab_Step1.Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", "21"); //개인단체구분코드 세팅
	    
	    Tab_Step1.Ds_LTIEA10.removeAll();
	    Tab_Step1.Ds_LTIEA10.insertRow();
	    Tab_Step1.Ds_Pibo.removeAll();
	    Tab_Step1.Ds_Trty.removeAll();
	    //플랜정보삭제
	    Tab_Step1.DsWs_Plan.removeAll();
	
	    //청약일자,보험기간 오늘날짜 세팅
	    cal_sSsrtDate.setValue(sToday);
	    Tab_Step1.medt_sInsurStrtdate.setValue(sToday);
	    Tab_Step1.Ds_LTIDA00.setCellData(0, "sSsrtDate", sToday);
	    Tab_Step1.Ds_LTIDA00.setCellData(0, "sInsurStrtdate", sToday);

	    Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIDA00.getID());
		Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA00, 0);
	
	    Tab_Step1.cmb_PaymCycl.setDisabled(false);
	    Tab_Step1.cmb_Plan.setDisabled(false);
	    Tab_Step1.cmb_InsurTermPaymTerm.setDisabled(false);
	    Tab_Step1.btn_AllCalPrem.setDisabled(false);
	
	    //계약자 초기화
	    Ds_LTIDA03.removeAll();
	};
	
	//**********************************************************
	//탭버튼 클릭시나 다음버튼 클릭시 처리
	//**********************************************************	
	scwin.lfn_TabChanging = function(nOldIndex, nNewIndex){
		var idx = Number(nNewIndex) + 1;
		if(eval("tab"+idx+"Load")){
			var flag = scwin.do_TabChanging(nOldIndex, nNewIndex);
			return flag;
		}else{
			switch(idx) {
				case 2:
					if(Tab_Req_Step2.getSrc() != "/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC044S.xml"){
						util.winTopShowSrcModal();
						
						util.setBind(Tab_Req_Step2, "oniframeload", "scwin.Tab_Req_Step2_oniframeload");
						Tab_Req_Step2.setSrc("/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC044S.xml");
						
						tabChangekey = setInterval("scwin.tabChangeLoadCompleted("+idx+", "+nOldIndex+","+nNewIndex+")", 100);
						
						return false;
					}else{
						return false;
					}
				break;
				case 3:
					if(Tab_Req_Step3.getSrc() != "/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC045S.xml"){
						util.winTopShowSrcModal();
						
						util.setBind(Tab_Req_Step3, "oniframeload", "scwin.Tab_Req_Step3_oniframeload");
						Tab_Req_Step3.setSrc("/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC045S.xml");
						
						tabChangekey = setInterval("scwin.tabChangeLoadCompleted("+idx+", "+nOldIndex+","+nNewIndex+")", 100);
						
						return false;
					}else{
						return false;
					}
				break;
				case 4:
					if(Tab_Req_Step4.getSrc() != "/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC019S.xml"){
						util.winTopShowSrcModal();
						
						util.setBind(Tab_Req_Step4, "oniframeload", "scwin.Tab_Req_Step4_oniframeload");
						Tab_Req_Step4.setSrc("/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC019S.xml");
						
						tabChangekey = setInterval("scwin.tabChangeLoadCompleted("+idx+", "+nOldIndex+","+nNewIndex+")", 100);
						
						return false;
					}else{
						return false;
					}
				break;
			}
		}
	};
		
	scwin.do_TabChanging = function(nOldIndex, nNewIndex) {	
		//첫번째탭은 0,1,2,3으로 index, obj는 Tab_Req
	    //현재탭에서 저장해야할 데이터셋 처리
	    if (nOldIndex == 0) {	//보험료산출 탭 
	        util.copyM(DsWs_FlagCd, Tab_Step1.DsWs_FlagCd.getAllJSON(),true); 			//고객구분코드(공통)
	        util.copyM(DsWs_Drive, Tab_Step1.DsWs_Drive.getAllJSON(),true); 				//운전자급수코드(공통)
	        util.copyM(DsWs_CrtorRelnCd, Tab_Step1.DsWs_CrtorRelnCd.getAllJSON(),true); 	//계약자관계(수익자)(공통)
	        util.copyM(DsWs_InsurTerm, Tab_Step1.DsWs_InsurTerm.getAllJSON(),true); 		//납입기간코드(상품)
	        util.copyM(DsWs_PaymTerm, Tab_Step1.DsWs_PaymTerm.getAllJSON(),true); 		//보험기간코드(상품)
	        util.copyM(DsWs_PaymCycl, Tab_Step1.DsWs_PaymCycl.getAllJSON(),true); 		//납입주기코드(공통)
	        util.copyM(Dsws_InsAmt, Tab_Step1.Dsws_InsAmt.getAllJSON(),true);				//가입금액
	        //Ds_LTIDA03계약자는 화면오픈시 정보가 있으면 상위프레임 데이터셋에 담겨있음
	        util.copyM(Ds_LTIDA00, Tab_Step1.Ds_LTIDA00.getAllJSON(),true); //계약기본정보
	        util.copyM(Ds_Pibo, Tab_Step1.Ds_Pibo.getAllJSON(),true); //피보험자정보
	        util.copyM(Ds_Trty, Tab_Step1.Ds_Trty.getAllJSON(),true); //특약정보 
	    } 
	    else if (nOldIndex == 1) {	 //청약사항안내  탭
	        util.copyM(Ds_LTIDA03, Tab_Step2.Ds_LTIDA03.getAllJSON(),true); 	//계약자정보
	        util.copyM(Ds_Pibo, Tab_Step2.Ds_Pibo.getAllJSON(),true); 		//피보험자정보
	        util.copyM(Ds_LTIDA15, Tab_Step2.Ds_LTIDA15.getAllJSON(),true); 	//인수제한정보	  
	    } 
	
	    //탭이동시 이동가능여부체크
	    if (!scwin.lfn_TabChangeCheck(nOldIndex, nNewIndex)) {
	    	return false;
	    } 
			    
	    if (nNewIndex == 0) {					//보험료계산
	        btn_sGdCd.setDisabled(false);
	        btn_Pop_Search.setDisabled(false);	
	        		
	        //상태가변경될때 상위계약정보가 가지고 있으므로 하위로 복사한다.
	        Tab_Step1.util.copyM(Tab_Step1.Ds_LTIDA00, Ds_LTIDA00.getAllJSON(),true);	//계약기본정보
	        Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIDA00.getID());
	        Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA00, 0);
	        Tab_Step1.util.copyM(Tab_Step1.Ds_LTIDA15, Ds_LTIDA15.getAllJSON(),true);	//전산심사정보
	        Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_LTIDA15.getID());
	        Tab_Step1.util.setRowPosition(Tab_Step1.Ds_LTIDA15, 0);
	        Tab_Step1.util.copyM(Tab_Step1.Ds_Pibo, Ds_Pibo.getAllJSON(),true);			//피보험자정보
	        Tab_Step1.util.setCompBindRefresh(Tab_Step1.Ds_Pibo.getID());
			Tab_Step1.util.setRowPosition(Tab_Step1.Ds_Pibo, 0);
			return true; 
	    } 
	    else if (nNewIndex == 1) {				//청약사항입력
	        btn_sGdCd.setDisabled(true);
	        btn_Pop_Search.setDisabled(true);
	        
	        Tab_Step2.util.copyM(Tab_Step2.Ds_LTIDA15, Ds_LTIDA15.getAllJSON(),true);//전산심사정보
	        if(nOldIndex == 2) { // 계약요약탭에서 청약사항입력탭으로 오는 경우에만 copy
	        	Tab_Step2.util.copyM(Tab_Step3.Ds_LTIEA10, Ds_LTIEA10.getAllJSON(),true);//단체정보
	        }
	        Tab_Step2.scwin.fn_Init();
	        
	        return true; 
	    } 
	    else if (nNewIndex == 2) {				//계약요약
	        btn_sGdCd.setDisabled(true);
	        btn_Pop_Search.setDisabled(true);
	        
	        Tab_Step3.util.copyM(Tab_Step3.Ds_Pibo, Ds_Pibo.getAllJSON(),true);		//피보험자정보
	        
	        Tab_Step3.scwin.fn_Init();
	        return true; 
	    } 
	    else if (nNewIndex == 3) {			//입금안내
	    	if(gFaceSalesYN == "Y" && wconv.length(Ds_LTIDA00.getCellData(0,"sSrdoIssuDate")) == 0){
			alert("청약서발행후에 입금가능합니다.");
			return false;
			}
		
	        btn_sGdCd.setDisabled(true);
	        btn_Pop_Search.setDisabled(true);
	        Tab_Step4.scwin.lfn_Init();
	        var userID = util.getGdsValue("gUserID");
	        if (wconv.length(userID) == 0)
	            userID = Ds_LTIDA00.getCellData(0, "sInptDler");
	        util.insertColumn(Ds_RecvComm, [ ["sCrNo","sCrNo","text"]
	            						    ,["sPlanNo","sPlanNo","text"]
	            							,["sBizCat","sBizCat","text"]
	            							,["nCrChngNo","nCrChngNo","text"]
	            							,["sDpsrCd","sDpsrCd","text"]
	           								,["sDpsrName","sDpsrName","text"]
	                						,["sCrtorCd","sCrtorCd","text"]
	            							,["sInrpsCd","sInrpsCd","text"]
	           								,["sCrtorName","sCrtorName","text"]
											,["sDoer","sDoer","text"]
	            							,["nApplPrem","nApplPrem","text"]
	            							,["nRecpPrem","nRecpPrem","text"]
	            							,["sEmail","sEmail","text"]
											,["sBizCat","sBizCat","text"]
	           								,["sProcCat","sProcCat","text"]
	            							,["sPayCnt","sPayCnt","text"]
	            							,["sRecpDate","sRecpDate","text"]
	            							,["sGdTypeFlgCd","sGdTypeFlgCd","text"]
									        ]);
	        wconv.clear(Ds_RecvComm);
	        util.appendRow(Ds_RecvComm);
	        Ds_RecvComm.setCellData(0, "sCrNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); // 설계번호 
	        Ds_RecvComm.setCellData(0, "sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); // 설계번호 
	        Ds_RecvComm.setCellData(0, "sBizCat", "1"); // // 업무구분 : 1 초회수납(청약), 2 계속수납(계속분), 3 변경수납, 4 기타수납
	        Ds_RecvComm.setCellData(0, "nCrChngNo", Ds_LTIDA00.getCellData(0, "nCrChngNo")); // 변경번호 
	        Ds_RecvComm.setCellData(0, "sDpsrCd", Ds_LTIDA03.getCellData(0, "sCrtorCd")); // 예금주번호(계약자코드)
	        Ds_RecvComm.setCellData(0, "sDpsrName", Ds_LTIDA03.getCellData(0, "sCrtorName")); //예금주명 
	        Ds_RecvComm.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd")); // 계약자번호(계약자코드)
	        Ds_RecvComm.setCellData(0, "sInrpsCd", Ds_Pibo.getCellData(0, "sInrpsCd")); // 피보험자코드
	        Ds_RecvComm.setCellData(0, "sCrtorName", Ds_LTIDA03.getCellData(0, "sCrtorName")); //계약자명
	        Ds_RecvComm.setCellData(0, "sDoer", userID); //처리자 
	        Ds_RecvComm.setCellData(0, "nApplPrem", Ds_LTIDA00.getCellData(0, "nApplPrem")); // 영수보험료(적용보험료)
	        Ds_RecvComm.setCellData(0, "nRecpPrem", Ds_LTIDA00.getCellData(0, "nApplPrem")); // 영수보험료(적용보험료)
	        //gDs_LinkArg.removeAll(); 		//gDs_LinkArg.InsertRow(0);	        
	        Ds_RecvComm.setCellData(0, "sBizCat", "1");
	        Ds_RecvComm.setCellData(0, "sProcCat", "1"); // 처리구분 : 1 정상분, 2 추가납입분 
	        Ds_RecvComm.setCellData(0, "sPayCnt", "1"); // 입금건수 
	        Ds_RecvComm.setCellData(0, "sRecpDate", sToday); // 영수일자(오늘날짜) 
	        Ds_RecvComm.setCellData(0, "sEmail", Ds_LTIDA03.getCellData(0, "sEmail1")); //약관발송시이메일(계약자이메일)
	        Ds_RecvComm.setCellData(0, "sGdTypeFlgCd", Ds_LTIDA00.getCellData(0, "sGdTypeFlgCd")); // GdTypeFlagCd : 1운전자, 2:상해, 3:저축, 4:상해질병
	        
	        Tab_Step4.util.copyM(Tab_Step4.Ds_RecvComm, Ds_RecvComm.getAllJSON(),true);
	        Tab_Step4.scwin.doInit();
	        return true; 
   		}
	};

	scwin.Tab_Req_onclick_Async = function(e) {
		var objId = this.id;
		util.eventAsyncCall(this, scwin.Tab_Req_onclick, [objId]);
	};
	// 이벤트 정보중에 OldIndex 값이 없기때문에 전역 변수를 만들어줌 0번째 Index 값이 default 
	var tapOldIndex = 0;
	//**********************************************************
	// 탭 클릭 이벤트  
	//**********************************************************
	var tabChangekey = "";
	var tabChangekey = "";
	scwin.Tab_Req_onclick = function(objId) {
		var nNewIndex = objId;
		nNewIndex = wconv.substr(nNewIndex, nNewIndex.length-1, 1);
		var nOldIndex = tapOldIndex;
		
		if(Number(nNewIndex) != Number(nOldIndex)){
			if(scwin.lfn_TabChanging(nOldIndex, nNewIndex)){
				scwin.lfn_Tab_Focus(nNewIndex);
	    		
	    		if(nNewIndex == 1){
					scwin.lfn_set_Tab_Info("S2", "T1");
	    			scwin.lfn_set_Tab_Info("S2", "T2");
				}
				
			}
			
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 로드완료시 탭변경 이벤트 호출
	//
	//---------------------------------------------------------------------------
	scwin.tabChangeLoadCompleted = function(idx, nOldIndex, nNewIndex){
		if(Number(idx) == 3){
			if(eval("tab"+idx+"Load")){
				if(Tab_Step3.bLoadDivCmMetd05 != undefined && Tab_Step3.bLoadDivCmMetd05 && Tab_Step3.bLoadDivCmMetd03 != undefined && Tab_Step3.bLoadDivCmMetd03){
					clearInterval(tabChangekey);
				
					if(scwin.do_TabChanging(nOldIndex, nNewIndex)){
						scwin.lfn_Tab_Focus(nNewIndex);
					}
					util.winTopHideSrcModal();
				}
			}
		}else{
			if(eval("tab"+idx+"Load")){
				clearInterval(tabChangekey);
				
				if(scwin.do_TabChanging(nOldIndex, nNewIndex)){
					scwin.lfn_Tab_Focus(nNewIndex);
					
					if(nNewIndex == 1){
						scwin.lfn_set_Tab_Info("S2", "T1");
		    			scwin.lfn_set_Tab_Info("S2", "T2");
					}
				}
				util.winTopHideSrcModal();
			}
		}
	};
		
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 탭변경시 포커스 변경
	//
	//---------------------------------------------------------------------------
	scwin.lfn_Tab_Focus = function(nNewIndex){
		for(var i=0;i<=3;i++){
			if(Number(nNewIndex) != i){
				eval("Tab_Req"+i).removeClass("on");
				eval("Tab_Req_Step"+(i+1)).setStyle("display", "none");
			}
		}
		eval("Tab_Req"+nNewIndex).addClass("on");
		eval("Tab_Req_Step"+(Number(nNewIndex)+1)).setStyle("display", "block");
		
		//클릭 이벤트 처리후 최종에 nNewIndex 값을 tapOldIndex 저장 Old값 지정
		tapOldIndex = nNewIndex;
	};
	
	//**********************************************************
	// 탭이동시 이동가능여부 체크
	//**********************************************************
	scwin.lfn_TabChangeCheck = function(nOldIndex, nNewIndex, fGubunFlag) {
	    var fFlag = true;
	    //40:보험료산출(단체)
	    //50:청약사항입력(고지사항)/51:심사대상/52:인수요청/53:진단심사중/54:실사심사중
	    //55:인수심사중/56:인수승인/57:인수불가/58:조건부승인/59:보완
	    //60:계약요약	
	    var sPlanProgRankCd = Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");	    
	    if (wconv.length(sPlanProgRankCd) == 0) {
	        wprom.alert("보험료산출을 처리해주세요.");
	        fFlag = false; //tabChangeFlag = false;      // 메인탭 체인지 플래그	
	        //trace("sPlanProgRankCd.length = 0");		
	        
	    } 
	    //00 완료 90 수납대기일경우 화면 비활성화 처리함
	    else if (wconv.toNumber(sPlanProgRankCd) == 0 || wconv.toNumber(sPlanProgRankCd) == 90) {
	        //화면항목비활성화처리
	        scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
	        scwin.lfn_ComponentEnable(Tab_Req_Step2, "", false);
	        scwin.lfn_ComponentEnable(Tab_Req_Step3, "", false);
	        fFlag = true; //tabChangeFlag = true; 
	    } 
	    else if (wconv.toNumber(sPlanProgRankCd) < 20) {
	        wprom.alert("보험료산출을 처리해주세요.");
	        fFlag = false; 
	    } 
	    else {
//	        if (wconv.toNumber(sPlanProgRankCd) >= 52 && wconv.toNumber(sPlanProgRankCd) <= 58) {
	        if (wconv.toNumber(sPlanProgRankCd) >= 52 && wconv.toNumber(sPlanProgRankCd) <= 59) { //sPlanProgRankCd 59:보완 추가 (20171219)
	            //화면항목비활성화처리
	            scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
	            scwin.lfn_ComponentEnable(Tab_Req_Step2, "", false);
	            //대상,요청일경우
	            if (wconv.toNumber(sPlanProgRankCd) == 51 || 
	                wconv.toNumber(sPlanProgRankCd) == 52) {
	     //           Tab_Req_Tab_Step1_eval("grd_Pibo").SetCellProp("BODY", 0, "Edit", "checkbox");
	     //           Tab_Req_Tab_Step2_eval("grd_Pibo").SetCellProp("BODY", 0, "Edit", "checkbox");
	     			Tab_Step1.grd_Pibo.setColumnReadOnly("sel", false);
					Tab_Step1.grd_Pibo.setDisabled("column", "sel", false);
					
					Tab_Step2.grd_Pibo.setColumnReadOnly("sel", false);
					Tab_Step2.grd_Pibo.setDisabled("column", "sel", false);
	            }
	            if (wconv.toNumber(sPlanProgRankCd) == 57 || 
	                wconv.toNumber(sPlanProgRankCd) == 58 || 
	                wconv.toNumber(sPlanProgRankCd) == 59 || //sPlanProgRankCd 59:보완 추가 (20171219)
	                wconv.toNumber(sPlanProgRankCd) == 0 || 
	                wconv.toNumber(sPlanProgRankCd) == 90) {
	                scwin.lfn_ComponentEnable(Tab_Req_Step3, "", false);
	            }
	        }

	        //계약요약,입금안내
	        if (((nNewIndex == 2 || nNewIndex == 3)) && 
	             wconv.toNumber(sPlanProgRankCd) == 40) {
	            wprom.alert("청약사항입력을 처리해주세요.");
	            fFlag = false; //계약요약,입금안내
	        } 
	        else if (((nNewIndex == 2 || nNewIndex == 3)) && 
	                  wconv.toNumber(sPlanProgRankCd) < 56) {
	            wprom.alert("인수심사건은 진행할수 없습니다.");
	            fFlag = false; //계약요약,입금안내 57:인수불가/58:조건부승인/59:보완
	        } 
	        else if (((nNewIndex == 2 || nNewIndex == 3)) && 
	                    ((wconv.toNumber(sPlanProgRankCd) == 57 || 
	                      wconv.toNumber(sPlanProgRankCd) == 58 ||
	                      wconv.toNumber(sPlanProgRankCd) == 59 //sPlanProgRankCd 59:보완 추가 (20171219)
	                     ))) {
	            wprom.alert("인수불가 계약입니다.");
	            fFlag = false; //입금안내
	        } else if (nNewIndex == 3 && wconv.toNumber(sPlanProgRankCd) < 60) {
	            wprom.alert("계약요약탭을 선택해주세요.");
	            fFlag = false;
	        }
	    }
	    
	    //보험료계산화면에서 이동하는경우 데이터 변경여부체크
		if(nOldIndex == 0 && fFlag){
			//밸리데이션 체크
			if(Tab_Step1.scwin.lfn_ValidationCheck("all")){
				return false;
			}	
			
			if(Tab_Step1.modifyFlag){
				alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
				Tab_Step1.btn_AllCalPrem.focus();
				fFlag = false;	
				return fFlag;
			}							
	
			if(Tab_Step1.Ds_Pibo.getRowCount() != Tab_Step1.Ds_Pibo_BackUp.getRowCount()){
				//trace("사이즈 다름");
				//trace("Ds_Pibo 인원수:"+Tab_Req.Tab_Step1.Ds_Pibo.GetRowCount());
				//trace("Ds_Pibo_BackUp 인원수:"+Tab_Req.Tab_Step1.Ds_Pibo_BackUp.GetRowCount());
				if(Tab_Step1.Ds_Pibo_BackUp.getRowCount() != 0){
					alert("피보험자 명부가 변경되었습니다. 일괄적용을 다시 하세요.");
					fFlag = false;	
				}
			}
			
			if(!Tab_Step1.ExptRtnAmtFlag){
				alert("경과기간 환급금 배치처리를 실행해주세요.");
				fFlag = false;	
			}	
			
		//청약사항입력화면에서 이동하는경우 데이터 변경여부체크
		}else if(nOldIndex == 1 && fFlag){
			/*
			//고지사항사항 입력여부
	        var sPiRqstYn = true;
	        for (var i = 0; i < Tab_Step2.Ds_Pibo.getRowCount(); i++) {
	            if (wconv.length(Tab_Step2.Ds_Pibo.getCellData(i, "sRqstYn")) <= 0) {
	                sPiRqstYn = false;
	            }
	        }
	
	        //고지사항이 입력된 후에는 청약사항 체크해야함. 
	        if (sPiRqstYn == true || nNewIndex >= nOldIndex) {
				//밸리데이션 체크
				if(Tab_Step2.scwin.lfn_ValidationCheck(fGubunFlag)){
					return false;
				}
				
				if(Tab_Step2.modifyFlag){
					alert("계약사항이 변경되었습니다.\n 다음버튼을 눌러주세요.");
					Tab_Step2.btn_Next.focus();
					fFlag = false;	
					return fFlag;
				}
			}*/
			//밸리데이션 체크
			if(Tab_Step2.scwin.lfn_ValidationCheck(fGubunFlag)){
				return false;
			}
			
			if(Tab_Step2.modifyFlag){
				alert("계약사항이 변경되었습니다.\n 다음버튼을 눌러주세요.");
				Tab_Step2.btn_Next.focus();
				fFlag = false;	
				return fFlag;
			}									
		}
	    
	    return fFlag;
    };  
    
	//**********************************************************
	// 청약번호 뷰체인지 이벤트 발생 
	//**********************************************************
	scwin.medt_PlanNo_onviewchange = function(info) {
		var oldValue = info.oldValue;
    	var newValue = info.newValue;
    	if(oldValue != newValue){
			if(wconv.length(medt_PlanNo.getValue()) != 12){
				wprom.alertF("설계번호가 정확하지 않습니다.", {}, medt_PlanNo);
			}			
			sPlanNoChFlag = true;	
		}
	};	

	//**********************************************************
	// 상품선택 버튼 클릭이벤트
	//**********************************************************
	scwin.lfn_sangpum = function() {
		var promise = Promise.resolve();
	    
	    var sGroupInrpsCd = Tab_Step1.Ds_Pibo.getCellData(0, "sGroupInrpsCd");
	    if (Tab_Step1.Ds_Pibo.getRowCount() != 0 && wconv.length(sGroupInrpsCd) > 0) {
	    
	        var indata = {};
	        indata["sJupiCode"] 	= sGroupInrpsCd;
	        indata["sPsnGroupFlag"] = "2";
	        indata["sPsnPrprtGroupFlgcd"] = "";
	    	indata["sBunsMetdDocuClsfCd"] = "";
	        
	        promise = promise.then(function(rtnVal) {
	        var popInfo = {"width":715,
	    	                   "height":376,
	    	                   "indata":indata,
	    	                //   "callback"  : scwin.popupCallback,
							   "title"     : "가입상품조회 및 선택"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbsc/CBSC008P.xml", popInfo);//상품  
	    	});
	        promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
				console.log("====CBSC008P promise close \n"+JSON.stringify(rtnValue));
				if (rtnValue != "") {
					//alert(JSON.stringify(rtnValue));
					if (wconv.length(rtnValue) != 0) {
			            var goodsRetArr = rtnValue.split("^");
			            edt_sGdCd.setValue(goodsRetArr[0]); 	// 상품코드
			            edt_sGdCdNm.setValue(goodsRetArr[1]); 	// 상품명
			            edt_sGnrzCd.setValue(goodsRetArr[2]); 	// 종형코드
			            edt_sGnrzCdNm.setValue(goodsRetArr[3]); // 종형명
			       
			            edt_sMinAge.setValue(goodsRetArr[5]);	// 가입가능최소나이
						edt_sMaxAge.setValue(goodsRetArr[6]);	// 가입가능최대나이
			          
			          	var sGdCd = edt_sGdCd.getValue();
			            if (sGdCd != "" || sGdCd != null) {
			            	Tab_Step1.scwin.lfn_setRule(sGdCd);
			            }
        			}
				}
			});
	    } 
	    else {
	        alert("피보험자사항을 등록해 주세요.");
	    }	    
	};
	
	//**********************************************************
	// 설계번호 변경시 밸리데이션 체크
	//**********************************************************
	scwin.lfn_sPlanNoChangeCheck = function() {
	    if (wconv.length(sPlanNoBack) > 0) {
	        //두설계번호가 같으면
	        if (medt_PlanNo.getValue() == sPlanNoBack) {
	            //화면 활성화
	            sPlanNoChFlag = false;
	        } else {
	            //화면 비활성화
	            scwin.lfn_ComponentEnable(Tab_Req_Step1, "", false);
	            wprom.alert("설계번호를 변경하셨습니다.\n 조회버튼을 눌러주세요");
	            sPlanNoChFlag = true;
	        }
	    }
	};

	//**********************************************************
	// 품의결과 화면표시
	//**********************************************************
	scwin.lfn_setConuReslt = function() {
		var sConuResltCd = Ds_LTIDA00.getCellData(0, "sConuResltCd");
		var sPlanProgRankCd = Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
	    if (sPlanProgRankCd > "44" && sPlanProgRankCd < "52") {
	        if (sConuResltCd == "11") {
	            stc_ConuReslt.setValue("QA 요청");
	        } 
	        else if (sConuResltCd == "01") {
	            stc_ConuReslt.setValue("QA 승인완료");
	        } 
	        else if (sConuResltCd == "02") {
	            stc_ConuReslt.setValue("QA 보완");
	        } 
	        else if (sConuResltCd == "03") {
	            stc_ConuReslt.setValue("QA 거절");
	        } 
	        else {
	            stc_ConuReslt.setValue("");
	        }
	    } 
	    else {
	        if (sConuResltCd == "11") {
	            stc_ConuReslt.setValue("인수요청");
	        } 
	        else if (sConuResltCd == "01") {
	            stc_ConuReslt.setValue("인수승인완료");
	        } 
	        else if (sConuResltCd == "02") {
	            stc_ConuReslt.setValue("조건부 승인");
	        } 
	        else if (sConuResltCd == "03") {
	            stc_ConuReslt.setValue("인수거절");
	        } 
	        else if (sConuResltCd == "04") {
	            stc_ConuReslt.setValue("진단심사중");
	        }
	        //sPlanProgRankCd 59:보완 추가 (20171219)
	        else if(sConuResltCd == "05"){
				stc_ConuReslt.setValue("보완건입니다.");
			}
			else {
	            stc_ConuReslt.setValue("");
	        }
	    }
	    
	    scwin.lfn_set_Tab_Info("S2", "T2");
	};
	
	//**********************************************************
	// 계약상태별 화면 비활성 처리
	//**********************************************************	
	scwin.lfn_ComponentEnable = function(step, exList, enable) {	
		var idx = wconv.substr(step.id, 12, 1);
		if(eval("Tab_Step"+idx) == null){
			if(Number(idx) == 2){
				tab2ComponentEnable = enable; 
			}else if(Number(idx) == 3){
				tab3ComponentEnable = enable;
			}else if(Number(idx) == 4){
				tab4ComponentEnable = enable;
			}
			return;
		}
		
		step = step.getWindow();
		
	    if (wconv.length(exList) == 0){
	    	exList = defaultExList;
	    }
	    
        var comps = step.$w.comp;
		for (var i in comps){
			var comp = comps[i];
			if(comp.id != null && comp.id != undefined && (comp.getPluginName() == "inputCalendar" || comp.getPluginName() == "selectbox" || comp.getPluginName() == "checkbox" || comp.getPluginName() == "anchor" || comp.getPluginName() == "gridView" || comp.getPluginName() == "input" || comp.getPluginName() == "iframe")){
				//console.log("===  comp.getPluginName() : "+comp.getPluginName());
				//console.log("===  comp.id : "+comp.id);
				if (exList.indexOf(comp.id) < 0) {
					if ((comp.id == "grd_sTrty" || comp.id == "grd_Pibo") && !enable) {
						if (Number(idx) == 1){
							if (comp.id == "grd_Pibo") {
								//피보험자 체크박스 
								step.grd_Pibo.setColumnReadOnly("sel", true);
								//구분
					    		step.grd_Pibo.setColumnReadOnly("sInrpsFlagCd", true);
						    	//주민등록번호
					    		step.grd_Pibo.setColumnReadOnly("sGroupInrpsCd", true);
					    		//고객등록 버튼
					    		step.grd_Pibo.setColumnReadOnly("btn_GridRow_Search", true);
					    		step.grd_Pibo.setDisabled("column", "btn_GridRow_Search", true);
					    		//직업선택 버튼 
					    		step.grd_Pibo.setColumnReadOnly("btn_Job_Search", true);
					    		step.grd_Pibo.setDisabled("column", "btn_Job_Search", true);
					    		//대표 여부 sRpstInrpsFlag
					    		step.grd_Pibo.setColumnReadOnly("sRpstInrpsFlag", true);
					    		
							}else{
								// 특약 선택 헤더 비활성
								step.grd_sTrty.setHeaderDisabled( "gh101" , true );
								//특약 체크박스 
								step.grd_sTrty.setColumnReadOnly("chk", true);								
								// 보험기간
					    		step.grd_sTrty.setColumnReadOnly("sInsurTermCd", true);
					    		step.grd_sTrty.setDisabled("column", "sInsurTermCd", true);
					    		// 납입기간
					    		step.grd_sTrty.setColumnReadOnly("sPaymTermCd", true);
					    		step.grd_sTrty.setDisabled("column", "sPaymTermCd", true);
					    		// 가입금액 
					    		step.grd_sTrty.setColumnReadOnly("nTrtyInsAmt", true);
					    		step.grd_sTrty.setDisabled("column", "nTrtyInsAmt", true);
							}
						}
						else if(Number(idx) == 2) {
							if (comp.id == "grd_Pibo"){
			//					//구분 
					    		step.grd_Pibo.setColumnReadOnly("sel", true);
					    		step.grd_Pibo.setDisabled("column", "sel", true);
					    		//주민번호 sGroupInrpsCd
					    		step.grd_Pibo.setColumnReadOnly("sGroupInrpsCd", true);
					    		step.grd_Pibo.setDisabled("column", "sGroupInrpsCd", true);					    		
					    		//계약자관계
					    		step.grd_Pibo.setColumnReadOnly("sCrtorRelnCd", true);
					    		step.grd_Pibo.setDisabled("column", "sCrtorRelnCd", true);
					    		//고지사항 
					    		step.grd_Pibo.setColumnReadOnly("sRqstYnName", true);
					    		step.grd_Pibo.setDisabled("column", "sRqstYnName", true);
					    		//사망수익자 
					    		step.grd_Pibo.setColumnReadOnly("sPftbpName", true);
					    		step.grd_Pibo.setDisabled("column", "sPftbpName", true);			    		
					    		//사망외수익자 
					    		step.grd_Pibo.setColumnReadOnly("sXcptPftbpName", true);
					    		step.grd_Pibo.setDisabled("column", "sXcptPftbpName", true);		
					    		
					    		
							}
						}
					}else{
						if(comp.getPluginName() == "iframe"){
							if(comp.getWindow != null && comp.getWindow != undefined && comp.getWindow().$w != null && comp.getWindow().$w != undefined && comp.getWindow().$w.comp != null && comp.getWindow().$w.comp != undefined){
								var subcomps = comp.getWindow().$w.comp;
								for (var ii in subcomps){
									var subcomp = subcomps[ii];
									if(subcomp.id != null && subcomp.id != undefined && (subcomp.getPluginName() == "inputCalendar" || subcomp.getPluginName() == "selectbox" || subcomp.getPluginName() == "checkbox" || subcomp.getPluginName() == "anchor" || subcomp.getPluginName() == "gridView" || subcomp.getPluginName() == "input" || subcomp.getPluginName() == "textbox")){
										//console.log("**********************Ifram Disabled**********************"+subcomp.id);
						 				subcomp.setDisabled(!enable);
									}
								}
							}
						}
						else{
							comp.setDisabled(!enable);
						}
					}
				}
				
				if(enable && Number(idx) == 1 ){
				}
				else if(Number(idx) == 2) {
			    	if(!enable) {
			    		//구분 
			    		step.grd_Pibo.setColumnReadOnly("sel", true);
			    		step.grd_Pibo.setDisabled("column", "sel", true);
			    		//주민번호 sGroupInrpsCd
			    		step.grd_Pibo.setColumnReadOnly("sGroupInrpsCd", true);
			    		step.grd_Pibo.setDisabled("column", "sGroupInrpsCd", true);
			    		//계약자관계
			    		step.grd_Pibo.setColumnReadOnly("sCrtorRelnCd", true);
			    		step.grd_Pibo.setDisabled("column", "sCrtorRelnCd", true);
			    		//고지사항 
			    		step.grd_Pibo.setColumnReadOnly("sRqstYnName", true);
			    		step.grd_Pibo.setDisabled("column", "sRqstYnName", true);
			    		//사망수익자 
			    		step.grd_Pibo.setColumnReadOnly("sPftbpName", true);
			    		step.grd_Pibo.setDisabled("column", "sPftbpName", true);			    		
			    		//사망외수익자 
			    		step.grd_Pibo.setColumnReadOnly("sXcptPftbpName", true);
			    		step.grd_Pibo.setDisabled("column", "sXcptPftbpName", true);
			    	}
			    	else {
			    		//구분 
			    		step.grd_Pibo.setColumnReadOnly("sel", false);
			    		step.grd_Pibo.setDisabled("column", "sel", false);
			    		//주민번호 sGroupInrpsCd
			    		step.grd_Pibo.setColumnReadOnly("sGroupInrpsCd", false);
			    		step.grd_Pibo.setDisabled("column", "sGroupInrpsCd", false);
			    		//계약자관계
			    		step.grd_Pibo.setColumnReadOnly("sCrtorRelnCd", false);
			    		step.grd_Pibo.setDisabled("column", "sCrtorRelnCd", false);
			    		//고지사항 
			    		step.grd_Pibo.setColumnReadOnly("sRqstYnName", false);
			    		step.grd_Pibo.setDisabled("column", "sRqstYnName", false);
			    		//사망수익자 
			    		step.grd_Pibo.setColumnReadOnly("sPftbpName", false);
			    		step.grd_Pibo.setDisabled("column", "sPftbpName", false);			    		
			    		//사망외수익자 
			    		step.grd_Pibo.setColumnReadOnly("sXcptPftbpName", false);
			    		step.grd_Pibo.setDisabled("column", "sXcptPftbpName", false);
			    	}
			    }
				
			}
		}
		if (Number(idx) == 1 || Number(idx) == 2) {
	        btn_sGdCd.setDisabled(!enable);
	        btn_Pop_Search.setDisabled(!enable);
	    }	    
	    	    
	};
	

	
	//**********************************************************
	// 청약번호 에디트박스 키다운이벤트 
	//**********************************************************	
	scwin.medt_PlanNo_onkeydown = function(e) {
		// 엔터키 입력
		if(e.keyCode == 13) {
			// 조회버튼 클릭이벤트 
			//scwin.lfn_Search();
			scwin.lfn_Search_Async();
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 취급자 조회 팝업
	//---------------------------------------------------------------------------
	scwin.btn_Pop_Search = function() {
		var result = "";
		
		//권한있어야 취급자변경가능
		if (nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "22040")
		|| nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34003")
		|| nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "34014")
		|| nfn_checkAuthByID("ds_code", util.getGdsValue("gUserID"), "21013")) {
            var promise = Promise.resolve();
		    promise = promise.then(function(rtnVal) {
		    	var indata = new Object();
	    		var popInfo = {"width":655,
	    	                   "height":430,
	    	                   "indata":indata,
	    	                   "callback"  : scwin.popupCallback,
							   "title"     : "사원찾기"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbso/CBSO015P.xml", popInfo, "pop_S");//개인고객 등록              
		    });
		    promise = promise.then(function(rv) {
		    	var rtnValue = wprom.getReturnData();
				if (rtnValue != "") {
					var arrRst = rtnValue.split("^");
					//edt_empCode.Text = arrRst[0];	//설계사코드		
					//edt_empName.Text = arrRst[1];	//이름
					result = scwin.lfn_getDoerInfo(arrRst[0]);
					if(!result) {
						alert("선택 가능한 취급자(사용인)가 아닙니다.");
						return false;
					}
					Tab_Step1.modifyFlag = true;
				}
			});
        }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 사용인 없는경우 취급자 정보 Return
	//---------------------------------------------------------------------------
	scwin.lfn_GetDoerUser = function(){
		return wconv.trim(edt_sDoerUser.getValue())==""?edt_sDoer.getValue():edt_sDoerUser.getValue();
	};
			
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 각 텝에 정보 표시
	//---------------------------------------------------------------------------
	scwin.lfn_set_Tab_Info = function(step, type){
		switch (step) {
	        case "S1":
	        	switch(type){
	        		case "T1":
	        			//홍길동&lt;br/&gt;[남]30세,1급
	        			var info = "";
	        			medt_S1L1.setValue("");
	        			if(Tab_Step1.Ds_Pibo.getRowCount() > 0 && Tab_Step1.Ds_Pibo.getRowCount() == 1){
	        				info = Tab_Step1.Ds_Pibo.getCellData(0, "sGroupInrpsName")+"<br/>["+(Tab_Step1.Ds_Pibo.getCellData(0, "sGroupInrpsSexFlag")=="1"?"남":"여")+"]"+Tab_Step1.Ds_Pibo.getCellData(0, "nGroupInrpsAge")+"세,"+Tab_Step1.Ds_Pibo.getCellData(0, "sGroupInrpsJobGradCd")+"급";
	        			}else{
	        				// 여러명인 경우 대표자의 정보를 뿌려줌 
	        				var nSel = wconv.findRow(Tab_Step1.Ds_Pibo, "sRpstInrpsFlag", "1");	        				
	        				info = Tab_Step1.Ds_Pibo.getCellData(nSel, "sGroupInrpsName")+" 외 "+(Tab_Step1.Ds_Pibo.getRowCount()-1)+"명"+"<br/>["+(Tab_Step1.Ds_Pibo.getCellData(nSel, "sGroupInrpsSexFlag")=="1"?"남":"여")+"]"+Tab_Step1.Ds_Pibo.getCellData(0, "nGroupInrpsAge")+"세,"+Tab_Step1.Ds_Pibo.getCellData(0, "sGroupInrpsJobGradCd")+"급";
	        			}
	        			medt_S1L1.setValue(info);
	        		break;
	        	}
	        break;
	        case "S2":
        		switch(type){
	        		case "T1":
	        			if(Tab_Step2 != null && Tab_Step2.Ds_LTIDA03 != undefined && Tab_Step2.Ds_LTIDA03.getRowCount() > 0){
		        			var ts2l1 = Tab_Step2.Ds_LTIDA03.getCellData(0, "sCrtorName");
		        			if(ts2l1 == undefined || wconv.length(ts2l1) <= 0){
		        				ts2l1 = Ds_LTIDA03.getCellData(0, "sCrtorName");
		        			}
		        			medt_S2L1.setValue(ts2l1);
	        			}else{
	        				medt_S2L1.setValue(Ds_LTIDA03.getCellData(0, "sCrtorName"));
	        			}
	        		break;
	        		case "T2":
	        			medt_S2L2.setValue(stc_ConuReslt.getValue());
	        		break;
	        	}
	        break;
            case "S3":
           		switch(type){
	        		case "T1":
	        			var cd = "";
	        			if(Tab_Step3 != null && Tab_Step3.Ds_LTIDA00 != undefined && Tab_Step3.Ds_LTIDA00.getRowCount() > 0){
		        			var ts3l1 = Tab_Step3.Ds_LTIDA00.getCellData(0, "sCmMetd");
		        			if(ts3l1 == undefined || wconv.length(ts3l1) <= 0){
		        				ts3l1 = Ds_LTIDA00.getCellData(0, "sCmMetd");
		        			}
		        			cd = ts3l1;
		        			
	        			}else{
	        				cd = Ds_LTIDA00.getCellData(0, "sCmMetd");
	        			}
	        			switch(cd){
	        				case "03":
	        					medt_S3L1.setValue("카드이체");
	        				break;
	        				case "05":
	        					medt_S3L1.setValue("자동이체");
	        				break;
	        				case "06":
	        					medt_S3L1.setValue("단체수납");
	        				break;
	        				case "07":
	        					medt_S3L1.setValue("직접수금");
	        				break;	
	        				default:
	        					medt_S3L1.setValue(cd);
	        				break;
	        			}
	        		break;
	        		case "T2":
	        			var ts3l2 = "";
	        			if(Tab_Step3 != null && Tab_Step3.Ds_LTIDA00 != undefined && Tab_Step3.Ds_LTIDA00.getRowCount() > 0){
		        			ts3l2 = Tab_Step3.Ds_LTIDA00.getCellData(0, "sRdchCrYn");
	        			}else{
	        				ts3l2 = Ds_LTIDA00.getCellData(0, "sRdchCrYn");
	        			}
	        			medt_S3L2.setValue((ts3l2=="Y"?"승환계약":""));
	        		break;
	        	}
	        break;
            case "S4":
            	if(Tab_Step4 != null){
	            	switch(type){
		        		case "T1":
		        		break;
		        	}
	        	}
	        break;
	    }	
	};
	
	//---------------------------------------------------------------------------
	// function 명 : saveHistory
	// 내용        : 이력저장(콜센터)
	//---------------------------------------------------------------------------
	scwin.saveHistory = function(sApplyStat) {
	    /*var sVvalue = medt_PlanNo.getValue() + "^" + // 청약번호
	        sApplyStat + "^" + Tab_Step1.medt_sInsurStrtdate.getValue() + "^" + Tab_Step1.medt_nBussPrem.getValue() + "^" + // 합계보험료(영업보험료)
	        Tab_Step1.Ds_Pibo.getCellData(0, "sInrpsCd") + "^" + // 피보험자코드
	        Tab_Step1.Ds_Pibo.getCellData(0, "sInrpsName"); // 피보험자명*/
	    /*MS Notice 사용하지 않음 S    
	    //UserNotify(0, sVvalue);
	    MS Notice 사용하지 않음 E*/
	};
	
	//---------------------------------------------------------------------------
	// function 명 : id_faq_onclick
	// 내용        : 상품자료 버튼 클릭이벤트
	//---------------------------------------------------------------------------
	scwin.id_faq_onclick = function() {
		var sGdCd = edt_sGdCd.getValue();
		
		if (wconv.length(wconv.trim(sGdCd)) > 0) { 
			var oDsJson=[{"sGdCd" : sGdCd}];
			gds.gDs_LinkArg.setJSON(oDsJson);
			gfn_OpenLinkPage("CBSC004M");
		} else {
			alert("상품을 선택하세요.");
		}
	};
	]]></script>
	</head>
	<body>
		<xf:group class="contentWrap" id="" style="">
			<w2:wframe id="" style=""
				initScript="scwin.wfTitleFavInit();"
				src="/cm/common/wf_titleFav.xml">
			</w2:wframe>

			<!-- group:s -->
			<xf:group id="" style="" class="section">
				<xf:group id="" style="" class="tbl_search">
					<xf:group id="" style="" adaptive=""
						class="w2tb tbl_sc" adaptiveThreshold="" tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup" style="">
							<xf:group style="width:70px"
								tagname="col">
							</xf:group>
							<xf:group style="width:290px"
								tagname="col">
							</xf:group>
							<xf:group style="width:80px"
								tagname="col">
							</xf:group>
							<xf:group style="width:110px"
								tagname="col">
							</xf:group>
							<xf:group style="width:80px"
								tagname="col">
							</xf:group>
							<xf:group style="width:100px"
								tagname="col">
							</xf:group>
							<xf:group style="width:80px"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group tagname="tr">
							<xf:group style="" class="w2tb_th"
								tagname="th">
								상품명
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<xf:group class="input_btn icon prot"
									style="">
									<xf:input id="edt_sGdCdNm" ref=""
										style="" disabled="true">
									</xf:input>
									<xf:input id="edt_sGdCd" ref=""
										style="display:none" readOnly="true">
									</xf:input>
									<w2:anchor id="btn_sGdCd" class=""
										ev:onclick="scwin.lfn_sangpum" style="">
										<xf:label><![CDATA[상품선택]]></xf:label>
									</w2:anchor>
								</xf:group>
							</xf:group>
							<xf:group style="" class="w2tb_th"
								tagname="th">
								상품종형
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<xf:input id="edt_sGnrzCdNm" style=""
									disabled="true" />
								<xf:input id="edt_sGnrzCd"
									style="display:none" readOnly="true" />
								<xf:input id="edt_sMinAge"
									readOnly="true" style="display:none" disabled="true">
								</xf:input>
								<xf:input id="edt_sMaxAge"
									readOnly="true" style="display:none" disabled="true">
								</xf:input>
							</xf:group>
							<xf:group style="" class="w2tb_th"
								tagname="th">
								청약일자
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<w2:inputCalendar
									calendarValueType="yearMonthDate" focusOnDateSelect="false"
									footerDiv="false" id="cal_sSsrtDate" renderDiv="true"
									renderType="component" rightAlign="false" style="width:105px"
									weekStartsOn="0" readOnly="true" disabled="true"
									inputReadOnly="true" ref="">
								</w2:inputCalendar>
							</xf:group>
							<xf:group style="" class="w2tb_th"
								tagname="th">
								청약번호
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<xf:input id="medt_PlanNo"
									style="width:115px" displayFormat="#-####-#######"
									maxlength="12" ev:onviewchange="scwin.medt_PlanNo_onviewchange"
									ev:onkeyup="" ev:onkeydown="scwin.medt_PlanNo_onkeydown"
									readOnly="true" />
							</xf:group>
						</xf:group>
					</xf:group>
					<w2:anchor id="btn_Search" style=""
						ev:onclick="scwin.lfn_Search_Async" class="btn_sh" outerDiv="true">
						<xf:label><![CDATA[조회]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
			<!-- group:e -->

			<!-- group:s -->
			<w2:textbox class="" id="stc_ConuReslt"
				style="">
			</w2:textbox>
			<xf:group id="" style="" class="section">
				<xf:group id="" style="" class="subscribe_box">

					<xf:group id="" style="" class="subscribe_tab"
						tagname="ul">

						<xf:group id="Tab_Req0" style="cursor:hand;"
							class="l1 on" tagname="li" ev:onclick="scwin.Tab_Req_onclick_Async">
							<w2:textbox label="보험료산출" id=""
								class="txt_tit">
							</w2:textbox>
							<xf:group id="" style="" class="sub"
								tagname="ul">
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id="medt_S1L1"
										class="">
									</w2:textbox>
								</xf:group>
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox
										label="" id="" class="">
									</w2:textbox>
								</xf:group>
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id=""
										class="">
									</w2:textbox>
								</xf:group>
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox
										label="" id="" class="">
									</w2:textbox>
								</xf:group>
							</xf:group>
						</xf:group>

						<xf:group id="Tab_Req1" style="" class="l2"
							tagname="li" ev:onclick="scwin.Tab_Req_onclick_Async">
							<w2:textbox label="청약사항입력" id=""
								class="txt_tit">
							</w2:textbox>
							<xf:group id="" style="" class="sub"
								tagname="ul">
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id="medt_S2L1"
										class="">
									</w2:textbox>
								</xf:group>
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id="medt_S2L2"
										class="" style="color:red">
									</w2:textbox>
								</xf:group>
							</xf:group>
						</xf:group>

						<xf:group id="Tab_Req2" style="" class="l3"
							tagname="li" ev:onclick="scwin.Tab_Req_onclick_Async">
							<w2:textbox label="계약요약" id=""
								class="txt_tit">
							</w2:textbox>
							<xf:group id="" style="" class="sub"
								tagname="ul">
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id="medt_S3L1"
										class="">
									</w2:textbox>
								</xf:group>
								<xf:group id="" style="" class="sub"
									tagname="li">
									<w2:textbox label="" id="medt_S3L2"
										class="">
									</w2:textbox>
								</xf:group>
							</xf:group>
						</xf:group>

						<xf:group id="Tab_Req3" style="" class="l4"
							tagname="li" ev:onclick="scwin.Tab_Req_onclick_Async">
							<w2:textbox label="입금안내" id=""
								class="txt_tit">
							</w2:textbox>
						</xf:group>
					</xf:group>

					<xf:group id="" style="" class="subscribe_con">
						<w2:iframe id="Tab_Req_Step1" style=""
							src=""
							class="wf_wrap"
							ev:oniframeload="">
						</w2:iframe>
						<w2:iframe id="Tab_Req_Step2"
							style="display:none"
							src=""
							class="wf_wrap" ev:oniframeload="">
						</w2:iframe>
						<w2:iframe id="Tab_Req_Step3"
							style="display:none"
							src=""
							class="wf_wrap" ev:oniframeload="">
						</w2:iframe>
						<w2:iframe id="Tab_Req_Step4"
							style="display:none"
							src=""
							class="wf_wrap" ev:oniframeload="">
						</w2:iframe>
					</xf:group>
				</xf:group>
			</xf:group>
			<!-- group:e -->

			<!-- group:s -->
			<xf:group id="" style="" class="section">
				<xf:group id="" style="" class="bluebox">
					<xf:group id="" style="" class="box_wrap">
						<xf:group class="fl" id=""
							style="width:150px;">
							<w2:anchor class="btn_nml1 bul"
								ev:onclick="scwin.id_faq_onclick" id="id_faq" outerDiv="true"
								style="">
								<xf:label>상품자료</xf:label>
							</w2:anchor>
						</xf:group>
						<xf:group id="" style="" class="fl">
							<w2:textbox label="소속" id=""
								class="txt_tit ml0" tagname="span">
							</w2:textbox>
							<xf:input disabled="true"
								id="edt_sDoerCentrName" ref="" style="width:150px">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sDoerCentrCd" ref="" style="display:none">
							</xf:input>
						</xf:group>
						<xf:group id="" style="" class="fl">
							<w2:textbox label="취급자" id=""
								class="txt_tit" tagname="span">
							</w2:textbox>
							<xf:input disabled="true" id="edt_sDoer"
								ref="" style="width:75px;">
							</xf:input>
							<xf:input disabled="true" id="edt_sDoerName"
								ref="" style="width:75px">
							</xf:input>
						</xf:group>
						<xf:group id="" style="" class="fl">
							<w2:textbox label="사용인" id=""
								class="txt_tit" tagname="span">
							</w2:textbox>
							<xf:input disabled="true" id="edt_sDoerUser"
								ref="" style="width:75px;">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sDoerUserName" ref="" style="width:75px">
							</xf:input>
							<w2:anchor id="btn_Pop_Search"
								ev:onclick="scwin.btn_Pop_Search" class="btn_search"
								outerDiv="false">
								<xf:label><![CDATA[검색]]></xf:label>
							</w2:anchor>
						</xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
			<!-- group:e -->
		</xf:group>
	</body>
</html>