<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/convert.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
		<!-- 
	       ###################################################
	        파일명 : CBSC090M.xml
	        프로그램명 : 장기수납확정
	        설 명 :  장기수납확정을 처리하는 화면
	        작성자 : 진태만
	        작성일 : 2017.09.05
	
	        수정일자            수정자                  수정내용
	       ==================================================
	       2017.09.05      		진태만      				최초작성
	       ###################################################
	    -->
		<w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
            <xf:instance>
                <data/>
            </xf:instance>
            <w2:dataCollection> 
            
				<!-- 1. 입금내역 DS  -->
    			<w2:dataList id="Ds_ACCAA00" baseNode="list" saveRemovedData="true" repeatNode="map" ev:oncelldatachange="scwin.Ds_ACCAA00_oncelldatachange">
            		<w2:columnInfo>
            			<w2:column id="ACCAA00" name="선택" dataType="text" ignoreStatus="true"/>
						<w2:column id="sRelKey1" name="입금일자" dataType="text"/>
						<w2:column id="sRelKey2" name=" 계좌/카드/휴대폰번호" dataType="text"/>
						<w2:column id="sRelKey3" name="sDepoSer" dataType="text"/>        
						<w2:column id="nInputAmt" name="입금액" dataType="text"/>    		 		
            			<w2:column id="sRelKey4" name="sRelKey4" dataType="text"/>
            			<w2:column id="sRemark" name="sRemark" dataType="text"/>             
            			<w2:column id="sGubunName" name="name6" dataType="text"/> 
            			<w2:column id="sRelKey5" name="name8" dataType="text"/>
            			<w2:column id="sAcctNo" name="name9" dataType="text"/>
            			<w2:column id="sInputName" name="name10" dataType="text"/>
            			<w2:column id="sGubun" name="name11" dataType="text"/>
            			<w2:column id="sInputTime" name="name12" dataType="text"/>
            			<w2:column id="sAgnt" name="name13" dataType="text"/>
            			<w2:column id="sRelTable" name="name14" dataType="text"/>
            			<w2:column id="sInputCode" name="name15" dataType="text"/>
            			<w2:column id="sDisplayDate" name="name16" dataType="text"/>
            			<w2:column id="nRowNum" name="name17" dataType="text"/>
            			<w2:column id="sInputDate" name="name18" dataType="text"/>
            		</w2:columnInfo> 
            	</w2:dataList>				
				
            	<!-- 2. 청약내역 DS(Ds_ACCBA01)  -->
            	<w2:dataList id="Ds_ACCBA01" baseNode="list" saveRemovedData="true" repeatNode="map" ev:oncelldatachange="scwin.Ds_ACCBA01_oncelldatachange">
            		<w2:columnInfo>
            			<w2:column id="ACCBA01" name="선택" dataType="text" ignoreStatus="true"/>
						<w2:column id="sInputDate" name="청약일자" dataType="text"/>
					 	<w2:column id="sInsTypeName" name="보험종목" dataType="text"/>
            			<w2:column id="nExptPrem" name="보험료" dataType="text"/>
            			<w2:column id="sPolHolderName" name="계약자명" dataType="text"/>
						<w2:column id="nPayNo" name="납입회차(전월)" dataType="text"/> 
						<w2:column id="sFromDate" name="책임개시일" dataType="text"/>
						<w2:column id="sTodt" name="보험종료일" dataType="text"/>
            			<w2:column id="sSettleStat" name="name2" dataType="text"/>
            			<w2:column id="sAcctDate" name="name3" dataType="text"/>            			 
            			<w2:column id="sRectTime" name="name6" dataType="text"/>
            			<w2:column id="nTotPrem" name="name7" dataType="text"/>
            			<w2:column id="sCollBranch" name="name8" dataType="text"/>
            			<w2:column id="sApplySer" name="name9" dataType="text"/>
            			<w2:column id="sInsType" name="name10" dataType="text"/>
            			<w2:column id="sPubPolicyType" name="name11" dataType="text"/>
            			<w2:column id="sCurrencyCode" name="name12" dataType="text"/>
            			<w2:column id="sApplyYM" name="name13" dataType="text"/>
            			<w2:column id="sUserID" name="name14" dataType="text"/>
            			<w2:column id="nRowNum" name="name15" dataType="text"/>
            			<w2:column id="sPrevAcctYN" name="name16" dataType="text"/> 
            			<w2:column id="nForExptPrem" name="name18" dataType="text"/>            			 
            			<w2:column id="sRectCenter" name="name20" dataType="text"/>
            			<w2:column id="nEndorseNo" name="name21" dataType="text"/>
            			<w2:column id="sCollType" name="name22" dataType="text"/>
            			<w2:column id="sPolicyNo" name="name23" dataType="text"/> 
            			<w2:column id="nRectPrem" name="name25" dataType="text"/>
            			<w2:column id="nInstmNo" name="name26" dataType="text"/>
            			<w2:column id="nChangeNo" name="name27" dataType="text"/>
            			<w2:column id="sRectAgnt" name="name28" dataType="text"/>            		 
            			<w2:column id="sRectPart" name="name30" dataType="text"/>
            			<w2:column id="sRectGroup" name="name31" dataType="text"/>
            			<w2:column id="sRectTeam" name="name32" dataType="text"/>
            			<w2:column id="sApplyType" name="name33" dataType="text"/>
            			<w2:column id="sInputTime" name="name34" dataType="text"/>
            			<w2:column id="sCollNo" name="name35" dataType="text"/>
            			<w2:column id="sPolHolderID" name="name36" dataType="text"/>
            			<w2:column id="sRectDate" name="name37" dataType="text"/>
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 01. 수납번호 채번 정보 DS(ACCZA01) -->
            	<w2:dataList baseNode="list" id="Ds_ACCZA01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sBizType" name="sBizType" />
            			<w2:column dataType="text" id="sRectAgnt" name="sRectAgnt" />
            			<w2:column dataType="text" id="sRectDate" name="sRectDate" />
            			<w2:column dataType="text" id="sPrevAcctYN" name="sPrevAcctYN" />
            		</w2:columnInfo>
            	</w2:dataList>
				
   				 <!-- 3-1. 예금 DS(입금 형태: Ds_ACCAA02_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCAA02_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sDealDate" name="입금일자" />
            			<w2:column dataType="text" id="sAcctNo" name="계좌번호" />
            			<w2:column dataType="text" id="sDepoSer" name="sDepoSer" />
						<w2:column dataType="text" id="nInAmt" name="입금액" />
            			<w2:column dataType="text" id="sLastAgnt" name="sLastAgnt" />
            			<w2:column dataType="text" id="sUserID" name="사용자ID" /> 
            		</w2:columnInfo>
            	</w2:dataList>
            	
            	<!-- 3-2. 03. 카드 정보 DS(입금 형태: Ds_ACCAB02_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCAB02_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sReqDate" name="sReqDate" />
            			<w2:column dataType="text" id="sCardNo" name="sCardNo" />
            			<w2:column dataType="text" id="nReqCnt" name="nReqCnt" />
            			<w2:column dataType="text" id="nReqAmt" name="nReqAmt" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-3. 04. 재수납금 정보 DS(입금 형태: Ds_ACCAC01_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCAC01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sPolicyType" name="sPolicyType" />
            			<w2:column dataType="text" id="sPolicyYM" name="sPolicyYM" />
            			<w2:column dataType="text" id="sPolicySer" name="sPolicySer" />
            			<w2:column dataType="text" id="nChangeNo" name="nChangeNo" />
            			<w2:column dataType="text" id="nReCollAmt" name="nReCollAmt" />
            			<w2:column dataType="text" id="sPolHolderID" name="sPolHolderID" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-4. 06. 가상계좌 , 예치금 정보 DS(입금 형태: Ds_ACCAD03_1) --> 
            	<w2:dataList baseNode="list" id="Ds_ACCAD03_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sDealDate" name="입금일자" />
            			<w2:column dataType="text" id="sVirtualAcctNo" name="계좌/카드/휴대폰번호" />
            			<w2:column dataType="text" id="sDepoSer" name="sDepoSer" />
            			<w2:column dataType="text" id="nBalAmt" name="입금액" />
            			<w2:column dataType="text" id="sUseCode" name="사용자코드" />
            			<w2:column dataType="text" id="sUserID" name="사용자ID" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-5. 07. 수납이체 정보 DS(입금 형태: Ds_ACCAE01_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCAE01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sDealDate" name="sDealDate" />
            			<w2:column dataType="text" id="sOutAcctNo" name="sOutAcctNo" />
            			<w2:column dataType="text" id="sDepoSer" name="sDepoSer" />
            			<w2:column dataType="text" id="sApplyType" name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM" name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer" name="sApplySer" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="nOutAmt" name="nOutAmt" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-6. 08. 휴대폰 정보 DS(입금 형태: Ds_ACCAH01_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCAH01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sCellDealNo" name="sCellDealNo" />
            			<w2:column dataType="text" id="nReqAmt" name="nReqAmt" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="sApplyType" name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM" name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer" name="sApplySer" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-7.  09. 대출 정보 DS(입금 형태: Ds_ACCLC01_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCLC01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sLoanNo" name="sLoanNo" />
            			<w2:column dataType="text" id="sLoanPayNo" name="sLoanPayNo" />
            			<w2:column dataType="text" id="nExptLoanAmt" name="nExptLoanAmt" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 3-8. 10. 수납정산 정보 DS(입금 형태: Ds_ACCBA02_1) -->
            	<w2:dataList baseNode="list" id="Ds_ACCBA02_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sCollAgnt" name="sCollAgnt" />
            			<w2:column dataType="text" id="sRectType" name="sRectType" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="sDiffType" name="sDiffType" />
            			<w2:column dataType="text" id="nDiffAmt" name="nDiffAmt" />
            		</w2:columnInfo>
            	</w2:dataList>
				
            	<w2:dataList baseNode="list" id="Ds_ACCAF01_1" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sBillNo" name="sBillNo" />
            			<w2:column dataType="text" id="nBillExptPrem" name="nBillExptPrem" />
            		</w2:columnInfo>
            	</w2:dataList>
				 
            	<!-- 51. 청약내역 결과 DS[05. 청약(수납발생)] -->
            	<w2:dataList baseNode="list" id="Ds_ACCBA01_3" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sApplyType" name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM" name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer" name="sApplySer" />
            			<w2:column dataType="text" id="sPolicyNo" name="sPolicyNo" />
            			<w2:column dataType="text" id="nChangeNo" name="nChangeNo" />
            			<w2:column dataType="text" id="nEndorseNo" name="nEndorseNo" />
            			<w2:column dataType="text" id="sFromDate" name="sFromDate" />
            			<w2:column dataType="text" id="sRectCenter" name="sRectCenter" />
            			<w2:column dataType="text" id="sRectTeam" name="sRectTeam" />
            			<w2:column dataType="text" id="sRectGroup" name="sRectGroup" />
            			<w2:column dataType="text" id="sRectPart" name="sRectPart" />
            			<w2:column dataType="text" id="sRectAgnt" name="sRectAgnt" />
            			<w2:column dataType="text" id="sRectDate" name="sRectDate" />
            			<w2:column dataType="text" id="sRectTime" name="sRectTime" />
            			<w2:column dataType="text" id="nExptPrem" name="nExptPrem" />
            			<w2:column dataType="text" id="nRectPrem" name="nRectPrem" />
            			<w2:column dataType="text" id="sSettleStat" name="sSettleStat" />
            			<w2:column dataType="text" id="sAcctDate" name="sAcctDate" />
            			<w2:column dataType="text" id="sCollBranch" name="sCollBranch" />
            			<w2:column dataType="text" id="sCollNo" name="sCollNo" />
            			<w2:column dataType="text" id="sInputDate" name="sInputDate" />
            			<w2:column dataType="text" id="sInputTime" name="sInputTime" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="sTodt" name="sTodt" />
            			<w2:column dataType="text" id="sPolHolderName" name="sPolHolderName" />
            			<w2:column dataType="text" id="nPayNo" name="nPayNo" />
            			<w2:column dataType="text" id="nInstmNo" name="nInstmNo" />
            			<w2:column dataType="text" id="nTotPrem" name="nTotPrem" />
            			<w2:column dataType="text" id="sInsType" name="sInsType" />
            			<w2:column dataType="text" id="sPolHolderID" name="sPolHolderID" />
            			<w2:column dataType="text" id="sCollType" name="sCollType" />
            			<w2:column dataType="text" id="sPubPolicyType" name="sPubPolicyType" />
            			<w2:column dataType="text" id="sCurrencyCode" name="sCurrencyCode" />
            			<w2:column dataType="text" id="nForExptPrem" name="nForExptPrem" />
            			<w2:column dataType="text" id="nRowNum" name="nRowNum" />
            		</w2:columnInfo>
            	</w2:dataList>
				 
            	<w2:dataList baseNode="list" id="Ds_DiffParam" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sApplyType" name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM" name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer" name="sApplySer" />
            			<w2:column dataType="text" id="sPolicyNo" name="sPolicyNo" />
            			<w2:column dataType="text" id="nChangeNo" name="nChangeNo" />
            			<w2:column dataType="text" id="nEndorseNo" name="nEndorseNo" />
            			<w2:column dataType="text" id="sFromDate" name="sFromDate" />
            			<w2:column dataType="text" id="sRectCenter" name="sRectCenter" />
            			<w2:column dataType="text" id="sRectTeam" name="sRectTeam" />
            			<w2:column dataType="text" id="sRectGroup" name="sRectGroup" />
            			<w2:column dataType="text" id="sRectPart" name="sRectPart" />
            			<w2:column dataType="text" id="sRectAgnt" name="sRectAgnt" />
            			<w2:column dataType="text" id="sRectDate" name="sRectDate" />
            			<w2:column dataType="text" id="sRectTime" name="sRectTime" />
            			<w2:column dataType="text" id="nExptPrem" name="nExptPrem" />
            			<w2:column dataType="text" id="nRectPrem" name="nRectPrem" />
            			<w2:column dataType="text" id="sSettleStat" name="sSettleStat" />
            			<w2:column dataType="text" id="sAcctDate" name="sAcctDate" />
            			<w2:column dataType="text" id="sCollBranch" name="sCollBranch" />
            			<w2:column dataType="text" id="sCollNo" name="sCollNo" />
            			<w2:column dataType="text" id="sInputDate" name="sInputDate" />
            			<w2:column dataType="text" id="sInputTime" name="sInputTime" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="sTodt" name="sTodt" />
            			<w2:column dataType="text" id="sPolHolderName" name="sPolHolderName" />
            			<w2:column dataType="text" id="nPayNo" name="nPayNo" />
            			<w2:column dataType="text" id="nInstmNo" name="nInstmNo" />
            			<w2:column dataType="text" id="nTotPrem" name="nTotPrem" />
            			<w2:column dataType="text" id="sInsType" name="sInsType" />
            			<w2:column dataType="text" id="sPolHolderID" name="sPolHolderID" />
            			<w2:column dataType="text" id="sCollType" name="sCollType" />
            			<w2:column dataType="text" id="sPubPolicyType" name="sPubPolicyType" />
            			<w2:column dataType="text" id="sCurrencyCode" name="sCurrencyCode" />
            			<w2:column dataType="text" id="nForExptPrem" name="nForExptPrem" />
            			<w2:column dataType="text" id="nRowNum" name="nRowNum" />
            		</w2:columnInfo>
            	</w2:dataList>
				
            	<w2:dataList baseNode="list" id="Ds_DiffResult" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sApplyType" name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM" name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer" name="sApplySer" />
            			<w2:column dataType="text" id="sPolicyNo" name="sPolicyNo" />
            			<w2:column dataType="text" id="nChangeNo" name="nChangeNo" />
            			<w2:column dataType="text" id="nEndorseNo" name="nEndorseNo" />
            			<w2:column dataType="text" id="sFromDate" name="sFromDate" />
            			<w2:column dataType="text" id="sRectCenter" name="sRectCenter" />
            			<w2:column dataType="text" id="sRectTeam" name="sRectTeam" />
            			<w2:column dataType="text" id="sRectGroup" name="sRectGroup" />
            			<w2:column dataType="text" id="sRectPart" name="sRectPart" />
            			<w2:column dataType="text" id="sRectAgnt" name="sRectAgnt" />
            			<w2:column dataType="text" id="sRectDate" name="sRectDate" />
            			<w2:column dataType="text" id="sRectTime" name="sRectTime" />
            			<w2:column dataType="text" id="nExptPrem" name="nExptPrem" />
            			<w2:column dataType="text" id="nRectPrem" name="nRectPrem" />
            			<w2:column dataType="text" id="sSettleStat" name="sSettleStat" />
            			<w2:column dataType="text" id="sAcctDate" name="sAcctDate" />
            			<w2:column dataType="text" id="sCollBranch" name="sCollBranch" />
            			<w2:column dataType="text" id="sCollNo" name="sCollNo" />
            			<w2:column dataType="text" id="sInputDate" name="sInputDate" />
            			<w2:column dataType="text" id="sInputTime" name="sInputTime" />
            			<w2:column dataType="text" id="sUserID" name="sUserID" />
            			<w2:column dataType="text" id="sTodt" name="sTodt" />
            			<w2:column dataType="text" id="sPolHolderName" name="sPolHolderName" />
            			<w2:column dataType="text" id="nPayNo" name="nPayNo" />
            			<w2:column dataType="text" id="nInstmNo" name="nInstmNo" />
            			<w2:column dataType="text" id="nTotPrem" name="nTotPrem" />
            			<w2:column dataType="text" id="sInsType" name="sInsType" />
            			<w2:column dataType="text" id="sPolHolderID" name="sPolHolderID" />
            			<w2:column dataType="text" id="sCollType" name="sCollType" />
            			<w2:column dataType="text" id="sPubPolicyType" name="sPubPolicyType" />
            			<w2:column dataType="text" id="sCurrencyCode" name="sCurrencyCode" />
            			<w2:column dataType="text" id="nForExptPrem" name="nForExptPrem" />
            			<w2:column dataType="text" id="nRowNum" name="nRowNum" />
            			<w2:column dataType="text" id="sDiffType" name="sDiffType" />
            			<w2:column dataType="text" id="nDiffAmt" name="nDiffAmt" />
            		</w2:columnInfo>
            	</w2:dataList>
				
            	<w2:dataList baseNode="list" id="Ds_Gubun" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="CODE" name="CODE" />
            			<w2:column dataType="text" id="TEXT" name="TEXT" />
            		</w2:columnInfo>
            		<w2:data use="true">
            			<w2:row>
            				<CODE><![CDATA[1]]></CODE>
            				<TEXT><![CDATA[청약일자]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[2]]></CODE>
            				<TEXT><![CDATA[보험시작일]]></TEXT>
            			</w2:row>
            		</w2:data>
            	</w2:dataList>
				 
            	<w2:dataList baseNode="list" id="Ds_LinkList" repeatNode="map" />
            	<w2:dataList baseNode="list" id="DsWs_Auth" repeatNode="map" userData2="//*/ADMAA04" />
            	<w2:dataList baseNode="list" id="DsWs_EmpName" repeatNode="map" userData2="//*/ADMAC01" />
            	<w2:dataList baseNode="list" id="DsWs_Settle" repeatNode="map" userData2="//*/ACCBA02" />            		
            	<w2:dataList baseNode="list" id="DsWs_SettleWarning"  repeatNode="map" userData2="//*/WARNING" />
				<w2:dataList baseNode="list" id="DsWs_Team" repeatNode="map" userData2="//*/ADMA005" />
					
            	<!-- Ds_SettleWarning 정보 Ds(Ds_SettleWarning) -->
				<w2:dataList baseNode="list" id="Ds_SettleWarning" repeatNode="map">
					<w2:columnInfo> 
							<w2:column dataType="text" id="timestamp" name="timestamp"/>
							<w2:column dataType="text" id="detail" name="detail"/>
							<w2:column dataType="text" id="level" name="level"/>
							<w2:column dataType="text" id="msg" name="msg"/> 
					</w2:columnInfo>
				</w2:dataList>
            
            	<!-- 91. 팀코드 DS(Ds_Team)  -->
            	<w2:dataList id="Ds_Team" baseNode="list" aveRemovedData="true" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column id="result" name="result" dataType="text"/>
            			<w2:column id="sHeadCenterName" name="name1" dataType="text"/>
            			<w2:column id="sGroupName" name="name2" dataType="text"/>
            			<w2:column id="sTeamName" name="name3" dataType="text"/>
            			<w2:column id="sDepartCode" name="name4" dataType="text"/>
            			<w2:column id="sPart" name="name5" dataType="text"/>
            			<w2:column id="sGroup" name="name6" dataType="text"/>
            			<w2:column id="sDptOffice" name="name7" dataType="text"/>
            			<w2:column id="sCenterName" name="name8" dataType="text"/>
            			<w2:column id="sDepartType" name="name9" dataType="text"/>
            			<w2:column id="sPartName" name="name10" dataType="text"/>
            			<w2:column id="sDptOfficeName" name="name11" dataType="text"/>
            			<w2:column id="sDepartName" name="name12" dataType="text"/>
            			<w2:column id="sAgent" name="name13" dataType="text"/>
            			<w2:column id="sCenter" name="name14" dataType="text"/>
            			<w2:column id="sTeam" name="name15" dataType="text"/>
            			<w2:column id="sHeadCenter" name="name16" dataType="text"/>
            		</w2:columnInfo>
            	</w2:dataList>
				
				<!-- 92. 권한 DS(Ds_Auth)  -->       
            	<w2:dataList id="Ds_Auth" baseNode="list" saveRemovedData="true" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="nAuthType" name="nAuthType"/>
						<w2:column dataType="text" id="result" name="result"/>
						<w2:column dataType="text" id="afterEJBCall" name="afterEJBCall"/>
						<w2:column dataType="text" id="beforeEJBCall" name="beforeEJBCall"/>
						<w2:column dataType="text" id="sDuty" name="sDuty"/>
						<w2:column dataType="text" id="nAuthID" name="nAuthID"/>
						<w2:column dataType="text" id="sUserID" name="sUserID"/>
						<w2:column dataType="text" id="sDepartCode" name="sDepartCode"/>
						<w2:column dataType="text" id="sInputDate" name="sInputDate"/>
            		</w2:columnInfo>
            	</w2:dataList>
     
            	<!-- Warning DS(추가) -->
            	<w2:dataList baseNode="list" id="Ds_Warning"  keyNode="//*/WARNING" repeatNode="map"/>
			 
            	<w2:dataList id="Ds_Settle" baseNode="list"
            		saveRemovedData="true" repeatNode="map">
            		<w2:columnInfo>
            			<w2:column id="sAcctDate" name="회계일자" dataType="text"/>
            			<w2:column id="sCollBranch" name="수납부점" dataType="text"/>
            			<w2:column id="sCollNo" name="수납번호" dataType="text"/>
            		</w2:columnInfo>
            	</w2:dataList>
				
            </w2:dataCollection>
            <w2:workflowCollection/>
        </xf:model>
        
        <!--// js Script include //--> 
		<script src="/cm/js/convertJs/Global_Script.js"/>
        <script src="/cm/js/convertJs/Accounting_Script.js"/>
        <script src="/cm/js/convertJs/Accounting_LT_Script.js"/>
        <script><![CDATA[

// ###################################################
//	파일명 : CBSC090M.xml
//	프로그램명 : 장기수납확정
//	설 명 :  장기수납확정을 처리하는 화면
//	작성자 : 진태만
//	작성일 : 2017.09.05
//
//	수정일자            수정자                  수정내용
//	==================================================
//	2017.09.05      		진태만      				최초작성
//	###################################################

var gsSysDate;			// global 현재일자
var gsCenter;			 	// global 센터ID
var gsCenterName; 	// global 센터명
var gsAgent ;            // global 정산 담당자 
var gsPreAcctDate = "";  //global 예치금 회계일자  
var gUserID = util.getGdsValue("gUserID") ;    // global 사용자 ID
var gUserEmpName = util.getGdsValue("gUserEmpName") ;    // global 부서명
var gDs_LinkArg = util.getGdsValue("gDs_LinkArg") ;    // global 화면 링크 
  
//**************************************************************************************************
// OnLoadCompleted
//**************************************************************************************************
scwin.init = function() {
	//console.log("[/CBSC090M.xml] [init()] ==> [초기화] [TEST_01]" );
  
 	gsSysDate = WebSquare.date.getCurrentServerDate("yyyyMMdd"); 		// global 현재일자
  	
	scwin.getTeamCode();	 // 팀코드 조회
 
	cmb_linkMenu.hide();		// 링크 메뉴 콤보 숨기기 설정 
	btn_linkMenu.hide();		// 링크 메뉴 버튼 숨기기 설정
 
	// TEST @@@ ===>
//	Edt_sAgnt.setValue("2090037"); 					// 취급자 사번[정진영(2140026, 현업)] 	// TEST @@@ ===>
//	Edt_sAgntName.setValue("정진영"); 			// 취급자 TEST @@@ ===>
//	Cal_sFromDate1.setValue("20171009"); 		// 입금일자1(20170101, 20170829, 20170831)
// Cal_sToDate1.setValue(gsSysDate); 		// 입금일자2
 //Cal_sFromDate2.setValue("20171009"); 		// 청약일자1
//	Cal_sToDate2.setValue(gsSysDate); 		// 청약일자2
  
   	// 공통 버튼 권한 설정 - |1.입력|2.수정|3.삭제|4.결재|5.취소|6.인쇄|7.엑셀   총 7개
     gfn_btnEnable(false, false, false, false, true, false, false);
     
     //console.log("[/CBSC090M.xml] [init()] ==> [초기화] [TEST_end]" );
};

//**************************************************************************************************
// 팀코드 조회
//**************************************************************************************************
scwin.getTeamCode = function() { 
	//console.log("[/CBSC090M.xml] [getTeamCode()] ==> [팀코드 조회] [TEST_01]" );
 
 	wconv.clear(Ds_Team);
 
	var MethodObj = new callService("com.inswave.admin.task.AdminTask", "getAllOrgbyAgntCd", "", ""); 
	MethodObj.setId("getAllOrgbyAgntCd");	// ID 셋팅  
	//gfn_SetParam(MethodObj, "sAgent", gUserID);	 
	MethodObj.setParam("sAgent", gUserID);	// Param 셋팅(global 정산 담당자)  
	MethodObj.setUrl("/contract/CBSC090MController.do");  // URL 설정
	MethodObj.setXPath("//*/ADMA005");		// XPath
	MethodObj.sync();		// 동기 처리[기본(async:비동기)]
	MethodObj.send();		// 최종 전송  
 
	//util.interfaceKey(_tranSync.result.serviceDs); 		// interface 조회 후 Data 리스트 Display
	//console.log("[/CBSC090M.xml] [getTeamCode()] ==> [JSON.stringify(_tranSync.result)]"+ JSON.stringify(_tranSync.result) );
 
	Ds_Team.setJSON(_tranSync.getDsJson("ADMA005") );	 // 팀코드 DS 셋팅(조회 결과)
 
    gsCenter = Ds_Team.getCellData(0, "sCenter");    
 	gsCenterName = Ds_Team.getCellData(0, "sCenterName");
  	//console.log("[/CBSC090M.xml] [getTeamCode()] ==> [gsCenter]"+ gsCenter +"[gsCenterName]"+ gsCenterName );
	 
	scwin.getAuthID();	//권한 조회
};

//**************************************************************************************************
// 권한 조회
//**************************************************************************************************
scwin.getAuthID = function() { 
	//console.log("[/CBSC090M.xml] [getAuthID()] ==> [권한 조회]" );
   
	var MethodObj = new callService("com.inswave.admin.task.AdminTask", "selectForAuthCheck", "", "");
	MethodObj.setId("getAuthList");	// ID 셋팅
	MethodObj.setParam("sUserID", gUserID);	// Param 셋팅(사용자ID)  
	MethodObj.setParam("nAuthID", "40023");	// Param 셋팅(장기업무관리 권한) 
	MethodObj.setUrl("/contract/CBSC090MController.do");  // URL 설정
	MethodObj.setXPath("//*/ADMAA04");		// XPath
	MethodObj.sync();		// 동기 처리[기본(async:비동기)]
	MethodObj.send();		// 최종 전송  
	//<Dataset DataObject="DOBJ_Auth" DataSetType="WebService" Id="DsWs_Auth" XPath="//*/ADMAA04"></Dataset>
	
	//util.interfaceKey(_tranSync.result.serviceDs); 		// interface 조회 후 Data 리스트 Display
	//console.log("[/CBSC090M.xml] [getAuthID()] ==> [JSON.stringify(_tranSync.result)]"+ JSON.stringify(_tranSync.result) );
 
 	Ds_Auth.setJSON(_tranSync.getDsJson("ADMAA04") );	 // 권한 DS 셋팅(조회 결과)
	var jsonData = _tranSync.result.serviceDs;  
	//console.log("[/CBSC090M.xml] [getAuthID()] ==> [I/F 조회 완료] [Ds_Auth, 조회수]"+ Ds_Auth.getRowCount() +"[Ds_Auth]"+ WebSquare.xml.serialize(Ds_Auth.getAllXML()) );  
	
	if (jsonData.data[0].result < 1) {
		wprom.alert("웹서비스 이상입니다."); 
		return; 
    }
 	
	scwin.initialize();		// 화면 초기화  
};

//**************************************************************************************************
// 화면을 초기화한다
//**************************************************************************************************
scwin.initialize = function() { 
	//console.log("[/CBSC090M.xml] [initialize()] ==> [화면 초기화]  [TEST_01]" );
  
//	if(utiil.isNull(window.top.gDs_LinkArg) == false) {   // gDs_LinkArg가 존재하면
//		if(gDs_LinkArg.getRowCount() != 0 ) {		// 다른 화면에서 오픈시 parameter 받기
//			scwin.setQueryKey();		// 다른 화면에서 호출한 경우
//		} 
// 	} 
	// console.log("[/CBSC090M.xml] [initialize()] ==> [화면 초기화] [TEST_02]" );
	
	Cal_sFromDate1.setValue(gsSysDate); 		// 입금일자1(20170101, 20170829, 20170831)
	Cal_sToDate1.setValue(gsSysDate); 		// 입금일자2
	Cal_sFromDate2.setValue(gsSysDate); 		// 청약일자1
	Cal_sToDate2.setValue(gsSysDate); 		// 청약일자2
	Edt_sAgnt.setValue(gUserID); 						// 취급자 사번
	Edt_sAgntName.setValue(gUserEmpName)	;	// 취급자
 
	wconv.clear(Ds_ACCAA00);
	wconv.clear(Ds_ACCBA01);
	
	Btn_Settle.setDisabled(true); 			// 수납확정 버튼 비활성화 
 	
  	Cmb_sGubun.setValue("1"); 				// 청약일자, 보험시작일자 구분 Check Box
	Chk_sFundType1.setValue("1"); 			// 입금형태 Check Box에서 예금 Check 여부
	Chk_sFundType2.setValue("1"); 			// 입금형태 Check Box에서 전세 Check 여부
	Chk_sFundType3.setValue("1"); 			// 입금형태 Check Box에서 가상계좌 Check 여부
	Chk_sFundType4.setValue("1"); 			// 입금형태 Check Box에서 기타 Check 여부
	Chk_sFundType5.setValue("1"); 			// 입금형태 Check Box에서 수납이체 Check 여부
	Chk_sFundType7.setValue("1"); 			// 입금형태 Check Box에서 휴대폰 Check 여부
 	Chk_sFundType10.setValue("1"); 			// 입금형태 Check Box에서 대출 Check 여부 
	//Rdo_sPrevAcctYN.setValue(""); 			// 전월회계여부 combo Box
	//console.log("[/CBSC090M.xml] [initialize()] ==> [화면 초기화]  [TEST_end]" );
};

//**************************************************************************************************
// 다른 화면에서 호출한 경우에 조회 Key를 세팅하고, 조회함수를 호출한다.
//**************************************************************************************************
scwin.setQueryKey = function() {
	// console.log("[/CBSC090M.xml] [setQueryKey()] ==> [다른 화면에서 호출한 경우]" );
	
    Cal_sFromDate1.setValue(pFromDate1);
    Cal_sToDate1.setValue(pToDate1);
    Cal_sFromDate2.setValue(pFromDate2);
    Cal_sToDate2.setValue(pToDate2);
    Edt_sAgnt.setValue(pAgnt);

    //취급자명 조회
    gfn_selectEmpNameByAcct(Edt_sAgnt.getValue());
    Edt_sAgntName.setValue(gds.gDsWs_SelectEmpName.getCellData(0, "sEmpName"));
  
    scwin.getCollTargetList();	  //조회
};

/*******************************************/
//공통버튼: 취소
/*******************************************/
scwin.cm_btnCancel = function() {
	// console.log("[/CBSC090M.xml] [cm_btnCancel()] ==> [취소] [TEST]" );
	
    scwin.initialize();
};
 
//*************************************************************************
// function 명 : lfn_cmb_linkMenu_OnChanged
// 내용        : 링크페이지 선택시 Event처리
//-*************************************************************************
scwin.lfn_cmb_linkMenu_OnChanged = function(obj, strCode, strText, nOldIndex, nNewIndex) {
    gfn_OpenLinkPage(strCode);
};

//**************************************************************************************************
// 조회 버튼 클릭 이벤트
//**************************************************************************************************   
scwin.btn_search_onclick = function() { 
	//console.log("[/CBSC090M.xml] [btn_search_onclick()] ==> [조회 버튼 클릭 이벤트] [TEST_01]");  
 
	util.eventAsyncCall(this, scwin.getCollTargetList, arguments);		// 비동기 방식 호출 
};

//----------------------------------------------------------------------------------------------------
// function 명 : lfn_Search_Sync
// 내용        : 비동기 방식 호출 처리
//---------------------------------------------------------------------------------------------------- 
scwin.getCollTargetList = function(e) { 
	 //console.log("[/CBSC090M.xml] [getCollTargetList()] ==>  [TEST_01] [입금일자]"+ Cal_sFromDate1.getValue()  +"[전월회계여부]"+ Rdo_sPrevAcctYN.getValue() ); 
  
  	if ( !scwin.checkValue() ) { return; }
 
	if ( !isSearchDate2("Ds_Auth", Cal_sFromDate1.getValue(), gUserID, "입금일자")) { 	// 2012.08.29 정해성 ==> 추가 2년이전의 일자에 대해 조회했을경우 자금관리권한이 있는 사용자만 검색 가능
		return;
	}
 	
	var sGubunNm = "";
	if(Cmb_sGubun.getValue() == "1") 
	  sGubunNm = "청약일자";
	else 
	  sGubunNm = "보험시작일";
	   
 	if ( !isSearchDate2("DsWs_Auth", Cal_sFromDate2.getValue(), gUserID, sGubunNm)) {	 // 2012.08.29 정해성 ==> 추가 2년이전의 일자에 대해 조회했을경우 자금관리권한이 있는 사용자만 검색 가능
		return;
	}
	
	scwin.clearTailForm();		//합계 clear 
 
	wconv.clear(Ds_ACCAA00);	// 입금 DS
	wconv.clear(Ds_ACCBA01);	// 입금 DS 
 
 	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "selectLongCollTargetList");  	// 수납대상 자금과 청약 조회 Obj
	MethodObj.setId("selectRecv")	;		// ID 셋팅  
	MethodObj.setParam("sAgnt", Edt_sAgnt.getValue());	// Param 셋팅(취급자)
	MethodObj.setParam("sFromDate1", Cal_sFromDate1.getValue());		// Param 셋팅(입금일자1)
	MethodObj.setParam("sToDate1",  Cal_sToDate1.getValue());			// Param 셋팅(입금일자2)  
	MethodObj.setParam("sFromDate2", Cal_sFromDate2.getValue());		// Param 셋팅(청약일자1)
	MethodObj.setParam("sToDate2",  Cal_sToDate2.getValue());			// Param 셋팅(청약일자2) 
	MethodObj.setParam("sGubun", "1");			// Param 셋팅(입금형태) 
	MethodObj.setParam("sFundType1", Chk_sFundType1.getValue());		// Param 셋팅(입금형태 Check Box에서 예금 Check 여부) 
	MethodObj.setParam("sFundType2", Chk_sFundType2.getValue());		// Param 셋팅(입금형태 Check Box에서 전세 Check 여부) 
	MethodObj.setParam("sFundType3", Chk_sFundType3.getValue());		// Param 셋팅(입금형태 Check Box에서 가상계좌 Check 여부) 
	MethodObj.setParam("sFundType4", Chk_sFundType4.getValue());		// Param 셋팅(입금형태 Check Box에서 기타 Check 여부) 
	MethodObj.setParam("sFundType5", Chk_sFundType5.getValue());		// Param 셋팅(입금형태 Check Box에서 수납이체 Check 여부) 
	MethodObj.setParam("sFundType7", Chk_sFundType7.getValue());		// Param 셋팅(입금형태 Check Box에서 휴대폰 Check 여부) 
	MethodObj.setParam("sFundType10", Chk_sFundType10.getValue());	// Param 셋팅(입금형태 Check Box에서 대출 Check 여부)  
 	MethodObj.setParam("sPrevAcctYN", Rdo_sPrevAcctYN.getValue());	//	// Param 셋팅(전월회계여부) 
 	MethodObj.setUrl("/contract/CBSC090MController.do");  // 서버단 호출 URL
	MethodObj.setXPath("//ACCAA00");			// XPath
	MethodObj.addXPath("//ACCBA01");		// XPath 
	MethodObj.addXPath("//WARNING");		// XPath(No)
	MethodObj.sync();		// 동기 처리[기본(async:비동기)]
	//MethodObj.callBack("scwin.subCallBackfunction");  // 받을 Dataset을 처리시 콜백함수 
	MethodObj.send();		// 최종 전송   	 
	
	//util.interfaceKey(_tranSync.result.serviceDs); 		// interface 조회 후 Data 리스트 Display
	
	Ds_ACCAA00.setJSON(_tranSync.getDsJson("ACCAA00"));		// 입금 DS 셋팅(조회 결과)
	Ds_ACCBA01.setJSON(_tranSync.getDsJson("ACCBA01")); 	// 청약 DS  셋팅(조회 결과)
	Ds_Warning.setJSON(_tranSync.getDsJson("WARNING"));  	// Warning DS 셋팅(조회 결과) 
	console.log("[/CBSC090M.xml] [getCollTargetList()] ==> [I/F 조회 완료] [입금 DS_갯수]"+ Ds_ACCAA00.getRowCount() ); 
 	console.log("[/CBSC090M.xml] [getCollTargetList()] ==> [I/F 조회 완료] [청약 DS_갯수]"+ Ds_ACCBA01.getRowCount() ); 
	// console.log("[/CBSC090M.xml] [getCollTargetList()] ==> [입금 DS_갯수]"+ Ds_ACCAA00.getRowCount() +"[Ds_ACCAA00]"+ WebSquare.xml.serialize(Ds_ACCAA00.getAllXML()) ); 
 	// console.log("[/CBSC090M.xml] [getCollTargetList()] ==> [청약 DS_갯수]"+ Ds_ACCBA01.getRowCount() +"[Ds_ACCBA01]"+ WebSquare.xml.serialize(Ds_ACCBA01.getAllXML()) ); 
  	
	if (Ds_Warning.getRowCount() != 0) {
        wprom.alert(Ds_Warning.getCellData(0, "msg"));
        return false;
    }
 
    if (Ds_ACCAA00.getRowCount() == 0 && Ds_ACCBA01.getRowCount() == 0 ) {		// 입금, 청약 DS가 존재 안하면 
		wprom.alert("해당 데이터가 존재하지 않습니다.");
		Btn_Settle.setDisabled(true); 			// 수납확정 버튼 비활성화  
        return; 
    } 
 
	Btn_Settle.setDisabled(false); 			// 수납확정 버튼 활성화    
}; 
 
//**************************************************************************************************
// 조회조건 체크
//************************************************************************************************** 
scwin.checkValue = function() {
	if ( Cal_sFromDate1.getValue() == "" ) {
		wprom.alert("'입금일자'를 입력하십시오."); 
		util.focus(Cal_sFromDate1);  // 포커스 설정  
		return false;
	}
	if ( Cal_sToDate1.getValue() == "" ) {
		wprom.alert("'입금일자'를 입력하십시오."); 
		util.focus(Cal_sToDate1);  // 포커스 설정  
		return false;
	}
	// console.log("[/CBSC090M.xml] [checkValue()] ==> [날짜차]"+ WebSquare.date.dateDiff( Cal_sFromDate1.getValue(), Cal_sToDate1.getValue()) +"[Cal_sFromDate1]"+ Cal_sFromDate1.getValue() +"[Cal_sToDate1.getValue()]"+Cal_sToDate1.getValue() );  
	 
	if (WebSquare.date.dateDiff(Cal_sFromDate1.getValue(), Cal_sToDate1.getValue()) > 60 ) {    
		wprom.alert("조회기간은 60일 이하입니다."); 
		util.focus(Cal_sToDate1);  // 포커스 설정  
		return false;
	}
	if ( Cal_sFromDate2.getValue() == "" ) {
		wprom.alert("'청약일자'를 입력하십시오."); 
		util.focus(Cal_sFromDate2);  // 포커스 설정  
		return false;
	}
	if ( Cal_sToDate2.getValue() == "" ) {
		wprom.alert("'청약일자'를 입력하십시오."); 
		util.focus(Cal_sToDate2);  // 포커스 설정  
		return false;
	}
	if (WebSquare.date.dateDiff( Cal_sFromDate2.getValue(), Cal_sToDate2.getValue()) > 31 ) {   // TEST @@@ ===>
	//if ( minusDates( Cal_sFromDate2.getValue(), Cal_sToDate2.getValue() ) > 31 ) {
		wprom.alert("조회기간은 31일 이하입니다."); 
		util.focus(Cal_sToDate2);  // 포커스 설정  
		return false;
	}
	if ( Edt_sAgnt.getValue() == "" ) {
		wprom.alert("'취급자'를 입력하십시오."); 
		util.focus(Edt_sAgnt);  // 포커스 설정  
		return false;
	}

	return true;
};

//**************************************************************************************************
// 합계 부분 clear
//************************************************************************************************** 
scwin.clearTailForm = function() {
	// console.log("[/CBSC090M.xml] [clearTailForm()] ==> [TEST]");   
	
	Mak_nFundCnt.setValue("");
	Mak_nFundAmt.setValue("");
	Mak_nDiffAmt.setValue("");
	Mak_nApplyCnt.setValue("");
	Mak_nApplyAmt.setValue("");
};
  				
//**************************************************************************************************
// 자금내역 선택시 차액을 계산한다.
//**************************************************************************************************	 
scwin.Ds_ACCAA00_oncelldatachange = function(info) {
	// console.log("[/CBSC090M.xml] [Ds_ACCAA00_oncelldatachange()] ==> [Ds에서 ColumnChanged 이벤트] [TEST]  [row]"+ info.rowIndex +"[colID]"+ info.colID );  

	var rowIndex = info.rowIndex;
   	var colID = info.colID;
   	var oldValue = info.oldValue;
   	var newValue = info.newValue;
   	
   	if( colID != "ACCAA00" ) { return; };		// 선택 checkbox를 클릭한 경우 외엔 return
   	
   	var nFundCntSum = wconv.toNumber(Mak_nFundCnt.getValue());		// 입금 건수
	var nFundAmtSum = wconv.toNumber(Mak_nFundAmt.getValue());		// 입금 금액
 
	var chk_val = Ds_ACCAA00.getCellData( rowIndex , colID );  
		   
 	//1. 입금 합계를 구한다.  
	if( chk_val == '1' ) {		// 선택한 경우 
		nFundCntSum = nFundCntSum + 1;	// 입금건수 합계  
		nFundAmtSum = nFundAmtSum + wconv.toNumber(Ds_ACCAA00.getCellData(rowIndex, "nInputAmt"));		// 입금금액 합계(nInputAmt: 입금액) 
	} else if(oldValue == '1' && chk_val == '0') { 	// 선택 해제한 경우
		nFundCntSum = nFundCntSum - 1;	// 입금건수 합계
		nFundAmtSum = nFundAmtSum - wconv.toNumber(Ds_ACCAA00.getCellData(rowIndex, "nInputAmt"));		// 입금금액 합계(nInputAmt: 입금액)
	}
	// console.log("[/CBSC090M.xml] [Ds_ACCAA00_oncelldatachange()] ==> [1. 입금 합계를 구한다.] [chk_val]"+ chk_val +"[nFundCntSum]"+ nFundCntSum +"[nFundAmtSum]"+ nFundAmtSum );  
 
	//2. 차액을 구한다.  
	Mak_nFundCnt.setValue(nFundCntSum);		//입금건수
	Mak_nFundAmt.setValue(nFundAmtSum);		//입금금액
	Mak_nDiffAmt.setValue(nFundAmtSum - wconv.toNumber(Mak_nApplyAmt.getValue()));	 	// 차액 = 입금합계(금액) - 청약합계(금액)
	// console.log("[/CBSC090M.xml] [Ds_ACCAA00_oncelldatachange()] ==> [2. 차액을 구한다.] [입금건수]"+ Mak_nFundCnt.getValue() +"[입금금액]"+ Mak_nFundAmt.getValue() +"[차액]"+ Mak_nDiffAmt.getValue() );    
};

//**************************************************************************************************
//  청약내역 선택시 차액을 계산한다.
//************************************************************************************************** 
scwin.Ds_ACCBA01_oncelldatachange = function(info) { 
	// console.log("[/CBSC090M.xml] [Ds_ACCBA01_oncelldatachange()] ==> [Ds에서 ColumnChanged 이벤트] [TEST]  [row]"+ info.rowIndex +"[colID]"+ info.colID  );  
	
	var rowIndex = info.rowIndex;
	var colID = info.colID;
	var oldValue = info.oldValue;
	var newValue = info.newValue;
	
	if( colID != "ACCBA01" ) { return; };		// 선택 checkbox를 클릭한 경우 외엔 return
   
	var nApplyCntSum = wconv.toNumber(Mak_nApplyCnt.getValue());		// 청약 건수
	var nApplyAmtSum = wconv.toNumber(Mak_nApplyAmt.getValue());		// 청약 금액
  
	var chk_val = Ds_ACCBA01.getCellData( rowIndex , colID );
  
 	//1. 청약 합계를 구한다.  
	if( chk_val == '1' ) {		// 선택한 경우 
		nApplyCntSum = nApplyCntSum + 1;	// 청약건수 합계  
		nApplyAmtSum = nApplyAmtSum + wconv.toNumber(Ds_ACCBA01.getCellData(rowIndex, "nExptPrem"));		// 청약금액 합계(nInputAmt: 보험료) 
	} else if(oldValue == '1' && chk_val == '0') { 	// 선택 해제한 경우
		nApplyCntSum = nApplyCntSum - 1;	// 청약건수 합계
		nApplyAmtSum = nApplyAmtSum - wconv.toNumber(Ds_ACCBA01.getCellData(rowIndex, "nExptPrem"));		// 청약금액 합계(nInputAmt: 보험료)
	}
	// console.log("[/CBSC090M.xml] [Ds_ACCBA01_oncelldatachange()] ==> [1. 청약 합계를 구한다.] [chk_val]"+ chk_val +"[nApplyCntSum]"+ nApplyCntSum +"[nApplyAmtSum]"+ nApplyAmtSum );  
 
	//2. 차액을 구한다.  
	Mak_nApplyCnt.setValue(nApplyCntSum);		//청약건수
	Mak_nApplyAmt.setValue(nApplyAmtSum);		//청약금액
	Mak_nDiffAmt.setValue(wconv.toNumber(Mak_nFundAmt.getValue()) - nApplyAmtSum);	 	// 차액 = 입금합계(금액) - 청약합계(금액)
	// console.log("[/CBSC090M.xml] [Ds_ACCBA01_oncelldatachange()] ==> [2. 차액을 구한다.] [청약건수]"+ Mak_nApplyCnt.getValue() +"[청약금액]"+ Mak_nApplyAmt.getValue() +"[차액]"+ Mak_nDiffAmt.getValue() );    
};

//**************************************************************************************************
// 수납확정 전에 취급자의 부서코드를 다시 한번 조회한다.
//**************************************************************************************************
scwin.checkAgntValue = function(e) {
	// console.log("[/CBSC090M.xml] [checkAgntValue()] ==> [수납확정 버튼 클릭 이벤트] [TEST]" );  
	 
	wconv.clear(Ds_Team);
    
	var MethodObj = new callService("com.inswave.admin.task.AdminTask", "getAllOrgbyAgntCd", "", "");
	MethodObj.setId("getTeamList");	// ID 셋팅  
	MethodObj.setParam("sAgent", gUserID);	// Param 셋팅((global 정산 담당자) 
	MethodObj.setUrl("/contract/CBSC090MController.do");  // URL 설정
	MethodObj.setXPath("//*/ADMA005");		// XPath
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();		// 동기 처리[기본(async:비동기)]
	MethodObj.send();		// 최종 전송   
	// console.log("[/CBSC090M.xml] [checkAgntValue()] ==> [JSON.stringify(_tranSync.result)]"+ JSON.stringify(_tranSync.result) );
 
	Ds_Team.setJSON(_tranSync.getDsJson("ADMA005") );	 	// data set 데이터(조회 결과)  
	// console.log("[/CBSC090M.xml] [checkAgntValue()] ==> 부서코드  DS_갯수]"+ Ds_Team.getRowCount() +"[Ds_Team]"+ WebSquare.xml.serialize(Ds_Team.getAllXML()) ); 
    // console.log("[/CBSC090M.xml] [checkAgntValue()] ==> [dataSetId_result]"+ Ds_Team.getCellData(0, "result") );
 
	var sAgntCenter = Ds_Team.getCellData(0, "sCenter"); 
	// console.log("[/CBSC090M.xml] [checkAgntValue()] ==> [sAgntCenter]"+ sAgntCenter );
 
  	if ( gsCenter == "5000004" || gsCenter == "5000023" || isCallCenter(gsCenter) || gsCenter == "4000102" ) {
		if ( sAgntCenter != gsCenter ) { 
			if ( sAgntCenter != gsCenter ) {  	// 사용자와 취급자의 부서가 같으면 
//				if ( (gUserID == "2030030" || gUserID == "2040051") && (sAgntCenter == "5000004" || sAgntCenter == "5000023") ) {
//				} else 
				if ( gsCenter == "4000102" ) {	//2011-12-12 서영지. CC센터조직개편관련. 로그인한 사용자가 다이렉트사업부인 경우 취급자의 소속과 달라도 수납확정 가능하다.
					scwin.doCollect();		// 수납확정을 위한 전처리 작업
				}
				else{
					wprom.alert("로그인한 사용자와 취급자의 부서가 다르므로 \n\n수납확정할 수 없습니다. 확인하십시오.");
					return;
				} 
			}
		}
	}
  	 
	scwin.doCollect();  // 수납확정을 위한 전처리 작업
};

//**************************************************************************************************
// 수납확정을 위한 전처리 작업을 한다.
// 차액이 없으면 바로 수납확정 함수를 호출하고, 차액이 있으면 차액처리 팝업창 오픈 함수를 호출한다.
//**************************************************************************************************
scwin.doCollect = function() {
	// console.log("[/CBSC090M.xml] [doCollect()] ==> [수납확정을 위한 전처리 작업] [TEST]" );
	
    if (wconv.toNumber(Mak_nFundCnt.getValue()) == 0) {
        wprom.alert("입금건을 선택하십시오.");
        return;
    }
    if (wconv.toNumber(Mak_nApplyCnt.getValue()) == 0) {
        wprom.alert("청약건을 선택하십시오.");
        return;
    }
 
    //장현 2015-05-29 전월회계여부 체크
    if (scwin.checkPreAcctYN() == "P") {
        wprom.alert("선택된 청약건 중 전월회계여부 자료와 아닌 자료가 같이 존재합니다.\n확인하십시오.");
        return;
    }
  
 	var pro = Promise.resolve();   // Promise 설정
  
 	pro = pro.then(function(rv) { 
 		return checkCollectDate(scwin.getMaxFundDate(), scwin.getMinFromDate());		// 소급계약 처리여부 확인
 	 });	 // end of promise()
 
 	pro = pro.then(function(rv) {  
 		// console.log("[/CBSC090M.xml] [doCollect()] ==> [소급계약 처리여부 확인] [promise_결과값]"+ rv );
 	 
	    if (!rv) {  
	    	// console.log("[/CBSC090M.xml] [doCollect()] ==> [소급계약 처리여부 확인_실패] [TEST]" );
	        return;
	    } 
	    // console.log("[/CBSC090M.xml] [doCollect()] ==> [수납확정을 위한 전처리 작업] [TEST_02]" );
	 
	    //차액이 없으면 바로 수납확정 처리한다.
	    if (wconv.toNumber(Mak_nDiffAmt.getValue()) == 0) {
	        scwin.doCollSettle(0, "1"); 	//차액없음
	    } else {
	        //2015.05.11 이재정. 장기 과대납 일부정산 (N1505-00017)
	        var sVirtualCnt = 0; //가상계좌 입금선택
	        var sEtcCnt = 0; //그외 금종 입금선택
	        if (wconv.toNumber(Mak_nDiffAmt.getValue()) < 0) {
	            wprom.alert("입금액이 부족하여 수납이 불가합니다. 확인하십시오.");
	            return;
	        } 
	
	        //가상계좌 입금선택 확인
	        for (var i = 0; i < Ds_ACCAA00.getRowCount(); i++) {
	            if (Ds_ACCAA00.getCellData(i, "ACCAA00") == "1") {
	                //체크박스가 선택되었으면.
	                //가상계좌
	                if (Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAD03")
	                    sVirtualCnt = sVirtualCnt + 1;
	                else
	                    sEtcCnt = sEtcCnt + 1;
	            }
	        } 
	        
			var sDiffAmt = util.appendComma(Mak_nDiffAmt.getValue()); 	// 차액(3자리 콤마)
	            
	        //가상계좌만 차액에 따른 분할정산 가능, 그외 금종은 불가능
	        if (wconv.toNumber(Mak_nDiffAmt.getValue()) != 0) {
	            if (sVirtualCnt == 0 || sEtcCnt > 0) {
	                wprom.alert("차액이 " + sDiffAmt + "원 발생했습니다.\n수납이 불가합니다.");
	                return;
	            } else {  
	            	var pro_02 = Promise.resolve();   // Promise 설정
		
				    pro_02 = pro_02.then(function(rtnVal) { 
						return wprom.confirm("계상계좌 분할정산 수납확정을 하시겠습니까?");	 
				   });
				    pro_02 = pro_02.then(function(rst) { 
				        if (rst == true) {   	// confirm이 났으면
				        	 // console.log("[/CBSC090M.xml] [doCollect()] ==> [pro_02.then] [01. confirm이 났으면]"+ rst );  
				        	scwin.doCollSettle(0, "2"); 	//차액없음(가상계좌분할정산)  ===> 사실상 여기서 멈춤 @@@
						} else {			// confirm이 안 났으면
							// console.log("[/CBSC090M.xml] [doCollect()] ==> [pro_02.then] [00. confirm이 안 났으면] "+ rst );   
						}   
		    		});  
	            }
	        }
	    }	
 	 });	 // end of promise()
};

//**************************************************************************************************
// 수납번호 및 수납SUM을 등록하여 수납확정 처리한다.
//**************************************************************************************************  
scwin.doCollSettle = function(nParamDiffAmt, sParamDiffType) { 
	// console.log("[/CBSC090M.xml] [doCollSettle()] ==> [01. 수납번호 및 수납SUM을 등록하여 수납확정 처리] [TEST] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	
 	var pro = Promise.resolve();   // Promise 설정
 	
    pro = pro.then(function(rtnVal) { 
		//	2015.05.11 이재정. 장기 과대납 일부정산 (N1505-00017) 
		 if (sParamDiffType=="1") { 
			return wprom.confirm("수납확정을 하시겠습니까?");	 
		}
	});	 // end of promise()
   
    pro = pro.then(function(rst) {
    	// console.log("[/CBSC090M.xml] [doCollSettle()] ==> [pro.then] [수납확정 처리_결과값] [rst]"+ rst );  
    	  	
        if (rst == true) {   	// confirm이 났으면
        	// console.log("[/CBSC090M.xml] [doCollSettle()] ==> [pro.then] [01. confirm이 났으면] [rst_01]"+ rst );  
        	scwin.setCollectionManual( nParamDiffAmt, sParamDiffType );		// 수납확정 처리
		} else {			// confirm이 안 났으면
			// console.log("[/CBSC090M.xml] [doCollSettle()] ==> [pro.then] [00. confirm이 안 났으면] [rst_01]"+ rst );  
			return false; 
		}   
	});	 // end of promise() 
};

//----------------------------------------------------------------------------------------------------
// function 명 : setCollectionManual
// 내용        :  수납확정 처리
//----------------------------------------------------------------------------------------------------
scwin.setCollectionManual = function(nParamDiffAmt, sParamDiffType) { 
	console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [수납확정 처리] [TEST] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	 
	var nACCAA02Row = 0;
	var nACCAB02Row = 0;
	var nACCAC01Row = 0;
	var nACCAD03Row = 0;
	var nACCAE01Row = 0;
	var nACCAH01Row = 0;//휴대폰소액결제 추가
	var nACCBA01Row = 0;
	var nACCLC01Row = 0;//대출
	var nBalAmt     = wconv.toNumber(Mak_nApplyAmt.getValue()) ; //청약합계
	var nDivAmt     = 0 ; 
	 
	wconv.clear(Ds_ACCAA02_1);
	wconv.clear(Ds_ACCAB02_1);	
	wconv.clear(Ds_ACCAC01_1);
	wconv.clear(Ds_ACCAD03_1);
	wconv.clear(Ds_ACCAE01_1);
	wconv.clear(Ds_ACCAH01_1);		//휴대폰소액결제 추가
	wconv.clear(Ds_ACCBA01_3);
	wconv.clear(Ds_ACCLC01_1);		//대출 
	// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [1. 입금내역 세팅] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [1. 입금내역 세팅] [Ds_ACCAA00.getRowCount()]"+ Ds_ACCAA00.getRowCount());  
	
	//1. 입금내역 세팅
	for ( var i = 0 ; i < Ds_ACCAA00.getRowCount() ; i++ ) {
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [1. 입금내역 세팅] [TEST_08_1] [i_번째]"+ i +"[[nACCAA02Row]"+ nACCAA02Row +"[sGubun]"+ Ds_ACCAA00.getCellData(i, "sGubun")  +"[체크_ACCAA00]"+ Ds_ACCAA00.getCellData(i, "ACCAA00")  );  
	
		if ( Ds_ACCAA00.getCellData(i, "ACCAA00") == "1" ) {	// 체크박스가 선택되었으면. 
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [i_번째]"+ i +"[nACCAA02Row]"+ nACCAA02Row +"[sGubun]"+ Ds_ACCAA00.getCellData(i, "sGubun")  );  
	
			//예금
			if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAA02") {   
				// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [TEST_022] [gUserID]"+ gUserID +"[nACCAA02Row]"+ nACCAA02Row +"[입금액]"+ Ds_ACCAA00.getCellData(i, "nInputAmt")  );  
		 
				Ds_ACCAA02_1.insertRow();
				//Ds_ACCAA02_1.InsertRow(nACCAA02Row);	 
				Ds_ACCAA02_1.setCellData(nACCAA02Row, "sDealDate", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
				Ds_ACCAA02_1.setCellData(nACCAA02Row, "sAcctNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
				Ds_ACCAA02_1.setCellData(nACCAA02Row, "sDepoSer", Ds_ACCAA00.getCellData(i, "sRelKey3"));	//
				Ds_ACCAA02_1.setCellData(nACCAA02Row, "sLastAgnt", Ds_ACCAA00.getCellData(i, "sAgnt")); 	//  
				Ds_ACCAA02_1.setCellData(nACCAA02Row, "nInAmt", Ds_ACCAA00.getCellData(i, "nInputAmt"));		// 입금액 		// TEST @@@ ====>
			  	Ds_ACCAA02_1.setCellData(nACCAA02Row, "sUserID", gUserID);		// 사용자ID   
				nACCAA02Row++; 
			}
			//카드 
			else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAB02") {				
				//Ds_ACCAB02_1.InsertRow(nACCAB02Row);	
				Ds_ACCAB02_1.insertRow();
				Ds_ACCAB02_1.InsertRow(nACCAB02Row);
				Ds_ACCAA02_1.setCellData(nACCAB02Row, "sReqDate", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
				Ds_ACCAA02_1.setCellData(nACCAB02Row, "sCardNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
				Ds_ACCAA02_1.setCellData(nACCAB02Row, "nReqCnt", Ds_ACCAA00.getCellData(i, "sRelKey3"));	//
				Ds_ACCAA02_1.setCellData(nACCAB02Row, "nReqAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 	//  
				nACCAB02Row++;  
			}
			//재수납
 			else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAC01") {		  
 				//Ds_ACCAC01_1.InsertRow(nACCAC01Row);	  
 				Ds_ACCAC01_1.insertRow();
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "sPolicyType", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "sPolicyYM", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "sPolicySer", Ds_ACCAA00.getCellData(i, "sRelKey3"));	//
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "nChangeNo", Ds_ACCAA00.getCellData(i, "sRelKey4")); 	//  
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "nReCollAmt", Ds_ACCAA00.getCellData(i, "nInputAmt"));	//
				Ds_ACCAC01_1.setCellData(nACCAC01Row, "sPolHolderID", Ds_ACCAA00.getCellData(i, "sRelKey5")); 	 // 2013.04.10 유연재 추가 
				nACCAC01Row++;           
			}
			//수납이체
 			else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAE01" ) {				
 				//Ds_ACCAE01_1.InsertRow(nACCAE01Row);	 
 				Ds_ACCAE01_1.insertRow();
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sDealDate", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sOutAcctNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sDepoSer", Ds_ACCAA00.getCellData(i, "sRelKey3"));	//
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "nOutAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 	//   
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sApplyType", wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),0,1) ); 
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sApplyYM",  wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),1,4) ); 
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sApplySer", wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),5) );
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sUserID", gUserID );
				Ds_ACCAE01_1.setCellData(nACCAE01Row, "sChangeID", gUserID );  
 				nACCAE01Row++;           
 			}
			//가상계좌
				else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAD03" ) {				
				//2015.05.11 이재정. 장기 과대납 일부정산 (N1505-00017)
 				if ( wconv.toNumber(Mak_nDiffAmt.getValue()) == 0 ) { //차액없음
 					//Ds_ACCAD03_1.InsertRow(nACCAD03Row);	 
 					Ds_ACCAD03_1.insertRow();
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sDealDate", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sVirtualAcctNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sDepoSer", Ds_ACCAA00.getCellData(i, "sRelKey3"));	//
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "nBalAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 	//   
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sUseCode", Ds_ACCAA00.getCellData(i, "sAgnt")); 
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sChangeID", gUserID );   
					nACCAD03Row++;
				} else { //차액있음
					//Ds_ACCAD03_1.InsertRow(nACCAD03Row);	 
					Ds_ACCAD03_1.insertRow();
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sDealDate", Ds_ACCAA00.getCellData(i, "sRelKey1")); 	// 입금일자
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sVirtualAcctNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));		// 계좌/카드/휴대폰번호
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sDepoSer", Ds_ACCAA00.getCellData(i, "sRelKey3"));	// 
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sUseCode", Ds_ACCAA00.getCellData(i, "sAgnt")); 
					Ds_ACCAD03_1.setCellData(nACCAD03Row, "sChangeID", gUserID );  
 			
//					청약:예치금을 1:n으로 처리하는 경우를 위한 정산금액 계산
//					잔액 = 청약합계 - 가상계좌잔액. 
 				nBalAmt = nBalAmt - wconv.toNumber(Ds_ACCAA00.getCellData(i, "nInputAmt")) ;
 				
					//청약합계 > 가상계좌금액
					if(nBalAmt >= 0) {  
 						Ds_ACCAD03_1.setCellData(nACCAD03Row, "nBalAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 
					} else {
						nDivAmt = nBalAmt+ wconv.toNumber(Ds_ACCAA00.getCellData(i, "nInputAmt")) ; 
						
						if ( nDivAmt <= 0 ) {
							wprom.alert("입금내역이 초과 선택되었습니다. \n\n수납확정할 수 없습니다.");
							return;
						}
				
						Ds_ACCAD03_1.setCellData( nACCAD03Row,  "nBalAmt",      nDivAmt    );   
					}
					nACCAD03Row++;
				}
			}
			//휴대폰
			else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCAH01" ) {		
				//Ds_ACCAE01_1.InsertRow(nACCAH01Row);	  
				Ds_ACCAE01_1.insertRow();
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "sOutAcctNo", Ds_ACCAA00.getCellData(i, "sRelKey1"));		// 계좌/카드/휴대폰번호 
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "nReqAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 	//   
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "sApplyType", wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),0,1) ); 
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "sApplyYM",  wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),1,4) ); 
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "sApplySer", wconv.substr(Ds_ACCAA00.getCellData(i, "sRelKey4"),5) );
				Ds_ACCAE01_1.setCellData(nACCAH01Row, "sUserID", gUserID ); 
				nACCAH01Row++;  
			}	
			//대출
 		else if ( Ds_ACCAA00.getCellData(i, "sGubun") == "ACCLC01" ) {		
				//Ds_ACCLC01_1.InsertRow(nACCLC01Row);	  
				Ds_ACCLC01_1.insertRow();
				Ds_ACCLC01_1.setCellData(nACCLC01Row, "sLoanNo", Ds_ACCAA00.getCellData(i, "sRelKey1"));	 
				Ds_ACCLC01_1.setCellData(nACCLC01Row, "sLoanPayNo", Ds_ACCAA00.getCellData(i, "sRelKey2"));  
				Ds_ACCLC01_1.setCellData(nACCLC01Row, "nExptLoanAmt", Ds_ACCAA00.getCellData(i, "nInputAmt")); 
				Ds_ACCLC01_1.setCellData(nACCLC01Row, "sUserID", gUserID );  
				nACCLC01Row++;  
			}	 
		}
	}	
	// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [1. 입금내역 세팅] [조회_갯수_2]"+ Ds_ACCAA02_1.getRowCount() +"[JSON_리스트]"+ JSON.stringify(Ds_ACCAA02_1) );
	 //console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [2. 청약내역 세팅] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	
	//2. 청약내역 세팅
	for ( var k = 0 ; k < Ds_ACCBA01.getRowCount() ; k++ ) {  
		//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_18_1] [k_번째]"+ k +"[nACCBA01Row]"+ nACCBA01Row +"[보험료]"+ Ds_ACCBA01.getCellData(k, "nExptPrem") +"[계약자명]"+ Ds_ACCBA01.getCellData(k, "sPolHolderName") +"[sGubun]"+ Ds_ACCBA01.getCellData(k, "sGubun") +"[체크_ACCBA01]"+ Ds_ACCBA01.getCellData(k, "ACCBA01")  );  
  	
		if ( Ds_ACCBA01.getCellData(k, "ACCBA01") == "1" ) {		// 체크박스가 선택되었으면  			 
			Ds_ACCBA01_3.insertRow(nACCBA01Row);  
			wconv.mi_copyRow(Ds_ACCBA01, nACCBA01Row, Ds_ACCBA01_3.getID(), k);   // row 복사 처리
		 
			Ds_ACCBA01_3.setCellData(nACCBA01Row, "Ds_ACCBA01", k);
			Ds_ACCBA01_3.setCellData(nACCBA01Row, "sUserID", gUserID);		// 사용자ID   
			Ds_ACCBA01_3.setCellData(nACCBA01Row, "sRectDate", scwin.getMaxFundDate()); 		// 영수일자 
			Ds_ACCBA01_3.setCellData(nACCBA01Row, "sRectTime", scwin.getMaxFundTime());		// 영수시간  
			//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [체크박스가 선택] [TEST_18_5] [k_번째]"+ k +"[보험료]"+ Ds_ACCBA01.getCellData(k, "nExptPrem") +"[계약자명]"+ Ds_ACCBA01.getCellData(k, "sPolHolderName") +"[영수일자]"+ scwin.getMaxFundDate() +"[영수시간]"+ scwin.getMaxFundTime()  );  
		 
			//차액처리 팝업에서 선택한 청약건을 반영
			if ( Ds_DiffResult.getRowCount() > 0 ) {
				// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_18_7] [k_번째]"+ k +"[Ds_DiffResult.getRowCount()]"+ Ds_DiffResult.getRowCount()  );  
				
				if ( Ds_DiffResult.getCellData(0,"sApplyType") == Ds_ACCBA01_3.getCellData(nACCBA01Row, "sApplyType") &&
				     Ds_DiffResult.getCellData(0,"sApplyYM") == Ds_ACCBA01_3.getCellData(nACCBA01Row, "sApplyYM") &&
				     Ds_DiffResult.getCellData(0,"sApplySer") == Ds_ACCBA01_3.getCellData(nACCBA01Row, "sApplySer") ) { 
					Ds_ACCBA01_3.setCellData(nACCBA01Row, "nRectPrem", wconv.toNumber(Ds_ACCBA01_3.getCellData(nACCBA01Row, "nExptPrem")) + wconv.toNumber(Ds_DiffResult.getCellData(0, "nDiffAmt")) );			// 청약금(보험료)
			 		//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_40_1] [k_번째]"+ k  );  
			 		
			 	} else { 
					 Ds_ACCBA01_3.setCellData(nACCBA01Row, "nRectPrem", Ds_ACCBA01_3.getCellData(nACCBA01Row, "nExptPrem"));  	// 청약금(보험료)
					 //console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_40_2] [k_번째]"+ k  );  
				}
				//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_40_3] [k_번째]"+ k  );  
			} else { 
				Ds_ACCBA01_3.setCellData(nACCBA01Row, "nRectPrem", Ds_ACCBA01_3.getCellData(nACCBA01Row, "nExptPrem"));  	// 청약금(보험료)
				//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_40_4] [nACCBA01Row]"+ nACCBA01Row +"[보험료]"+ Ds_ACCBA01_3.getCellData(nACCBA01Row, "nExptPrem") );
				//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_40_4] [k_번째]"+ k  );  
			}	 
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_22] [k_번째]"+ k +"[gUserID]"+ gUserID +"[nACCAA02Row]"+ nACCAA02Row );  
	  
			nACCBA01Row++;
		}
	}
	//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [2. 청약내역 세팅] [TEST_44]"+ Ds_ACCBA01_3.getRowCount() +"[Ds_ACCAD03_1]\n"+ WebSquare.xml.serialize(Ds_ACCBA01_3.getAllXML()) ); 
 
	var pro = Promise.resolve();   // Promise 설정
	
	pro = pro.then(function(rv) { 
		//2011-12-29 서영지. 청약내역에서 계약자 상이건이 있으면 확인 메세지
 		return scwin.checkPolHolderID();		// 계약자 상이건이 존재 여부 확인
 	 });	 // end of promise()
 
 	pro = pro.then(function(rv) {  
 		// console.log("[/CBSC090M.xml] [doCollect()] ==> [계약자 상이건이 존재 여부 확인] [promise_결과값]"+ rv );
 	 
		if(!rv) {  	// 상이건이 존재하면 ==> 	// true(상이건 없음)/false(상이건 있음) 
			// console.log("[/CBSC090M.xml] [doCollect()] ==> [pro.then] [00. confirm이 안 났으면] [rv_01]"+ rv );
 			return; 
		}
		// console.log("[/CBSC090M.xml] [doCollect()] ==> [계약자 상이건이 존재 여부 확인] [promise_결과값] [TEST_02]"+ rv ); 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [3. 수납번호 채번을 위한 Document 선언] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
			
		//3. 수납번호 채번을 위한 Document 선언
	 	Ds_ACCZA01_1.removeAll(); 
		var idx = Ds_ACCZA01_1.insertRow();    
		Ds_ACCZA01_1.setCellData(0, "sBizType", "RR");              // 업무구분=RR(수납)
		Ds_ACCZA01_1.setCellData(0, "sRectAgnt", Edt_sAgnt.getValue() );     //  수납처리 취급자 
		Ds_ACCZA01_1.setCellData(0, "sRectDate", scwin.getMaxFundDate() );		// 자금데이터중 가장 최근 입금일자 
	
	    //장현 2015-05-28 N1505-00227_말일자 휴일 계속보험료 수납, 수납대기 소급입력 
		if(scwin.checkPreAcctYN() == "A") 	  //전월회계여부세팅
	    {
	        Ds_ACCZA01_1.setCellData(0, "sPrevAcctYN", "Y" );
	    }
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [4. 수납정산을 위한 Document 선언] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	 
		//4. 수납정산을 위한 Document 선언
		Ds_ACCBA02_1.removeAll(); 
		var idx = Ds_ACCBA02_1.insertRow();     
		Ds_ACCBA02_1.setCellData(0, "sCollAgnt", Edt_sAgnt.getValue() );		 // 수납처리 취급자 
		Ds_ACCBA02_1.setCellData(0, "sUserID", gUserID);        // 사용자ID  
		Ds_ACCBA02_1.setCellData(0, "sRectType",  "B" );		//영수형태(B:일반수납)  
	 
		if (nParamDiffAmt == 0) {
			Ds_ACCBA02_1.setCellData(0, "sDiffType", "1" ); //차액구분
			Ds_ACCBA02_1.setCellData(0, "nDiffAmt",  0 );    //차액
		} else {
			Ds_ACCBA02_1.setCellData(0, "sDiffType", Ds_DiffResult.getCellData(0,"sDiffType")); //차액구분
			Ds_ACCBA02_1.setCellData(0, "nDiffAmt", Ds_DiffResult.getCellData(0,"nDiffAmt"));   //차액
		}
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [5. 수납확정 처리] [nParamDiffAmt]"+ nParamDiffAmt +"[sParamDiffType]"+ sParamDiffType );  
	   	// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [가상계좌 , 예치금_갯수]"+ Ds_ACCAD03_1.getRowCount() +"[Ds_ACCAD03_1]\n"+ WebSquare.xml.serialize(Ds_ACCAD03_1.getAllXML()) ); 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [수납이체_갯수]"+ Ds_ACCAE01_1.getRowCount() +"[Ds_ACCAE01_1]\n"+ WebSquare.xml.serialize(Ds_ACCAE01_1.getAllXML()) ); 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [휴대폰_갯수]"+ Ds_ACCAH01_1.getRowCount() +"[Ds_ACCAH01_1]\n"+ WebSquare.xml.serialize(Ds_ACCAH01_1.getAllXML()) ); 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [대출_갯수]"+ Ds_ACCLC01_1.getRowCount() +"[Ds_ACCLC01_1]\n"+ WebSquare.xml.serialize(Ds_ACCLC01_1.getAllXML()) ); 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [수납정산_갯수]"+ Ds_ACCBA02_1.getRowCount() +"[Ds_ACCBA02_1]\n"+ WebSquare.xml.serialize(Ds_ACCBA02_1.getAllXML()) ); 
	  
	  	console.log("\n\n 		[/CBSC090M.xml] [setCollectionManual()] ==> [91. 수납확정 저장] [TEST_01] #############] =====> ");  
	  	
		var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "setLongCollectionManual");  	// 수납확정 저장 Obj
		MethodObj.setId("saveRecvFix")	// ID 셋팅
		
		if(Ds_ACCZA01_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [01. 수납번호 채번_갯수]"+ Ds_ACCZA01_1.getRowCount() +"[Ds_ACCZA01_1]\n"+ WebSquare.xml.serialize(Ds_ACCZA01_1.getAllXML()) ); 
			MethodObj.addSingleData("ACCZA01", "ACCZA01", "Ds_ACCZA01_1");       	// 01. 수납번호 채번  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		}
		if(Ds_ACCAA02_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [02. 예금_갯수]"+ Ds_ACCZA01_1.getRowCount() +"[Ds_ACCAA02_1]\n"+ WebSquare.xml.serialize(Ds_ACCAA02_1.getAllXML()) ); 	
			MethodObj.addVectorData("ACCAA02", "ACCAA02", "Ds_ACCAA02_1");       	// 02. 예금  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		} 
		if(Ds_ACCAB02_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [03. 카드_갯수]"+ Ds_ACCAB02_1.getRowCount() +"[Ds_ACCAB02_1]\n"+ WebSquare.xml.serialize(Ds_ACCAB02_1.getAllXML()) ); 
			MethodObj.addVectorData("ACCAB02", "ACCAB02", "Ds_ACCAB02_1");   		// 03. 카드  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		}
		if(Ds_ACCAC01_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면 
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [04. 재수납금_갯수]"+ Ds_ACCAC01_1.getRowCount() +"[Ds_ACCAC01_1\n]"+ WebSquare.xml.serialize(Ds_ACCAC01_1.getAllXML()) ); 	
			MethodObj.addVectorData("ACCAC01", "ACCAC01", "Ds_ACCAC01_1");       	// 04. 재수납금  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		} 
		if(Ds_ACCBA01_3.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [05. 청약(수납발생)_갯수]"+ Ds_ACCBA01_3.getRowCount() +"[Ds_ACCBA01_3]\n"+ WebSquare.xml.serialize(Ds_ACCBA01_3.getAllXML()) ); 	
			MethodObj.addVectorData("ACCBA01", "ACCBA01", "Ds_ACCBA01_3");       	// 05. 청약(수납발생)   -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		}
		if(Ds_ACCAD03_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [06. 가상계좌 , 예치금_갯수]"+ Ds_ACCAD03_1.getRowCount() +"[Ds_ACCAD03_1]\n"+ WebSquare.xml.serialize(Ds_ACCAD03_1.getAllXML()) ); 
			MethodObj.addVectorData("ACCAD03", "ACCAD03", "Ds_ACCAD03_1");       	// 06. 가상계좌 , 예치금  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		} 
		if(Ds_ACCAE01_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [07. 수납이체_갯수]"+ Ds_ACCAE01_1.getRowCount() +"[Ds_ACCAE01_1]\n"+ WebSquare.xml.serialize(Ds_ACCAE01_1.getAllXML()) ); 
			MethodObj.addVectorData("ACCAE01", "ACCAE01", "Ds_ACCAE01_1");       	// 07. 수납이체  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		}
		if(Ds_ACCAH01_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [08. 휴대폰_갯수]"+ Ds_ACCAH01_1.getRowCount() +"[Ds_ACCAH01_1]\n"+ WebSquare.xml.serialize(Ds_ACCAH01_1.getAllXML()) ); 
			MethodObj.addVectorData("ACCAH01", "ACCACCBA02AH01", "Ds_ACCAH01_1");       	// 08. 휴대폰  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		} 
		if(Ds_ACCLC01_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [09.대출_갯수]"+ Ds_ACCLC01_1.getRowCount() +"[Ds_ACCLC01_1]\n"+ WebSquare.xml.serialize(Ds_ACCLC01_1.getAllXML()) ); 
			MethodObj.addVectorData("ACCLC01", "ACCLC01", "Ds_ACCLC01_1");      	// 09. 대출  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
	 	}
		if(Ds_ACCBA02_1.getModifiedIndex().length != 0){  // DS에서 상태 변경이 존재하면 
			// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [10. 수납정산_갯수]"+ Ds_ACCBA02_1.getRowCount() +"[Ds_ACCBA02_1]\n"+ WebSquare.xml.serialize(Ds_ACCBA02_1.getAllXML()) ); 
			MethodObj.addSingleData("ACCBA02", "ACCBA02", "Ds_ACCBA02_1");        	// 10. 수납정산  -> 보낼 Dataset 명칭 (dataList i:추가, u:수정, d:삭제, 전체는 설정없이:변경된것만 넘김)
		}
		console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [5. 수납확정 처리] [05. 청약(수납발생), _갯수]"+ Ds_ACCBA01_3.getRowCount() +"[Ds_ACCBA01_3]\n"+ WebSquare.xml.serialize(Ds_ACCBA01_3.getAllXML()) ); 
		
		MethodObj.setUrl("/contract/CBSC090MController.do");  	// 서버단 호출 URL (수납 확정)    
		MethodObj.setXPath("//*/ACCBA02");		// XPath
		MethodObj.addXPath("//*/WARNING");	// XPath  
		MethodObj.setXPathDs(); 		// XPath 전체 경로 사용할 경우
		MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때 
		MethodObj.sync();					// 동기 처리[기본(async:비동기)]
		MethodObj.send(); 					// 최종 전송 	 
		//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [전송_완료]"); 
		
		util.interfaceKey(_tranSync.result.serviceDs); 		// interface 조회 후 Data 리스트 Display
		 
		Ds_Settle.setJSON(_tranSync.getDsJson("//*/ACCBA02"));		// 조회 DS 셋팅(조회 결과)  
	 	Ds_SettleWarning.setJSON(_tranSync.getDsJson("//*/WARNING"));  		// Warning DS 셋팅(조회 결과) 
		console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [I/F 수납 처리 완료] [DS, 갯수]"+ Ds_Settle.getRowCount() +"[Ds_Settle]"+ WebSquare.xml.serialize(Ds_Settle.getAllXML()) ); 
	 	//console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [I/F 수납 처리 완료] [Ds_SettleWarning, 갯수]"+ Ds_SettleWarning.getRowCount() +"[Ds_SettleWarning]"+ WebSquare.xml.serialize(Ds_SettleWarning.getAllXML()) ); 
	 
		// 정산처리 결과
		if (Ds_SettleWarning.getRowCount() != 0) {
	 		wprom.alert(Ds_SettleWarning.getCellData(0, "msg")); 
	        return; 
		} else {	
			if ( wconv.substr(Ds_Settle.getCellData(0, "sCollNo"), 0, 2) == "RR" ) {
				wprom.alert(	"회계일자 : " + Ds_Settle.getCellData(0, "sAcctDate") + "\n" +
					    "수납부점 : " + Ds_Settle.getCellData(0, "sCollBranch") + "\n" +
					    "수납번호 : " + Ds_Settle.getCellData(0, "sCollNo") );
				
				scwin.getCollTargetList();  	 //조회
			}else{
				alert("수납확정시 오류가 발생했습니다.");	
			}	
		} 
		// console.log("[/CBSC090M.xml] [setCollectionManual()] ==> [TEST_end]");   
	});	 // end of promise()	
	
	//pro = pro.catch(function(rj) {
		//alert(rj); //Promise reject 시 처리 "dddd" 값출력
		//Promise 오류 리턴처리
	//}); 	// end of promise()	 
};

//**************************************************************************************************
// lfn_getColumnValue: 은행/카드사/통신사, 계좌/카드/휴대폰번호 칼럼 expression  처리 함수
//**************************************************************************************************
scwin.lfn_getColumnValue = function(data, formattedData, rowIndex, colIndex) {
	//console.log("[/CBSC090M.xml] [lfn_getColumnValue()] ==> [TEST_01] [rowIndex]"+ rowIndex +"[colIndex]"+ colIndex  ); 
 
	var sRslt = ""; 
	
	if (Grid_List1.getColumnID(colIndex)  == "bankCardComNo") {  	// Grid에서 칼럼이 '은행/카드사/통신사' 이면 
		var sGubunName = Ds_ACCAA00.getCellData(rowIndex, "sGubunName");   // 구분명
		var sInputCode = Ds_ACCAA00.getCellData(rowIndex, "sInputCode");
		var sInputName = Ds_ACCAA00.getCellData(rowIndex, "sInputName");
		sRslt = sInputCode +" "+ sInputName;			// 은행/카드사/통신사 
		 
	} else if (Grid_List1.getColumnID(colIndex)  == "temp_id_106") {	// Grid에서 칼럼이 '계좌/카드/휴대폰번호' 이면
		var sGubunCd = "";
		var sGubunName = Ds_ACCAA00.getCellData(rowIndex, "sGubunName");   // 구분명
		var sAcctNo = Ds_ACCAA00.getCellData(rowIndex, "sAcctNo");	// 개인정보번호
		
		if (sGubunName == "카드") {
			sGubunCd = "2";
		} else if (sGubunName == "수납이체") {
			sGubunCd = "3";
		} else if (sGubunName == "휴대폰") {
			sGubunCd = "4";
		}
		sRslt = convertPriInfo(sGubunCd, sAcctNo);  		// 개인정보 별표 처리하는 함수  
	}
		
	if (Grid_List2.getColumnID(colIndex)  == "sApplyNo") {  	// Grid2에서 칼럼이 '청약번호' 이면
		var sApplyType = Ds_ACCBA01.getCellData(rowIndex, "sApplyType");   // 청약 타입
		var sApplyYM = Ds_ACCBA01.getCellData(rowIndex, "sApplyYM");	//  청약 년월
		var sApplySer = Ds_ACCBA01.getCellData(rowIndex, "sApplySer");	//  청약 번호
		sRslt = sApplyType +""+ sApplyYM +""+ sApplySer;			// 청약번호  
		//console.log("[/CBSC092M.xml] [lfn_getColumnValue()] ==> [ Grid2에서 칼럼이 '청약번호' 이면] [청약번호]"+ sRslt );   
	 
	} else if (Grid_List2.getColumnID(colIndex)  == "nPayNo") {  	// Grid2에서 칼럼이 '납입(회차)' 이면
		var sGubunCd = "";
		var sPrevAcctYN = Ds_ACCBA01.getCellData(rowIndex, "sPrevAcctYN");  
		var nPayNo = Ds_ACCBA01.getCellData(rowIndex, "nPayNo");		// 납입회차
		var sPrevAcctYN = Ds_ACCBA01.getCellData(rowIndex, "sPrevAcctYN");  //전월
		
		if (sPrevAcctYN == "0") {
			sGubunCd = ""; 
		} else {
			sGubunCd = "("+sPrevAcctYN+")";
		}
	 
		sRslt = nPayNo +""+ sGubunCd;			// 납입회차값(전월값)
		//console.log("[/CBSC092M.xml] [lfn_getColumnValue()] ==> [ Grid2에서 칼럼이 '납입(회차)' 이면] [납입회차값(전월값)]"+ sRslt );   
	} 
	// console.log("[/CBSC090M.xml] [lfn_getColumnValue()] ==> [sRslt]"+ sRslt); ;
	 
	return sRslt;
};

//**************************************************************************************************
// 차액처리 팝업 호출
//**************************************************************************************************
//scwin.promise.openDiffPop = function(sDiffType) {
//    var promise = Promise.resolve();
    //선택한 청약 사항을 저장
//    var nRow = 0;
//    Ds_DiffParam.removeAll();
//    for (var i = 0; i < Ds_ACCBA01.getRowCount(); i++) {
//        if (Ds_ACCBA01.getCellData(i, "ACCBA01") == "1") {
            //체크박스가 선택되었으면.
//            var insRow = util.insertRow(Ds_DiffParam, nRow);
//            /*수작업 변환 개발자 가이드(테스트 중)
//            dataList에 row를 추가하고 setCellData를 하는 경우 첫 번째 인자를 insRow로 변경해주세요.*/
//            wconv.mi_copyRow(Ds_DiffParam, nRow, "Ds_ACCBA01", i);
//            nRow++;
//        }
//    } 
// 	
//    var sArg = " psAgnt=" + wconv.quote(Edt_sAgnt.getValue()) + " psAgntName=" + wconv.quote(Edt_sAgntName.getValue()) + " pnDiffAmt=" + wconv.quote(Mak_nDiffAmt.getValue()) + " psDiffType=" + wconv.quote(sDiffType);
//    promise = promise.then(function(rtnVal) {
//        return wprom.promise.popupOpen("PROJECT_PATH_TEMP/loan/CBSC091P.xml", sArg, 624, 380); /*wprom.popupOpen(가이드참조)*/
//    });
//    return promise;
//};
 
//**************************************************************************
// 사원번호로 사원 정보 얻기 
//**************************************************************************
scwin.gfn_selectEmpNameByManage = function(empNo) {
	// console.log("[/CBSC090M.xml] [gfn_selectEmpNameByManage()] ==> [사원번호로 사원 정보 얻기] [TEST] [empNo]"+ empNo);
	
    wconv.clear(DsWs_EmpName);
    SOBJ_WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCommonTask", "selectEmpNameByManage", "", "");
    gfn_SetParam(MethodObj, "sUserID", gds.gUserID); //로그인한 사용자
    gfn_SetParam(MethodObj, "sEmpNo", empNo); //취급자
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_EmpName, MethodObj);
    if (result == false) {
        wprom.alert("웹서비스 이상입니다.");
        return false;
    }
    if (wconv.Length(DsWs_EmpName.getCellData(0, "sEmpNo")) == 0) {
        Edt_sAgnt.setValue("");
        Edt_sAgntName.setValue("");
        Edt_sAgnt.focus();
    } else {
        Edt_sAgntName.setValue(DsWs_EmpName.getCellData(0, "sEmpName"));
    }
};

//**************************************************************************
//  정산 구분 수정 
//************************************************************************** 
scwin.changeSettleType = function(obj, strCode, strText, nOldIndex, nNewIndex) {
    Chk_sFundType1.setValue(true);
    Chk_sFundType2.setValue(true);
    Chk_sFundType3.setValue(true);
    Chk_sFundType4.setValue(true);
    Chk_sFundType5.setValue(true);
    Chk_sFundType7.setValue(true);
    Chk_sFundType10.setValue(true);
};
 
//**************************************************************************
//  입금일자 From(Calendar) 변경 이벤트
//**************************************************************************  
scwin.Cal_sFromDate1_onviewchange = function(info) {   
	// console.log("[/CBSC090M.xml] [Cal_sFromDate1_OnChanged()] ==> [info.oldValue]"+ info.oldValue +"[info.newValue]"+ info.newValue );  
	
	if (wconv.length(info.newValue) == 8) { 
		Cal_sFromDate2.setValue( info.newValue );				// 청약일자 From DT
		Cal_sToDate2.setValue(Cal_sToDate1.getValue());		// 청약일자 To DT 
	} 
};

//**************************************************************************
//  입금일자To(Calendar) 변경 이벤트
//**************************************************************************  
scwin.Cal_sToDate1_onviewchange = function(info) {
	// console.log("[/CBSC090M.xml] [Cal_sToDate1_onviewchange()] ==> [info.oldValue]"+ info.oldValue +"[info.newValue]"+ info.newValue );  

	if (wconv.length(info.newValue) == 8) { 
		Cal_sFromDate2.setValue(Cal_sFromDate1.getValue());		// 청약일자 From DT
		Cal_sToDate2.setValue(info.newValue);							// 청약일자 To DT 
	}
};

// 2011-02-14 장성욱 추가
scwin.Grid_List1_OnKeyDown = function(obj, nChar, bShift, bCtrl, bAlt, nLLParam, nHLParam) {
    nfn_CopyGridCell(obj, nChar, bShift, bCtrl, bAlt, nLLParam, nHLParam);
};

// 2011-02-14 장성욱 추가
scwin.Grid_List2_OnKeyDown = function(obj, nChar, bShift, bCtrl, bAlt, nLLParam, nHLParam) {
    nfn_CopyGridCell(obj, nChar, bShift, bCtrl, bAlt, nLLParam, nHLParam);
};

/***********************************************************/
//  청약내역에서 계약자 상이건이 있는지 확인한다.
//  true(상이건없음)/false(상이건있음)
//  2011-12-29 서영지 추가
/***********************************************************/ 
scwin.checkPolHolderID = function() { 
	// console.log("[/CBSC090M.xml] [checkPolHolderID()] ==> [TEST]" );
		
	var sPolHolderID = "";
	var nCount = 0;
	var pro = Promise.resolve();   // Promise 설정

	pro = pro.then(function(rv) { 
		// console.log("[/CBSC090M.xml] [checkPolHolderID()] [pro.then] ==> [TEST]" );
		
		var sRst = false;
		
	   for (var i = 0 ; i < Ds_ACCBA01_3.getRowCount(); i++) {
			if ( i != 0 ) {
				if (sPolHolderID != Ds_ACCBA01_3.getCellData(i, "sPolHolderID")) {
					nCount++;
				}
			}
			sPolHolderID = Ds_ACCBA01_3.getCellData(i, "sPolHolderID");
		}
	
		if ( nCount > 0 ) {		// true(상이건 없음)/false(상이건 있음)
			return wprom.confirm("계약자 상이건이 존재합니다. \n\n계약 영수사항 조회시 합산되어 나오니 계약자별로 각각 수납확정하여야 합니다. \n\n그대로 수납확정하시겠습니까?");
			sRst = false;
		}else{
			sRst = true;
		}  
		// console.log("[/CBSC090M.xml] [checkPolHolderID()] [pro.then] ==> [nCount]"+ nCount +"[sRst]"+ sRst );	    
		
		return sRst; 
		
	});	 // end of promise()
	// console.log("[/CBSC090M.xml] [checkPolHolderID()] ==> [pro]"+ pro );	   
    
    return pro;
};	

//**************************************************************************************************
// 장현 2015-05-29 N1505-00227_말일자 휴일 계속보험료 수납, 수납대기 소급입력
// 전월회계여부 데이타가 있는지 체크
//**************************************************************************************************
scwin.checkPreAcctYN = function() {
 
 	// 장현 2015-05-29 N1505-00227_말일자 휴일 계속보험료 수납, 수납대기 소급입력
	// 전월회계여부 칼럼 카운트와 체크된 카운트 비교
	var sPreAcctGb = "";
	var nCheckCnt = 0;
	var nPreAcctCnt = 0;
	
	for ( var i = 0 ; i < Ds_ACCBA01.getRowCount(); i++ ) 
	{ 
		if ( Ds_ACCBA01.getCellData(i, "ACCBA01") == "1" )  	//선택된 청약 카운트
		{
			//전월회계여부 카운트
			if ( Ds_ACCBA01.getCellData(i, "sPrevAcctYN") == "Y" ) {
				nPreAcctCnt++;
			}
			nCheckCnt++;
		}
	}

	if(nPreAcctCnt > 0) //전월회계여부 체크건이 있을때 
	{
		if(nCheckCnt == nPreAcctCnt)
		{
			sPreAcctGb = "A";
		}
		else 
		{
			sPreAcctGb = "P";
		}
	}
	else
	{
		sPreAcctGb = "N";
	}
	
	return sPreAcctGb;
};

//**************************************************************************************************
// 전월회계여부 일때 회계일자 세팅 
//**************************************************************************************************
scwin.getAcctDate = function() {  

	//회계일자 초기화
	var sAcctDate = "";
	
	//입금일자 세팅
	var sMaxFundDate = scwin.getMaxFundDate();
	
	//장현 2015-05-29 전월회계여부만 선택되었을때 입금일자의 전월 마지막일자로 재세팅
	if(scwin.checkPreAcctYN() == "A") 
	{
		//입금일자와 작업일자의 년월이 같은지 체크 
		if(wconv.substr(sMaxFundDate,0,6) =! wconv.substr(gsSysDate,0,6))
		{
			wprom.alert("입금일자의 년월과 현재일자 년월이 다릅니다.\n전월회계처리는 동일한 년월만 가능합니다.");
			return;
		}
		
		//회계일자는 입금일자의 전월말일일자 세팅
		sAcctDate = agf_LastDate(AddMonth(sMaxFundDate,-1));
	}
	
	return sAcctDate;
};

//**************************************************************************************************
//  입금일과 보험시작일을 확인한다. 
//  입금일이 보험시작일 이후면 소급처리가 가능한지 확인한다.
//************************************************************************************************** 
function checkCollectDate(sMaxFundDate, sMinFromDate) {

	var pro = Promise.resolve();   // Promise 설정

	pro = pro.then(function(rv) { 
		// console.log("[/CBSC090M.xml] [checkCollectDate()] ==> [TEST] [sMaxFundDate]"+ sMaxFundDate +"[sMinFromDate]"+ sMinFromDate );
		
		var sRst = false;
		
	    if (sMaxFundDate > sMinFromDate) {  	// 입금일이 보험시작일 보다 크면
	       // sRst = scwin.isRetro();	  //소급계약 처리여부를 확인한다.
	       
	       	var pro_ch1 = Promise.resolve();   // Promise 설정(Child 생성)
		
		    pro_ch1 = pro_ch1.then(function(rtnVal) { 
				return wprom.confirm("보험시작일 이후에 입금된 건이 존재합니다. \n수납확정 처리를 계속하시겠습니까?l");
		   	});	 // end of promise()
		   
			pro_ch1 = pro_ch1.then(function(rst) { 
		        if (rst == true) {   
		        	// console.log("[/CBSC090M.xml] [checkCollectDate()] ==> [pro_ch1.then] [01. confirm이 났으면]"+ rst );   
					sRst = true;
				} else {
					// console.log("[/CBSC090M.xml] [checkCollectDate()] ==> [pro_ch1.then] [00. confirm이 안 났으면]"+ rst ); 
					sRst = false;
				}  
				
				return sRst;
		   });	 // end of promise()
	     
			return pro_ch1;
			  
	    } else {	// 입금일이 보험시작일 보다 작거나 같으면
	     	sRst = true; 
	     	return sRst;
	    }
	    // console.log("[/CBSC090M.xml] [checkCollectDate()] ==> [sRst]"+ sRst );	    
	});	 // end of promise()
    
    return pro;
};

//  소급처리할 권한이 있는 사원인지 확인한다.
scwin.hasRetroAuthority = function() {
//    if (gds.gUserID == "2030030" || gds.gUserID == "2030041" || gds.gUserID == "2030047" || gds.gUserID == "2030054" || gds.gUserID == "2040017" || gds.gUserID == "2040051" || gds.gUserID == "2030060" || gds.gUserID == "2030053" || gds.gUserID == "2030031" || gds.gUserID == "2030048" || gds.gUserID == "2040015" || gds.gUserID == "2040037") {
//        return true;
//    } else {
        wprom.alert("소급처리 권한이 없습니다.");
        return false;
   // }
};

//**************************************************************************************************
//  최대 입금일시를 계산한다.
//**************************************************************************************************
scwin.getMaxFundDateTime = function() {
 	// console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [최대 입금일시 계산] [TEST]" );
	 
    var sMaxFundDate = "00000000";
    var sMaxFundTime = "000000";
    // console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [Ds_ACCAA00.getRowCount()]"+ Ds_ACCAA00.getRowCount() );
    
    for (var i = 0; i < Ds_ACCAA00.getRowCount(); i++) {
        if (Ds_ACCAA00.getCellData(i, "ACCAA00") == "1") { 	  //체크박스가 선택되었으면.
            sMaxFundDate = Ds_ACCAA00.getCellData(i, "sInputDate");
            sMaxFundTime = Ds_ACCAA00.getCellData(i, "sInputTime");
      		// console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [i_번째] [sMaxFundDate]"+ sMaxFundDate +"[sMaxFundTime]"+ sMaxFundTime  );
        }
    }
    // console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [sMaxFundDate + sMaxFundTime]"+ sMaxFundDate + sMaxFundTime +"[sMaxFundDate]"+ sMaxFundDate +"[sMaxFundTime]"+ sMaxFundTime  );
    
    return (sMaxFundDate + sMaxFundTime);
};

//최대 입금일자를 구한다.
scwin.getMaxFundDate = function() {
    return wconv.substr(scwin.getMaxFundDateTime(), 0, 8);
    // console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [최대 입금 일자]"+ wconv.substr(scwin.getMaxFundDateTime(), 0, 8) );
};

//최대 입금일자의 시간을 구한다.
scwin.getMaxFundTime = function() {
    return wconv.substr(scwin.getMaxFundDateTime(), 8);
     // console.log("[/CBSC090M.xml] [getMaxFundDateTime()] ==> [최대 입금 시간]"+ conv.substr(scwin.getMaxFundDateTime(), 8) );
};

//**************************************************************************************************
//  최소 보험시작일을 계산한다.
//**************************************************************************************************
scwin.getMinFromDate = function() {
	// console.log("[/CBSC090M.xml] [getMinFromDate()] ==> [최소 보험시작일 계산] [TEST]" );
		
    var sMinFromDate = "29991231";
    for (var i = 0; i < Ds_ACCBA01.getRowCount(); i++) {
        if (Ds_ACCBA01.getCellData(i, "ACCBA01") == "1") {
            //체크박스가 선택되었으면.
            if (Ds_ACCBA01.getCellData(i, "sFromDate") < sMinFromDate) {
                sMinFromDate = Ds_ACCBA01.getCellData(i, "sFromDate");
            }
        }
    }
     // console.log("[/CBSC090M.xml] [getMinFromDate()] ==> [ssMinFromDatee]"+ sMinFromDate  );
   
    return sMinFromDate;
};
 
//**************************************************************************************************
// 취급자 버튼 클릭 이벤트
//**************************************************************************************************
scwin.Btn_Agnt_OnClick = function(_btn) {
	//console.log("[/CBSC090M.xml] [Btn_Agnt_OnClick()] ==> [취급자 버튼 클릭 이벤트] [TEST] [_btn]"+ _btn);
	
   // scwin.uf_AccPayToCodePop("버튼");  
    scwin.uf_sUserIDPop(obj,"tab0"); 
};

//**************************************************************************************************
//  취급자  박스 내용 변경시(onviewchange: 키보드 조작을 통해 input의 값을 변경한 후, 포커스가 빠져나가자마자 발생)
//************************************************************************************************** 
scwin.Edt_sAgnt_OnKillFocus = function(e) { 
	//console.log("[/CBSC092M.xml] [Edt_sAgnt_OnKillFocus()] ==> [onviewchange 이벤트] [Edt_sAgnt.getValue()]"+ Edt_sAgnt.getValue() );
 
	Edt_sAgntName.setValue("");			//  취급자명
 	
	if (wconv.length(Edt_sAgnt.getValue()) == 7) { 	 // 취급자 코드가 7자리 이면
		scwin.uf_AccPayToCodePop(""); 
 	}
};
 
//**************************************************************************************************
//  취급자 팝업
//**************************************************************************************************
scwin.uf_AccPayToCodePop = function(_btn) { 
	 //console.log("[/CBSC090M.xml] [uf_AccPayToCodePop()] ==> [취급자 팝업 이벤트] [TEST_01] [_btn]"+ _btn +"[Edt_sUserID]"+ Edt_sAgnt.getValue() +"[Edt_sUserIDName]"+ Edt_sAgntName.getValue() ); 
	  
	var sPopParm = " psButton="+ _btn;
	var argArry = agf_Pop("사원목록", Edt_sAgnt.getValue(), Edt_sAgntName.getValue(), "", sPopParm); 
	//console.log("[/CBSC090M.xml] [uf_sLastAgntPop()] ==> [TEST_24] [argArry]"+ argArry +"[argArry.length]"+ argArry.length);
		
	if ( argArry == null ) { return; }
	if ( argArry[0] == "noneClose" ) { 
		Edt_sAgnt.setValue("");
        Edt_sAgntName.setValue("");
		return; 
	}
	//console.log("[/CBSC090M.xml] [uf_sLastAgntPop()] ==> [TEST_91] [arrRst[0]]"+ argArry[0] +"[argArry[1]"+ argArry[1] ); 
	       
	if ( wconv.length(argArry[0]) > 0 ) { 
		Edt_sAgntName.setValue(argArry[1]);	//  취급자명 
		util.focus(Edt_sAgnt); 	 // 취급자 포커스 설정 
	} else {
        Edt_sAgnt.setValue("");
        Edt_sAgntName.setValue("");	//  취급자명
		//Edt_sAgnt.SetFocus();
		util.focus(Edt_sAgnt); 	 // 취급자 포커스 설정  
	}
};

//**************************************************************************************************
//  취급자 팝업2
//**************************************************************************************************
scwin.uf_sUserIDPop  = function(obj) {
	 //console.log("[/CBSC090M.xml] [uf_sUserIDPop()] ==> [취급자 팝업] [TEST]");
 	
	var promise = Promise.resolve();   // Promise 설정
	
    promise = promise.then(function(rtnVal) { 
     	var sArg = {"tab":"" 
	               ,"tab_desc":"tab활용"
	               };	 // 팝업 창으로 보낼 자료 
	               
		var popInfo = {
			"width"     : 532,
			"height"    : 513,
			"top"       : 240,
			"left"      : 240,
			"indata"    : sArg,		 //indata
			"callback"  : "",
			"title"     : "사원목록"
		};
		return wprom.popupOpen("/ui/cbso/CBSO033P.xml", popInfo);		// 사원목록 조회  
    });	 // end of promise()
    
    promise = promise.then(function(rst) {
    	 // console.log("[/CBSC092M.xml] [uf_sUserIDPop1()] ==> [promise.then] [TEST] [rst]"+ rst );
    	
        if (wconv.length(rst) != 0) {
            var arrRst = (rst + "").split("^"); 
         	var sTab = arrRst[2]; 
	   		// console.log("[/CBSC092M.xml] [uf_sUserIDPop1()] ==> [promise.then] [TEST] [arrRst[0]]"+ arrRst[0] +"[arrRst[1]"+ arrRst[1] +"[arrRst[2]"+ arrRst[2] ); 
	       
	        Edt_sAgnt.setValue(arrRst[0]); 			// 취급자 사번 
			Edt_sAgntName.setValue(arrRst[1]);	// 취급자 
  			Edt_sAgnt.focus();  
        }
    });	 // end of promise()
};

 ]]></script>
    </head>
    <body>
    	<w2:wframe id="" initScript="scwin.wfTitleFavInit();" src="/cm/common/wf_titleFav.xml" style="" class="common_bu_area"></w2:wframe>   <!-- 메뉴 제목, 공통 버튼 Display 설정 -->
    	<xf:group class="cont_wrap" id="7802" style="position:absolute;  height:612px;left:0px;top:30px; width:100%;" userData1="장기수납확정[7802]" userData2=" OnLoadCompleted:scwin.OnLoadCompleted; ">
    		<DataObjects>
    			<DataObject />
    			<DataObject />
    			<DataObject />
    			<DataObject />
    			<DataObject />
    		</DataObjects>
    		<ServiceObjects>
    			<ServiceObject />
    			<ServiceObject />
    		</ServiceObjects>
    		<xf:group arcsize="8" class="sty_area_form" id="Shape2" style="position:absolute;bottom:337px;height:28px;top:97px;left:0px;" userData3="RoundRect"></xf:group>
    		<xf:group arcsize="6" class="search_area" id="Shape9"
    			style="height:60px;top:0px;left:0px;" userData3="RoundRect">
    			<w2:anchor class="btn_search" disabled=""
    				id="btn_search" outerDiv="false" style="top:28px;" tabIndex="7"
    				ev:onclick="scwin.btn_search_onclick">
    				<xf:label><![CDATA[조회]]></xf:label>
    			</w2:anchor>
    			<xf:group id=""
    				style=" position: relative; width:430px;height:22px;margin-top:32px;margin-left:95px;"
    				class="border_line01">
    			</xf:group>
    			<xf:group class="border_line01" id=""
    				style="position: relative; width:118px;height:22px;margin-top:-24px;margin-left:663px;">
    			</xf:group>
    		</xf:group>
    		<w2:textbox class="sty_lb_Search_ness" id="Static0" label="취급자" style="position:absolute; VAlign:Middle; height:20px;left:29px;top:9px; width:60px;" tagname="" />
    		<xf:input class="sty_ipt_search" ev:onblur="" ev:oneditkeyup="scwin.Edt_sAgnt_OnCharChanged" id="Edt_sAgnt" maxlength="7"
    			style="position:absolute; text-transform:uppercase;  border-style:solid;  height:20px;left:105px;top:8px; width:74px;" tabIndex="3" ev:onviewchange="scwin.Edt_sAgnt_OnKillFocus"/>
    		<xf:trigger class="detail_search" ev:onclick="scwin.Btn_Agnt_OnClick" id="Btn_Agnt"
    			style="position:absolute; Transparent:TRUE;  ImageID:btn_Search_Search;  height:20px;left:180px;top:7px; width:20px;" tabIndex="4" type="anchor" />
    		<xf:input class="sty_ipt_search" disabled="true" id="Edt_sAgntName" style="position:absolute; border-style:solid;  height:20px;left:206px;top:8px; width:71px;" tabIndex="5" />
    		<w2:textbox class="sty_lb_Search" id="Static7" label="입금일자" style="position:absolute; VAlign:Middle;  text-align:right; height:20px;left:276px;top:8px; width:58px;" tagname="" />
    		<w2:inputCalendar class="sty_ipt_search" ev:onchange="" id="Cal_sFromDate1"
    			style="position:absolute; SundayTextColor:red;  SaturdayTextColor:blue;  border-style:solid;  height:20px;left:351px;top:8px; width:105px;" tabIndex="6" validCheck="true" ev:onviewchange="scwin.Cal_sFromDate1_onviewchange"/>
    		<w2:textbox id="Static2" label="~" style="position:absolute; VAlign:Middle;  text-align:center; height:20px;left:454px;top:8px; width:20px;" tagname="" />
    		<w2:inputCalendar class="sty_ipt_search" ev:onchange="" id="Cal_sToDate1"
    			style="position:absolute; SundayTextColor:red;  SaturdayTextColor:blue;  border-style:solid;  height:20px;left:472px;top:8px; width:105px;" tabIndex="7" validCheck="true" ev:onviewchange="scwin.Cal_sToDate1_onviewchange"/>
    		<w2:inputCalendar class="sty_ipt_search" id="Cal_sFromDate2"
    			style="position:absolute; SundayTextColor:red;  SaturdayTextColor:blue;  border-style:solid;  height:20px;left:677px;top:8px; width:105px;" tabIndex="9" validCheck="true" />
    		<w2:textbox id="Static4" label="~" style="position:absolute; VAlign:Middle;  text-align:center; height:20px;left:777px;top:8px; width:20px;" tagname="" />
    		<w2:inputCalendar class="sty_ipt_search" id="Cal_sToDate2"
    			style="position:absolute; SundayTextColor:red;  SaturdayTextColor:blue;  border-style:solid;  height:20px;left:794px;top:8px; width:105px;" tabIndex="10" validCheck="true" />
    		<xf:group arcsize="8" class="" id="Shape5" style="position:absolute;  bottom:584px;height:331px;left:0px;top:135px;width:100.0%;" userData3="RoundRect">
    			<!-- 01. 입금내역 Grid  -->
    			<w2:gridView dataList="Ds_ACCAA00"
    				scrollByColumn="false" summaryAuto="false"
    				scrollByColumnAdaptive="false" id="Grid_List1"
    				style="width:49.5%;  height:424px;  float:left;"
    				ignoreCellClick="false" ignoreToggleOnDisabled="false"
    				fixedColumnWithHidden="true" useShiftKey="true" class="sty_Grid"
    				autoFit="allColumn" autoFitMinWidth="100"
    				ev:oncellclick="scwin.Grid_List1_oncellclick">
    				<w2:header id="header1" style="">
    					<w2:row id="row1" style="">
    						<w2:column blockSelect="false" id="column15"
    							style="height:20px;" inputType="text" width="300"
    							displayMode="label" value="구분" rowSpan="2">
    						</w2:column>
    						<w2:column blockSelect="false" id="column13"
    							style="height:20px;" inputType="text" width="250"
    							displayMode="label" value="입금일자">
    						</w2:column>
    						<w2:column blockSelect="false" id="column14"
    							style="height:20px;" inputType="text" width="450"
    							displayMode="label" value="은행/카드사/통신사">
    						</w2:column>
    						<w2:column blockSelect="false" id="column9"
    							style="height:20px;" inputType="text" width="300"
    							displayMode="label" value="입금액">
    						</w2:column>
    						<w2:column blockSelect="false" id="column7"
    							style="height:5px;" inputType="text" width="20"
    							displayMode="label" value="선택" colSpan="4" rowSpan="2">
    						</w2:column>
    					</w2:row>
    					<w2:row id="row3" style="">
    						<w2:column blockSelect="false" id="column22"
    							style="height:20px;" width="250" inputType="text"
    							displayMode="label" value="입금시간">
    						</w2:column>
    						<w2:column blockSelect="false" id="column21"
    							style="height:20px;" width="450" inputType="text"
    							displayMode="label" value="계좌/카드/휴대폰번호">
    						</w2:column>
    						<w2:column blockSelect="false" id="column20"
    							style="height:20px;" width="300" inputType="text"
    							displayMode="label" value="입금자명">
    						</w2:column>
    					</w2:row>
    				</w2:header>
    				<w2:gBody id="gBody1" style="">
    					<w2:row id="row2" style="">
    						<w2:column blockSelect="false"
    							id="sGubunName" style="height:20px;" inputType="text"
    							width="300" displayMode="label" rowSpan="2">
    						</w2:column><!-- 구분 -->
    						<w2:column blockSelect="false"
    							id="sDisplayDate" style="height:20px" inputType="text"
    							width="250" displayMode="label" displayFormat="####/##/##">
    						</w2:column><!-- 입금일자 -->
    						<w2:column blockSelect="false"
    							id="bankCardComNo" style="height:20px" inputType="text"
    							width="450" displayMode="label"
    							customFormatter="scwin.lfn_getColumnValue">
    						</w2:column><!-- 은행/카드사/통신사 -->
    						<w2:column blockSelect="false"
    							id="nInputAmt" style="height:20px" inputType="text"
    							width="300" displayMode="label" displayFormat="#,###"
    							dataType="number">
    						</w2:column><!-- 입금액 -->
    						<w2:column blockSelect="false" id="ACCAA00"
    							style="height:5px;" inputType="checkbox" width="20"
    							displayMode="label" colSpan="4" rowSpan="2">
    						</w2:column><!-- 선택 -->
    					</w2:row>
    					<w2:row id="row3" style="">
    						<w2:column blockSelect="false"
    							id="sInputTime" style="height:20px;" inputType="text"
    							width="250" displayMode="label" displayFormat="##:##:##">
    						</w2:column><!-- 입금시간 -->
    						<w2:column blockSelect="false"
    							id="temp_id_106" style="height:20px" inputType="text"
    							width="450" displayMode="label"
    							customFormatter="scwin.lfn_getColumnValue">
    						</w2:column><!-- 계좌/카드/휴대폰번호 -->
    						<w2:column blockSelect="false" id="sRemark"
    							style="height:20px" width="300" inputType="text"
    							displayMode="label">
    						</w2:column><!-- 입금자명 -->
    					</w2:row>
    				</w2:gBody>
    			</w2:gridView>
    			<!-- 02. 청약내역 Grid  -->
    			<w2:gridView autoFit="allColumn" autoFitMinWidth="100" class="sty_Grid" dataList="Ds_ACCBA01" fixedColumnWithHidden="true" id="Grid_List2" ignoreCellClick="false"
    				ignoreToggleOnDisabled="false" scrollByColumn="false" scrollByColumnAdaptive="false" style="width:49.5%;  height:424px; float:right;margin-right:-5px;" summaryAuto="false" useShiftKey="true">
    				<w2:header id="header1" style="">
    					<w2:row id="row1" style="">
    						<w2:column blockSelect="false" displayMode="label" id="column17" inputType="text" rowSpan="2" style="height:20px;" value="선택" width="90" ></w2:column>
    						<w2:column blockSelect="false" displayMode="label" id="column15" inputType="text" style="height:20px;" value="청약번호" width="300"></w2:column>
    						<w2:column blockSelect="false" displayMode="label" id="column13" inputType="text" style="height:20px;" value="청약일자" width="200"></w2:column>
    						<w2:column blockSelect="false" displayMode="label" id="column11" inputType="text" style="height:20px;" value="보험종목" width="400"></w2:column>
    						<w2:column blockSelect="false" colSpan="5"  displayMode="label" id="column9" inputType="text" style="height:20px;" value="보험료" width="100"></w2:column>
    					</w2:row>
    					<w2:row id="row3" style="">
    						<w2:column blockSelect="false" displayMode="label" id="column26" inputType="text" style="height:20px;" value="책임개시일" width="200"></w2:column>
    						<w2:column blockSelect="false" displayMode="label" id="column25" inputType="text" style="height:20px;" value="보험종료일" width="200"></w2:column>
    						<w2:column blockSelect="false" displayMode="label" id="column24" inputType="text" style="height:20px;" value="납입회차(전월)" width="400"></w2:column>
    						<w2:column blockSelect="false" colSpan="5"  displayMode="label" id="column23" inputType="text" style="height:20px;" value="계약자명" width="100"></w2:column>
    					</w2:row>
    				</w2:header>
    				<w2:gBody id="gBody1" style="">
    					<w2:row id="row2" style="">
    						<w2:column blockSelect="false" displayMode="label" id="ACCBA01" inputType="checkbox"  rowSpan="2" style="height:20px" width="90"></w2:column> <!-- 선택 -->
    						<w2:column blockSelect="false" displayMode="label" id="sApplyNo" inputType="text" style="height:20px" width="300" customFormatter="scwin.lfn_getColumnValue"></w2:column>	<!-- 청약번호 -->
    						<w2:column blockSelect="false" displayMode="label" id="sInputDate" inputType="text" style="height:20px" width="200" displayFormat="####/##/##"></w2:column>	<!-- 청약일자 -->
    						<w2:column blockSelect="false" displayMode="label" id="sInsTypeName" inputType="text" style="height:20px" width="400"></w2:column>	<!-- 보험종목 -->
    						<w2:column blockSelect="false" colSpan="5" displayMode="label" id="nExptPrem" inputType="text" style="height:20px" width="100" displayFormat="#,###" dataType="number"></w2:column>	<!-- 보험료 -->
    					</w2:row>
    					<w2:row id="row3" style="">
    						<w2:column blockSelect="false" displayMode="label" id="sFromDate" inputType="text" style="height:20px" width="200" displayFormat="####-##-##"></w2:column>	<!-- 책임개시일 -->
    						<w2:column blockSelect="false" displayMode="label" id="sTodt" inputType="text" style="height:20px" width="200" displayFormat="####/##/##"></w2:column>	<!-- 보험종료일 -->
    						<w2:column blockSelect="false" displayMode="label" id="nPayNo" inputType="text" style="height:20px" width="400" customFormatter="scwin.lfn_getColumnValue"></w2:column>	<!-- 납입회차(전월) -->
    						<w2:column blockSelect="false" colSpan="5" displayMode="label" id="sPolHolderName" inputType="text" style="height:20px" width="100"></w2:column>	<!-- 계약자명 -->
    					</w2:row>
    				</w2:gBody>
    			</w2:gridView>
    		</xf:group>
    		<xf:trigger class="detail_bu01" ev:onclick="scwin.checkAgntValue" id="Btn_Settle"
    			style="position:absolute; Transparent:TRUE;  ImageID:btn_Input_04;  height:20px; right:0px;top:70px; width:58px;" tabIndex="18" type="anchor">
    			<xf:label><![CDATA[수납확정]]></xf:label>
    		</xf:trigger>
    	 	<xf:select1 appearance="minimal" class="sty_ipt_form" emptyItem="true" id="cmb_linkMenu" style="position:absolute; border-style:solid;  height:20px;left:12px;top:581px; width:153px;"
    			tabIndex="25">
    			<xf:choices />
    		</xf:select1>
    		<xf:trigger class="detail_link" ev:onclick="scwin.btn_linkMenu_OnClick" id="btn_linkMenu" style="position:absolute; ImageID:btn_Combo02;  height:20px;left:167px;top:581px; width:20px;"
    			tabIndex="26" type="anchor" />
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType1" style="position:absolute; height:20px;left:104px;top:36px; width:47px;" tabIndex="11">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[예금]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value> 
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<w2:textbox class="sty_lb_Search" id="Static14" label="입금형태" style="position:absolute; VAlign:Middle; height:20px;left:27px;top:36px; width:56px;" tagname="" />
    		<xf:select1 appearance="minimal" class="sty_ipt_search" emptyItem="true" id="Cmb_sGubun" style="position:absolute; border-style:solid;  height:20px;left:587px;top:8px; width:84px;"
    			tabIndex="8" renderType="native">
    			<xf:choices>
    				<xf:itemset nodeset="data:Ds_Gubun">
    					<xf:label ref="TEXT" />
    					<xf:value ref="CODE" />
    				</xf:itemset>
    			</xf:choices>
    		</xf:select1>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType2" style="position:absolute;height:20px;width:47px;left:156px;top:36px;" tabIndex="12">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[카드]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value> 
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType5" style="position:absolute;height:20px;width:71px;left:284px;top:36px;" tabIndex="14">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[수납이체]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value>
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType3" style="position:absolute;height:20px;width:71px;left:208px;top:36px;" tabIndex="13">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[가상계좌]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value>
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType4" style="position:absolute;height:20px;width:47px;left:424px;top:36px;" tabIndex="16">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[기타]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value>
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType7" style="position:absolute;height:20px;width:59px;left:360px;top:36px;" tabIndex="15">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[휴대폰]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value>
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:select appearance="full" class="sty_ipt_search" id="Chk_sFundType10" style="position:absolute;height:20px;width:47px;left:476px;top:36px;" tabIndex="17">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[대출]]></xf:label>
    					 <xf:value><![CDATA[1]]></xf:value>
    				</xf:item>
    			</xf:choices>
    		</xf:select>
    		<xf:group arcsize="8" class="" id="Shape1" style="position:absolute;  bottom:142px; height:30px;left:4px;top:92px; width:812px;" userData3="RoundRect" />
    		<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###" id="Mak_nFundCnt" placeholder="MaskEdit0"
    			style="position:absolute; text-align:right;  border-style:solid;  height:20px;left:109px;top:101px; width:70px;" tabIndex="19" />
    		<w2:textbox class="sty_lb_Basic" id="Static3" label="입금합계" style="position:absolute; VAlign:Middle;left:0px;top:97px; width:72px;" tagname="" />
    		<w2:textbox id="Static15" label="건" style="position:absolute;height:20px;text-align:center;width:20px;left:180px;VAlign:Middle;top:99px;" tagname="" />
    		<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###" id="Mak_nFundAmt" placeholder="MaskEdit0"
    			style="position:absolute; text-align:right;  border-style:solid;  height:20px;left:201px;top:101px; width:110px;" tabIndex="19" />
    		<w2:textbox id="Static16" label="원" style="position:absolute;height:20px;text-align:center;width:20px;left:312px;VAlign:Middle;top:99px;" tagname="" />
    		<w2:textbox class="sty_lb_Basic" id="Static18" label="차액" style="position:absolute; VAlign:Middle;left:341px;top:97px; width:48px;" tagname="" />
    		<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###" id="Mak_nDiffAmt" placeholder="MaskEdit0"
    			style="position:absolute; text-align:right;  border-style:solid;  height:20px;left:450px;top:101px; width:110px;" tabIndex="20" />
    		<w2:textbox id="Static19" label="원" style="position:absolute;height:20px;text-align:center;width:20px;left:562px;VAlign:Middle;top:99px;" tagname="" />
    		<w2:textbox class="sty_lb_Basic" id="Static20" label="청약합계" style="position:absolute; VAlign:Middle;left:597px;top:97px; width:72px;" tagname="" />
    		<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###" id="Mak_nApplyCnt" placeholder="MaskEdit0"
    			style="position:absolute; text-align:right;  border-style:solid;  height:20px;left:707px;top:101px; width:70px;" tabIndex="21" />
    		<w2:textbox id="Static21" label="건" style="position:absolute;height:20px;text-align:center;width:20px;left:778px;VAlign:Middle;top:99px;" tagname="" />
    		<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###" id="Mak_nApplyAmt" placeholder="MaskEdit0"
    			style="position:absolute; text-align:right;  border-style:solid;  height:20px;left:802px;top:101px; width:110px;" tabIndex="22" />
    		<w2:textbox id="Static22" label="원" style="position:absolute;height:20px;text-align:center;width:20px;left:913px;VAlign:Middle;top:99px;" tagname="" />
    		<xf:switch id="switch_15" style=" ">
    			<xf:case id="Default_16" style=" "></xf:case>
    		</xf:switch>
    		<xf:switch id="switch_16" style=" ">
    			<xf:case id="Default_17" style=" "></xf:case>
    		</xf:switch>
    		<w2:textbox class="sty_lb_Search" id="Static1" label="전월회계여부" style="position:absolute; VAlign:Middle;  text-align:right; height:20px;left:574px;top:36px; width:76px;" tagname="" />
     	 <xf:select1 appearance="full" class="sty_ipt_search"  id="Rdo_sPrevAcctYN" rows="1" selectedIndex="0"
    			style="position:absolute;  height:20px;left:671px;top:35px; width:108px;" tabIndex="46">
    			<xf:choices>
    				<xf:item>
    					<xf:label><![CDATA[전체]]></xf:label>
    					<xf:value><![CDATA[ ]]></xf:value>
    				</xf:item>
    				<xf:item>
    					<xf:label><![CDATA[전월]]></xf:label>
    					<xf:value><![CDATA[Y]]></xf:value>
    				</xf:item>
    			</xf:choices>
    			<Layout />
    			<Layout />
    		</xf:select1>
    		<w2:wframe id="" style="width: 100%;height: 200px;"></w2:wframe>
    	</xf:group>
    	<xf:group class="footer_area_form" id="" style="top:604px;"></xf:group>
    	
    </body>
</html>
