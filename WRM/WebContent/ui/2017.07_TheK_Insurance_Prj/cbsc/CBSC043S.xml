<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataList baseNode="list" id="Ds_LTIEA10"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sGroupCrAdmNo"
							name="sGroupCrAdmNo">
						</w2:column>
						<w2:column dataType="text" id="sGroupCd"
							name="sGroupCd">
						</w2:column>
						<w2:column dataType="text" id="sGroupName"
							name="sGroupName">
						</w2:column>
						<w2:column dataType="text" id="sRpstCd"
							name="sRpstCd">
						</w2:column>
						<w2:column dataType="text" id="sRpstName"
							name="sRpstName">
						</w2:column>
						<w2:column dataType="text" id="nFrstPsct"
							name="nFrstPsct">
						</w2:column>
						<w2:column dataType="text" id="nCrntPsct"
							name="nCrntPsct">
						</w2:column>
						<w2:column dataType="text" id="nGroupDcrt"
							name="nGroupDcrt">
						</w2:column>
						<w2:column dataType="text" id="sAgreDocuRecpYn"
							name="sAgreDocuRecpYn">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<nCrntPsct></nCrntPsct>
							<nFrstPsct></nFrstPsct>
							<nGroupDcrt></nGroupDcrt>
							<sAgreDocuRecpYn></sAgreDocuRecpYn>
							<sGroupCd></sGroupCd>
							<sGroupCrAdmNo></sGroupCrAdmNo>
							<sGroupName></sGroupName>
							<sRpstCd></sRpstCd>
							<sRpstName></sRpstName>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA00"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="sCrNoType"
							name="sCrNoType">
						</w2:column>
						<w2:column dataType="text" id="sItemCd"
							name="sItemCd">
						</w2:column>
						<w2:column dataType="text" id="sCrNoSeq"
							name="sCrNoSeq">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sHsecFlagCd"
							name="sHsecFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sSaleChnl"
							name="sSaleChnl">
						</w2:column>
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd">
						</w2:column>
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd">
						</w2:column>
						<w2:column dataType="text"
							id="sBunsMetdDocuClsfCd" name="sBunsMetdDocuClsfCd">
						</w2:column>
						<w2:column dataType="text" id="sApplDclrRato"
							name="sApplDclrRato">
						</w2:column>
						<w2:column dataType="text" id="sDvdnFlagCd"
							name="sDvdnFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sPpayAvaYn"
							name="sPpayAvaYn">
						</w2:column>
						<w2:column dataType="text" id="sTaxPrfrYn"
							name="sTaxPrfrYn">
						</w2:column>
						<w2:column dataType="text" id="sCrStatCd"
							name="sCrStatCd">
						</w2:column>
						<w2:column dataType="text" id="sCrStatFlgcd"
							name="sCrStatFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nCrStatCarrSeqno"
							name="nCrStatCarrSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sSsrtDate"
							name="sSsrtDate">
						</w2:column>
						<w2:column dataType="text" id="sCpayDate"
							name="sCpayDate">
						</w2:column>
						<w2:column dataType="text" id="sPaymExptDate"
							name="sPaymExptDate">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nDefrYct"
							name="nDefrYct">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sPaymCyclCd"
							name="sPaymCyclCd">
						</w2:column>
						<w2:column dataType="text" id="sCmMetd"
							name="sCmMetd">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem">
						</w2:column>
						<w2:column dataType="text" id="nBussPrem"
							name="nBussPrem">
						</w2:column>
						<w2:column dataType="text" id="nDcPrem"
							name="nDcPrem">
						</w2:column>
						<w2:column dataType="text" id="nApplPrem"
							name="nApplPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="sPsnGroupFlgcd"
							name="sPsnGroupFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sGroupCrAdmNo"
							name="sGroupCrAdmNo">
						</w2:column>
						<w2:column dataType="text" id="sBsmnRgstNo"
							name="sBsmnRgstNo">
						</w2:column>
						<w2:column dataType="text" id="sAnntOpnAgeCd"
							name="sAnntOpnAgeCd">
						</w2:column>
						<w2:column dataType="text" id="sAnntPymTermCd"
							name="sAnntPymTermCd">
						</w2:column>
						<w2:column dataType="text" id="sAnntPymCyclCd"
							name="sAnntPymCyclCd">
						</w2:column>
						<w2:column dataType="text" id="sAnntPymTypeCd"
							name="sAnntPymTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sAnntPymStrtDate"
							name="sAnntPymStrtDate">
						</w2:column>
						<w2:column dataType="text" id="nAnntPymCt"
							name="nAnntPymCt">
						</w2:column>
						<w2:column dataType="text" id="nFinalPaymSeq"
							name="nFinalPaymSeq">
						</w2:column>
						<w2:column dataType="text" id="sFinalPaymMthy"
							name="sFinalPaymMthy">
						</w2:column>
						<w2:column dataType="text" id="sFinalRecpDate"
							name="sFinalRecpDate">
						</w2:column>
						<w2:column dataType="text" id="nTotPaymPrem"
							name="nTotPaymPrem">
						</w2:column>
						<w2:column dataType="text" id="sInsurCrLoanYn"
							name="sInsurCrLoanYn">
						</w2:column>
						<w2:column dataType="text" id="sFinalReviDate"
							name="sFinalReviDate">
						</w2:column>
						<w2:column dataType="text" id="sLapsDate"
							name="sLapsDate">
						</w2:column>
						<w2:column dataType="text" id="sFrstSaleChnlCd"
							name="sFrstSaleChnlCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerHdqtCd"
							name="sFrstDoerHdqtCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerCentrCd"
							name="sFrstDoerCentrCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerTeamCd"
							name="sFrstDoerTeamCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerGroupCd"
							name="sFrstDoerGroupCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerPartCd"
							name="sFrstDoerPartCd">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoer"
							name="sFrstDoer">
						</w2:column>
						<w2:column dataType="text" id="sFrstDoerUser"
							name="sFrstDoerUser">
						</w2:column>
						<w2:column dataType="text" id="sDoer"
							name="sDoer">
						</w2:column>
						<w2:column dataType="text" id="sDoerUser"
							name="sDoerUser">
						</w2:column>
						<w2:column dataType="text" id="sCrNo"
							name="sCrNo">
						</w2:column>
						<w2:column dataType="text" id="sPlanProgRankCd"
							name="sPlanProgRankCd">
						</w2:column>
						<w2:column dataType="text" id="sPlanProgTbNo"
							name="sPlanProgTbNo">
						</w2:column>
						<w2:column dataType="text" id="sJugmAuthCd"
							name="sJugmAuthCd">
						</w2:column>
						<w2:column dataType="text" id="sJugmGradCd"
							name="sJugmGradCd">
						</w2:column>
						<w2:column dataType="text" id="sConuResltCd"
							name="sConuResltCd">
						</w2:column>
						<w2:column dataType="text" id="sHndwritJugmYn"
							name="sHndwritJugmYn">
						</w2:column>
						<w2:column dataType="text" id="nInrpsPsct"
							name="nInrpsPsct">
						</w2:column>
						<w2:column dataType="text" id="nObjtNum"
							name="nObjtNum">
						</w2:column>
						<w2:column dataType="text" id="nGroupInsPsct"
							name="nGroupInsPsct">
						</w2:column>
						<w2:column dataType="text" id="sCedeStndYm"
							name="sCedeStndYm">
						</w2:column>
						<w2:column dataType="text" id="nEndRtnrt"
							name="nEndRtnrt">
						</w2:column>
						<w2:column dataType="text" id="nExptEndRetrnAmt"
							name="nExptEndRetrnAmt">
						</w2:column>
						<w2:column dataType="text" id="nExptEndRtnrt"
							name="nExptEndRtnrt">
						</w2:column>
						<w2:column dataType="text" id="sPectSaleYn"
							name="sPectSaleYn">
						</w2:column>
						<w2:column dataType="text" id="sScanObjtYn"
							name="sScanObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sSaleChnlDtal"
							name="sSaleChnlDtal">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurTermPaymTermName" name="sInsurTermPaymTermName">
						</w2:column>
						<w2:column dataType="text" id="gUserID"
							name="gUserID">
						</w2:column>
						<w2:column dataType="text" id="gUserIP"
							name="gUserIP">
						</w2:column>
						<w2:column dataType="text"
							id="sPlanProgRankName" name="sPlanProgRankName">
						</w2:column>
						<w2:column dataType="text" id="sConuResltName"
							name="sConuResltName">
						</w2:column>
						<w2:column dataType="text" id="sGdTypeFlgCd"
							name="sGdTypeFlgCd">
						</w2:column>
						<w2:column dataType="text" id="sTaxPrfrGdYn"
							name="sTaxPrfrGdYn">
						</w2:column>
						<w2:column dataType="text" id="nMinPremRate"
							name="nMinPremRate">
						</w2:column>
						<w2:column dataType="text"
							id="nExptEndRtnStndAmtSum" name="nExptEndRtnStndAmtSum">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt1" name="nEndRtnAmtCalElmnt1">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt2" name="nEndRtnAmtCalElmnt2">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt3" name="nEndRtnAmtCalElmnt3">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt4" name="nEndRtnAmtCalElmnt4">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt5" name="nEndRtnAmtCalElmnt5">
						</w2:column>
						<w2:column dataType="text" id="sSrdoIssuDate"
							name="sSrdoIssuDate">
						</w2:column>
						<w2:column dataType="text" id="sGdName"
							name="sGdName">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt10" name="nEndRtnAmtCalElmnt10">
						</w2:column>
						<w2:column dataType="text" id="sPeriMwayWdraYn"
							name="sPeriMwayWdraYn">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt21" name="nEndRtnAmtCalElmnt21">
						</w2:column>
						<w2:column dataType="text"
							id="nEndRtnAmtCalElmnt22" name="nEndRtnAmtCalElmnt22">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<sSrdoIssuDate></sSrdoIssuDate>
							<gUserID></gUserID>
							<gUserIP></gUserIP>
							<nAccuPrem></nAccuPrem>
							<nAnntPymCt></nAnntPymCt>
							<nApplPrem></nApplPrem>
							<nBussPrem></nBussPrem>
							<nCrChngNo></nCrChngNo>
							<nCrStatCarrSeqno></nCrStatCarrSeqno>
							<nDcPrem></nDcPrem>
							<nDefrYct></nDefrYct>
							<nEndAge></nEndAge>
							<nEndRtnAmtCalElmnt1></nEndRtnAmtCalElmnt1>
							<nEndRtnAmtCalElmnt10></nEndRtnAmtCalElmnt10>
							<nEndRtnAmtCalElmnt2></nEndRtnAmtCalElmnt2>
							<nEndRtnAmtCalElmnt21></nEndRtnAmtCalElmnt21>
							<nEndRtnAmtCalElmnt22></nEndRtnAmtCalElmnt22>
							<nEndRtnAmtCalElmnt3></nEndRtnAmtCalElmnt3>
							<nEndRtnAmtCalElmnt4></nEndRtnAmtCalElmnt4>
							<nEndRtnAmtCalElmnt5></nEndRtnAmtCalElmnt5>
							<nEndRtnrt></nEndRtnrt>
							<nExptEndRetrnAmt></nExptEndRetrnAmt>
							<nExptEndRtnrt></nExptEndRtnrt>
							<nExptEndRtnStndAmtSum></nExptEndRtnStndAmtSum>
							<nFinalPaymSeq></nFinalPaymSeq>
							<nGrntPrem></nGrntPrem>
							<nGroupInsPsct></nGroupInsPsct>
							<nInrpsPsct></nInrpsPsct>
							<nMaxPrem></nMaxPrem>
							<nMinPrem></nMinPrem>
							<nMinPremRate></nMinPremRate>
							<nObjtNum></nObjtNum>
							<nPaymAge></nPaymAge>
							<nRealInsurTerm></nRealInsurTerm>
							<nRealPaymTerm></nRealPaymTerm>
							<nTotPaymPrem></nTotPaymPrem>
							<sAnntOpnAgeCd></sAnntOpnAgeCd>
							<sAnntPymCyclCd></sAnntPymCyclCd>
							<sAnntPymStrtDate></sAnntPymStrtDate>
							<sAnntPymTermCd></sAnntPymTermCd>
							<sAnntPymTypeCd></sAnntPymTypeCd>
							<sApplDclrRato></sApplDclrRato>
							<sApplPlanCd></sApplPlanCd>
							<sApplPlanName></sApplPlanName>
							<sBsmnRgstNo></sBsmnRgstNo>
							<sBunsMetdDocuClsfCd></sBunsMetdDocuClsfCd>
							<sCedeStndYm></sCedeStndYm>
							<sCmMetd></sCmMetd>
							<sConuResltCd></sConuResltCd>
							<sConuResltName></sConuResltName>
							<sCpayDate></sCpayDate>
							<sCrNo></sCrNo>
							<sCrNoSeq></sCrNoSeq>
							<sCrNoType></sCrNoType>
							<sCrStatCd></sCrStatCd>
							<sCrStatFlgcd></sCrStatFlgcd>
							<sDoer></sDoer>
							<sDoerUser></sDoerUser>
							<sDvdnFlagCd></sDvdnFlagCd>
							<sFinalPaymMthy></sFinalPaymMthy>
							<sFinalRecpDate></sFinalRecpDate>
							<sFinalReviDate></sFinalReviDate>
							<sFrstDoer></sFrstDoer>
							<sFrstDoerCentrCd></sFrstDoerCentrCd>
							<sFrstDoerGroupCd></sFrstDoerGroupCd>
							<sFrstDoerHdqtCd></sFrstDoerHdqtCd>
							<sFrstDoerPartCd></sFrstDoerPartCd>
							<sFrstDoerTeamCd></sFrstDoerTeamCd>
							<sFrstDoerUser></sFrstDoerUser>
							<sFrstSaleChnlCd></sFrstSaleChnlCd>
							<sGdCd></sGdCd>
							<sGdName></sGdName>
							<sGdTypeFlgCd></sGdTypeFlgCd>
							<sGnrzCd></sGnrzCd>
							<sGroupCrAdmNo></sGroupCrAdmNo>
							<sHndwritJugmYn></sHndwritJugmYn>
							<sHsecFlagCd></sHsecFlagCd>
							<sInsurCrLoanYn></sInsurCrLoanYn>
							<sInsurEndDate></sInsurEndDate>
							<sInsurStrtdate></sInsurStrtdate>
							<sInsurTermCd></sInsurTermCd>
							<sInsurTermPaymTermName></sInsurTermPaymTermName>
							<sItemCd></sItemCd>
							<sJugmAuthCd></sJugmAuthCd>
							<sJugmGradCd></sJugmGradCd>
							<sLapsDate></sLapsDate>
							<sPaymCyclCd></sPaymCyclCd>
							<sPaymExptDate></sPaymExptDate>
							<sPaymTermCd></sPaymTermCd>
							<sPectSaleYn></sPectSaleYn>
							<sPeriMwayWdraYn></sPeriMwayWdraYn>
							<sPlanNo></sPlanNo>
							<sPlanProgRankCd></sPlanProgRankCd>
							<sPlanProgRankName></sPlanProgRankName>
							<sPlanProgTbNo></sPlanProgTbNo>
							<sPpayAvaYn></sPpayAvaYn>
							<sPsnGroupFlgcd></sPsnGroupFlgcd>
							<sSaleChnl></sSaleChnl>
							<sSaleChnlDtal></sSaleChnlDtal>
							<sScanObjtYn></sScanObjtYn>
							<sSsrtDate></sSsrtDate>
							<sTaxPrfrGdYn></sTaxPrfrGdYn>
							<sTaxPrfrYn></sTaxPrfrYn>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_PiboExcel"
					repeatNode="map" ev:ondataload="">
					<w2:columnInfo>
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="false">
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_PiboExcel_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="false">
						<w2:row></w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_PaymCycl"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sGdCd" name="" dataType="text"></w2:column>
						<w2:column id="sPaymCyclName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymCyclCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_InsurTermPaymTerm"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sPlanCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGdCd" name="" dataType="text"></w2:column>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurPaymCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurPaymName" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_InsurTerm"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='InsurTerm']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="lds_Dsws_InsAmt"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sCdAttrValue" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sHnglCdName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="" dataType="text"></w2:column>
						<w2:column id="sEngCdName" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_PaymTerm"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='PaymTerm']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Dsws_InsAmt"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='InsAmt']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sCdAttrValue" name="" dataType="text"></w2:column>
						<w2:column id="sHnglCdName" name="" dataType="text"></w2:column>
						<w2:column id="sTrtyCd" name="" dataType="text"></w2:column>
						<w2:column id="sCd" name="" dataType="text"></w2:column>
						<w2:column id="sEngCdName" name="" dataType="text"></w2:column>
					</w2:columnInfo>
				</w2:dataList>

				<w2:dataList baseNode="list" id="DsWs_Plan"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='applPlanList']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="sPlanCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPremAmtChgYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPlanSeq" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremRate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nBussPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPlanName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt6" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt5" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt4" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt3" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt2" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nMinPremAmt1" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sDisDrvrPlanYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlAvaYn" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_FlagCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType" name="sCdType"/>
						<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"/>
						<w2:column dataType="text" id="sCd" name="sCd"/>
						<w2:column dataType="text" id="sCdTypeName" name="sCdTypeName"/>
						<w2:column dataType="text" id="sEngCdName" name="sEngCdName"/>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Drive"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType" name="sCdType"/>
						<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"/>
						<w2:column dataType="text" id="sCd" name="sCd"/>
						<w2:column dataType="text" id="sCdTypeName" name="sCdTypeName"/>
						<w2:column dataType="text" id="sEngCdName" name="sEngCdName"/>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Grade"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType" name="sCdType"/>
						<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"/>
						<w2:column dataType="text" id="sCd" name="sCd"/>
						<w2:column dataType="text" id="sCdTypeName" name="sCdTypeName"/>
						<w2:column dataType="text" id="sEngCdName" name="sEngCdName"/>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CrtorRelnCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCdType" name="sCdType"/>
						<w2:column dataType="text" id="sHnglCdName" name="sHnglCdName"/>
						<w2:column dataType="text" id="sCd" name="sCd"/>
						<w2:column dataType="text" id="sCdTypeName" name="sCdTypeName"/>
						<w2:column dataType="text" id="sEngCdName" name="sEngCdName"/>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Trty"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='multi']/vector/data/multi">
					<w2:columnInfo>
						<w2:column id="RenwlUseCrFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyObjtFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PytrMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag4" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag5" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sResvAmtKey" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurStrtdate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGnrzCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BascSlctFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag3" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag2" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag1" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FirstInsurTermApplYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlCyclCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sScrnIndcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrpsDoubInsImprYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyObjtFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nGrntPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyInsAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPaymAge" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMainTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd11" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd10" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag3_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyHnglAbbName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcHms" name=""
							dataType="text">
						</w2:column>
						<w2:column id="Trtygp_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPs1CmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag4_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyTypeCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InsAvaDrveCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRealInsurTerm" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag1_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag2_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PronCmpsTrtyYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTrtyOrdr" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sCnclExtnEndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyStatCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PmmiInsurFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlUseCrFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sAutoRenwlAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRealPaymTerm" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGdCd" name="" dataType="text"></w2:column>
						<w2:column id="TrtyTypeCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="DrveFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FirstInsurTermApplYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="SwHsHldGdsTrtyYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyUserDefnName_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sStndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptHms" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPronCmpsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PmmiInsurFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PremCalcFomlFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrpsDoubInsImprYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="GrntAccuFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PremCalcFomlFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nEndAge" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlAvaYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BussInsAvaYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDler" name=""
							dataType="text">
						</w2:column>
						<w2:column id="Trtygp" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nCrChngNo" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nCnclRtnrt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PronCmpsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPkgCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="PytrMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FxamtCmpsFlag" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nRenwlSeq" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurEndDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPsnPrprtGroupFlgcd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="StndPremTablFlag5_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="GrntAccuFlagCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDlerIP" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sBascSlctFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="chk" name="" dataType="text"></w2:column>
						<w2:column id="nAccuPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPlanNo" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nTotCmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="n1AccdCmpsLmitAmt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGrntAccuFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtmPytrMdfcYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InrtmPytrMdfcYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="RenwlTrtyCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nSelfChamt" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDlerIP" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BascSlctFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyUserDefnName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="DrveFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="AutoRenwlCyclCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nSeqno" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPsnPrprtGroupSeqno" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sMdfcDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd1" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nExptGrntBussPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPmmiInsurFlagCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="BussInsAvaYn_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="FxamtCmpsFlag_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sGroupCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd6" name=""
							dataType="text">
						</w2:column>
						<w2:column id="SwHsHldGdsTrtyYn" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd7" name=""
							dataType="text">
						</w2:column>
						<w2:column id="InsAvaDrveCd_H" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd8" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd9" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd2" name=""
							dataType="text">
						</w2:column>
						<w2:column id="TrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd3" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd4" name=""
							dataType="text">
						</w2:column>
						<w2:column id="nPreGrntPrem" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sRenwlUseCrFlgcd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sExcluGroupCd5" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sFinalRenwlDate" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sAutoRenwlCyclCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sSubTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyTypeCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInptDler" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo"
					repeatNode="map" saveRemovedData="true" ev:oncelldatachange="">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsSexFlag" name="sGroupInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobName" name="sGroupInrpsJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text"
							id="nExptEndRtnStndAmt" name="nExptEndRtnStndAmt">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem">
						</w2:column>
						<w2:column dataType="text" id="sPmmiBefoInqrYn"
							name="sPmmiBefoInqrYn">
						</w2:column>
						<w2:column dataType="text" id="sFxBefoInqrYn"
							name="sFxBefoInqrYn">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpMailAddFlag" name="sPftbpMailAddFlag">
						</w2:column>
						<w2:column dataType="text"
							id="nPftbpMailChngSeq" name="nPftbpMailChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpMailAddFlag" name="sXcptPftbpMailAddFlag">
						</w2:column>
						<w2:column dataType="text"
							id="nXcptPftbpMailChngSeq" name="nXcptPftbpMailChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sRpstInrpsFlag"
							name="sRpstInrpsFlag">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsSexFlag" name="sGroupInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text"
							id="sGroupInrpsJobName" name="sGroupInrpsJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text"
							id="nExptEndRtnStndAmt" name="nExptEndRtnStndAmt">
						</w2:column>
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem">
						</w2:column>
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem">
						</w2:column>
						<w2:column dataType="text" id="sPmmiBefoInqrYn"
							name="sPmmiBefoInqrYn">
						</w2:column>
						<w2:column dataType="text" id="sFxBefoInqrYn"
							name="sFxBefoInqrYn">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpMailAddFlag" name="sPftbpMailAddFlag">
						</w2:column>
						<w2:column dataType="text"
							id="nPftbpMailChngSeq" name="nPftbpMailChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpMailAddFlag" name="sXcptPftbpMailAddFlag">
						</w2:column>
						<w2:column dataType="text"
							id="nXcptPftbpMailChngSeq" name="nXcptPftbpMailChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sRpstInrpsFlag"
							name="sRpstInrpsFlag">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Trty"
					repeatNode="map" ev:oncelldatachange="">
					<w2:columnInfo>
						<w2:column dataType="text"
							id="RenwlUseCrFlagCd_H" name="RenwlUseCrFlagCd_H" />
						<w2:column dataType="text" id="TrtyObjtFlag"
							name="TrtyObjtFlag" />
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate" />
						<w2:column dataType="text" id="PytrMdfcYn"
							name="PytrMdfcYn" />
						<w2:column dataType="text"
							id="StndPremTablFlag4" name="StndPremTablFlag4" />
						<w2:column dataType="text"
							id="StndPremTablFlag5" name="StndPremTablFlag5" />
						<w2:column dataType="text" id="sResvAmtKey"
							name="sResvAmtKey" />
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate" />
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd" />
						<w2:column dataType="text" id="BascSlctFlagCd_H"
							name="BascSlctFlagCd_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag3" name="StndPremTablFlag3" />
						<w2:column dataType="text"
							id="StndPremTablFlag2" name="StndPremTablFlag2" />
						<w2:column dataType="text"
							id="StndPremTablFlag1" name="StndPremTablFlag1" />
						<w2:column dataType="text" id="sPaymTermName"
							name="sPaymTermName" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn" name="FirstInsurTermApplYn" />
						<w2:column dataType="text"
							id="AutoRenwlCyclCd_H" name="AutoRenwlCyclCd_H" />
						<w2:column dataType="text" id="sScrnIndcYn"
							name="sScrnIndcYn" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn" name="InrpsDoubInsImprYn" />
						<w2:column dataType="text" id="nTrtyPrem"
							name="nTrtyPrem" />
						<w2:column dataType="text" id="AutoRenwlAvaYn"
							name="AutoRenwlAvaYn" />
						<w2:column dataType="text" id="TrtyObjtFlag_H"
							name="TrtyObjtFlag_H" />
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem" />
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="nTrtyInsAmt"
							name="nTrtyInsAmt" />
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge" />
						<w2:column dataType="text" id="sRenwlYn"
							name="sRenwlYn" />
						<w2:column dataType="text" id="TrtyCd_H"
							name="TrtyCd_H" />
						<w2:column dataType="text" id="sMainTrtyCd"
							name="sMainTrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd11"
							name="sExcluGroupCd11" />
						<w2:column dataType="text" id="sExcluGroupCd10"
							name="sExcluGroupCd10" />
						<w2:column dataType="text"
							id="StndPremTablFlag3_H" name="StndPremTablFlag3_H" />
						<w2:column dataType="text" id="nInsurTermCd"
							name="nInsurTermCd" />
						<w2:column dataType="text" id="TrtyHnglAbbName"
							name="TrtyHnglAbbName" />
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms" />
						<w2:column dataType="text" id="Trtygp_H"
							name="Trtygp_H" />
						<w2:column dataType="text" id="InrtMdfcYn_H"
							name="InrtMdfcYn_H" />
						<w2:column dataType="text" id="nPs1CmpsLmitAmt"
							name="nPs1CmpsLmitAmt" />
						<w2:column dataType="text"
							id="StndPremTablFlag4_H" name="StndPremTablFlag4_H" />
						<w2:column dataType="text" id="TrtyTypeCd"
							name="TrtyTypeCd" />
						<w2:column dataType="text" id="InsAvaDrveCd"
							name="InsAvaDrveCd" />
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm" />
						<w2:column dataType="text"
							id="StndPremTablFlag1_H" name="StndPremTablFlag1_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag2_H" name="StndPremTablFlag2_H" />
						<w2:column dataType="text" id="PronCmpsTrtyYn_H"
							name="PronCmpsTrtyYn_H" />
						<w2:column dataType="text" id="nTrtyOrdr"
							name="nTrtyOrdr" />
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate" />
						<w2:column dataType="text" id="sTrtyStatCd"
							name="sTrtyStatCd" />
						<w2:column dataType="text" id="TrtyFlagCd_H"
							name="TrtyFlagCd_H" />
						<w2:column dataType="text" id="PmmiInsurFlagCd"
							name="PmmiInsurFlagCd" />
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd" />
						<w2:column dataType="text" id="RenwlUseCrFlagCd"
							name="RenwlUseCrFlagCd" />
						<w2:column dataType="text" id="sAutoRenwlAvaYn"
							name="sAutoRenwlAvaYn" />
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm" />
						<w2:column dataType="text" id="TrtyFlagCd"
							name="TrtyFlagCd" />
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd" />
						<w2:column dataType="text" id="TrtyTypeCd_H"
							name="TrtyTypeCd_H" />
						<w2:column dataType="text" id="DrveFlag"
							name="DrveFlag" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn_H" name="FirstInsurTermApplYn_H" />
						<w2:column dataType="text"
							id="SwHsHldGdsTrtyYn_H" name="SwHsHldGdsTrtyYn_H" />
						<w2:column dataType="text"
							id="TrtyUserDefnName_H" name="TrtyUserDefnName_H" />
						<w2:column dataType="text" id="sStndDate"
							name="sStndDate" />
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms" />
						<w2:column dataType="text" id="sPronCmpsTrtyYn"
							name="sPronCmpsTrtyYn" />
						<w2:column dataType="text"
							id="PmmiInsurFlagCd_H" name="PmmiInsurFlagCd_H" />
						<w2:column dataType="text" id="PremCalcFomlFlag"
							name="PremCalcFomlFlag" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn_H" name="InrpsDoubInsImprYn_H" />
						<w2:column dataType="text" id="InrtMdfcYn"
							name="InrtMdfcYn" />
						<w2:column dataType="text" id="nPaymTermCd"
							name="nPaymTermCd" />
						<w2:column dataType="text" id="GrntAccuFlagCd"
							name="GrntAccuFlagCd" />
						<w2:column dataType="text"
							id="PremCalcFomlFlag_H" name="PremCalcFomlFlag_H" />
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge" />
						<w2:column dataType="text" id="AutoRenwlAvaYn_H"
							name="AutoRenwlAvaYn_H" />
						<w2:column dataType="text" id="BussInsAvaYn"
							name="BussInsAvaYn" />
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler" />
						<w2:column dataType="text" id="Trtygp"
							name="Trtygp" />
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo" />
						<w2:column dataType="text" id="nCnclRtnrt"
							name="nCnclRtnrt" />
						<w2:column dataType="text" id="PronCmpsTrtyYn"
							name="PronCmpsTrtyYn" />
						<w2:column dataType="text" id="sPkgCd"
							name="sPkgCd" />
						<w2:column dataType="text" id="PytrMdfcYn_H"
							name="PytrMdfcYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag"
							name="FxamtCmpsFlag" />
						<w2:column dataType="text" id="nRenwlSeq"
							name="nRenwlSeq" />
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate" />
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd" />
						<w2:column dataType="text"
							id="StndPremTablFlag5_H" name="StndPremTablFlag5_H" />
						<w2:column dataType="text" id="GrntAccuFlagCd_H"
							name="GrntAccuFlagCd_H" />
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP" />
						<w2:column dataType="text" id="RenwlTrtyCd"
							name="RenwlTrtyCd" />
						<w2:column dataType="text" id="sBascSlctFlagCd"
							name="sBascSlctFlagCd" />
						<w2:column dataType="text" id="chk" name="chk" />
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem" />
						<w2:column dataType="text" id="sInsurTermName"
							name="sInsurTermName" />
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo" />
						<w2:column dataType="text" id="nTotCmpsLmitAmt"
							name="nTotCmpsLmitAmt" />
						<w2:column dataType="text"
							id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt" />
						<w2:column dataType="text" id="sGrntAccuFlagCd"
							name="sGrntAccuFlagCd" />
						<w2:column dataType="text" id="InrtmPytrMdfcYn"
							name="InrtmPytrMdfcYn" />
						<w2:column dataType="text"
							id="InrtmPytrMdfcYn_H" name="InrtmPytrMdfcYn_H" />
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd" />
						<w2:column dataType="text" id="RenwlTrtyCd_H"
							name="RenwlTrtyCd_H" />
						<w2:column dataType="text" id="nSelfChamt"
							name="nSelfChamt" />
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP" />
						<w2:column dataType="text" id="BascSlctFlagCd"
							name="BascSlctFlagCd" />
						<w2:column dataType="text" id="TrtyUserDefnName"
							name="TrtyUserDefnName" />
						<w2:column dataType="text" id="DrveFlag_H"
							name="DrveFlag_H" />
						<w2:column dataType="text" id="AutoRenwlCyclCd"
							name="AutoRenwlCyclCd" />
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno" />
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno" />
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate" />
						<w2:column dataType="text" id="sExcluGroupCd1"
							name="sExcluGroupCd1" />
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem" />
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd" />
						<w2:column dataType="text" id="BussInsAvaYn_H"
							name="BussInsAvaYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag_H"
							name="FxamtCmpsFlag_H" />
						<w2:column dataType="text" id="sGroupCd"
							name="sGroupCd" />
						<w2:column dataType="text" id="sExcluGroupCd6"
							name="sExcluGroupCd6" />
						<w2:column dataType="text" id="SwHsHldGdsTrtyYn"
							name="SwHsHldGdsTrtyYn" />
						<w2:column dataType="text" id="sExcluGroupCd7"
							name="sExcluGroupCd7" />
						<w2:column dataType="text" id="InsAvaDrveCd_H"
							name="InsAvaDrveCd_H" />
						<w2:column dataType="text" id="sExcluGroupCd8"
							name="sExcluGroupCd8" />
						<w2:column dataType="text" id="sExcluGroupCd9"
							name="sExcluGroupCd9" />
						<w2:column dataType="text" id="sExcluGroupCd2"
							name="sExcluGroupCd2" />
						<w2:column dataType="text" id="TrtyCd"
							name="TrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd3"
							name="sExcluGroupCd3" />
						<w2:column dataType="text" id="sExcluGroupCd4"
							name="sExcluGroupCd4" />
						<w2:column dataType="text" id="nPreGrntPrem"
							name="nPreGrntPrem" />
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd" />
						<w2:column dataType="text" id="sExcluGroupCd5"
							name="sExcluGroupCd5" />
						<w2:column dataType="text" id="sFinalRenwlDate"
							name="sFinalRenwlDate" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sAutoRenwlCyclCd"
							name="sAutoRenwlCyclCd" />
						<w2:column dataType="text" id="sSubTrtyCd"
							name="sSubTrtyCd" />
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd" />
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Trty_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text"
							id="RenwlUseCrFlagCd_H" name="RenwlUseCrFlagCd_H" />
						<w2:column dataType="text" id="TrtyObjtFlag"
							name="TrtyObjtFlag" />
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate" />
						<w2:column dataType="text" id="PytrMdfcYn"
							name="PytrMdfcYn" />
						<w2:column dataType="text"
							id="StndPremTablFlag4" name="StndPremTablFlag4" />
						<w2:column dataType="text"
							id="StndPremTablFlag5" name="StndPremTablFlag5" />
						<w2:column dataType="text" id="sResvAmtKey"
							name="sResvAmtKey" />
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate" />
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd" />
						<w2:column dataType="text" id="BascSlctFlagCd_H"
							name="BascSlctFlagCd_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag3" name="StndPremTablFlag3" />
						<w2:column dataType="text"
							id="StndPremTablFlag2" name="StndPremTablFlag2" />
						<w2:column dataType="text"
							id="StndPremTablFlag1" name="StndPremTablFlag1" />
						<w2:column dataType="text" id="sPaymTermName"
							name="sPaymTermName" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn" name="FirstInsurTermApplYn" />
						<w2:column dataType="text"
							id="AutoRenwlCyclCd_H" name="AutoRenwlCyclCd_H" />
						<w2:column dataType="text" id="sScrnIndcYn"
							name="sScrnIndcYn" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn" name="InrpsDoubInsImprYn" />
						<w2:column dataType="text" id="nTrtyPrem"
							name="nTrtyPrem" />
						<w2:column dataType="text" id="AutoRenwlAvaYn"
							name="AutoRenwlAvaYn" />
						<w2:column dataType="text" id="TrtyObjtFlag_H"
							name="TrtyObjtFlag_H" />
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem" />
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="nTrtyInsAmt"
							name="nTrtyInsAmt" />
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge" />
						<w2:column dataType="text" id="sRenwlYn"
							name="sRenwlYn" />
						<w2:column dataType="text" id="TrtyCd_H"
							name="TrtyCd_H" />
						<w2:column dataType="text" id="sMainTrtyCd"
							name="sMainTrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd11"
							name="sExcluGroupCd11" />
						<w2:column dataType="text" id="sExcluGroupCd10"
							name="sExcluGroupCd10" />
						<w2:column dataType="text"
							id="StndPremTablFlag3_H" name="StndPremTablFlag3_H" />
						<w2:column dataType="text" id="nInsurTermCd"
							name="nInsurTermCd" />
						<w2:column dataType="text" id="TrtyHnglAbbName"
							name="TrtyHnglAbbName" />
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms" />
						<w2:column dataType="text" id="Trtygp_H"
							name="Trtygp_H" />
						<w2:column dataType="text" id="InrtMdfcYn_H"
							name="InrtMdfcYn_H" />
						<w2:column dataType="text" id="nPs1CmpsLmitAmt"
							name="nPs1CmpsLmitAmt" />
						<w2:column dataType="text"
							id="StndPremTablFlag4_H" name="StndPremTablFlag4_H" />
						<w2:column dataType="text" id="TrtyTypeCd"
							name="TrtyTypeCd" />
						<w2:column dataType="text" id="InsAvaDrveCd"
							name="InsAvaDrveCd" />
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm" />
						<w2:column dataType="text"
							id="StndPremTablFlag1_H" name="StndPremTablFlag1_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag2_H" name="StndPremTablFlag2_H" />
						<w2:column dataType="text" id="PronCmpsTrtyYn_H"
							name="PronCmpsTrtyYn_H" />
						<w2:column dataType="text" id="nTrtyOrdr"
							name="nTrtyOrdr" />
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate" />
						<w2:column dataType="text" id="sTrtyStatCd"
							name="sTrtyStatCd" />
						<w2:column dataType="text" id="TrtyFlagCd_H"
							name="TrtyFlagCd_H" />
						<w2:column dataType="text" id="PmmiInsurFlagCd"
							name="PmmiInsurFlagCd" />
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd" />
						<w2:column dataType="text" id="RenwlUseCrFlagCd"
							name="RenwlUseCrFlagCd" />
						<w2:column dataType="text" id="sAutoRenwlAvaYn"
							name="sAutoRenwlAvaYn" />
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm" />
						<w2:column dataType="text" id="TrtyFlagCd"
							name="TrtyFlagCd" />
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd" />
						<w2:column dataType="text" id="TrtyTypeCd_H"
							name="TrtyTypeCd_H" />
						<w2:column dataType="text" id="DrveFlag"
							name="DrveFlag" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn_H" name="FirstInsurTermApplYn_H" />
						<w2:column dataType="text"
							id="SwHsHldGdsTrtyYn_H" name="SwHsHldGdsTrtyYn_H" />
						<w2:column dataType="text"
							id="TrtyUserDefnName_H" name="TrtyUserDefnName_H" />
						<w2:column dataType="text" id="sStndDate"
							name="sStndDate" />
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms" />
						<w2:column dataType="text" id="sPronCmpsTrtyYn"
							name="sPronCmpsTrtyYn" />
						<w2:column dataType="text"
							id="PmmiInsurFlagCd_H" name="PmmiInsurFlagCd_H" />
						<w2:column dataType="text" id="PremCalcFomlFlag"
							name="PremCalcFomlFlag" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn_H" name="InrpsDoubInsImprYn_H" />
						<w2:column dataType="text" id="InrtMdfcYn"
							name="InrtMdfcYn" />
						<w2:column dataType="text" id="nPaymTermCd"
							name="nPaymTermCd" />
						<w2:column dataType="text" id="GrntAccuFlagCd"
							name="GrntAccuFlagCd" />
						<w2:column dataType="text"
							id="PremCalcFomlFlag_H" name="PremCalcFomlFlag_H" />
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge" />
						<w2:column dataType="text" id="AutoRenwlAvaYn_H"
							name="AutoRenwlAvaYn_H" />
						<w2:column dataType="text" id="BussInsAvaYn"
							name="BussInsAvaYn" />
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler" />
						<w2:column dataType="text" id="Trtygp"
							name="Trtygp" />
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo" />
						<w2:column dataType="text" id="nCnclRtnrt"
							name="nCnclRtnrt" />
						<w2:column dataType="text" id="PronCmpsTrtyYn"
							name="PronCmpsTrtyYn" />
						<w2:column dataType="text" id="sPkgCd"
							name="sPkgCd" />
						<w2:column dataType="text" id="PytrMdfcYn_H"
							name="PytrMdfcYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag"
							name="FxamtCmpsFlag" />
						<w2:column dataType="text" id="nRenwlSeq"
							name="nRenwlSeq" />
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate" />
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd" />
						<w2:column dataType="text"
							id="StndPremTablFlag5_H" name="StndPremTablFlag5_H" />
						<w2:column dataType="text" id="GrntAccuFlagCd_H"
							name="GrntAccuFlagCd_H" />
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP" />
						<w2:column dataType="text" id="RenwlTrtyCd"
							name="RenwlTrtyCd" />
						<w2:column dataType="text" id="sBascSlctFlagCd"
							name="sBascSlctFlagCd" />
						<w2:column dataType="text" id="chk" name="chk" />
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem" />
						<w2:column dataType="text" id="sInsurTermName"
							name="sInsurTermName" />
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo" />
						<w2:column dataType="text" id="nTotCmpsLmitAmt"
							name="nTotCmpsLmitAmt" />
						<w2:column dataType="text"
							id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt" />
						<w2:column dataType="text" id="sGrntAccuFlagCd"
							name="sGrntAccuFlagCd" />
						<w2:column dataType="text" id="InrtmPytrMdfcYn"
							name="InrtmPytrMdfcYn" />
						<w2:column dataType="text"
							id="InrtmPytrMdfcYn_H" name="InrtmPytrMdfcYn_H" />
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd" />
						<w2:column dataType="text" id="RenwlTrtyCd_H"
							name="RenwlTrtyCd_H" />
						<w2:column dataType="text" id="nSelfChamt"
							name="nSelfChamt" />
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP" />
						<w2:column dataType="text" id="BascSlctFlagCd"
							name="BascSlctFlagCd" />
						<w2:column dataType="text" id="TrtyUserDefnName"
							name="TrtyUserDefnName" />
						<w2:column dataType="text" id="DrveFlag_H"
							name="DrveFlag_H" />
						<w2:column dataType="text" id="AutoRenwlCyclCd"
							name="AutoRenwlCyclCd" />
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno" />
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno" />
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate" />
						<w2:column dataType="text" id="sExcluGroupCd1"
							name="sExcluGroupCd1" />
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem" />
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd" />
						<w2:column dataType="text" id="BussInsAvaYn_H"
							name="BussInsAvaYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag_H"
							name="FxamtCmpsFlag_H" />
						<w2:column dataType="text" id="sGroupCd"
							name="sGroupCd" />
						<w2:column dataType="text" id="sExcluGroupCd6"
							name="sExcluGroupCd6" />
						<w2:column dataType="text" id="SwHsHldGdsTrtyYn"
							name="SwHsHldGdsTrtyYn" />
						<w2:column dataType="text" id="sExcluGroupCd7"
							name="sExcluGroupCd7" />
						<w2:column dataType="text" id="InsAvaDrveCd_H"
							name="InsAvaDrveCd_H" />
						<w2:column dataType="text" id="sExcluGroupCd8"
							name="sExcluGroupCd8" />
						<w2:column dataType="text" id="sExcluGroupCd9"
							name="sExcluGroupCd9" />
						<w2:column dataType="text" id="sExcluGroupCd2"
							name="sExcluGroupCd2" />
						<w2:column dataType="text" id="TrtyCd"
							name="TrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd3"
							name="sExcluGroupCd3" />
						<w2:column dataType="text" id="sExcluGroupCd4"
							name="sExcluGroupCd4" />
						<w2:column dataType="text" id="nPreGrntPrem"
							name="nPreGrntPrem" />
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd" />
						<w2:column dataType="text" id="sExcluGroupCd5"
							name="sExcluGroupCd5" />
						<w2:column dataType="text" id="sFinalRenwlDate"
							name="sFinalRenwlDate" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sAutoRenwlCyclCd"
							name="sAutoRenwlCyclCd" />
						<w2:column dataType="text" id="sSubTrtyCd"
							name="sSubTrtyCd" />
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd" />
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="Ds_LTIDA15" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo_BackUp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text" id="fixFlag"
							name="fixFlag">
						</w2:column>
						<w2:column dataType="text" id="MediFlag"
							name="MediFlag">
						</w2:column>
						<w2:column dataType="text" id="hasPronCmpsTrty"
							name="hasPronCmpsTrty">
						</w2:column>
						<w2:column dataType="text" id="hasFxamtCmps"
							name="hasFxamtCmps">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>

				<w2:dataList id="Ds_Trty_Backup" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_PrdAttr" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Ds_Single" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Ds_InPayTerm" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDB01Cnt" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_Search42" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Ds_long_mPlr" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sCustNo" name="sCustNo"
							dataType="text">
						</w2:column>
						<w2:column id="sCstId" name="sCstId"
							dataType="text">
						</w2:column>
						<w2:column id="nSeqNo" name="nSeqNo"
							dataType="text">
						</w2:column>
						<w2:column id="sName" name="sName"
							dataType="text">
						</w2:column>
						<w2:column id="sCustType" name="sCustType"
							dataType="text">
						</w2:column>
						<w2:column id="sClass" name="sClass"
							dataType="text">
						</w2:column>
						<w2:column id="sMarry" name="sMarry"
							dataType="text">
						</w2:column>
						<w2:column id="sJobCode" name="sJobCode"
							dataType="text">
						</w2:column>
						<w2:column id="sJobName" name="sJobName"
							dataType="text">
						</w2:column>
						<w2:column id="sDrvCls" name="sDrvCls"
							dataType="text">
						</w2:column>
						<w2:column id="sJobCls" name="sJobCls"
							dataType="text">
						</w2:column>
						<w2:column id="nHomAdrsChangeNo"
							name="nHomAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sHomZco" name="sHomZco"
							dataType="text">
						</w2:column>
						<w2:column id="sHomAdr1" name="sHomAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sHomAdr2" name="sHomAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="nCrpAdrsChangeNo"
							name="nCrpAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sCrpZco" name="sCrpZco"
							dataType="text">
						</w2:column>
						<w2:column id="sCrpAdr1" name="sCrpAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sCrpAdr2" name="sCrpAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="nEtcAdrsChangeNo"
							name="nEtcAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sEtcZco" name="sEtcZco"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcAdr1" name="sEtcAdr1"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcAdr2" name="sEtcAdr2"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrsType" name="sAdrsType"
							dataType="text">
						</w2:column>
						<w2:column id="nAdrsChangeNo"
							name="nAdrsChangeNo" dataType="text">
						</w2:column>
						<w2:column id="sAdrsZco" name="sAdrsZco"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrs1" name="sAdrs1"
							dataType="text">
						</w2:column>
						<w2:column id="sAdrs2" name="sAdrs2"
							dataType="text">
						</w2:column>
						<w2:column id="sDMAdrsTyp" name="sDMAdrsTyp"
							dataType="text">
						</w2:column>
						<w2:column id="nTelChangeNo" name="nTelChangeNo"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel1" name="sHomeTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel2" name="sHomeTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sHomeTel3" name="sHomeTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel1" name="sOfficeTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel2" name="sOfficeTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sOfficeTel3" name="sOfficeTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone1" name="sCellPhone1"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone2" name="sCellPhone2"
							dataType="text">
						</w2:column>
						<w2:column id="sCellPhone3" name="sCellPhone3"
							dataType="text">
						</w2:column>
						<w2:column id="sFax1" name="sFax1"
							dataType="text">
						</w2:column>
						<w2:column id="sFax2" name="sFax2"
							dataType="text">
						</w2:column>
						<w2:column id="sFax3" name="sFax3"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcType" name="sEtcType"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel1" name="sEtcTel1"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel2" name="sEtcTel2"
							dataType="text">
						</w2:column>
						<w2:column id="sEtcTel3" name="sEtcTel3"
							dataType="text">
						</w2:column>
						<w2:column id="sEmail1" name="sEmail1"
							dataType="text">
						</w2:column>
						<w2:column id="sEmail2" name="sEmail2"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Dmcy"
					repeatNode="map" userData2="//*/DMCY" />
				<w2:dataList baseNode="list" id="DsWs_Warning"
					repeatNode="map" userData2="//*/WARNING">
					<w2:columnInfo>
						<w2:column dataType="text" id="timestamp"
							name="timestamp" />
						<w2:column dataType="text" id="detail"
							name="detail" />
						<w2:column dataType="text" id="level"
							name="level" />
						<w2:column dataType="text" id="msg" name="msg" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDA00" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Dsws_BaseSlct" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_Napgi" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_Bogi" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_LTIDA15" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="DsWs_LTIEA10" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
				<w2:dataList id="Ds_Pibo_Tmp_Backup" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate" />
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms" />
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd" />
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate" />
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd" />
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd" />
						<w2:column dataType="text" id="sFxBefoInqrYn"
							name="sFxBefoInqrYn" />
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName" />
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler" />
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd" />
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq" />
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo" />
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem" />
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd" />
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="sPftbpMailAddFlag" name="sPftbpMailAddFlag" />
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName" />
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd" />
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq" />
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd" />
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge" />
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate" />
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName" />
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="nExptEndRtnStndAmt" name="nExptEndRtnStndAmt" />
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP" />
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd" />
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno" />
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem" />
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd" />
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno" />
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn" />
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo" />
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName" />
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno" />
						<w2:column dataType="text" id="execFlag"
							name="execFlag" />
						<w2:column dataType="text" id="sPmmiBefoInqrYn"
							name="sPmmiBefoInqrYn" />
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms" />
						<w2:column dataType="text"
							id="sGroupInrpsJobName" name="sGroupInrpsJobName" />
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd" />
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd" />
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem" />
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd" />
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP" />
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName" />
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm" />
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno" />
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd" />
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd" />
						<w2:column dataType="text"
							id="sXcptPftbpMailAddFlag" name="sXcptPftbpMailAddFlag" />
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate" />
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate" />
						<w2:column dataType="text" id="sRpstInrpsFlag"
							name="sRpstInrpsFlag" />
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem" />
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd" />
						<w2:column dataType="text"
							id="nPftbpMailChngSeq" name="nPftbpMailChngSeq" />
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd" />
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId" />
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="nXcptPftbpMailChngSeq" name="nXcptPftbpMailChngSeq" />
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq" />
						<w2:column dataType="text"
							id="sGroupInrpsSexFlag" name="sGroupInrpsSexFlag" />
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName" />
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd" />
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm" />
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sRowType"
							name="sRowType" />
						<w2:column dataType="text" id="sel" name="sel" />
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno" />
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd" />
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd" />
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="DsWs_Pibo" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate" />
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms" />
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd" />
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate" />
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd" />
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd" />
						<w2:column dataType="text" id="sFxBefoInqrYn"
							name="sFxBefoInqrYn" />
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName" />
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler" />
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd" />
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq" />
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo" />
						<w2:column dataType="text" id="nMaxPrem"
							name="nMaxPrem" />
						<w2:column dataType="text"
							id="sGroupInrpsDrveFlagCd" name="sGroupInrpsDrveFlagCd" />
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="sPftbpMailAddFlag" name="sPftbpMailAddFlag" />
						<w2:column dataType="text" id="sGroupInrpsName"
							name="sGroupInrpsName" />
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd" />
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq" />
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd" />
						<w2:column dataType="text" id="nGroupInrpsAge"
							name="nGroupInrpsAge" />
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate" />
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName" />
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="nExptEndRtnStndAmt" name="nExptEndRtnStndAmt" />
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP" />
						<w2:column dataType="text" id="sGroupInrpsJobCd"
							name="sGroupInrpsJobCd" />
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno" />
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem" />
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd" />
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno" />
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn" />
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo" />
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName" />
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno" />
						<w2:column dataType="text" id="execFlag"
							name="execFlag" />
						<w2:column dataType="text" id="sPmmiBefoInqrYn"
							name="sPmmiBefoInqrYn" />
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms" />
						<w2:column dataType="text"
							id="sGroupInrpsJobName" name="sGroupInrpsJobName" />
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd" />
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd" />
						<w2:column dataType="text" id="nMinPrem"
							name="nMinPrem" />
						<w2:column dataType="text"
							id="sGroupInrpsJobGradCd" name="sGroupInrpsJobGradCd" />
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP" />
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName" />
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm" />
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno" />
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd" />
						<w2:column dataType="text" id="sGroupInrpsCd"
							name="sGroupInrpsCd" />
						<w2:column dataType="text"
							id="sXcptPftbpMailAddFlag" name="sXcptPftbpMailAddFlag" />
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate" />
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate" />
						<w2:column dataType="text" id="sRpstInrpsFlag"
							name="sRpstInrpsFlag" />
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem" />
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd" />
						<w2:column dataType="text"
							id="nPftbpMailChngSeq" name="nPftbpMailChngSeq" />
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd" />
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId" />
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd" />
						<w2:column dataType="text"
							id="nXcptPftbpMailChngSeq" name="nXcptPftbpMailChngSeq" />
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq" />
						<w2:column dataType="text"
							id="sGroupInrpsSexFlag" name="sGroupInrpsSexFlag" />
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName" />
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd" />
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm" />
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sRowType"
							name="sRowType" />
						<w2:column dataType="text" id="sel" name="sel" />
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno" />
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd" />
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd" />
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="Ds_Trty_Save" baseNode="list"
					saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text"
							id="RenwlUseCrFlagCd_H" name="RenwlUseCrFlagCd_H" />
						<w2:column dataType="text" id="TrtyObjtFlag"
							name="TrtyObjtFlag" />
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate" />
						<w2:column dataType="text" id="PytrMdfcYn"
							name="PytrMdfcYn" />
						<w2:column dataType="text"
							id="StndPremTablFlag4" name="StndPremTablFlag4" />
						<w2:column dataType="text"
							id="StndPremTablFlag5" name="StndPremTablFlag5" />
						<w2:column dataType="text" id="sResvAmtKey"
							name="sResvAmtKey" />
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate" />
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd" />
						<w2:column dataType="text" id="BascSlctFlagCd_H"
							name="BascSlctFlagCd_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag3" name="StndPremTablFlag3" />
						<w2:column dataType="text"
							id="StndPremTablFlag2" name="StndPremTablFlag2" />
						<w2:column dataType="text"
							id="StndPremTablFlag1" name="StndPremTablFlag1" />
						<w2:column dataType="text" id="sPaymTermName"
							name="sPaymTermName" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn" name="FirstInsurTermApplYn" />
						<w2:column dataType="text"
							id="AutoRenwlCyclCd_H" name="AutoRenwlCyclCd_H" />
						<w2:column dataType="text" id="sScrnIndcYn"
							name="sScrnIndcYn" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn" name="InrpsDoubInsImprYn" />
						<w2:column dataType="text" id="nTrtyPrem"
							name="nTrtyPrem" />
						<w2:column dataType="text" id="AutoRenwlAvaYn"
							name="AutoRenwlAvaYn" />
						<w2:column dataType="text" id="TrtyObjtFlag_H"
							name="TrtyObjtFlag_H" />
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem" />
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd" />
						<w2:column dataType="text" id="nTrtyInsAmt"
							name="nTrtyInsAmt" />
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge" />
						<w2:column dataType="text" id="sRenwlYn"
							name="sRenwlYn" />
						<w2:column dataType="text" id="TrtyCd_H"
							name="TrtyCd_H" />
						<w2:column dataType="text" id="sMainTrtyCd"
							name="sMainTrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd11"
							name="sExcluGroupCd11" />
						<w2:column dataType="text" id="sExcluGroupCd10"
							name="sExcluGroupCd10" />
						<w2:column dataType="text"
							id="StndPremTablFlag3_H" name="StndPremTablFlag3_H" />
						<w2:column dataType="text" id="nInsurTermCd"
							name="nInsurTermCd" />
						<w2:column dataType="text" id="TrtyHnglAbbName"
							name="TrtyHnglAbbName" />
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms" />
						<w2:column dataType="text" id="Trtygp_H"
							name="Trtygp_H" />
						<w2:column dataType="text" id="InrtMdfcYn_H"
							name="InrtMdfcYn_H" />
						<w2:column dataType="text" id="nPs1CmpsLmitAmt"
							name="nPs1CmpsLmitAmt" />
						<w2:column dataType="text"
							id="StndPremTablFlag4_H" name="StndPremTablFlag4_H" />
						<w2:column dataType="text" id="TrtyTypeCd"
							name="TrtyTypeCd" />
						<w2:column dataType="text" id="InsAvaDrveCd"
							name="InsAvaDrveCd" />
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm" />
						<w2:column dataType="text"
							id="StndPremTablFlag1_H" name="StndPremTablFlag1_H" />
						<w2:column dataType="text"
							id="StndPremTablFlag2_H" name="StndPremTablFlag2_H" />
						<w2:column dataType="text" id="PronCmpsTrtyYn_H"
							name="PronCmpsTrtyYn_H" />
						<w2:column dataType="text" id="nTrtyOrdr"
							name="nTrtyOrdr" />
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate" />
						<w2:column dataType="text" id="sTrtyStatCd"
							name="sTrtyStatCd" />
						<w2:column dataType="text" id="TrtyFlagCd_H"
							name="TrtyFlagCd_H" />
						<w2:column dataType="text" id="PmmiInsurFlagCd"
							name="PmmiInsurFlagCd" />
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd" />
						<w2:column dataType="text" id="RenwlUseCrFlagCd"
							name="RenwlUseCrFlagCd" />
						<w2:column dataType="text" id="sAutoRenwlAvaYn"
							name="sAutoRenwlAvaYn" />
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm" />
						<w2:column dataType="text" id="TrtyFlagCd"
							name="TrtyFlagCd" />
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd" />
						<w2:column dataType="text" id="TrtyTypeCd_H"
							name="TrtyTypeCd_H" />
						<w2:column dataType="text" id="DrveFlag"
							name="DrveFlag" />
						<w2:column dataType="text"
							id="FirstInsurTermApplYn_H" name="FirstInsurTermApplYn_H" />
						<w2:column dataType="text"
							id="SwHsHldGdsTrtyYn_H" name="SwHsHldGdsTrtyYn_H" />
						<w2:column dataType="text"
							id="TrtyUserDefnName_H" name="TrtyUserDefnName_H" />
						<w2:column dataType="text" id="sStndDate"
							name="sStndDate" />
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms" />
						<w2:column dataType="text" id="sPronCmpsTrtyYn"
							name="sPronCmpsTrtyYn" />
						<w2:column dataType="text"
							id="PmmiInsurFlagCd_H" name="PmmiInsurFlagCd_H" />
						<w2:column dataType="text" id="PremCalcFomlFlag"
							name="PremCalcFomlFlag" />
						<w2:column dataType="text"
							id="InrpsDoubInsImprYn_H" name="InrpsDoubInsImprYn_H" />
						<w2:column dataType="text" id="InrtMdfcYn"
							name="InrtMdfcYn" />
						<w2:column dataType="text" id="nPaymTermCd"
							name="nPaymTermCd" />
						<w2:column dataType="text" id="GrntAccuFlagCd"
							name="GrntAccuFlagCd" />
						<w2:column dataType="text"
							id="PremCalcFomlFlag_H" name="PremCalcFomlFlag_H" />
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge" />
						<w2:column dataType="text" id="AutoRenwlAvaYn_H"
							name="AutoRenwlAvaYn_H" />
						<w2:column dataType="text" id="BussInsAvaYn"
							name="BussInsAvaYn" />
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler" />
						<w2:column dataType="text" id="Trtygp"
							name="Trtygp" />
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo" />
						<w2:column dataType="text" id="nCnclRtnrt"
							name="nCnclRtnrt" />
						<w2:column dataType="text" id="PronCmpsTrtyYn"
							name="PronCmpsTrtyYn" />
						<w2:column dataType="text" id="sPkgCd"
							name="sPkgCd" />
						<w2:column dataType="text" id="PytrMdfcYn_H"
							name="PytrMdfcYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag"
							name="FxamtCmpsFlag" />
						<w2:column dataType="text" id="nRenwlSeq"
							name="nRenwlSeq" />
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate" />
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd" />
						<w2:column dataType="text"
							id="StndPremTablFlag5_H" name="StndPremTablFlag5_H" />
						<w2:column dataType="text" id="GrntAccuFlagCd_H"
							name="GrntAccuFlagCd_H" />
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP" />
						<w2:column dataType="text" id="RenwlTrtyCd"
							name="RenwlTrtyCd" />
						<w2:column dataType="text" id="sBascSlctFlagCd"
							name="sBascSlctFlagCd" />
						<w2:column dataType="text" id="chk" name="chk" />
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem" />
						<w2:column dataType="text" id="sInsurTermName"
							name="sInsurTermName" />
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo" />
						<w2:column dataType="text" id="nTotCmpsLmitAmt"
							name="nTotCmpsLmitAmt" />
						<w2:column dataType="text"
							id="n1AccdCmpsLmitAmt" name="n1AccdCmpsLmitAmt" />
						<w2:column dataType="text" id="sGrntAccuFlagCd"
							name="sGrntAccuFlagCd" />
						<w2:column dataType="text" id="InrtmPytrMdfcYn"
							name="InrtmPytrMdfcYn" />
						<w2:column dataType="text"
							id="InrtmPytrMdfcYn_H" name="InrtmPytrMdfcYn_H" />
						<w2:column dataType="text" id="sRenwlTrtyCd"
							name="sRenwlTrtyCd" />
						<w2:column dataType="text" id="RenwlTrtyCd_H"
							name="RenwlTrtyCd_H" />
						<w2:column dataType="text" id="nSelfChamt"
							name="nSelfChamt" />
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP" />
						<w2:column dataType="text" id="BascSlctFlagCd"
							name="BascSlctFlagCd" />
						<w2:column dataType="text" id="TrtyUserDefnName"
							name="TrtyUserDefnName" />
						<w2:column dataType="text" id="DrveFlag_H"
							name="DrveFlag_H" />
						<w2:column dataType="text" id="AutoRenwlCyclCd"
							name="AutoRenwlCyclCd" />
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno" />
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno" />
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate" />
						<w2:column dataType="text" id="sExcluGroupCd1"
							name="sExcluGroupCd1" />
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem" />
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd" />
						<w2:column dataType="text" id="BussInsAvaYn_H"
							name="BussInsAvaYn_H" />
						<w2:column dataType="text" id="FxamtCmpsFlag_H"
							name="FxamtCmpsFlag_H" />
						<w2:column dataType="text" id="sGroupCd"
							name="sGroupCd" />
						<w2:column dataType="text" id="sExcluGroupCd6"
							name="sExcluGroupCd6" />
						<w2:column dataType="text" id="SwHsHldGdsTrtyYn"
							name="SwHsHldGdsTrtyYn" />
						<w2:column dataType="text" id="sExcluGroupCd7"
							name="sExcluGroupCd7" />
						<w2:column dataType="text" id="InsAvaDrveCd_H"
							name="InsAvaDrveCd_H" />
						<w2:column dataType="text" id="sExcluGroupCd8"
							name="sExcluGroupCd8" />
						<w2:column dataType="text" id="sExcluGroupCd9"
							name="sExcluGroupCd9" />
						<w2:column dataType="text" id="sExcluGroupCd2"
							name="sExcluGroupCd2" />
						<w2:column dataType="text" id="TrtyCd"
							name="TrtyCd" />
						<w2:column dataType="text" id="sExcluGroupCd3"
							name="sExcluGroupCd3" />
						<w2:column dataType="text" id="sExcluGroupCd4"
							name="sExcluGroupCd4" />
						<w2:column dataType="text" id="nPreGrntPrem"
							name="nPreGrntPrem" />
						<w2:column dataType="text" id="sRenwlUseCrFlgcd"
							name="sRenwlUseCrFlgcd" />
						<w2:column dataType="text" id="sExcluGroupCd5"
							name="sExcluGroupCd5" />
						<w2:column dataType="text" id="sFinalRenwlDate"
							name="sFinalRenwlDate" />
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd" />
						<w2:column dataType="text" id="sAutoRenwlCyclCd"
							name="sAutoRenwlCyclCd" />
						<w2:column dataType="text" id="sSubTrtyCd"
							name="sSubTrtyCd" />
						<w2:column dataType="text" id="sTrtyTypeCd"
							name="sTrtyTypeCd" />
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="TrtyCmpsContAmtLimitVo">
				<w2:keyInfo>
					<w2:key id="gdCd" name="gdCd" dataType="text"></w2:key>
					<w2:key id="gnrzCd" name="gnrzCd" dataType="text"></w2:key>
					<w2:key id="planCd" name="planCd" dataType="text"></w2:key>
					<w2:key id="ssrtDate" name="ssrtDate" dataType="text"></w2:key>
					<w2:key id="trtyCd" name="trtyCd" dataType="text"></w2:key>
					<w2:key id="trtyInsAmt" name="trtyInsAmt" dataType="text"></w2:key>
				</w2:keyInfo>
			</w2:dataMap>
			<w2:dataList baseNode="list" id="TrtyCmpsContAmtLimitDtalVo" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="amtAftrPrgp" name="amtAftrPrgp" dataType="text"></w2:column>
					<w2:column id="amtSpclGu" name="amtSpclGu" dataType="text"></w2:column>
					<w2:column id="bosangAmt" name="bosangAmt" dataType="text"></w2:column>
					<w2:column id="calcStnd" name="calcStnd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd" name="connCvrgeCd" dataType="text"></w2:column>
					<w2:column id="connCvrgeCd1" name="connCvrgeCd1" dataType="text"></w2:column>
					<w2:column id="conts" name="conts" dataType="text"></w2:column>
					<w2:column id="cvrgeCd" name="cvrgeCd" dataType="text"></w2:column>
					<w2:column id="cvrgeName" name="cvrgeName" dataType="text"></w2:column>
					<w2:column id="pymStndSpec" name="pymStndSpec" dataType="text"></w2:column>
					<w2:column id="seqno" name="seqno" dataType="text"></w2:column>
					<w2:column id="stndVarb" name="stndVarb" dataType="text"></w2:column>
					<w2:column id="stndVarb1" name="stndVarb1" dataType="text"></w2:column>
					<w2:column id="trtyCd" name="trtyCd" dataType="text"></w2:column>
					<w2:column id="trtyName" name="trtyName" dataType="text"></w2:column>
					<w2:column id="unit" name="unit" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			<w2:dataList id="DS_TrtyCmpsContAmtLimitInfo" baseNode="list" repeatNode="map">
				<w2:columnInfo>
					<w2:column id="sTrtyCd" name="sTrtyCd" dataType="text"></w2:column>
					<w2:column id="nTrtyInsAmt" name="nTrtyInsAmt" dataType="text"></w2:column>
					<w2:column id="sInfo" name="sInfo" dataType="text"></w2:column>
				</w2:columnInfo>
			</w2:dataList>
			</w2:dataCollection>
	</xf:model>
	<script src="/cm/js/convertJs/Global_Script.js"/>
	<script src="/cm/js/convertJs/comm_Webservice.js"/>
	<script src="/cm/js/convertJs/LongTerm_Script.js"/>
	<script src="/cm/js/convertJs/NewGen_Script.js"/>
	<script src="/cm/js/convertJs/Marine_Script.js"/>
		<script type="javascript"><![CDATA[
    /*
 	 *===================================File description================================================
 	 * 파일명 : CBSC043S.xml
 	 * 프로그램명 : 단체청약설계_보험료산출
 	 * 설 명 : 
 	 * 작성자 : KMJ
 	 * 작성일 : 2017.10.19
 	 *
 	 * 수정일자       수정자        수정내용
 	 *==================================================
 	 * 2017.10.19		  KMJ		  신규개발
 	 *====================================================================================================
	 */
		
	var sGdCd;
	//상품코드
	var sPlanCd = "00";
	//플랜코드
	var sPsnGroupFlgcd = "21";
	//개인단체구분코드
	var except = "";
	//체크 플래그
	//(탭이동시, 다음버튼(다음버튼은 탭이동과 같은 처리를 하므로 별도처리하지않음), 영업보험료산출)
	var modifyFlag = false;
	//화면값중 기존값에서 변경된 경우 체크
	var AllCalcPremFlag = false;
	//일괄적용처리여부 체크
	var ExptRtnAmtFlag = false;
	//피보험자변경여부
	var piboCheckFlag = false;
	//특약변경여부
	var trtyCheckFlag = false;
	//**********************************************************
	// 화면 초기화 
	//**********************************************************	
	scwin.fn_init = function(){
		Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", sPsnGroupFlgcd); //개인단체구분코드 세팅
	};			
	
	//**********************************************************
	// 상품선택시 납입주기, 플랜사항조회
	//**********************************************************	
	scwin.lfn_setRule = function(prodCd) {
		Ds_LTIDA00.setCellData(0, "sPsnGroupFlgcd", sPsnGroupFlgcd); //개인단체구분코드 세팅
		
		Ds_LTIDA00.setCellData(0, "sGdCd", parent.edt_sGdCd.getValue()); //상품코드세팅
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드세팅
	    //Ds_LTIDA00.SetColumn(0, "nMaxPrem", nMaxPrem);//최대보험료세팅
	    Ds_LTIDA00.setCellData(0, "nMaxPrem", ""); //최대보험료세팅
	    Ds_LTIDA00.setCellData(0, "nGrntPrem", ""); //보장보험료
	    Ds_LTIDA00.setCellData(0, "nAccuPrem", ""); //적립보험료
	    Ds_LTIDA00.setCellData(0, "nBussPrem", ""); //영업보험료
	    Ds_LTIDA00.setCellData(0, "nDcPrem", ""); //할인보험
	    Ds_LTIDA00.setCellData(0, "nApplPrem", ""); //적용보험료
	    Ds_LTIDA00.setCellData(0, "nMinPrem", ""); //최소보험료
	    Ds_LTIDA00.setCellData(0, "nEndRtnrt", ""); //만기환급율
	    Ds_LTIDA00.setCellData(0, "nExptEndRetrnAmt", ""); //예상만기환급금액
	    Ds_LTIDA00.setCellData(0, "nExptEndRtnrt", ""); //예상만기환급율
	    sGdCd = prodCd;
	    if (sGdCd != null && sGdCd != "") {
	        for (var i = 0; i < Ds_PiboExcel.getRowCount(); i++) {
	            if (eval(wconv.substr(parent.edt_sMinAge.getValue(), 1, 2)) > eval(Ds_PiboExcel.getCellData(i, "nGroupInrpsAge"))) {
	                wprom.alert(Ds_PiboExcel.getCellData(i, "sGroupInrpsName") + "님은 보험 가입 가능한 나이가 아닙니다.");
	                return false;
	                break;
	            }
	            if (eval(wconv.substr(parent.edt_sMaxAge.getValue(), 1, 2)) < eval(Ds_PiboExcel.getCellData(i, "nGroupInrpsAge"))) {
	                wprom.alert(Ds_PiboExcel.getCellData(i, "sGroupInrpsName") + "님은 보험 가입 가능한 나이가 아닙니다.");
	                return false;
	                break;
	            }
	        }     
	        
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getCommCode", "", "");
		    MethodObj.setId("getCommCode");
		    
		    MethodObj.setParam("sFlagCd", "1"); 
		    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
		    MethodObj.setParam("sStndDate", parent.cal_sSsrtDate.getValue()); //청약일
		    MethodObj.setParam("sPlanCd", sPlanCd); //플랜코드
		    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
		    MethodObj.setParam("sResno", Ds_Pibo.getCellData(0, "sGroupInrpsCd")); //주민번호	
		    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(0, "sGroupInrpsDrveFlagCd")); //단체피보험자운전구분코드	
		    MethodObj.setParam("sPlanPsnGroupCd", "2");
		    MethodObj.setParam("sChnlCd", parent.sSaleChnl);
		    
		    MethodObj.setUrl("/contract/CBSC042MController.do");
			MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");		// DsWs_LTIDA00
			MethodObj.addXPath("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd");	// Dsws_BaseSlct
	        MethodObj.addXPath("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd");	// DsWs_Napgi
	        MethodObj.addXPath("//hashtable/data[@hashkey='applPlanList']/vector/data/multi");	// DsWs_Plan
	        MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");	// DsWs_PaymTerm
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");	// Dsws_InsAmt
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");	// DsWs_InsurTermPaymTerm
	        MethodObj.addXPath("//hashtable/data[@hashkey='com_InsurTermCd']/vector/data/com_InsurTermCd"); // DsWs_Bogi
	        MethodObj.addXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"); // DsWs_InsurTerm
	        MethodObj.addXPath("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"); // DsWs_PaymCycl
	        MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi"); // DsWs_Trty
	        MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"); // DsWs_LTIDA15
	        MethodObj.addXPath("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"); // DsWs_PrdAttr
	        MethodObj.addXPath("//WARNING"); // DsWs_Warning
	        
	        MethodObj.setXPathDs();
		    MethodObj.sync();
			MethodObj.send();
		
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");
	        if (DsWs_Warning.getRowCount() != 0) {
	        	alert(DsWs_Warning.getCellData(0, "msg"));
	            return;
	        }else{
//		    	util.interfaceKey(_tranSync.result.serviceDs);
		    	wconv.clear(DsWs_LTIDA00);
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");	
				wconv.clear(Dsws_BaseSlct);	
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_BascSlctFlagCd']/vector/data/com_BascSlctFlagCd"), "Dsws_BaseSlct", "Y");	
		        wconv.clear(DsWs_Napgi);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_PaymTermCd']/vector/data/com_PaymTermCd"), "DsWs_Napgi", "Y");	
				wconv.clear(DsWs_Bogi); 
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='com_InsurTermCd']/vector/data/com_InsurTermCd"), "DsWs_Bogi", "Y");  
	       
		   		wconv.clear(DsWs_Plan);   
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='applPlanList']/vector/data/multi"), "DsWs_Plan", "Y");	
				
				wconv.clear(DsWs_PaymTerm); 
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");	 
				
				wconv.clear(Dsws_InsAmt); 
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"), "Dsws_InsAmt", "Y"); 
				
				wconv.clear(DsWs_InsurTermPaymTerm);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"), "DsWs_InsurTermPaymTerm", "Y");	 
		        
		        wconv.clear(DsWs_InsurTerm);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y"); 
				//납입주기조회
	       		wconv.clear(DsWs_PaymCycl);
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='paymCyclCdList']/vector/data/multi"), "DsWs_PaymCycl", "Y"); 
				//특약사항조회
	        	wconv.clear(DsWs_Trty);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), "DsWs_Trty", "Y"); 
		        
		        wconv.clear(DsWs_LTIDA15);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), "DsWs_LTIDA15", "Y"); 
		        
		        wconv.clear(DsWs_PrdAttr);
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='prdAttrList']/vector/data/multi"), "DsWs_PrdAttr", "Y"); 
	
				if (eval(DsWs_PrdAttr.getCellData(0, "GroupMinInsPsct")) > Ds_Pibo.getRowCount()) {
		            wprom.alert("단체 피보험자는 최소 " + eval(DsWs_PrdAttr.getCellData(0, "GroupMinInsPsct")) + "명 입니다.");
		            return;
		        }
		        // 납입주기 
		        if(DsWs_PaymCycl.getRowCount() == 0){
					alert("납입주기 조회건이 없습니다.");
				}else{
					cmb_PaymCycl.setSelectedIndex(1);
					cmb_PaymCycl.setRef("data:Ds_LTIDA00.sPaymCyclCd");
				}
		        
		        if (DsWs_Trty.getRowCount() == 0) {
	                wprom.alert("특약사항 조회건이 없습니다.");
	            } 
	            else {            		                   
	              //  scwin.lfn_PlanChanged();
	                //테이블 필드도 추가한다.	
	            //    scwin.lfn_TrtyDataSetSet();
	                util.insertColumn(Ds_LTIDA00, [["sApplPlanCd", "sApplPlanCd", "text"]
	                							  ,["sApplPlanName", "sApplPlanName", "text"]
	                							  ,["sFrstSaleChnlCd", "sFrstSaleChnlCd", "text"]     
	                							  ,["sSaleChnlDtal", "sSaleChnlDtal", "text"]
									              ]);
					util.setCompBindRefresh(Ds_LTIDA00.getID());
					util.setRowPosition(Ds_LTIDA00, 0);
	                //상품속성처리
	                Ds_LTIDA00.setCellData(0, "sHsecFlagCd", DsWs_PrdAttr.getCellData(0, "HsecFlagCd")); //가계구분코드
	                Ds_LTIDA00.setCellData(0, "sBunsMetdDocuClsfCd", DsWs_PrdAttr.getCellData(0, "BunsMetdDocuClsfCd")); //사업방법서분류코드
	                Ds_LTIDA00.setCellData(0, "sApplDclrRato", DsWs_PrdAttr.getCellData(0, "ApplDclrRato")); //적용공시이율
	                Ds_LTIDA00.setCellData(0, "sGdFlgcd", DsWs_PrdAttr.getCellData(0, "GdFlgcd"));
	                Ds_LTIDA00.setCellData(0, "sDvdnFlagCd", DsWs_PrdAttr.getCellData(0, "DvdnFlagCd")); //배당구분코드
	                Ds_LTIDA00.setCellData(0, "sPpayAvaYn", DsWs_PrdAttr.getCellData(0, "PpayAvaYn")); //선납가능여부
	                Ds_LTIDA00.setCellData(0, "sGdTypeFlgCd", DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd")); //상품유형구분
	                Ds_LTIDA00.setCellData(0, "sTaxPrfrGdYn", DsWs_PrdAttr.getCellData(0, "TaxPrfrGdYn")); //세금우대상품여부
	                //보험기간,가입금액 초기값 세팅
	         //       scwin.lfn_InsurTermInit();
	
	                //피보험자 첫번째 세팅
	                for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	                    if (i == 0) {
	                        Ds_Pibo.setCellData(i, "sel", "1");
	                    } else {
	                        Ds_Pibo.setCellData(i, "sel", "0");
	                    }
	                }
			    
				    //특약데이터셋 변경시 이벤트처리를 위해 이벤트 정의함
	               // eval(Ds_Pibo_ID).OnColumnChanged = "lfn_Pibo_OnColumnChanged";
	               // eval(Ds_Trty_ID).OnColumnChanged = "lfn_Trty_OnColumnChanged";
	               // medt_sInsurStrtdate.OnChanged = "lfn_InsurStrtDateChange";
	               modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	               
	                //일시납 납입기간에 따른 납입주기 세팅
	         //       scwin.lfn_PaymCyclSet();
	
			/*		wconv.clear(Ds_Trty);
	                util.copyM(Ds_Trty, DsWs_Trty.getAllJSON());
	                util.setCompBindRefresh(Ds_Trty.getID());
	                util.setRowPosition(Ds_Trty, 0);
	                //특약관계체크
	    //            scwin.lfn_TrtyList_Relation_Check();
	    //특약중 화면출력특약만 화면에 보여줌
	                Ds_Trty.removeColumnFilterAll();
	                wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");*/
               
		 			//플랜 첫번째 세팅
	                cmb_Plan.setSelectedIndex(0);
	                cmb_Plan.setValue(DsWs_Plan.getCellData( 0 , "sPlanCd"));
	                cmb_Plan.setText(DsWs_Plan.getCellData( 0 , "sPlanName"));
	                cmb_Plan.setSelectedIndex(0);
	                scwin.cmb_Plan_onviewchange_Async();
	     //           cmb_Plan.bind("onchange", scwin.lfn_PlanChanged);
	                //보기납기 첫번째 세팅
	                cmb_InsurTermPaymTerm.setSelectedIndex(0);
	                
	                //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	                if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	                    medt_nBussPrem.setDisabled(true);
	                } else {
	                    medt_nBussPrem.setDisabled(false);
	                }
	                wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화	                
	            
	            }
	        }
	    }
	};
	
	//**********************************************************
	// 보험기간,가입금액 초기값 세팅
	//**********************************************************	
	scwin.lfn_InsurTermInit = function() {
	    //보험기간 콤보 초기값세팅	    
	    for (var i=0; i<Ds_Trty.getTotalRow(); i++) {
	        //보험기간종료일자 setting
	        if (i == 0) {
	        	var sInsurStrtdate = medt_sInsurStrtdate.getValue();
	        	var sInsurTermCd = Ds_Trty.getCellData(i, "sInsurTermCd");
	        	var nGroupInrpsAge = Ds_Pibo.getCellData(0, "nGroupInrpsAge");
	            medt_sInsurEndDate.setValue(scwin.lfn_endDate(sInsurStrtdate, sInsurTermCd, nGroupInrpsAge));
	        }
	        //보험기간/납입기간 세팅
	        if (i == 0) {
	            Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(i, "sInsurTermCd")); //보험기간
	            Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(i, "sPaymTermCd")); //납입기간
	            
	     //       var sInsurTermPaymTermName = grd_sTrty.getCellDisplayData(i, 3) + "/" + grd_sTrty.getCellDisplayData(i, 4);
	     //       Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", sInsurTermPaymTermName); //보기납기
	        }
	
	        //가입금액 초기값세팅	        
	        if (wconv.length(Ds_Trty.getCellData(i, "nTrtyInsAmt")) == 0) {
	            for (var j = 0; j < Dsws_InsAmt.getRowCount(); j++) {
	                if (Ds_Trty.getCellData(i, "sTrtyCd") == Dsws_InsAmt.getCellData(j, "sTrtyCd")) {
	                    Ds_Trty.setCellData(i, "nTrtyInsAmt", Dsws_InsAmt.getCellData(j, "sCd"));
	                    break;
	                }
	            }
	        }
	        else {
	        	if(Ds_Trty.getCellData(i, "nTrtyInsAmt") == "0") {
	        	}	
	        }
	    }
	};
	
	//**********************************************************
	// 보험시작일자 뷰체인지 이벤트  
	//**********************************************************	
	scwin.lfn_InsurStrtDateChange = function(info) {
		var oldValue = info.oldValue;
    	var newValue = info.newValue;
    	
    	if(oldValue != newValue) {
			// 보험시작일자로 종료일자 구하기	
			if (Ds_Pibo.getRowCount() > 0 && Ds_Trty.getRowCount() > 0) {
				var sSsrtDate = parent.cal_sSsrtDate.getValue();
				var sInsurStrtdate = medt_sInsurStrtdate.getValue();
				var sInsurTermCd = Ds_Trty.getCellData(0, "sInsurTermCd");
				var nGroupInrpsAge = Ds_Pibo.getCellData(0, "nGroupInrpsAge");
				
		        if (wconv.toNumber(sSsrtDate) > wconv.toNumber(sInsurStrtdate)) {
		            wprom.alert("청약일보다 이전날짜는 선택할수 없습니다.");
		            medt_sInsurStrtdate.setValue(sSsrtDate);
		            medt_sInsurEndDate.setValue(scwin.lfn_endDate(sSsrtDate, sInsurTermCd, nGroupInrpsAge));
		        } else {
		            medt_sInsurEndDate.setValue(scwin.lfn_endDate(sInsurStrtdate, sInsurTermCd, nGroupInrpsAge));
		        }
		    } else {
		        wprom.alert("우선 피보험자와 상품을 선택하세요");
		    }
	    }
	};
	
	//**********************************************************
	// 개시일, 보험기간, 연령을 입력받아 종료일구하기
	//**********************************************************
	scwin.lfn_endDate = function(startDate, sInsurTermCd, age) {
	    var insurTermCd_Gubun = wconv.substr(sInsurTermCd, 0, 1);
	    var insurTermCd_Value = wconv.substr(sInsurTermCd, 1, 3);
	    var endDate;
	    var month;
	    
	    switch (wconv.toInteger(insurTermCd_Gubun)) {
	        case 1:
	            month = (wconv.toInteger(insurTermCd_Value) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 2:
	        	month = (((wconv.toInteger(insurTermCd_Value) - wconv.toInteger(age))) * 12);
	            endDate = wconv.addMonth(startDate, month);
	            break;
	        case 9:
	            endDate = "99991231";
	            break;
	        default:
	            break;
	    }
	
	    //시작일자가 0229일경우 종료일의 월말일을 세팅
	    if (wconv.substr(startDate, 4, 4) == "0229") {
	        var tDay = wconv.addMonth(wconv.substr(endDate, 0, 6) + "01", 1);
	        endDate = wconv.addDateSimple(tDay, -1);
	    }
	    return endDate;
	};	
	
	//**********************************************************
	// 일시납 납입기간에 따른 납입주기 세팅
	//**********************************************************	
	scwin.lfn_PaymCyclSet = function() {
	    var exArr = cmb_InsurTermPaymTerm.getValue().split("/");   
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //일시납일경우 납입주기를 일시납으로 변경
	    if (sPaymTermCd == "000") {
	        cmb_PaymCycl.setValue("99");
	        cmb_PaymCycl.setDisabled(true);
	    } else {
	        cmb_PaymCycl.setSelectedIndex(1);
	        cmb_PaymCycl.setDisabled(false);
	    }
	};
	
	//**********************************************************
	// 보험기간별 납입기간 조회
	//**********************************************************
	scwin.lfn_PaymTerm = function(nRow, strColumnID) {
	    if (Ds_Pibo.getRowCount() == 0) {
	        alert("피보험자를 입력하세요");
	        Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	        Ds_Trty.setCellData(nRow, "sInsurTermCd", "");
	        Ds_Trty.FireEvent = true;
	        return false;
	    }
	    wconv.clear(DsWs_PaymTerm);
	    
	    var MethodObj = new callService("com.inswave.longterm.prd.rle.task.BCA730Task", "getPaymTermRule", "", "");
	    MethodObj.setId("getPaymTermRule");
	    Ds_Single.removeAll();
	    Ds_InPayTerm.removeAll();
	    util.appendRow(Ds_Single);
	    Ds_Single.setCellData(0, "sGdCd", sGdCd);
	    Ds_Single.setCellData(0, "sStndDate", parent.cal_sSsrtDate.getValue());
	    Ds_Single.setCellData(0, "sResno", Ds_Pibo.getCellData(0, "sGroupInrpsCd"));
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        if (Ds_Trty.getCellData(i, "chk") == 1 && Ds_Trty.getCellData(i, "sInsurTermCd") != "") {
	            util.appendRow(Ds_InPayTerm);
	            wconv.mi_copyRow(Ds_Trty.getID(), i, Ds_InPayTerm.getID(), Ds_InPayTerm.getRowPosition());
	            Ds_InPayTerm.setCellData(Ds_InPayTerm.getRowPosition(), "sStandardDate", parent.cal_sSsrtDate.getValue());
	        }
	    }
	    if (Ds_InPayTerm.getRowCount() == 0) {
	        alert("특약사항을 선택하세요");
	        return false;
	    }
	    MethodObj.addSingleData("single", "single", Ds_Single.getID());
	    MethodObj.addVectorData("multi", "LTmultiIDA02", Ds_InPayTerm.getID());
		MethodObj.setHashTable();
	
		MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), warn);
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else{
//	    	DsWs_PaymTerm.setJSON(_tranSync.getDsJson("multi"));
	    	util.copyM(DsWs_PaymTerm, _tranSync.getDsJson("multi"), true);
	        if (DsWs_PaymTerm.getRowCount() == 0) {
	            alert("납입기간이 없습니다.");
	        }
	    }
	};
	
	//**********************************************************
	// 단체관리번호 버튼클릭 이벤트 
	//**********************************************************	
	scwin.lfn_ltiea10_OnClick = function() {
		// 단체관리번호를 조회
		var promise = Promise.resolve();	        
        promise = promise.then(function(rtnVal) {
        var popInfo = {"width":1200,
    	                "height":657,
    	                "indata":"", //indata,
 						"title"     : "단체관리번호조회"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC037M.xml", popInfo);//상품  
    	});
        promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
			if (rtnValue != "") {
				if (wconv.length(rtnValue) != 0) {
		            var resultArr = rtnValue.split("^");
		 			var sGroupCrAdmNo = Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo");
		 			var sAgreDocuRecpYn = Ds_LTIEA10.getCellData(0, "sAgreDocuRecpYn");
		 			if (((sGroupCrAdmNo != "") && (sGroupCrAdmNo != resultArr[0])) || ((sGroupCrAdmNo != "") && (sAgreDocuRecpYn != wconv.toString(resultArr[8])))) {
			                if (Ds_Pibo.getRowCount() > 0) {
			                    wprom.alert("피보험자 명부를 다시 등록하세요.");
			                    wconv.clear(Ds_Pibo);
			                    btn_PiboExcel.focus();
			                }
			            }	                        
		        	}
					Ds_LTIEA10.setCellData(0, "sGroupCrAdmNo", resultArr[0]); //단체계약관리번호       
		            Ds_LTIEA10.setCellData(0, "sGroupCd", resultArr[1]); //단체코드
		            Ds_LTIEA10.setCellData(0, "sGroupName", resultArr[2]); //단체명           
		            Ds_LTIEA10.setCellData(0, "sRpstCd", resultArr[3]); //대표자코드             
		            Ds_LTIEA10.setCellData(0, "sRpstName", resultArr[4]); //대표자명    
		            Ds_LTIEA10.setCellData(0, "nFrstPsct", resultArr[5]); //최초인원수           
		            Ds_LTIEA10.setCellData(0, "nCrntPsct", resultArr[6]); //현재인원수             
		            Ds_LTIEA10.setCellData(0, "nGroupDcrt", wconv.toString(wconv.toNumber(resultArr[7]) * 100)); //할인율  			
		            Ds_LTIEA10.setCellData(0, "sAgreDocuRecpYn", resultArr[8]); //협약서접수여부                     			
		            util.setCompBindRefresh(Ds_LTIEA10.getID());
		            util.setRowPosition(Ds_LTIEA10, 0);
//		            medt_sGroupCrAdmNo.setValue(Ds_LTIEA10.getCellData(0, "sGroupCrAdmNo"));
			}
		});
		
	};
	
	//**********************************************************
	// 특약 데이터셋에 copy를 할경우 정의된 컬럼이 삭제되어서 추가해줌
	//**********************************************************
	scwin.lfn_TrtyDataSetSet = function() {
	    util.insertColumn(Ds_Trty, [["sBascSlctFlagCd", "sBascSlctFlagCd", "text"]
	  							   ,["sTrtyName", "sTrtyName", "text"]
	    						   ,["sPlanNo", "sPlanNo", "text"]
	    						   ,["sPsnPrprtGroupFlgcd", "sPsnPrprtGroupFlgcd", "text"]
	        					   ,["nPsnPrprtGroupSeqno", "nPsnPrprtGroupSeqno", "text"]
								   ,["nCrChngNo", "nCrChngNo", "text"]	     
								   ,["nTrtyOrdr", "nTrtyOrdr", "text"]
	       						   ,["sScrnIndcYn", "sScrnIndcYn", "text"]
	 						       ,["sGdCd", "sGdCd", "text"]
	        					   ,["sGnrzCd", "sGnrzCd", "text"]
	        					   ,["sAutoRenwlAvaYn", "sAutoRenwlAvaYn", "text"]
	        					   ,["sAutoRenwlCyclCd", "sAutoRenwlCyclCd", "text"]
	       						   ,["nSelfChamt", "nSelfChamt", "text"]
	      						   ,["nAccuPrem", "nAccuPrem", "text"]
	        					   ,["nExptGrntBussPrem", "nExptGrntBussPrem", "text"]
	        					   ,["nRiskPrem", "nRiskPrem", "text"]
	       						   ,["nTrtyPrem", "nTrtyPrem", "text"]
	        					   ,["nRenwlSeq", "nRenwlSeq", "text"]
	       						   ,["sRenwlYn", "sRenwlYn", "text"]
	        					   ,["nRealPaymTerm", "nRealPaymTerm", "text"]
	        					   ,["nRealInsurTerm", "nRealInsurTerm", "text"]
	        					   ,["nPaymAge", "nPaymAge", "text"]
	        					   ,["nEndAge", "nEndAge", "text"]
	           					   ,["sTrtyStatCd", "sTrtyStatCd", "text"]
	            				   ,["sInsurStrtdate", "sInsurStrtdate", "text"]
							       ,["sInsurEndDate", "sInsurEndDate", "text"]
	          					   ,["sCnclExtnEndDate", "sCnclExtnEndDate", "text"]
	            				   ,["sResvAmtKey", "sResvAmtKey", "text"]
	           					   ,["sTrtyTypeCd", "sTrtyTypeCd", "text"]
	           					   ]);
		util.setCompBindRefresh(Ds_Pibo.getID());
		util.setRowPosition(Ds_Pibo, 0);
//	    grd_Pibo.setColumnVisible("btn_Job_Search", false);
	       
	};
		
	//**********************************************************
	// 특약간 관계 체크
	//**********************************************************
	scwin.lfn_Trty_Relation_Check = function(nRow, sPkgCd, sExcluGroupCd1, sExcluGroupCd2, TrtyHnglAbbName, all, chk) {
//	    Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    //trace(obj.ID+"==="+nRow+"==="+sPkgCd+"==="+sExcluGroupCd1+"==="+sExcluGroupCd2);
	    //패키지체크
	    scwin.lfn_Trty_Relation_Pkg(sPkgCd, chk);
	
	    //베타그룹체크
	    scwin.lfn_Trty_Relation_sExcluGroupCd(nRow, sPkgCd, sExcluGroupCd1, sExcluGroupCd2, TrtyHnglAbbName, all);
//	    Ds_Trty.FireEvent = true;
	};	
	
	//**********************************************************
	// 특약간 관계 체크(패키지체크)
	//**********************************************************
	scwin.lfn_Trty_Relation_Pkg = function(sPkgCd, chk) {
	    //패키지체크
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //패키지값과 같은 그룹코드값을 찾는다.	
	        if (wconv.length(Ds_Trty.getCellData(i, "sPkgCd")) > 0 && wconv.length(sPkgCd) > 0 && (Ds_Trty.getCellData(i, "sPkgCd") == sPkgCd)) {
	            //체크인경우
	            if (chk) {
	                Ds_Trty.setCellData(i, "chk", "1");
	            } else {
	                Ds_Trty.setCellData(i, "chk", "0");
	                //보험료 초기화
	                Ds_Trty.setCellData(i, "nGrntPrem", ""); 			//보장보험료
	                Ds_Trty.setCellData(i, "nExptGrntBussPrem", ""); 	//예상보장영업보험료				
	            }
	        }
	    }
	};
	
	//**********************************************************
	// 특약간 관계 체크(베타그룹체크)
	//**********************************************************
	scwin.lfn_Trty_Relation_sExcluGroupCd = function(nRow, sPkgCd, sExcluGroupCd1, sExcluGroupCd2, TrtyHnglAbbName, all) {
	    //베타그룹체크1
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //베타그룹값과 같은 그룹코드값을 찾는다.		
	        if (wconv.length(Ds_Trty.getCellData(i, "sGroupCd")) > 0 && (Ds_Trty.getCellData(i, "sGroupCd") == sExcluGroupCd1)) {
	            //베타관계에 있는 특약이 체크되어 있는지 확인
	            if (Ds_Trty.getCellData(i, "chk") == "1") {
	                if (wconv.length(all) == 0) {
	                    wprom.alert("'" + Ds_Trty.getCellData(i, "TrtyHnglAbbName") + "' 특약과 '" + TrtyHnglAbbName + "' 특약은 동시가입이 불가합니다.");
	                }
	                Ds_Trty.setCellData(nRow, "chk", "0");
	                scwin.lfn_Trty_Relation_Pkg(sPkgCd, false);
	                break;
	            }
	        }
	    }
	
	    //베타그룹체크2
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	        //베타그룹값과 같은 그룹코드값을 찾는다.		
	        if (wconv.length(Ds_Trty.getCellData(i, "sGroupCd")) > 0 && (Ds_Trty.getCellData(i, "sGroupCd") == sExcluGroupCd2)) {
	            //베타관계에 있는 특약이 체크되어 있는지 확인
	            if (Ds_Trty.getCellData(i, "chk") == "1") {
	                if (wconv.length(all) == 0) {
	                    wprom.alert("'" + Ds_Trty.getCellData(i, "TrtyHnglAbbName") + "' 특약과 '" + TrtyHnglAbbName + "' 특약은 동시가입이 불가합니다.");
	                }
	                Ds_Trty.setCellData(nRow, "chk", "0");
	                scwin.lfn_Trty_Relation_Pkg(sPkgCd, false);
	                break;
	            }
	        }
	    }
	};	
	
	//**********************************************************
	// 특약전체 관계체크
	//**********************************************************	
    scwin.lfn_TrtyList_Relation_Check = function() {
//	    Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
	    for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	        //베타그룹체크
	        scwin.lfn_Trty_Relation_sExcluGroupCd(i, Ds_Trty.getCellData(i, "sPkgCd"), Ds_Trty.getCellData(i, "sExcluGroupCd1"), Ds_Trty.getCellData(i, "sExcluGroupCd2"), Ds_Trty.getCellData(i, "TrtyHnglAbbName"), "all");
	    }
//	    Ds_Trty.FireEvent = true;
	};
	
	//**********************************************************
	// 피보험자 엑셀로드 버튼 클릭이벤트 
	//**********************************************************	
	scwin.lfn_Excel_OnClick = function() {
	    //청약일이 입력되어 있어야 한다.
	    if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
	        wprom.alert("청약일을 입력해 주세요");
	        parent.cal_sSsrtDate.focus();
	        return;
	    }
		
	    //청약일이 입력되어 있어야 한다.
	    if (wconv.length(medt_sGroupCrAdmNo.getValue()) == 0) {
	        wprom.alert("단체를 선택해주세요");
	        medt_sGroupCrAdmNo.focus();
	        return;
	    }
	    	    
	   	util.copyM(Ds_Pibo_BackUp, Ds_Pibo.getAllJSON(), true);
	    util.insertColumn(Ds_Pibo_BackUp, [["hasPronCmpsTrty","hasPronCmpsTrty","text"]
	   									  ,["hasFxamtCmps","hasFxamtCmps","text"]
	        							  ,["MediFlag","MediFlag","text"]
										  ,["fixFlag","fixFlag","text"]
	    								  ]);
	    for (var i = 0; i < Ds_Pibo_BackUp.getRowCount(); i++) {
	        Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N");
	        Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "Y");
	        Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	        Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	    }
	    util.setCompBindRefresh(Ds_Pibo_BackUp.getID());
	    util.setRowPosition(Ds_Pibo_BackUp, 0);								  
	    
		wconv.clear(Ds_PiboExcel);
		var options = {
 			 fileName : "단체피보험자명세입력_테스트.xlsx" // default값이 존재하지 않으므로 꼭 fileName 값을 넣어야 한다.
 			,startRowIndex : 1 			
 			,endColumnIndex : 12
		};		
		common.gridDataUpload("grd_PiboExcel","xlsx", options);			  
	};
	
	//**********************************************************
	// 엑셀파일선택후 그리드 업로드
	//**********************************************************	
	scwin.grd_PiboExcel_onfilereadend = function(value) {
		util.eventAsyncCall(this, scwin.lfn_MakeExcelDataset, arguments);
	};	

	//**********************************************************
	// 피보험자엑셀로드 데이터로 서비스call
	//**********************************************************	
	scwin.lfn_MakeExcelDataset = function(strExcelURL) {
	    var resultCheck = false;//성공여부체크
		
		for (var i = 0; i < Ds_PiboExcel.getRowCount(); i++) {
	        if (scwin.lfn_checkPiboExcelLoad(i) == false) {
	            resultCheck = false;
	            return;
	        }
	    }
	    wconv.clear(Ds_Pibo_Tmp);
		wconv.clear(Ds_PiboExcel_Tmp);
		for (var i = 0; i < Ds_PiboExcel.getRowCount(); i++) {
			wconv.clear(Ds_PiboExcel_Tmp);
//			Ds_PiboExcel_Tmp.setRowJSON(0, Ds_PiboExcel.getRowJSON(i), true);
			Ds_PiboExcel_Tmp.setRowJSON(0, Ds_PiboExcel.getRowJSON(i));
			
	       	//필수값체크
	    	if (wconv.length(wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sGroupInrpsName"))) == 0 || 
	            wconv.length(wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sGroupInrpsCd"))) == 0 || 
	            wconv.length(wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sGroupInrpsJobCd"))) == 0 || 
	            wconv.length(wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sGroupInrpsDrveFlagCd"))) == 0) {
	            continue;
	        } 
	        else {
	            Ds_PiboExcel_Tmp.setCellData(0, "sCrtorRelnCd", wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sCrtorRelnCd")));
	            Ds_PiboExcel_Tmp.setCellData(0, "sPftbpInrpsRelnCd", wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sPftbpInrpsRelnCd")));
	            Ds_PiboExcel_Tmp.setCellData(0, "sPftbpName", wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sPftbpName")));
	            Ds_PiboExcel_Tmp.setCellData(0, "sPftbpCd", wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sPftbpCd")));
	            Ds_PiboExcel_Tmp.setCellData(0, "sPftbpTelno", wconv.trim(Ds_PiboExcel_Tmp.getCellData(0, "sPftbpTelno")));
		    }
			var MethodObj = new callService("com.inswave.longterm.ssr.sst.task.DBB181Task", "setGroupInrpsExcel", 0, 0);
			MethodObj.setId("setGroupInrpsExcel");
			MethodObj.setUrl("/contract/CBSC042MController.do");
			MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_PiboExcel_Tmp.getID()); //피보험자정보
			// 피보험자일련번호
			util.jSonDsCreate([{"nInrpsSeqno":""}], "DS_nInrpsSeqno");			
			$w.data["DS_nInrpsSeqno"].setCellData(0, "nInrpsSeqno", wconv.toString(i+1));
		    MethodObj.addSingleData("nInrpsSeqno", "nInrpsSeqno", $w.data["DS_nInrpsSeqno"].getID(), "type02");
			
			// 설계번호
			util.jSonDsCreate([{"sPlanNo":""}], "DS_sPlanNo");
			$w.data["DS_sPlanNo"].setCellData(0, "sPlanNo", (parent.medt_PlanNo.getValue())); 	// 설계번호
		    if(util.isNull(parent.medt_PlanNo.getValue())) {
				$w.data["DS_sPlanNo"].insertRow();
			}
		    MethodObj.addSingleData("sPlanNo", "sPlanNo", $w.data["DS_sPlanNo"].getID(), "type02");
		    
		    // 청약일
		    util.jSonDsCreate([{"sSsrtDate":""}], "DS_sSsrtDate");
		    if(util.isNull(parent.cal_sSsrtDate.getValue())) {
				$w.data["DS_sSsrtDate"].insertRow();
			}
			$w.data["DS_sSsrtDate"].setCellData(0, "sSsrtDate", parent.cal_sSsrtDate.getValue());
		    MethodObj.addSingleData("sSsrtDate", "sSsrtDate", $w.data["DS_sSsrtDate"].getID(), "type02");
		    
		    // 보험시작일자
		    util.jSonDsCreate([{"sInsurStrtdate":""}], "DS_sInsurStrtdate");
		    if(util.isNull(medt_sInsurStrtdate.getValue())) {
				$w.data["DS_sInsurStrtdate"].insertRow();
			}
			$w.data["DS_sInsurStrtdate"].setCellData(0, "sInsurStrtdate", medt_sInsurStrtdate.getValue()); 
		    MethodObj.addSingleData("sInsurStrtdate", "sInsurStrtdate", $w.data["DS_sInsurStrtdate"].getID(), "type02");
		    
		    // 보험종료일자
		    util.jSonDsCreate([{"sInsurEndDate":""}], "DS_sInsurEndDate");
		    if(util.isNull(medt_sInsurEndDate.getValue())) {
				$w.data["DS_sInsurEndDate"].insertRow();
			}
			$w.data["DS_sInsurEndDate"].setCellData(0, "sInsurEndDate", medt_sInsurEndDate.getValue()); 
		    MethodObj.addSingleData("sInsurEndDate", "sInsurEndDate", $w.data["DS_sInsurEndDate"].getID(), "type02");
		    
	        //플랜코드는 최초에 엑셀업로드할땐 없지만 다시 업로드를 시도할경우를 위해서 담아간다.
	        //플랜코드
		    util.jSonDsCreate([{"sApplPlanCd":""}], "DS_sApplPlanCd");
		    if(util.isNull(cmb_Plan.getValue())) {
				$w.data["DS_sApplPlanCd"].insertRow();
			}
			$w.data["DS_sApplPlanCd"].setCellData(0, "sApplPlanCd", cmb_Plan.getValue()); 
		    MethodObj.addSingleData("sApplPlanCd", "sApplPlanCd", $w.data["DS_sApplPlanCd"].getID(), "type02");
		    
		    //플랜명
			util.jSonDsCreate([{"sApplPlanName":""}], "DS_sApplPlanName");
			if(util.isNull(cmb_Plan.getText())) {
				$w.data["DS_sApplPlanName"].insertRow();
			}
			$w.data["DS_sApplPlanName"].setCellData(0, "sApplPlanName", cmb_Plan.getText()); 
		    MethodObj.addSingleData("sApplPlanName", "sApplPlanName", $w.data["DS_sApplPlanName"].getID(), "type02");
			
			// 입력자
		    util.jSonDsCreate([{"sInptDler":""}], "DS_sInptDler");
		    if(util.isNull(parent.gUserID)) {
				$w.data["DS_sInptDler"].insertRow();
			}
			$w.data["DS_sInptDler"].setCellData(0, "sInptDler", parent.gUserID); 
		    MethodObj.addSingleData("sInptDler", "sInptDler", $w.data["DS_sInptDler"].getID(), "type02");
		    		        
		    // 입력자아이피*/
		    util.jSonDsCreate([{"sInptDlerIP":""}], "DS_sInptDlerIP");
		    if(util.isNull(parent.gUserIP)) {
				$w.data["DS_sInptDlerIP"].insertRow();
			}
			$w.data["DS_sInptDlerIP"].setCellData(0, "sInptDlerIP", parent.gUserIP); 
		    MethodObj.addSingleData("sInptDlerIP", "sInptDlerIP", $w.data["DS_sInptDlerIP"].getID(), "type02");
		    				
			MethodObj.setHashTable();   // 저장할 때
			
			MethodObj.setXPath("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12");	// DsWs_Pibo
		    MethodObj.addXPath("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"); // DsWs_Drive
		    MethodObj.addXPath("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd");	// DsWs_FlagCd
		    MethodObj.addXPath("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd");	// DsWs_Grade
		    MethodObj.addXPath("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd"); // DsWs_CrtorRelnCd
			MethodObj.addXPath("//WARNING");
			MethodObj.setXPathDs();

			MethodObj.sync();
			MethodObj.send(); 
						
	       	wconv.clear(DsWs_Warning);				
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");		
			if(DsWs_Warning.getRowCount() != 0) {
				alert(DsWs_Warning.getCellData(0, "msg"));
				resultCheck = false;
				return;
			} 
			else {
				wconv.clear(DsWs_Pibo);    		        
		        util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"), "DsWs_Pibo", "Y");
	            
	            wconv.clear(DsWs_Drive);
	            util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd"),"DsWs_Drive", "Y");
	            //util.setCompBindRefresh(DsWs_Drive.getID());
				//util.setRowPosition(DsWs_Drive, 0);
	            
	            wconv.clear(DsWs_FlagCd);
	            util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd"),"DsWs_FlagCd", "Y");
	            //util.setCompBindRefresh(DsWs_FlagCd.getID());
				//util.setRowPosition(DsWs_FlagCd, 0);
	            
	            wconv.clear(DsWs_Grade); 
	            util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vJobGradCd']/vector/data/com_JobGradCd"),"DsWs_Grade", "Y");
	            //util.setCompBindRefresh(DsWs_Grade.getID());
				//util.setRowPosition(DsWs_Grade, 0);
	            
	            wconv.clear(DsWs_CrtorRelnCd); 
	            util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vCrtorRelnCd']/vector/data/com_CrtorRelnCd"),"DsWs_CrtorRelnCd", "Y");
				//util.setCompBindRefresh(DsWs_CrtorRelnCd.getID());
				//util.setRowPosition(DsWs_CrtorRelnCd, 0);
								
				if (Ds_PiboExcel.getRowCount() <= 0) {
	                wprom.alert("조회결과가 존재하지 않습니다.");
	            } else {
	                Ds_Pibo_Tmp.setJSON(DsWs_Pibo.getAllJSON(), true);
		            //화면에 설계번호가 없으면 채번된 번호를 채워준다.
	                var pPlanNo = parent.medt_PlanNo.getValue()
	                if (wconv.length(pPlanNo) == 0) {
	                    parent.medt_PlanNo.setValue(Ds_Pibo_Tmp.getCellData(0, "sPlanNo"));
	                    //채번된 설계번호를 백업한다.
	                    parent.sPlanNoBack = Ds_Pibo_Tmp.getCellData(0, "sPlanNo");
	                    parent.sPlanNoChFlag = false;
	                    Ds_LTIDA00.setCellData(0, "sPlanNo", Ds_Pibo_Tmp.getCellData(0, "sPlanNo"));
	                }
	            }
				resultCheck = true;
			}
		}		
		
		if (resultCheck) {
	        Ds_Pibo_Tmp.setCellData(0, "sel", "1");
	        wconv.clear(Ds_Pibo);
	        util.copyM(Ds_Pibo, Ds_Pibo_Tmp.getAllJSON(),true);
	        util.setCompBindRefresh(Ds_Pibo.getID());
			util.setRowPosition(Ds_Pibo, 0);

	        modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	        AllCalcPremFlag = false;
	        wprom.alert("피보험자엑셀로드가 처리되었습니다.");
	        	        	        
	        scwin.lfn_setRule(parent.edt_sGdCd.getValue());	        
	    }    
	};
	
	//**********************************************************
	// 피보험자엑셀로드 전 가입설계동의 여부 등 check
	//**********************************************************	
	scwin.lfn_checkPiboExcelLoad = function(nRow) {
	    var result = true;
	    var isDup = false;
	    for (var i = 0; i < Ds_PiboExcel.getRowCount(); i++) {
	        if (i == nRow) {
	            continue;
	        }
	        if (Ds_PiboExcel.getCellData(nRow, "sGroupInrpsCd") == Ds_PiboExcel.getCellData(i, "sGroupInrpsCd")) {
	            isDup = true;
	        }
	    }
	    
	    if (isDup) {
	        wprom.alert(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsName") + "님은 중복된 단체 피보험자 있습니다.");
	        result = false;
	        return false;
	    }
	
	    //단체피보험자 엑셀로드시 가입설계 동의 여부 확인
	    if (chk_AgreDocuRecpYn.getValue() != "1") {
	        if (scwin.lfn_getCUSAA42Info(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsCd")) == "Y") {
	            //데이터셋 초기화
	           	var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB011Task", "selMedicImageCheck", "", "");
			    MethodObj.setId("selMedicImageCheck");
			    MethodObj.setParam("sImagClsfCd", "JCD10001"); //이미지분류코드(JCD10001)
			    MethodObj.setParam("sResno", Ds_PiboExcel.getCellData(nRow, "sGroupInrpsCd")); //이미지키정보
			    MethodObj.setParam("sValdDate", parent.sToday); //기준일자
			    MethodObj.setParam( "sUserID", parent.gUserID); //로그인
			    		
			    MethodObj.setUrl("/contract/CBSC042MController.do");
				MethodObj.setXPath("//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt");
				MethodObj.addXPath("//WARNING");				
//			    MethodObj.setXPathDs();
			    MethodObj.sync();
				MethodObj.send();
	                        
	            wconv.clear(DsWs_Warning);	            	
	            // 오류처리
	            util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning", "Y");		
				if (DsWs_Warning.getRowCount() != 0) {
	                wprom.alert(DsWs_Warning.getCellData(0, "msg"));
	                result = false;
	                return false;
	              //  break;
	            }
	            else 
	            {
	            	wconv.clear(DsWs_LTIDB01Cnt);
	            	util.jSonDsCreate(_tranSync.getDsJson("LTIDB07Cnt"), "DsWs_LTIDB01Cnt", "Y");	// dataset 데이터

		            if (wconv.toNumber(DsWs_LTIDB01Cnt.getCellData(0, "nCount")) == 0) {
		                wprom.alert(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsName") + "님의 보험계약사전조회동의서 스캔처리후 조회가능합니다.");
		                result = false;
		                return false;
		             //   break;
		            }
		
		            //본인 스캔한 고객인지 체크 
		            if (parent.gUserDuty == "30" || parent.gUserDuty == "33" || parent.gUserDuty == "35") {
		                if (DsWs_LTIDB01Cnt.getCellData(0, "sSelfWrcsYn") == "N") {
		                    wprom.alert(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsName") + "님의 보험계약사전조회동의서의 담당자 스캔처리후 조회가능합니다.");
		                    result = false;
		                    return false;
		                 //   break;
		                }
		            }
		        }
	        }
	    }
	
	    //계약자와의 관계 체크
	    if (Ds_PiboExcel.getCellData(nRow, "sCrtorRelnCd") != "20") {
	        wprom.alert(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsName") + "님의 계약자와의 관계는 피고용인이어야합니다.");
	        result = false;
	        return false;
	    }
		
	    //피보험자 나이 재설정
	    if (Ds_PiboExcel.getCellData(nRow, "nGroupInrpsAge") != gfn_getInsAge(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsCd"), parent.cal_sSsrtDate.getValue())) {
	        Ds_PiboExcel.setCellData(nRow, "nGroupInrpsAge", wconv.toString(gfn_getInsAge(Ds_PiboExcel.getCellData(nRow, "sGroupInrpsCd"), parent.cal_sSsrtDate.getValue())));
	    }
	    return result;
	};
	
	//**********************************************************
	// 가입설계 동의여부 확인
	//**********************************************************	
	scwin.lfn_getCUSAA42Info = function(insrdID) {
	    //신용정보 동의 23조 동의여부 확인	 
	    var RejectYN = "";
	    // 가입설계 동의 여부 체크 
		var MethodObj = new callService("com.inswave.customer.task.CustTask", "getHandlerCUSAA42Info", "", "");
		MethodObj.setId("getHandlerCUSAA42Info");
		MethodObj.setParam("sCustNo", insrdID);
	    MethodObj.setParam("sProductType", "3");
	    MethodObj.setParam("sHandlerID", (wconv.trim(parent.edt_sDoerUser.getValue())==""?parent.edt_sDoer.getValue():parent.edt_sDoerUser.getValue()));
			    		
		MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//*/CUSAA42");
		MethodObj.addXPath("//WARNING");		
//	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	     
	    wconv.clear(DsWs_Warning);	            	
        // 오류처리
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning", "Y");		
        if (DsWs_Warning.getRowCount() != 0) {
            wprom.alert(DsWs_Warning.getCellData(0, "msg"));
            return RejectYN;
        }
        else {
            wconv.clear(DsWs_Search42);
        	util.jSonDsCreate(_tranSync.getDsJson("CUSAA42"),"DsWs_Search42", "Y");	// dataset 데이터

		    if (DsWs_Search42.getCellData(0, "result") > 0) {
		        if (DsWs_Search42.getCellData(0, "sAgmReq") == "Y") {
		            RejectYN = "Y"; //유효일자가 지난경우 다시 받기. 해당 칼럼이 다 체크해줌
		        }
		    } else {
		        RejectYN = "Y"; //가입동의 거부
		    }
	    }
	    return RejectYN;	    	   
	};
		
	//**********************************************************
	// 서비스에러발생시 이전 발생데이터 테이블 삭제처리
	//**********************************************************
	scwin.lfn_Exception = function(msg, level) {
	    var pPlanNo = parent.medt_PlanNo.getValue();
	    if (wconv.length(pPlanNo) > 0) {	    
	    	var MethodObj = new callService("com.inswave.longterm.ssr.sst.task.DBB181Task", "setException", "", "");
			MethodObj.setId("setException");
			MethodObj.setParam("level", level);
			MethodObj.setParam("sPlanNo", pPlanNo);
				    		
			MethodObj.setUrl("/contract/CBSC042MController.do");
			MethodObj.setXPath("//*/CUSAA42");
			MethodObj.addXPath("//WARNING");		
	//	    MethodObj.setXPathDs();
		    MethodObj.sync();
			MethodObj.send();
		       
		    wconv.clear(DsWs_Warning);        	
			util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning", "Y");		
	        // 오류처리
	        if (DsWs_Warning.getRowCount() != 0) {
	            wprom.alert(DsWs_Warning.getCellData(0, "msg"));
	            result = false;
	            return false;
	        }
			else {
	            wprom.alert(msg);
	        }
	    } 
	    else {
	        wprom.alert(msg);
	    }
	};
		
	//**********************************************************
	// 피보험자명세 버튼 클릭이벤트
	//**********************************************************
	scwin.lfn_B180_OnClick = function() {
		// CBSC046P 단체피보험자명세[B180_Pop] 진태만
		var promise = Promise.resolve();
	    if (Ds_Pibo.getRowCount() == 0) {
	        wprom.alert("피보험자를 입력하세요");
	        return;
	    }
	    
	    var pObj = {  
					"Ds_Pibo" : Ds_Pibo 					 
					,"DsWs_Drive" : DsWs_Drive 		
					,"DsWs_CrtorRelnCd" : DsWs_CrtorRelnCd 		 
				} 	// 자식으로 보낼 부모 Ds OBJECT 리스트
	                     
	    promise = promise.then(function(rtnVal) {
        var popInfo = {	"width":776,
    	                "height":433,
    	                "indata":"", //indata,
    	                "parentObject": pObj,
    	           //   "callback"  : scwin.popupCallback,
					    "title"     : "단체피보험자명세"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC046P.xml", popInfo);//상품  
    	});
	};
	
	//**********************************************************
	// 피보험자그리드 셀클릭 이벤트 
	//**********************************************************
	scwin.lfn_PiboOnCellClick = function(row, col) {	
	    var promise = Promise.resolve();
	    if (col == 0) {	//sel 체크박스 선택시
	    	/*if (!piboCheckFlag) {
	            if (wconv.length(sGdCd) == 0) {
	                wprom.alert("상품을 선택하세요");
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	            if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
	                wprom.alert("청약일을 선택하세요");
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	            if (wconv.length(Ds_Pibo.getCellData(row, "sGroupInrpsCd")) == 0) {
	                wprom.alert("피보험자주민번호를 입력하세요");
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	        }
	        //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (i != row && Ds_Pibo.getCellData(i, "sel") == "1" && !piboCheckFlag) {
	                //trace(nRow+"==4=="+piboCheckFlag);
	                //piboCheckFlag = true;
	                Ds_Pibo.setCellData(i, "sel", "0");
	                break;
	            }
	        }
	        //피보험자에 해당하는 특약사항을 조회한다.
	        if (Ds_Pibo.getCellData(row, "sel") == "1" && !piboCheckFlag) {
	            scwin.lfn_searchPiboTrty(row);
	        } else {
	            if (!piboCheckFlag) {
	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "1");
	            } else {
	                piboCheckFlag = false;
	            }
	        }	*/
	            if (wconv.length(sGdCd) == 0) {
	                wprom.alert("상품을 선택하세요");
//	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	            if (wconv.length(parent.cal_sSsrtDate.getValue()) == 0) {
	                wprom.alert("청약일을 선택하세요");
//	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	            if (wconv.length(Ds_Pibo.getCellData(row, "sGroupInrpsCd")) == 0) {
	                wprom.alert("피보험자주민번호를 입력하세요");
//	                piboCheckFlag = true;
	                Ds_Pibo.setCellData(row, "sel", "0");
	                return;
	            }
	        //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (i != row && Ds_Pibo.getCellData(i, "sel") == "1") {
	                //trace(nRow+"==4=="+piboCheckFlag);
	                //piboCheckFlag = true;
	                Ds_Pibo.setCellData(i, "sel", "0");
	                break;
	            }
	        }
	        //피보험자에 해당하는 특약사항을 조회한다.
	        if (Ds_Pibo.getCellData(row, "sel") == "1") {
	            scwin.lfn_searchPiboTrty(row);
	        } else {
	                Ds_Pibo.setCellData(row, "sel", "1");
	            
	        }	
	    } 	    
	    else if (col == 3) {	// btn_GridRow_Search 고객팝업 선택시
	        scwin.lfn_searchCust(row);
	    } 
	    else if (col == 7) {	// btn_Job_Search 직업팝업 선택시 CBSO021P 직업코드 조회
	    	var indata = {};
	    	promise = promise.then(function(rtnVal) {
	        var popInfo = {"width":845,
	    	                   "height":567,
	    	                   "indata":"", //indata,
							   "title"     : "직업팝업"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbso/CBSO021P.xml", popInfo);//상품  
	    	});

	        promise = promise.then(function(rtnVal) {
				var rtnValue = wprom.getReturnData();
				if (rtnValue != "") {
					if (wconv.length(rtnValue) != 0) {
			            var jobretArr = rtnValue.split("^");
	 	                Ds_Pibo.setCellData(row, "sGroupInrpsJobCd", jobretArr[1]); //직업코드 
		                Ds_Pibo.setCellData(row, "sGroupInrpsJobName", jobretArr[0]); //직업명
		                Ds_Pibo.setCellData(row, "sGroupInrpsJobGradCd", jobretArr[2]); //직업급수코드 
		                Ds_Pibo.setCellData(row, "sGroupInrpsDrveFlagCd", jobretArr[3]); //운전구분코드 
		            }
		        }
	        });
	    } 
	    else if (col == 11) {	// sRpstInrpsFlag 대표 여부 
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (i != row && Ds_Pibo.getCellData(i, "sRpstInrpsFlag") == "1") {
	                Ds_Pibo.setCellData(i, "sRpstInrpsFlag", "");
	            }
	        }
	    }
	};
	
	//**********************************************************
	// 피보험자 그리드 뷰체인지 이벤트 
	//**********************************************************
	scwin.grd_Pibo_onviewchange = function(info) {
		var row = info.rowIndex;
	    var col = info.colIndex;	    
	    var oldValue = info.oldValue;
	    var newValue = info.newValue;	
	    
	    if (col == 2) { //sGroupInrpsCd
	    	var strColumnID = Ds_Pibo.getColumnID(col);
			var sGroupInrpsCd = Ds_Pibo.getCellData(row, strColumnID);
	        if (wconv.length(sGroupInrpsCd) > 0) {
	            //보험나이계산
	            Ds_Pibo.setCellData(row, "nGroupInrpsAge", gfn_getInsAge(sGroupInrpsCd, medt_sInsurStrtdate.getValue()));
	        } else {
	            wprom.alert("주민번호를 정확히 입력해 주세요");
	            return;
	        }
	    } 
	    	
	};
	
	//**********************************************************
	// 그리드내 피보험자 버튼클릭시 개인고객등록화면 팝업
	//**********************************************************
	scwin.lfn_searchCust = function(nRow) {
		// 피보험자 선택  [CBSO002P] 개인고객등록 팝업
	    var sCustNo = Ds_Pibo.getCellData(nRow, "sGroupInrpsCd");
		
		//대리점일때
	    if (parent.sAgncYn == "Y") {
	        if (wconv.length(Ds_Pibo.getCellData(nRow, "nGroupInrpsAge")) <= 0) {
	            return;
	        }
	    }
	    
	    //휴면계약 존재여부 확인
	    var rtnValue = gfn_checkDmcyInsurByCustNo("DsWs_Dmcy", wconv.trim(Ds_Pibo.getCellData(nRow, "sGroupInrpsCd")));
	    if (rtnValue != "") {
	        alert(rtnValue);
	    }
	    
	    var result;
	    var parentInfo = "";
	    Ds_long_mPlr.removeAll();
	    	    
	    if (Ds_Pibo.getRowCount() > 0 && wconv.length(Ds_Pibo.getCellData(nRow, "sAddrFlgcd")) > 0 && Ds_Pibo.getCellData(nRow, "sGroupInrpsCd") == Ds_Pibo_BackUp.getCellData(nRow, "sGroupInrpsCd") && wconv.length(Ds_Pibo_BackUp.getCellData(nRow, "sGroupInrpsCd")) > 0) {
	        parentInfo += Ds_Pibo.getCellData(nRow, "sGroupInrpsCstId") + "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sGroupInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sGroupInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += Ds_Pibo.getCellData(nRow, "sAddrFlgcd") + "^"; //주소구분코드 자택
	        parentInfo += Ds_Pibo.getCellData(nRow, "nAddrChngSeq") + "^"; //주소변경회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "nTelnoChngSeq") + "^"; //전화회차
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	        parentInfo += Ds_Pibo.getCellData(nRow, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명 
	        //parentInfo += " screenId=long"; //스크린id 
	        //parentInfo += " sStandDate=" + Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
	        //parentInfo += sCustNo; //VIP 여부 표시
	    } else {
	        parentInfo += "^"; //고객ID
	        parentInfo += Ds_Pibo.getCellData(nRow, "sGroupInrpsCd") + "^"; //주민번호
	        parentInfo += "0^"; //순번
	        parentInfo += Ds_Pibo.getCellData(nRow, "sGroupInrpsFlagCd") + "^"; //고객유형 내국인
	        parentInfo += "^"; //주소구분코드 자택
	        parentInfo += "^"; //주소변경회차
	        parentInfo += "^"; //전화회차
	        parentInfo += "^"; //발송지주소구분
	        parentInfo += "^"; //발송지회차
	        parentInfo += "Ds_long_mPlr"; //데이터셋명 
	        //parentInfo += " screenId=long"; //스크린id
	        //parentInfo += " sStandDate=" + Ds_LTIDA00.getCellData(0, "sInsurStrtdate"); //직업찾기 기준일자 적용 2014.04.01 제도개정
	        //parentInfo += sCustNo; //VIP 여부 표시
	    }
	    
	    var promise = Promise.resolve();
	    //고객화면 오픈  
	    //대면/비대면체크  0 :  대면 , 1 : 비대면
	    if (util.getGdsValue("gUseCustType") == "0") {
	        promise = promise.then(function(rtnVal) {
		    	var indata = new Object();
	    		indata.parentInfo = parentInfo;
	    		indata.screenId = "long";
	    		indata.sStandDate = parent.cal_sSsrtDate.getValue();//Ds_LTIDA00.getCellData(0, "sInsurStrtdate");
	    		indata.fAgntFlagPop = "";
	    		indata.sPlanNo = parent.medt_PlanNo.getValue();
	    		indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
	    		//MS 임시테스트 처리 S
	    		//indata.sScanObjtYn = Ds_LTIDA00.GetColumn(0, "sScanObjtYn");
	    		indata.sScanObjtYn = "Y";
	    		/*MS 임시테스트 처리 E*/
	    		var popInfo = {"width":800,
	    	                   "height":580,
	    	                   "indata":indata,
	    	                   "callback"  : scwin.popupCallback,
							   "title"     : "개인고객 등록"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);//개인고객 등록              
		    });
		    promise = promise.then(function(rv) {
		    	try{
		    		var rtnValue = wprom.getReturnData();
					//console.log("====CBSO002P promise close \n"+JSON.stringify(rtnValue));
					if (rtnValue != "") {
						scwin.lfn_custConfirm(rtnValue);
					}
		    	}finally{
		    		bPopUpCheck = true;
		    	}
			});
	    } 
	    
	    return;
	};
	
	//**********************************************************
	// 고객팝업에서 확인버튼 클릭 후 처리
	//**********************************************************
	scwin.lfn_custConfirm = function(result){
		if(result.Ds_long_mPlr != undefined && result.Ds_long_mPlr.length > 0){
			Ds_long_mPlr.removeAll();
			Ds_long_mPlr.setJSON(result.Ds_long_mPlr);
			
			var nRow = wconv.findRow(Ds_Pibo, "sGroupInrpsCd", Ds_long_mPlr.getCellData(0, "sCustNo"));
			
			//2014.12.04 By SDJ(N1411-00267)
		    if (nRow < 0) {
		        nRow = wconv.findRow(Ds_Pibo, "sel", "1"); //현재 선택된 피보험자
		    }
		    //END (N1411-00267)
		    		    
		    if (Ds_long_mPlr.getRowCount() > 0) {
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //주민번호
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsName", Ds_long_mPlr.getCellData(0, "sName")); //성명
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsJobCd", Ds_long_mPlr.getCellData(0, "sJobCode")); //직업코드
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsJobName", Ds_long_mPlr.getCellData(0, "sJobName")); //직업명
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsJobGradCd", Ds_long_mPlr.getCellData(0, "sJobCls")); //직업급수
		        Ds_Pibo.setCellData(nRow, "sInrpsCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //피보험자고객ID             
		        Ds_Pibo.setCellData(nRow, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
		        Ds_Pibo.setCellData(nRow, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
		        Ds_Pibo.setCellData(nRow, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
		        Ds_Pibo.setCellData(nRow, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
		        Ds_Pibo.setCellData(nRow, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
				//성별구하기 
		        Ds_Pibo.setCellData(nRow, "sGroupInrpsSexFlag", scwin.lfn_getSex(Ds_Pibo.getCellData(nRow, "sGroupInrpsCd"))); //피보험자성별구분           
		        //보험나이계산
		        Ds_Pibo.setCellData(nRow, "nGroupInrpsAge", gfn_getInsAge(Ds_Pibo.getCellData(nRow, "sGroupInrpsCd"), parent.cal_sSsrtDate.getValue())); //나이
		        //주민번호, 운전용도backup
		        Ds_Pibo_BackUp.setCellData(nRow, "sGroupInrpsCd", Ds_Pibo.getCellData(nRow, "sGroupInrpsCd"));
		        Ds_Pibo_BackUp.setCellData(nRow, "sGroupInrpsDrveFlagCd", Ds_Pibo.getCellData(nRow, "sGroupInrpsDrveFlagCd"));
	    	}		

			//MS텝 정보 출력
	   // 	parent.scwin.lfn_set_Tab_Info("S1", "T1");
	    }
	};
	
	//**********************************************************
	// 성별을 체크한다.
	//**********************************************************	
	scwin.lfn_getSex = function(val) {
	    if ("1357".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "1";
	    } else if ("2468".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "2";
	    } else {
	        return "";
	    }
	};

	//**********************************************************
	// 피보험자에 해당하는 특약정보를 조회
	//**********************************************************	
	scwin.lfn_searchPiboTrty = function(nRow) {
		util.eventAsyncCall(this, scwin.lfn_searchPiboTrty_Async, arguments);
	};
	
	scwin.lfn_searchPiboTrty_Async = function(nRow) {
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPiboTrty", "", "");
	    MethodObj.setId("getPiboTrty");
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
		MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
		MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
		MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sApplPlanCd")) == 0) {
	        MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    	MethodObj.setParam("sPlanName", cmb_Plan.getText(false)); //플랜명
	    } else {
	        MethodObj.setParam("sPlanCd", Ds_Pibo.getCellData(nRow, "sApplPlanCd")); //플랜코드
	    	MethodObj.setParam("sPlanName", Ds_Pibo.getCellData(nRow, "sApplPlanName")); //플랜명 
	    }
	    MethodObj.setParam("sPsnGroupFlgcd", Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd"));//개인단체구분코드
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sGroupInrpsCd")); //피보험자주민번호 
	    MethodObj.setParam("nPsnPrprtGroupSeqno", Ds_Pibo.getCellData(nRow, "nInrpsSeqno")); //일련번호

	    var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    //trace("sInsurTermCd:"+sInsurTermCd);
	    //trace("sPaymTermCd:"+sPaymTermCd);
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	    
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		//특약
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	
//		var arrtrty = util.getDataListEvent(Ds_Trty);
//	    util.removeAllDataListEvent(Ds_Trty);    
	    
	    wconv.clear(DsWs_Warning);
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }else{
       	   	wconv.clear(DsWs_InsurTerm);
	 	   	wconv.clear(DsWs_PaymTerm);
	   		wconv.clear(DsWs_Trty);
        	
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), "DsWs_Trty", "Y");
        	
	        //요청인 경우 처리
	        if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 52) {
//	            Ds_Trty.FireEvent = false;
	            //특약세팅
//	            wconv.copy(Ds_Trty, "DsWs_Trty");
				wconv.clear(Ds_Trty);
	            util.copyM(Ds_Trty, DsWs_Trty.getAllJSON(), true);
	            util.setCompBindRefresh(Ds_Trty.getID());
				util.setRowPosition(Ds_Trty, 0);
	  //          scwin.lfn_TrtyDataSetSet();
	
	            //특약중 화면출력특약만 화면에 보여줌
	            Ds_Trty.removeColumnFilterAll();
	            wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	
	            //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
//	            wconv.copy(Ds_Trty_Backup, "Ds_Trty");
				wconv.clear(Ds_Trty_Backup); //특약 백업용	
				util.copyM(Ds_Trty_Backup, Ds_Trty.getAllJSON(), true);
				util.setCompBindRefresh(Ds_Trty_Backup.getID());
				util.setRowPosition(Ds_Trty_Backup, 0);
				
//				Ds_Trty_Backup.removeColumnFilterAll();
	            wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
//	            Ds_Trty.FireEvent = true; //요청이 아닌경우만 처리
	        } 
	        else {
	            //일시납 납입기간에 따른 납입주기 세팅
	            //scwin.lfn_PaymCyclSet();
	
	            //주피보험자가 아닌경우 청약,시작일,납입주기,플랜콤포넌트 비활성화 처리
	            var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	            var sPaymTermCd = exArr[1];
	            if (nRow == 0) {	
	                //parent.cal_sSsrtDate.Enable = true;
	                //medt_sInsurStrtdate.Enable = true;
	                //cmb_PaymCycl.Enable = true;
	                cmb_Plan.setDisabled(false);
	                cmb_InsurTermPaymTerm.setDisabled(false);
	                if (sPaymTermCd == "000") {
	                    cmb_PaymCycl.setDisabled(true);
	                } else {
	                    cmb_PaymCycl.setDisabled(false);
	                }
	                
	                btn_AllCalPrem.setDisabled(false);
	
	            } 
	            else {

	                //cal_sSsrtDate.Enable = false;
	                //medt_sInsurStrtdate.Enable = false;
	                cmb_PaymCycl.setDisabled(true);
	                cmb_Plan.setDisabled(true);
	                cmb_InsurTermPaymTerm.setDisabled(true);

	
	                //일괄적용을 한경우 버튼 비활성화 처리
	                if (AllCalcPremFlag) {
	                    btn_AllCalPrem.setDisabled(true);
	                }
	            }
//	            Ds_Trty.FireEvent = false;
	            //특약세팅
//	            wconv.copy(Ds_Trty, "DsWs_Trty");

			    wconv.clear(Ds_Trty); //특약 백업용	
				util.copyM(Ds_Trty, DsWs_Trty.getAllJSON(), true);
				util.setCompBindRefresh(Ds_Trty.getID());
				util.setRowPosition(Ds_Trty, 0);
				
//	            scwin.lfn_TrtyDataSetSet();

	
	            //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
//	            wconv.copy(Ds_Trty_Backup, "Ds_Trty");
				wconv.clear(Ds_Trty_Backup); //특약 백업용	
				util.copyM(Ds_Trty_Backup, Ds_Trty.getAllJSON(), true);
				util.setCompBindRefresh(Ds_Trty_Backup.getID());
				util.setRowPosition(Ds_Trty_Backup, 0);
	
	            //보험기간,가입금액 초기값 세팅
	            scwin.lfn_InsurTermInit();
	
	            //특약관계체크
	            scwin.lfn_TrtyList_Relation_Check();
 
	            //특약중 화면출력특약만 화면에 보여줌
	            Ds_Trty.removeColumnFilterAll();
	            wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
				Ds_Trty_Backup.removeColumnFilterAll();
	            wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
//			    util.setDataListEvent(Ds_Trty, arrtrty);
	            
	        }
	    }	
	
	    //피보험자 체크박스 플래그 초기화
//	    piboCheckFlag = false;
    };
    
	//**********************************************************
	// cmb_Plan 셀체인지 이벤트
	//**********************************************************	
	scwin.cmb_Plan_onviewchange_Async = function(info) {
		util.eventAsyncCall(this, scwin.lfn_PlanChanged, arguments);
	};	
	
	scwin.lfn_PlanChanged = function(info) {
		// 플랜변경조회
		// 데이터셋 초기화 
		wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_InsurTermPaymTerm);
	    wconv.clear(Dsws_InsAmt);
	    wconv.clear(DsWs_Trty);
	    wconv.clear(DsWs_Warning);
	    // 서비스콜
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sPlanName", cmb_Plan.getText()); //플랜명
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sGroupInrpsCd")); //피보험자주민번호
	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sGroupInrpsDrveFlagCd")); //단체피보험자운전구분코드	

	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='InsAmt']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='multi']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), "DsWs_Warning", "Y");
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }else{
        	wconv.clear(DsWs_InsurTerm);
        	wconv.clear(DsWs_PaymTerm);
        	wconv.clear(DsWs_InsurTermPaymTerm);
        	wconv.clear(Dsws_InsAmt);
        	wconv.clear(DsWs_Trty);
        	
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), "DsWs_InsurTerm", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), "DsWs_PaymTerm", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTermPaymTerm']/vector/data/multi"), "DsWs_InsurTermPaymTerm", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='InsAmt']/vector/data/multi"), "Dsws_InsAmt", "Y");
        	util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='multi']/vector/data/multi"), "DsWs_Trty", "Y");
        	
	        //보기납기 첫번째 세팅
	        cmb_InsurTermPaymTerm.setSelectedIndex(0);
	
	        //피보험자 보장보험료 초기화
	        //for(var i=0; i < Ds_Pibo.GetRowCount(); i++){
	        //	Ds_Pibo.setColumn(i, "nGrntPrem", "");
	        //}			
		       // Ds_Trty.FireEvent = false;
	        //특약세팅
//	        wconv.copy(Ds_Trty, "DsWs_Trty");
			wconv.clear(Ds_Trty); //특약 백업용	
			util.copyM(Ds_Trty, DsWs_Trty.getAllJSON(), true);
			util.setCompBindRefresh(Ds_Trty.getID());
			util.setRowPosition(Ds_Trty, 0);    
	//        scwin.lfn_TrtyDataSetSet();
			//특약중 화면출력특약만 화면에 보여줌
			Ds_Trty.removeColumnFilterAll();
	        wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	
	        //보험기간,가입금액 초기값 세팅
	        scwin.lfn_InsurTermInit();
	
	        //일시납 납입기간에 따른 납입주기 세팅
	        scwin.lfn_PaymCyclSet();        
		
	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
		
	        //플랜에 따른 영업보험료변경가능여부가 N인경우 영업보험료 비활성화처리
	        if (DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "sPremAmtChgYn") == "N") {
	            medt_nBussPrem.setDisabled(true);
	        } else {
	            medt_nBussPrem.setDisabled(false);
	        }
	        AllCalcPremFlag = false; //일괄적용처리여부 체크		
	 //       wconv.clear(Ds_Trty_Backup); //특약 백업용 초기화

		//	util.setCompBindRefresh(Ds_Trty_Backup.getID());
		//	util.setRowPosition(Ds_Trty_Backup, 0);     	
	        
	    }	
	};	
	
	//**********************************************************
	// cmb_InsurTermPaymTerm 보기/납기 콤보 셀체인지 이벤트 
	//**********************************************************		
	scwin.lfn_InsurTermPaymTermChanged = function(info) {
		// 보험기간/납입기간변경시 조회 
		
		// 데이터셋 초기화 
		wconv.clear(DsWs_InsurTerm);
	    wconv.clear(DsWs_PaymTerm);
	    wconv.clear(DsWs_Warning);
	    
	    // 서비스콜 
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB331Task", "getPlanTrty", "", "");
	    MethodObj.setId("getPlanTrty");
	    
	    MethodObj.setParam("sGdCd", Ds_LTIDA00.getCellData(0, "sGdCd")); //상품코드
	    MethodObj.setParam("sGnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd")); //종형코드
	    MethodObj.setParam("sStndDate", Ds_LTIDA00.getCellData(0, "sSsrtDate")); //청약일
	    MethodObj.setParam("sPlanCd", cmb_Plan.getValue()); //플랜코드
	    MethodObj.setParam("sResno", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sGroupInrpsCd")); //피보험자주민번호
	    MethodObj.setParam("sDrivFlagCd", Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sGroupInrpsDrveFlagCd")); //단체피보험자운전구분코드
	    var exArr = cmb_InsurTermPaymTerm.getValue().split("/");
	    var sInsurTermCd = exArr[0];
	    var sPaymTermCd = exArr[1];
	    MethodObj.setParam("sInsurTermCd", sInsurTermCd); //보험기간
	    MethodObj.setParam("sPaymTermCd", sPaymTermCd); //납입기간
	     
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi");
		MethodObj.addXPath("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi");
		MethodObj.addXPath("//WARNING");
	    MethodObj.setXPathDs();
	    MethodObj.sync();
		MethodObj.send();
	    
	    util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0) {
        	alert(DsWs_Warning.getCellData(0, "msg"));
            return;
        }else{
        	util.copyM(DsWs_InsurTerm,_tranSync.getDsJson("//hashtable/data[@hashkey='InsurTerm']/vector/data/multi"), true);	// dataset 데이터
		    util.setCompBindRefresh(DsWs_InsurTerm.getID());
			util.setRowPosition(DsWs_InsurTerm, 0);    
			 	
		    util.copyM(DsWs_PaymTerm,_tranSync.getDsJson("//hashtable/data[@hashkey='PaymTerm']/vector/data/multi"), true);	// dataset 데이터
	        util.setCompBindRefresh(DsWs_PaymTerm.getID());
			util.setRowPosition(DsWs_PaymTerm, 0);   
			  	
	
	        //보험기간,납입기간 초기값 세팅
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            for (var j = 0; j < DsWs_InsurTerm.getRowCount(); j++) {
	                if (Ds_Trty.getCellData(i, "sTrtyCd") == DsWs_InsurTerm.getCellData(j, "sTrtyCd")) {
	                    Ds_Trty.setCellData(i, "sInsurTermCd", DsWs_InsurTerm.getCellData(j, "sInsurTermCd"));
	                    //trace(i+"==sInsurTermCd=="+Ds_Trty.GetColumn(i, "sInsurTermCd")+"]");
	                    break;
	                }
	            }
	
	            //보험기간종료일자 setting
	            if (i == 0) {
	                medt_sInsurEndDate.setValue(scwin.lfn_endDate(medt_sInsurStrtdate.getValue(), Ds_Trty.getCellData(i, "sInsurTermCd"), Ds_Pibo.getCellData(0, "nGroupInrpsAge")));
	            }
	
	            //납입기간 초기값세팅
	            for (var j = 0; j < DsWs_PaymTerm.getRowCount(); j++) {
	                if (Ds_Trty.getCellData(i, "sTrtyCd") == DsWs_PaymTerm.getCellData(j, "sTrtyCd")) {
	                    Ds_Trty.setCellData(i, "sPaymTermCd", DsWs_PaymTerm.getCellData(j, "sPaymTermCd"));
	                    //trace("sPaymTermCd=="+Ds_Trty.GetColumn(i, "sPaymTermCd")+"]");					
	                    break;
	                }
	            }

	            //보험기간/납입기간 세팅
	            if (i == 0) {
	                Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(i, "sInsurTermCd")); //보험기간
	                Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(i, "sPaymTermCd")); //납입기간
//	                Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(i, 3) + "/" + grd_sTrty.getCellDisplayData(i, 4)); //보기납기
	            }
	        }
	 //       Ds_Trty.FireEvent = true;
	
	        //일시납 납입기간에 따른 납입주기 세팅
	        scwin.lfn_PaymCyclSet();

	        //특약관계체크
	        scwin.lfn_TrtyList_Relation_Check();
	        AllCalcPremFlag = false; //일괄적용처리여부 체크	
	    }
	};
	
	//**********************************************************
	// 특약사항 그리드 셀클릭이벤트  
	//**********************************************************		
	scwin.lfn_Trty_OnCellClick = function(row,col) {
		var colId = grd_sTrty.getColumnID(col);
	    /*if (colId == "TrtyHnglAbbName") {
	    	// 특약명 클릭시 CBSC124P 특약상세조건[B090_Pop] 화면 팝업 
       		var promise = Promise.resolve();	 
	        var indata = {};
	        indata["sGdCd"] = sGdCd;
	        indata["sPlanCd"] = cmb_Plan.getValue(); 									//플랜코드     
	        indata["sTrtyCd"] = Ds_Trty.getCellData(row, "sTrtyCd"); 					//특약코드
	        indata["TrtyHnglAbbName"] = Ds_Trty.getCellData(row, "TrtyHnglAbbName"); 	//특약명
	        indata["sInsurTermCd"] = Ds_Trty.getCellData(row, "sInsurTermCd"); 		//보험기간
	        indata["sPaymTermCd"] = Ds_Trty.getCellData(row, "sPaymTermCd"); 			//납입기간
	        indata["sSsrtDate"] = Ds_Trty.getCellData(row, "sInsurStrtdate"); 			//계약시작일자
	        
	        promise = promise.then(function(rtnVal) {
	        var popInfo = {"width":1200,
	    	                "height":600,
	    	                "indata":indata,
	    	                //   "callback"  : scwin.popupCallback,
							   "title"     : "특약상세조건[B090_Pop]"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbsc/CBSC124P.xml", popInfo);
		    });    
	    }*/
	    if(colId == "TrtyHnglAbbName") {
	    	txtTrtyInfo.setValue("");
	    	var params = new Object();
	    	params.sTrtyCd = Ds_Trty.getCellData(row, "sTrtyCd");
	    	params.nTrtyInsAmt = Ds_Trty.getCellData(row, "nTrtyInsAmt");
	    	DS_TrtyCmpsContAmtLimitInfo.setColumnFilter({"type":"func", "colIndex":"sTrtyCd", "key":scwin.filterTrtyCmpsContAmtLimit, "condition":"and", param:params});
	    	if(DS_TrtyCmpsContAmtLimitInfo.getRowCount() > 0){
	        	txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(0, "sInfo"));
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        }else{
	        	DS_TrtyCmpsContAmtLimitInfo.removeColumnFilterAll();
	        	TrtyCmpsContAmtLimitVo.set("gdCd", Ds_LTIDA00.getCellData(0, "sGdCd"));
				TrtyCmpsContAmtLimitVo.set("gnrzCd", Ds_LTIDA00.getCellData(0, "sGnrzCd"));
				TrtyCmpsContAmtLimitVo.set("planCd", cmb_Plan.getValue());
				TrtyCmpsContAmtLimitVo.set("ssrtDate", parent.cal_sSsrtDate.getValue());
				TrtyCmpsContAmtLimitVo.set("trtyCd", Ds_Trty.getCellData(row, "sTrtyCd"));
				TrtyCmpsContAmtLimitVo.set("trtyInsAmt", Ds_Trty.getCellData(row, "nTrtyInsAmt"));
				
				var trans = new transSub();      // transaction 보낼 객체 생성
				trans.setId("retrieveTrtyCmpsContAmtLmit");     // transaction 보낼 SubmissionID
				trans.setUrl("/contract/longterm/CBSC0011.do");  // Controller 쪽으로 보낼 주소
				trans.setDs("TrtyCmpsContAmtLimitVo");
				trans.targetDs("TrtyCmpsContAmtLimitDtalVo");
				trans.callBack("scwin.subCallBack"); // 받을 Dataset을 처리시 콜백함수
				trans.send();
	        }
	        
	    }
	    else if(colId == "nTrtyInsAmt") {	 
            // 데이터셋 재구성 하기 
		    //가입금액 초기값세팅
	        wconv.clear(lds_Dsws_InsAmt);
	        util.copyM(lds_Dsws_InsAmt, Dsws_InsAmt.getAllJSON(), true);
	        util.setCompBindRefresh(lds_Dsws_InsAmt.getID());
			util.setRowPosition(lds_Dsws_InsAmt, 0);   
				       
			var fn_tmpDeptFilter = function(cellData, tmpParam, rowIdx){ 
			    var sTrtyCd = Ds_Trty.getCellData(row, "sTrtyCd"); 
			    
			    if(cellData.indexOf(sTrtyCd) > -1){ 
			        return true; 
			    }
			    return false;   //return이 true인 경우 적용하고 false인 경우 skip한다. 
			} 
			lds_Dsws_InsAmt.setColumnFilter( {type:'func', colIndex:'sTrtyCd', key:fn_tmpDeptFilter, condition:'and'});
			
	        grd_sTrty.setColumnNodeSet("nTrtyInsAmt","data:lds_Dsws_InsAmt","sHnglCdName","sCd");
	    }
	};
	
	//**********************************************************
	// 특약그리드 가입금액 컬럼 customFormatter
	//**********************************************************
	scwin.setTrtyInsAmt = function(data, formattedData, rowIndex, colIndex) {
		var sTrtyCd = Ds_Trty.getCellData(rowIndex, "sTrtyCd"); 
		var nTrtyInsAmt = Ds_Trty.getCellData(rowIndex, "nTrtyInsAmt"); 
		
		if(nTrtyInsAmt == "0") {
			formattedData = "";
		}
		else {
			for (var j = 0; j < Dsws_InsAmt.getRowCount(); j++) {
	            if (sTrtyCd == Dsws_InsAmt.getCellData(j, "sTrtyCd") && 
	                nTrtyInsAmt == Dsws_InsAmt.getCellData(j, "sCd")) {
	                formattedData =  Dsws_InsAmt.getCellData(j, "sHnglCdName");
	            	break;
	            }
	        }
        }			
		return formattedData;	
	};
	
	//**********************************************************
	// 특약그리드 뷰체인지이벤트 lfn_Trty_OnColumnChanged
	//**********************************************************
	scwin.grd_sTrty_onviewchange = function(info) {
		var row = info.rowIndex;
	    var col = info.colIndex;	    
	    var oldValue = info.oldValue;
	    var newValue = info.newValue;	
	    
		// 가입금액 값 변화시 데이터셋에 셋데이터	    
	   	if(col == 5) {
	    	Ds_Trty.setCellData(row, "nTrtyInsAmt", newValue); 
	    }
	    
	    if(col == 0) { // chk
	    	// 특약구분이 '기본'인 경우 선택해제 불가처리 
			if(Ds_Trty.getCellData(row, "TrtyFlagCd") == "01" || Ds_Trty.getCellData(row, "sScrnIndcYn") == "N"){
				Ds_Trty.setCellData(row, "chk", "1");	
			}
            //체크 해제시 해당row 초기화(보험료)
            if (Ds_Trty.getCellData(row, "chk") == "0") {
                Ds_Trty.setCellData(row, "nGrntPrem", ""); //보장보험료
                Ds_Trty.setCellData(row, "nExptGrntBussPrem", ""); //예상보장영업보험료
                //특약간 관계 체크
                scwin.lfn_Trty_Relation_Check(row, Ds_Trty.getCellData(row, "sPkgCd"), Ds_Trty.getCellData(row, "sExcluGroupCd1"), Ds_Trty.getCellData(row, "sExcluGroupCd2"), Ds_Trty.getCellData(row, "TrtyHnglAbbName"), "", false);
            } 
            else if (Ds_Trty.getCellData(row, "chk") == "1") {
                trtyCheckFlag = false;
                //특약간 관계 체크
                scwin.lfn_Trty_Relation_Check(row, Ds_Trty.getCellData(row, "sPkgCd"), Ds_Trty.getCellData(row, "sExcluGroupCd1"), Ds_Trty.getCellData(row, "sExcluGroupCd2"), Ds_Trty.getCellData(row, "TrtyHnglAbbName"), "", true);

                //기존에 특약보험료가 존재하면 다시 원복한다.
                for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
                    if (Ds_Trty.getCellData(i, "chk") == "1" && Ds_Trty.getCellData(i, "nGrntPrem") == "") {
                        Ds_Trty.setCellData(i, "nGrntPrem", Ds_Trty_Backup.getCellData(i, "nGrntPrem")); //보장보험료
                        Ds_Trty.setCellData(i, "nExptGrntBussPrem", Ds_Trty_Backup.getCellData(i, "nExptGrntBussPrem")); //예상보장영업보험료
                    }
                }
            }
	    }
	    
        if(col == 4 ) { // sPaymTermCd
            if (DsWs_PaymTerm.getRowCount() == 0) {
                wprom.alert("보험기간을 선택하세요.");
            }
            //보험기간/납입기간 세팅
            if (row == 0) {
                Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(row, "sInsurTermCd")); //보험기간
                Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(row, "sPaymTermCd")); //납입기간
           //     Ds_LTIDA00.setCellData(0, "sInsurTermPaymTermName", grd_sTrty.getCellDisplayData(nRow, 3) + "/" + grd_sTrty.getCellDisplayData(nRow, 4)); //보기납기
            }
        }
	};
		
	//**********************************************************
	// 보험료계산 버튼 클릭이벤트 
	//**********************************************************
	scwin.btn_CalPrem_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.lfn_CalcPrem_OnClick, arguments);
	}
			
	scwin.lfn_CalcPrem_OnClick = function() {
		var fLTIDA00_Flag;
	    var fPibo_Flag;
	    var fTrty_Flag;
	    
	    except = "calPrem";
	    if (!AllCalcPremFlag) {
	        wprom.alert("우선 일괄적용을 처리하세요");
	        return;
	    }
	    Ds_LTIDA00.setCellData(0, "gUserID", parent.gUserID);
	    Ds_LTIDA00.setCellData(0, "gUserIP", parent.gUserIP);
	    var sDoer = Ds_LTIDA00.getCellData(0, "sDoer");
	    if (mfn_IsEmpty(sDoer)) {
	        Ds_LTIDA00.setCellData(0, "sDoer", parent.gDoer); //취급자
	    }
	    var sFrstDoerUser = Ds_LTIDA00.getCellData(0, "sFrstDoerUser");
	    if (mfn_IsEmpty(sFrstDoerUser)) {
	        Ds_LTIDA00.setCellData(0, "sFrstDoerUser", parent.gDoerUser); //최초취급자사용인	
	    }
	    Ds_LTIDA00.setCellData(0, "sApplPlanCd", cmb_Plan.getValue()); //플랜코드(화면에서 선택된 플랜을 가져감)
	    Ds_LTIDA00.setCellData(0, "sApplPlanName", cmb_Plan.getText()); //플랜명
	    //밸리데이션 체크
	    if (scwin.lfn_ValidationCheck("all")) {
	        return;
	    }
	    
	    /*피보험자 상령일 체크*/
	    var insurAgeChk = false;
	    var msg = "";
	    var sToday = parent.sToday;
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "nGroupInrpsAge") != gfn_getInsAge(Ds_Pibo.getCellData(i, "sGroupInrpsCd"), wconv.addDateSimple(sToday, 10))) {
	            insurAgeChk = true;
	            if (msg == "") {
	                msg = Ds_Pibo.getCellData(i, "sGroupInrpsName");
	            } else {
	                msg = msg + "," + Ds_Pibo.getCellData(i, "sGroupInrpsName");
	            }
	        }
	    }
	    if (insurAgeChk == true) {
	        wprom.alert("10일이내 보험나이(상령일)이 변경되는 피보험자가 있습니다.(" + msg + ")");
	    }
	    
	    //선택된 피보험자만 처리
	    wconv.clear(Ds_Pibo_Tmp);
	    fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "sel");
	
	    //피보험자에 플랜세팅
	    Ds_Pibo_Tmp.setCellData(0, "sApplPlanCd", cmb_Plan.getValue());
	    Ds_Pibo_Tmp.setCellData(0, "sApplPlanName", cmb_Plan.getText());
	
	    //특약사항
//	    fTrty_Flag = scwin.lfn_DataChangeCheck(Ds_Trty, Ds_Trty_Tmp, "chk");
		scwin.lfn_make_Ds_Trty_Save();
	
		//기본 웹서비스
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setCalcPrem", 0, 0);
		MethodObj.setId("setCalcPrem");
		MethodObj.setUrl("/contract/CBSC042MController.do");
	    //계약기본사항을 담는다
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", "Ds_LTIDA00:A"); // 계약기본사항정보
	    MethodObj.addSingleData("LTIEA10", "LTIEA10", "Ds_LTIEA10:A"); // 단체취급정보
	    MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo_Tmp.getID()); //체크된 피보험자정보가 있으면 담음
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID()); //특약사항정보담음
	   
	   	//단체에서 피보험자 한명에 대한 보험료 계산인지 구분
        util.jSonDsCreate([{"singleCalFlag":""}], "DS_singleCalFlag");
		$w.data["DS_singleCalFlag"].setCellData(0, "singleCalFlag", "1");
	    MethodObj.addSingleData("singleCalFlag", "singleCalFlag", "DS_singleCalFlag:A", "type02");
	    //선택된 피보험자의 원보장보험료
	    var nGrntPrem = Ds_Pibo_Tmp.getCellData(wconv.findRow(Ds_Pibo_Tmp, "sel", "1"), "nGrntPrem"); //보장보험료
	    util.jSonDsCreate([{"nGrntPremOld":""}], "DS_nGrntPremOld");
		$w.data["DS_nGrntPremOld"].setCellData(0, "nGrntPremOld", nGrntPrem);
		if(util.isNull(nGrntPrem)) {
			$w.data["DS_sSsrtDate"].insertRow();
		}
	    MethodObj.addSingleData("nGrntPremOld", "nGrntPremOld", "DS_nGrntPremOld:A", "type02");
	    
		MethodObj.setHashTable();   // 저장할 때
		// DsWs_Pibo
		MethodObj.setXPath("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12");			    
		// DsWs_LTIDA00 
		MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
		//전산심사 DataObject 변경 일괄일때만 처리하고 건당보험료산출시엔 제외함
		// DsWs_LTIDA15
//		MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
		// DsWs_LTIEA10
//		MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
        // DsWs_Trty  특약 xpath 변경
        MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02");	
		        
        MethodObj.addXPath("//WARNING");	        
		MethodObj.setXPathDs();	
		MethodObj.sync();
		MethodObj.send(); 

		wconv.clear(DsWs_Warning);	        
		util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());			   	 
	    if (DsWs_Warning.getRowCount() != 0) {
	        wprom.alert(DsWs_Warning.getCellData(0, "msg"));
	        return;
	    } else {
	    	//초기화
        	wconv.clear(DsWs_Pibo);        	 
            wconv.clear(DsWs_LTIDA00);
            wconv.clear(DsWs_Trty);
            wconv.clear(Ds_Trty_Backup); //특약 백업용			
        	// DsWs_Pibo 
//	    	util.copyM(DsWs_Pibo, _tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"),true);	   		            
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"), "DsWs_Pibo", "Y");

          	// DsWs_LTIDA00
//			util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), true);	
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");

           	// DsWs_Trty  
//           	util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"), true);
			util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"), "DsWs_Trty", "Y");
	
	        //특약정보중 체크된것의 특약코드를 찾아서 보험료를 넣어준다.
	        if (Ds_Trty.getTotalRow() > 0) {
	            //trace("DsWs_Trty=="+DsWs_Trty.SaveXML());				
	            for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	                if (Ds_Trty.getCellData(i, "chk") == "1") {
	                    //가입시보장보험료
	                    Ds_Trty.setCellData(i, "nGrntPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nGrntPrem"));
	                    //alert(DsWs_Trty.GetColumn(DsWs_Trty.FindRow("sTrtyCd", Ds_Trty.GetColumnNF(i, "sTrtyCd")), "nExptGrntBussPrem"));
	                    //예상보장영업보험료		
	                    Ds_Trty.setCellData(i, "nExptGrntBussPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nExptGrntBussPrem"));
	
	                    //저장하면서 추가된 사항 복사한다.
	                    Ds_Trty.setCellData(i, "sPlanNo", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPlanNo")); //설계번호		
	                    Ds_Trty.setCellData(i, "sPsnPrprtGroupFlgcd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPsnPrprtGroupFlgcd")); //인물단체구분코드
	                    Ds_Trty.setCellData(i, "sGdCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGdCd")); //상품코드
	                    Ds_Trty.setCellData(i, "nPsnPrprtGroupSeqno", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nPsnPrprtGroupSeqno")); //인물단체일련번호
	                    Ds_Trty.setCellData(i, "nCrChngNo", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nCrChngNo")); //계약변경번호
	                    Ds_Trty.setCellData(i, "sInsurStrtdate", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurStrtdate")); //보험시작일자
	                    Ds_Trty.setCellData(i, "sInsurEndDate", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurEndDate")); //보험종료일자
	                    Ds_Trty.setCellData(i, "sTrtyStatCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sTrtyStatCd")); //
	                    Ds_Trty.setCellData(i, "nTrtyOrdr", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nTrtyOrdr")); //특약순서
	                    Ds_Trty.setCellData(i, "sBascSlctFlagCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sBascSlctFlagCd")); //기본선택구분코드
	                    Ds_Trty.setCellData(i, "sAutoRenwlAvaYn", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sAutoRenwlAvaYn")); //자동갱신가능여부
	                    Ds_Trty.setCellData(i, "sGrntAccuFlagCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGrntAccuFlagCd")); //보장적립구분코드
	                    Ds_Trty.setCellData(i, "TrtyTypeCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "TrtyTypeCd")); //특약유형코드
	                    Ds_Trty.setCellData(i, "nAccuPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nAccuPrem")); //적립보험료
	                    Ds_Trty.setCellData(i, "nRealInsurTerm", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nRealInsurTerm")); //실보험기간
	                    Ds_Trty.setCellData(i, "nRealPaymTerm", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nRealPaymTerm")); //실납입기간
	                    Ds_Trty.setCellData(i, "nEndAge", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nEndAge")); //만기연령
	                    Ds_Trty.setCellData(i, "nPaymAge", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nPaymAge")); //납입연령
	                    Ds_Trty.setCellData(i, "sGnrzCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGnrzCd")); //종형코드					
	                    Ds_Trty.setCellData(i, "nTrtyPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nTrtyPrem")); //특약보험료					
	                    Ds_Trty.setCellData(i, "sResvAmtKey", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sResvAmtKey", Ds_Trty.getCellData(i, "sTrtyCd")), "sResvAmtKey")); //준비금
	                    Ds_Trty.setCellData(i, "sTrtyTypeCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sTrtyTypeCd")); //특약유형코드
	                    if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "N") {
	                        Ds_Trty.setCellData(i, "sPaymTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPaymTermCd")); //납입기간코드					
	                        Ds_Trty.setCellData(i, "sInsurTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurTermCd")); //보험기간코드
	                    }
	                }
	            }
	        }
	
			util.setCompBindRefresh(Ds_Trty.getID());
			util.setRowPosition(Ds_Trty, 0);
			
	        //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	        wconv.copy(Ds_Trty_Backup, "Ds_Trty");
	        wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	
	        //피보험자 예상환급금계산
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setCalCnclRtnAmt", 0, 0);
			MethodObj.setId("setCalcPrem");
			MethodObj.setUrl("/contract/CBSC042MController.do");
			
	        //계약기본사항을 담는다
	        MethodObj.addSingleData("LTIDA00", "LTIDA00", "DsWs_LTIDA00:A"); // 계약기본사항정보
	        MethodObj.addVectorData("vLTIDA12", "LTIDA12", "DsWs_Pibo:A"); //피보험자정보가 있으면 담음	
	        MethodObj.addVectorData("vLTIDA02", "LTIDA02", "DsWs_Trty:A"); //특약사항정보담음

			MethodObj.setHashTable();   // 저장할 때
			// DsWs_Pibo
			MethodObj.setXPath("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12");			    
			// DsWs_LTIDA00
			MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");				        
	        MethodObj.addXPath("//WARNING");	        
//			MethodObj.setXPathDs();	
			MethodObj.sync();
			MethodObj.send(); 
	
			wconv.clear(DsWs_Warning);	        
			//util.interfaceKey(_tranSync.result.serviceDs);	
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());			   	 
	        wconv.clear(DsWs_Pibo);
	        if (DsWs_Warning.getRowCount() != 0) {
	            wprom.alert(DsWs_Warning.getCellData(0, "msg"));
	            return;
	        } 
	        else {
	        	wconv.clear(DsWs_Pibo);        	 
            	wconv.clear(DsWs_LTIDA00);
 	       		// DsWs_Pibo 
//	    		util.copyM(DsWs_Pibo, _tranSync.getDsJson("LTIDA12"), true);	   		            
 				util.jSonDsCreate(_tranSync.getDsJson("LTIDA12"), "DsWs_Pibo", "Y");
          		// DsWs_LTIDA00
//				util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("LTIDA00"), true);	
				util.jSonDsCreate(_tranSync.getDsJson("LTIDA00"), "DsWs_LTIDA00", "Y");
	
	            //계약기본정보의 보험료를 세팅
	            //wconv.copy(Ds_LTIDA00, "DsWs_LTIDA00");
	            util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);
		        util.setCompBindRefresh(Ds_LTIDA00.getID());
				util.setRowPosition(Ds_LTIDA00, 0);
	            
	            //DsWs_Pibo 해당된 피보험자만 세팅한다.
	            Ds_Pibo.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nGrntPrem", DsWs_Pibo.getCellData(wconv.findRow(DsWs_Pibo, "sel", "1"), "nGrntPrem")); //보장보험료
	            Ds_Pibo.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nMinPrem", DsWs_Pibo.getCellData(wconv.findRow(DsWs_Pibo, "sel", "1"), "nMinPrem")); //최소보험료
	            Ds_Pibo.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "nMaxPrem", DsWs_Pibo.getCellData(wconv.findRow(DsWs_Pibo, "sel", "1"), "nMaxPrem")); //최대보험료
	    
	            modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	            //경과기간환급금배치처리 초기화
	            ExptRtnAmtFlag = false;
	            wprom.alert("정상처리되었습니다");
	        }
	    }
	    except = "";
	    
	};
	
	//**********************************************************
	// 선택된 피보험자만 가져오기   
	//**********************************************************				
	scwin.lfn_make_Ds_Pibo_Save = function() {
	    //Ds_Pibo_Save.removeAll();
	    wconv.clear(Ds_Pibo_Save);
	    for (var i = 0; i < Ds_Pibo_Tmp.getTotalRow(); i++) {
	    	if (Ds_Pibo_Tmp.getCellData(i, "sel") == "1") {
	            util.appendRow(Ds_Pibo_Tmp);
	            for (var j = 0; j < Ds_Pibo_Tmp.getTotalCol(); j++) {
	                Ds_Pibo_Tmp.setCellData((Ds_Pibo_Tmp.getRowCount() - 1), Ds_Pibo_Tmp.getColumnID(j), Ds_Pibo_Tmp.getCellData(i, Ds_Pibo_Tmp.getColumnID(j)));
	            }
	        }
	    }
	};
	
	//**********************************************************
	// 체크된 특약만 가져오기   
	//**********************************************************				
	scwin.lfn_make_Ds_Trty_Save = function() {
	    //Ds_Trty_Save.removeAll();
	    wconv.clear(Ds_Trty_Save);
	    var trtyFilter = Ds_Trty.getFilterList();
	    Ds_Trty.clearFilter();
	    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	    	if (Ds_Trty.getCellData(i, "chk") == "1") {
	            util.appendRow(Ds_Trty_Save);
	            for (var j = 0; j < Ds_Trty.getTotalCol(); j++) {
	                Ds_Trty_Save.setCellData((Ds_Trty_Save.getRowCount() - 1), Ds_Trty.getColumnID(j), Ds_Trty.getCellData(i, Ds_Trty.getColumnID(j)));
	            }
	        }
	    }
	    for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	
	};
	
	//**********************************************************
	// 일괄적용 버튼 클릭이벤트   
	//**********************************************************	
	scwin.btn_AllCalPrem_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.lfn_AllCalcPrem_OnClick, arguments);
	};
			
	scwin.lfn_AllCalcPrem_OnClick = function() {
		var fLTIDA00_Flag;
	    var fPibo_Flag;
	    var fTrty_Flag;
	    except = "allPrem";
	    if (Ds_Pibo.getRowCount() > 100) {
	        wprom.alert("피보험자 100명 초과는 보험료배치버튼을 눌러주세요.");
	        return;
	    }
	    /*util.insertColumn(Ds_LTIDA00, [
	        [
	            "gUserID",
	            "gUserID",
	            "text"
	        ]
	    ]);
	    util.insertColumn(Ds_LTIDA00, [
	        [
	            "gUserIP",
	            "gUserIP",
	            "text"
	        ]
	    ]);*/
	    Ds_LTIDA00.setCellData(0, "gUserID", parent.gUserID);
	    Ds_LTIDA00.setCellData(0, "gUserIP", parent.gUserIP);
	    if (util.isNull(Ds_LTIDA00.getCellData(0, "sDoer"))) {
	        Ds_LTIDA00.setCellData(0, "sDoer", parent.gDoer); //취급자
	    }
	    if (util.isNull(Ds_LTIDA00.getCellData(0, "sDoerUser"))) {
	        Ds_LTIDA00.setCellData(0, "sDoerUser", parent.gDoerUser); //사용인
	    }
	    if (util.isNull(Ds_LTIDA00.getCellData(0, "sFrstDoerUser"))) {
	        Ds_LTIDA00.setCellData(0, "sFrstDoerUser", parent.gDoerUser); //최초취급자사용인	
	    }
	    Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    Ds_LTIDA00.setCellData(0, "sApplPlanCd", cmb_Plan.getValue()); //플랜코드(화면에서 선택된 플랜을 가져감)
	    Ds_LTIDA00.setCellData(0, "sApplPlanName", cmb_Plan.getText()); //플랜명	
	    Ds_LTIDA00.setCellData(0, "sGdCd", parent.edt_sGdCd.getValue()); //상품코드
	    Ds_LTIDA00.setCellData(0, "sGnrzCd", parent.edt_sGnrzCd.getValue()); //종형코드
	    Ds_LTIDA00.setCellData(0, "nBussPrem", DsWs_Plan.getCellData(cmb_Plan.getSelectedIndex(), "nBussPrem")); //플랜에서 나온 영업보험료
	    //Ds_LTIDA00.SetColumn(0, "nMinPrem", DsWs_Plan.GetColumn(cmb_Plan.Index, "nMinPremAmt"));//플랜에서 나온 최소영업보험료
	    //Ds_LTIDA00.AddColumn("nMinPremRate");
	    //Ds_LTIDA00.SetColumn(0, "nMinPremRate", DsWs_Plan.GetColumn(cmb_Plan.Index, "nMinPremRate"));//플랜에서 나온 최소영업보험료비율
	    Ds_LTIDA00.setCellData(0, "sSaleChnl", parent.sSaleChnl); //판매채널구분코드
	    Ds_LTIDA00.setCellData(0, "sSaleChnlDtal", parent.sSaleChnlDtal); //판매채널상세코드
	    Ds_LTIDA00.setCellData(0, "nInrpsPsct", wconv.toString(Ds_Pibo.getRowCount())); //피보험자인원수
	    //특약사항 저장(대표 특약(납기,보기)
	    /*util.insertColumn(Ds_LTIDA00, [
	        [
	            "sInsurTermCd",
	            "sInsurTermCd",
	            "text"
	        ]
	    ]);
	    util.insertColumn(Ds_LTIDA00, [
	        [
	            "sPaymTermCd",
	            "sPaymTermCd",
	            "text"
	        ]
	    ]);*/
	    Ds_LTIDA00.setCellData(0, "sInsurTermCd", Ds_Trty.getCellData(0, "sInsurTermCd")); //보험기간
	    Ds_LTIDA00.setCellData(0, "sPaymTermCd", Ds_Trty.getCellData(0, "sPaymTermCd")); //납입기간
	    //대면/비대면체크  Y :  대면 ,  N : 비대면
	    if (parent.gFaceSalesYN != "Y") {
	        //비대면
	        Ds_LTIDA00.setCellData(0, "sScanObjtYn", "N"); //스캔대상여부
	    } else {
	        Ds_LTIDA00.setCellData(0, "sScanObjtYn", "Y"); //스캔대상여부
	    }
	
	    //밸리데이션 체크
	    if (scwin.lfn_ValidationCheck("all")) {
	        return;
	    }
		
	    //데이터 신규/변경/삭제값 담음
	    //계약기본사항 
	    //fLTIDA00_Flag = lfn_DataChangeCheck(Ds_LTIDA00, Ds_LTIDA00_Tmp, ""); 
	    //피보험자
	    fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "all");
	    //특약사항
//	    fTrty_Flag = scwin.lfn_DataChangeCheck(Ds_Trty, Ds_Trty_Tmp, "");
		scwin.lfn_make_Ds_Trty_Save();
/*		util.copyM(Ds_Trty_Tmp, Ds_Trty.getAllJSON());
		util.setCompBindRefresh(Ds_Trty_Tmp.getID());
		util.setRowPosition(Ds_Trty_Tmp, 0);   
*/
	    var resultCheck = false;
	
	    var result;
	    var exceptionCheck = false;
        wconv.clear(Ds_Pibo_Tmp_Backup);	    
	    for (var ii = 0; ii < Ds_Pibo.getRowCount(); ii++) {
	        //기본 웹서비스
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setCalcPrem", 0, 0);
			MethodObj.setId("setCalcPrem");
			MethodObj.setUrl("/contract/CBSC042MController.do");

	        //계약기본사항을 담는다
	        MethodObj.addSingleData("LTIDA00", "LTIDA00", "Ds_LTIDA00:A"); // 계약기본사항정보
	        MethodObj.addSingleData("LTIEA10", "LTIEA10", "Ds_LTIEA10"); // 단체취급정보

	        wconv.clear(Ds_Pibo_Tmp);
//	        util.appendRow(Ds_Pibo_Tmp);
//	        wconv.mi_copyRow(Ds_Pibo_Tmp, 0, Ds_Pibo, i);
			Ds_Pibo_Tmp.setRowJSON(0, Ds_Pibo.getRowJSON(ii));
			MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo_Tmp.getID()+":A"); //피보험자정보가 있으면 담음	
			
	        for (var j = 0; j < Ds_Trty_Save.getRowCount(); j++) {
	            Ds_Trty_Save.setCellData(j, "nPsnPrprtGroupSeqno", Ds_Pibo_Tmp.getCellData(0, "nInrpsSeqno"));
	        }
	        if (Ds_Trty_Save.getRowCount() > 0) {	
	            MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Save.getID()+":A"); //특약사항정보담음
	        } 
	        else {	
				// 특약정보 필터 풀기 
	 			Ds_Trty.removeColumnFilterAll();
	        	util.setCompBindRefresh(Ds_Trty.getID());
				util.setRowPosition(Ds_Trty, 0);   
			
	            MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty.getID()); //특약사항정보담음
	        }
			//단체에서 피보험자 한명에 대한 보험료 계산인지 구분
	        util.jSonDsCreate([{"singleCalFlag":""}], "DS_singleCalFlag");
			$w.data["DS_singleCalFlag"].setCellData(0, "singleCalFlag", "0");
		    MethodObj.addSingleData("singleCalFlag", "singleCalFlag", $w.data["DS_singleCalFlag"].getID(), "type02");
		    //선택된 피보험자의 원보장보험료
		    util.jSonDsCreate([{"nGrntPremOld":""}], "DS_nGrntPremOld");
			$w.data["DS_nGrntPremOld"].setCellData(0, "nGrntPremOld", "0");
		    MethodObj.addSingleData("nGrntPremOld", "nGrntPremOld", $w.data["DS_nGrntPremOld"].getID(), "type02");
		    
		    MethodObj.setHashTable();   // 저장할 때
		    
		    // DsWs_Pibo 피보험자 xpath 변경 
		    MethodObj.setXPath("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12");	
		    
	        // 첫번째에 모든 정보 다 받아오고 첫번째이후는 피보험자정보만 받아온다.
	        if (ii == 0) {         
				// DsWs_LTIDA00
				MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
				// DsWs_LTIDA15
				MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");	
				// DsWs_LTIEA10
				MethodObj.addXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");	
	            // DsWs_Trty  특약 xpath 변경
	            MethodObj.addXPath("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02");	
	        } 
	        
	        MethodObj.addXPath("//WARNING");	        
			MethodObj.setXPathDs();	
			MethodObj.sync();
			MethodObj.send(); 

			wconv.clear(DsWs_Warning);	        
			//util.interfaceKey(_tranSync.result.serviceDs);	
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());		
	        if (DsWs_Warning.getRowCount() != 0) {
	            scwin.lfn_Exception(DsWs_Warning.getCellData(0, "msg"), "2");
	            //alert(DsWs_Warning.GetColumn(0, "msg"));
	            exceptionCheck = true;
	            resultCheck = false;
	            //break;
	            return;
	        } 
	        else {
	        	wconv.clear(DsWs_Pibo);			
	        	// DsWs_Pibo 
//		    	util.copyM(DsWs_Pibo, _tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"),true);	
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"), "DsWs_Pibo", "Y");
							            
	            if (ii == 0) {
	            	//초기화
		            wconv.clear(DsWs_LTIDA00);
		            wconv.clear(DsWs_LTIDA15);
		            wconv.clear(DsWs_LTIEA10);
		            wconv.clear(DsWs_Trty);
		            wconv.clear(Ds_Trty_Backup); //특약 백업용
	            
	            	// DsWs_LTIDA00
//					util.copyM(DsWs_LTIDA00, _tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), true);	
					util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");
					// DsWs_LTIDA15
//					util.copyM(DsWs_LTIDA15, _tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), true);	
					util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15"), "DsWs_LTIDA15", "Y");
					// DsWs_LTIEA10
//					util.copyM(DsWs_LTIEA10, _tranSync.getDsJson("//hashtable/data[@hashkey='LTIEA10']/LTIEA10"), true);	
					util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIEA10']/LTIEA10"), "DsWs_LTIEA10", "Y");
		            // DsWs_Trty  
//		            util.copyM(DsWs_Trty, _tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"), true);
					util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='vLTIDA02']/vector/data/LTIDA02"), "DsWs_Trty", "Y");
		            
	                //계약기본정보의 보험료를 세팅
//	                wconv.copy(Ds_LTIDA00, "DsWs_LTIDA00");
					wconv.clear(Ds_LTIDA00);
					util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);	
					util.setCompBindRefresh(Ds_LTIDA00.getID());
					util.setRowPosition(Ds_LTIDA00, 0);   	
					
	                //단체관리복사
//	                wconv.copy(Ds_LTIEA10, "DsWs_LTIEA10");
					wconv.clear(Ds_LTIEA10);
					util.copyM(Ds_LTIEA10, DsWs_LTIEA10.getAllJSON(), true);
					util.setCompBindRefresh(Ds_LTIEA10.getID());
					util.setRowPosition(Ds_LTIEA10, 0);   
					
	                //특약정보중 체크된것의 특약코드를 찾아서 보험료를 넣어준다.	
	                if (Ds_Trty.getTotalRow() > 0) {
	                    for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	                        if (Ds_Trty.getCellData(i, "chk") == "1") {
	                            //가입시보장보험료
	                            Ds_Trty.setCellData(i, "nGrntPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nGrntPrem"));
	                            //alert(DsWs_Trty.GetColumn(DsWs_Trty.FindRow("sTrtyCd", Ds_Trty.GetColumnNF(i, "sTrtyCd")), "nExptGrntBussPrem"));
	                            //예상보장영업보험료		
	                            Ds_Trty.setCellData(i, "nExptGrntBussPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nExptGrntBussPrem"));
	
	                            //저장하면서 추가된 사항 복사한다.
	                            Ds_Trty.setCellData(i, "sPlanNo", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPlanNo")); //설계번호		
	                            Ds_Trty.setCellData(i, "sPsnPrprtGroupFlgcd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPsnPrprtGroupFlgcd")); //인물단체구분코드
	                            Ds_Trty.setCellData(i, "sGdCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGdCd")); //상품코드
	                            Ds_Trty.setCellData(i, "nPsnPrprtGroupSeqno", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nPsnPrprtGroupSeqno")); //인물단체일련번호
	                            Ds_Trty.setCellData(i, "nCrChngNo", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nCrChngNo")); //계약변경번호
	                            Ds_Trty.setCellData(i, "sInsurStrtdate", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurStrtdate")); //보험시작일자
	                            Ds_Trty.setCellData(i, "sInsurEndDate", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurEndDate")); //보험종료일자
	                            Ds_Trty.setCellData(i, "sTrtyStatCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sTrtyStatCd")); //
	                            Ds_Trty.setCellData(i, "nTrtyOrdr", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nTrtyOrdr")); //특약순서
	                            Ds_Trty.setCellData(i, "sBascSlctFlagCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sBascSlctFlagCd")); //기본선택구분코드
	                            Ds_Trty.setCellData(i, "sAutoRenwlAvaYn", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sAutoRenwlAvaYn")); //자동갱신가능여부
	                            Ds_Trty.setCellData(i, "sGrntAccuFlagCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGrntAccuFlagCd")); //보장적립구분코드
	                            Ds_Trty.setCellData(i, "TrtyTypeCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "TrtyTypeCd")); //특약유형코드
	                            Ds_Trty.setCellData(i, "nAccuPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nAccuPrem")); //적립보험료
	                            Ds_Trty.setCellData(i, "nRealInsurTerm", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nRealInsurTerm")); //실보험기간
	                            Ds_Trty.setCellData(i, "nRealPaymTerm", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nRealPaymTerm")); //실납입기간
	                            Ds_Trty.setCellData(i, "nEndAge", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nEndAge")); //만기연령
	                            Ds_Trty.setCellData(i, "nPaymAge", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nPaymAge")); //납입연령
	                            Ds_Trty.setCellData(i, "sGnrzCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sGnrzCd")); //종형코드					
	                            Ds_Trty.setCellData(i, "nTrtyPrem", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "nTrtyPrem")); //특약보험료					
	                            Ds_Trty.setCellData(i, "sResvAmtKey", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sResvAmtKey", Ds_Trty.getCellData(i, "sTrtyCd")), "sResvAmtKey")); //준비금
	                            Ds_Trty.setCellData(i, "sTrtyTypeCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sTrtyTypeCd")); //특약유형코드
	                            if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "N") {
	                                Ds_Trty.setCellData(i, "sPaymTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sPaymTermCd")); //납입기간코드					
	                                Ds_Trty.setCellData(i, "sInsurTermCd", DsWs_Trty.getCellData(wconv.findRow(DsWs_Trty, "sTrtyCd", Ds_Trty.getCellData(i, "sTrtyCd")), "sInsurTermCd")); //보험기간코드
	                            }
	                        }
	                    }
	                }             
	               
	                //특약데이터 변경여부를 위해 백업데이터셋을 만든다.
	                //wconv.copy(Ds_Trty_Backup, "Ds_Trty");
	                wconv.clear(Ds_Trty_Backup);
	                util.copyM(Ds_Trty_Backup, Ds_Trty.getAllJSON(), true);
	                wconv.filter(Ds_Trty_Backup, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	                
	                wconv.filter(Ds_Trty, "wconv.pos(sScrnIndcYn, 'Y') >= 0");
	            }
	            Ds_Pibo_Tmp_Backup.setRowJSON( ii , DsWs_Pibo.getRowJSON(0) , false );
	            resultCheck = true;				
	        }		   
	    }
	     
	    if (resultCheck) {
	        //총보험료 산출
	        var nGrntPremSum = 0;
	        //var nExptEndRtnStndAmtSum = 0;//만기환급금산출요소1 
	        var nMaxPremSum = 0;
	        var nMinPremSum = 0;
	        //보장보험료합계 계산
	        for (var i = 0; i < Ds_Pibo_Tmp_Backup.getRowCount(); i++) {
	            //피보험자별 보장보험료합
	            nGrntPremSum = nGrntPremSum + wconv.toNumber(Ds_Pibo_Tmp_Backup.getCellData(i, "nGrntPrem"));
	            //피보험자별 최대보험료합
	            nMaxPremSum = nMaxPremSum + wconv.toNumber(Ds_Pibo_Tmp_Backup.getCellData(i, "nMaxPrem"));
	            //피보험자별 최소보험료합
	            nMinPremSum = nMinPremSum + wconv.toNumber(Ds_Pibo_Tmp_Backup.getCellData(i, "nMinPrem"));
	        }
	        DsWs_LTIDA00.setCellData(0, "nGrntPrem", wconv.toString(nGrntPremSum));
	        //기본 웹서비스
	        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setTotCalcPrem", 0, 0);
			MethodObj.setId("setTotCalcPrem");
			MethodObj.setUrl("/contract/CBSC042MController.do");
	        
	        //영업보험료 x 인원수
	        DsWs_LTIDA00.setCellData(0, "nBussPrem", wconv.toString(wconv.toNumber(DsWs_LTIDA00.getCellData(0, "nBussPrem")) * wconv.toNumber(DsWs_LTIDA00.getCellData(0, "nInrpsPsct"))));
	
	        //계약기본사항을 담는다
	        MethodObj.addSingleData("LTIDA00", "LTIDA00", DsWs_LTIDA00.getID()); // 계약기본사항정보
	        //주피보험자 나이
	        util.jSonDsCreate([{"nGroupInrpsAge":""}], "DS_nGroupInrpsAge");
			$w.data["DS_nGroupInrpsAge"].setCellData(0, "nGroupInrpsAge", Ds_Pibo_Tmp_Backup.getCellData(0, "nGroupInrpsAge"));
		    if(util.isNull(Ds_Pibo_Tmp_Backup.getCellData(0, "nGroupInrpsAge"))) {
				$w.data["DS_nGroupInrpsAge"].insertRow();
			}
		    MethodObj.addSingleData("nGroupInrpsAge", "nGroupInrpsAge", $w.data["DS_nGroupInrpsAge"].getID(), "type02");

	        MethodObj.setHashTable();   // 저장할 때
				        
	        // DsWs_LTIDA00
		    MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
			MethodObj.addXPath("//WARNING");	        
			MethodObj.setXPathDs();	
			MethodObj.sync();
			MethodObj.send(); 
			
			wconv.clear(DsWs_Warning);
			util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());		
			if(DsWs_Warning.getRowCount() != 0) {
				//alert(DsWs_Warning.getCellData(0, "msg"));
				scwin.lfn_Exception(DsWs_Warning.getCellData(0, "msg"), "2");
				exceptionCheck = true;
	            return;
			} 
			else {  
				wconv.clear(DsWs_LTIDA00);
	        	      	   
            	// DsWs_LTIDA00             
//	            util.copyM(DsWs_LTIDA00,_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"),true);
				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");
	        	
	            //피보험자별 예상환급금계산
	            for (var i = 0; i < Ds_Pibo_Tmp_Backup.getRowCount(); i++) {
	                //기본 웹서비스
	                var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setTotCalCnclRtnAmt", 0, 0);
					MethodObj.setId("setTotCalCnclRtnAmt");
					MethodObj.setUrl("/contract/CBSC042MController.do");
	 
	                //계약기본사항을 담는다
	                MethodObj.addSingleData("LTIDA00", "LTIDA00", DsWs_LTIDA00.getID()+":A"); // 계약기본사항정보
	                
	                wconv.clear(Ds_Pibo_Tmp);
//	                util.appendRow(Ds_Pibo_Tmp);
//	                wconv.mi_copyRow(Ds_Pibo_Tmp, 0, Ds_Pibo_Tmp_Backup, i);
					Ds_Pibo_Tmp.setRowJSON(0, Ds_Pibo_Tmp_Backup.getRowJSON(i));
				
	                MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo_Tmp.getID()+":A"); //피보험자정보가 있으면 담음	
	                MethodObj.addVectorData("vLTIDA02", "LTIDA02", DsWs_Trty.getID()+":A"); //특약사항정보담음

	                MethodObj.setHashTable();   // 저장할 때
        
			        // DsWs_Pibo
				    MethodObj.setXPath("//hashtable/data[@hashkey='vLTIDA12']/vector/data/LTIDA12"); 
					MethodObj.addXPath("//WARNING");	        
					MethodObj.setXPathDs();	
					MethodObj.sync();
					MethodObj.send(); 
					
	                wconv.clear(DsWs_Warning);
					util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());		
					if(DsWs_Warning.getRowCount() != 0) {
						//alert(DsWs_Warning.getCellData(0, "msg"));
						scwin.lfn_Exception(DsWs_Warning.getCellData(0, "msg"), "2");
						exceptionCheck = true;
			            break;
			            return;
					} 
					else {
		                wconv.clear(DsWs_Pibo);					
					}
	            }

	            //에러발생시 더 진행안함	
	            if (exceptionCheck) {
	                return;
	            }
	
	            //만기환급금산출요소1를 담는다.
	            //DsWs_LTIDA00.AddColumn("nExptEndRtnStndAmtSum");
	            //DsWs_LTIDA00.SetColumn(0, "nExptEndRtnStndAmtSum", toString(nExptEndRtnStndAmtSum));
	            //총환급금으로 환금율계산 보험계약에 반영함	
	            //기본 웹서비스
	            var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "setTotCalCnclRtntPrem", 0, 0);
				MethodObj.setId("setTotCalCnclRtntPrem");
				MethodObj.setUrl("/contract/CBSC042MController.do");

	            //계약기본사항을 담는다
	            MethodObj.addSingleData("LTIDA00", "LTIDA00", DsWs_LTIDA00.getID()+":A"); // 계약기본사항정보
	            wconv.clear(Ds_Pibo_Tmp);
//	            util.appendRow(Ds_Pibo_Tmp);
//	            wconv.mi_copyRow(Ds_Pibo_Tmp, 0, Ds_Pibo_Tmp_Backup, 0);
				Ds_Pibo_Tmp.setRowJSON(0, Ds_Pibo_Tmp_Backup.getRowJSON(0));
	            
	            MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo_Tmp.getID()+":A"); //첫번째피보험자정보

	           	MethodObj.setHashTable();   // 저장할 때
			
		        // DsWs_LTIDA00
			    MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");	
				MethodObj.addXPath("//WARNING");	        
				MethodObj.setXPathDs();	
				MethodObj.sync();
				MethodObj.send(); 
				
				wconv.clear(DsWs_Warning);
		        util.jSonDsCreate(_tranSync.getDsJson("//WARNING"), DsWs_Warning.getID());		
				if(DsWs_Warning.getRowCount() != 0) {
					//alert(DsWs_Warning.getCellData(0, "msg"));
					scwin.lfn_Exception(DsWs_Warning.getCellData(0, "msg"), "2");
		            return;
				} 
				else { 
					wconv.clear(DsWs_LTIDA00);
				       	   
	            	// DsWs_LTIDA00             
//		            util.copyM(DsWs_LTIDA00,_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"),true);
    				util.jSonDsCreate(_tranSync.getDsJson("//hashtable/data[@hashkey='LTIDA00']/LTIDA00"), "DsWs_LTIDA00", "Y");
	
	                //계약기본정보의 보험료를 세팅
	                //wconv.copy(Ds_LTIDA00, "DsWs_LTIDA00");
					util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);
		            util.setCompBindRefresh(Ds_LTIDA00.getID());
					util.setRowPosition(Ds_LTIDA00, 0);
	                
	                //피보험자 그리드로 옮긴다.
	                //wconv.copy(Ds_Pibo, "Ds_Pibo_Tmp_Backup");
	                util.copyM(Ds_Pibo, Ds_Pibo_Tmp_Backup.getAllJSON(), true);
		            util.setCompBindRefresh(Ds_Pibo.getID());
					util.setRowPosition(Ds_Pibo, 0);
					
	                //화면에 설계번호가 없으면 채번된 번호를 채워준다.
	                if (wconv.length(parent.medt_PlanNo.getValue()) == 0) {
	                    parent.medt_PlanNo.setValue(Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                }
	
	                //채번된 설계번호를 백업한다.
	                parent.sPlanNoBack = Ds_LTIDA00.getCellData(0, "sPlanNo");
	                parent.sPlanNoChFlag = false;
	
	                //일괄적용 처리 적용
	                AllCalcPremFlag = true;
	                modifyFlag = false; //화면값중 기존값에서 변경된 경우 체크
	                //경과기간환급금배치처리 초기화
	                ExptRtnAmtFlag = false;
	                wprom.alert("정상처리되었습니다");
	                //wconv.copy(Ds_Pibo_BackUp, Ds_Pibo);
	                util.copyM(Ds_Pibo_BackUp, Ds_Pibo.getAllJSON(), true);
		            util.setCompBindRefresh(Ds_Pibo_BackUp.getID());
					util.setRowPosition(Ds_Pibo_BackUp, 0);
					
	                /*util.insertColumn(Ds_Pibo_BackUp, [
	                    [
	                        "hasPronCmpsTrty",
	                        "hasPronCmpsTrty",
	                        "text"
	                    ]
	                ]);
	                util.insertColumn(Ds_Pibo_BackUp, [
	                    [
	                        "hasFxamtCmps",
	                        "hasFxamtCmps",
	                        "text"
	                    ]
	                ]);
	                util.insertColumn(Ds_Pibo_BackUp, [
	                    [
	                        "MediFlag",
	                        "MediFlag",
	                        "text"
	                    ]
	                ]);
	                util.insertColumn(Ds_Pibo_BackUp, [
	                    [
	                        "fixFlag",
	                        "fixFlag",
	                        "text"
	                    ]
	                ]);*/
	                for (var i = 0; i < Ds_Pibo_BackUp.getRowCount(); i++) {
	                    Ds_Pibo_BackUp.setCellData(i, "hasPronCmpsTrty", "N");
	                    Ds_Pibo_BackUp.setCellData(i, "hasFxamtCmps", "Y");
	                    Ds_Pibo_BackUp.setCellData(i, "MediFlag", "N");
	                    Ds_Pibo_BackUp.setCellData(i, "fixFlag", "N");
	                }
	            }
	        }
	    }
	    
	    except = "";	    
	};
	
	//**********************************************************
	// 영업보험료 입력후 클릭시 보험료를 계산 저장 
	//**********************************************************	
	scwin.btn_Input_Save_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.lfn_calSave_onClick, arguments);
	};
			
	scwin.lfn_calSave_onClick = function() {
		except = "calPrem";

	    //피보험자나 특약정보가 변경되었는지 체크한다.
	    if (scwin.lfn_ValidationCheck("level3")) {
	        return;
	    }
	
	    //최소영업보험료 체크
	    if (scwin.lfn_checkMinPremAmt() == false) {
	        return;
	    }
	    if (modifyFlag) {
	        wprom.alert("계약사항이 변경되었습니다.\n 보험료산출을 처리해주세요.");
	        return;
	    }
	    var nGrntPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nGrntPrem")); //보장보험료
	    var nAccuPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nAccuPrem")); //적립보험료
	    //var nBussPrem = ToNumber(Ds_LTIDA00.GetColumn(0, "nBussPrem"));//영업보험료
	    var nBussPrem = wconv.toNumber(medt_nBussPrem.getValue()); //영업보험료
	    var nDcPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nDcPrem")); //할인보험료
	    var nApplPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nApplPrem")); //적용보험료
	    var nMinPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMinPrem")); //최소보험료
	    var nMaxPrem = wconv.toNumber(Ds_LTIDA00.getCellData(0, "nMaxPrem")); //최대보험료
	    var nGroupDcrt = wconv.toNumber(Ds_LTIEA10.getCellData(0, "nGroupDcrt")) / 100; //단체할인율
	    //입력된 영업보험료가 최대/최소값 사이인지 체크
	    if (!mfn_IsEmpty(wconv.toString(nBussPrem)) && nBussPrem >= nMinPrem && nBussPrem <= nMaxPrem) {
	    } 
	    else {
	        wprom.alertF("영업보험료는 최소/최대보험료 사이값으로 입력해야 합니다.", {}, medt_nBussPrem);
	        //medt_nBussPrem.focus();
	        return;
	    }	
	    
	    //적립보험료 = 영업보험료 - 보장보험료
	    nAccuPrem = nBussPrem - nGrntPrem;
	
	    //할인보험료 = 영업보험료 X 상품서비스.상품별할인율
	    nDcPrem = nBussPrem * nGroupDcrt;
	
	    //적용보험료 = 영업보험료 - 할인보험료
	    //nApplPrem = nBussPrem - nDcPrem;
	    //trace("nGrntPrem="+nGrntPrem+"==nDcPrem=="+nDcPrem+"==nApplPrem=="+nApplPrem);
	    Ds_LTIDA00.setCellData(0, "nAccuPrem", wconv.toString(nAccuPrem)); //적립보험료
	    Ds_LTIDA00.setCellData(0, "nDcPrem", wconv.toString(nDcPrem)); //할인보험료
	    Ds_LTIDA00.setCellData(0, "nApplPrem", wconv.toString(nApplPrem)); //적용보험료

	    // 서비스콜
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB340Task", "updateCalcPrem", "", "");
	    MethodObj.setId("updateCalcPrem");
	
	    //계약기본사항을 담는다
	    MethodObj.addSingleData("LTIDA00", "LTIDA00", Ds_LTIDA00.getID()); // 계약기본사항정보
	    //피보험자
	    //addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo);//피보험자정보
	    wconv.clear(Ds_Pibo_Tmp);
	    Ds_Pibo_Tmp.setRowJSON(0, Ds_Pibo.getRowJSON(0));
	    MethodObj.addVectorData("vLTIDA12", "LTIDA12", Ds_Pibo_Tmp.getID()); //첫번째피보험자정보	
	   	if (Ds_Trty.getTotalRow() > 0) {
	        wconv.clear(Ds_Trty_Tmp);
	        var trtyFilter = Ds_Trty.getFilterList();
	    	Ds_Trty.clearFilter();
	        for (var i = 0; i < Ds_Trty.getTotalRow(); i++) {
	            if (Ds_Trty.getCellData(i, "chk") == "1") {
	                util.appendRow(Ds_Trty_Tmp);
	                for (var j = 0; j < Ds_Trty.getColCnt(); j++) {
	                    Ds_Trty_Tmp.setCellData((Ds_Trty_Tmp.getRowCount() - 1), Ds_Trty.getColumnID(j), Ds_Trty.getCellData(i, Ds_Trty.getColumnID(j)));
	                }
	            }
	        }
			for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
	    }   
	    //trace("Ds_Trty_Tmp=="+Ds_Trty_Tmp.SaveXML());
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty_Tmp.getID()); //특약사항정보담음
	    MethodObj.setHashTable();
	    MethodObj.setParam("sUserId", util.getGdsValue("gUserID"));
		MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	    
	    wconv.clear(DsWs_Warning);
	    util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
        if (DsWs_Warning.getRowCount() != 0){
        	alert(DsWs_Warning.getCellData(0, "msg"));
        	return;
        }else {
        	wconv.clear(DsWs_LTIDA00);
//        	util.copyM(DsWs_LTIDA00,_tranSync.getDsJson("LTIDA00"));
			util.jSonDsCreate(_tranSync.getDsJson("LTIDA00"), "DsWs_LTIDA00", "Y");

			wconv.clear(Ds_LTIDA00);
			//계약기본정보의 보험료를 세팅(변경된 환급금/율때문에 세팅)
			util.copyM(Ds_LTIDA00, DsWs_LTIDA00.getAllJSON(), true);
	        util.setCompBindRefresh(Ds_LTIDA00.getID());
			util.setRowPosition(Ds_LTIDA00, 0);
	        
	        alert("보험료 계산이 처리되었습니다");
	    }
	    
	    except = "";
	};
	
	//**********************************************************
	// 최소영업보험료 체크
	//**********************************************************			
	scwin.lfn_checkMinPremAmt = function() {
		 /*
	    sPaymCyclCd
	    월납:12
	    2월:06
	    3월:04
	    6월:02
	    연납:01
	    일시납:99
		
	    nMinPremAmt1 : 월납
	    nMinPremAmt2 : 2월납
	    nMinPremAmt3 : 3월납
	    nMinPremAmt4 : 6월납
	    nMinPremAmt5 : 연납
	    nMinPremAmt6 : 일시납
	    */
	    var nPlanRow = wconv.findRow(DsWs_Plan, "sPlanCd", cmb_Plan.getValue());
	    var sPaymCyclCd = Ds_LTIDA00.getCellData(0, "sPaymCyclCd");
	    if (sPaymCyclCd == "12") {
	        var nMinPremAmt1 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt1"));
	        if (nMinPremAmt1 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt1, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (sPaymCyclCd == "06") {
	        var nMinPremAmt2 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt2"));
	        if (nMinPremAmt2 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt2, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (sPaymCyclCd == "04") {
	        var nMinPremAmt3 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt3"));
	        if (nMinPremAmt3 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt3, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (sPaymCyclCd == "02") {
	        var nMinPremAmt4 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt4"));
	        if (nMinPremAmt4 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt4, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (sPaymCyclCd == "01") {
	        var nMinPremAmt5 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt5"));
	        if (nMinPremAmt5 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt5, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    if (sPaymCyclCd == "99") {
	        var nMinPremAmt6 = wconv.toNumber(DsWs_Plan.getCellData(nPlanRow, "nMinPremAmt6"));
	        if (nMinPremAmt6 > wconv.toNumber(medt_nBussPrem.getValue())) {
	            wprom.alert("영업보험료 " + wconv.numFormat(nMinPremAmt6, 0) + "원 이상으로 입력바랍니다.");
	            return false;
	        }
	    }
	    return true;
	};
	
	//**********************************************************
	// 각 항목 변경여부체크
	//**********************************************************			
	scwin.lfn_CompChangeCheck = function(obj, i, colID) {
		/*if (obj.getID() == "Ds_Pibo") {
	        if (Ds_Pibo.getCellData(i, colID) != Ds_Pibo_BackUp.getCellData(i, colID)) {
	        alert("pibo modify true");
	            modifyFlag = true;
	        }
	    } else {
	        //변경여부체크
	        if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
	            modifyFlag = true;
	        } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
	            modifyFlag = true;
	        }
	    }*/
	    
	    //변경여부체크
        if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
        	console.log("====lfn_CompChangeCheck modifyFlag true1 obj=="+obj.getID());
        	console.log("====lfn_CompChangeCheck modifyFlag true1 colID=="+colID);
        	console.log("====lfn_CompChangeCheck modifyFlag true1 getCellData=="+obj.getCellData(i, colID));
        	console.log("====lfn_CompChangeCheck modifyFlag true1 getOriginalCellData=="+obj.getOriginalCellData(i, colID));
        	modifyFlag = true;
        } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
       		console.log("====lfn_CompChangeCheck modifyFlag true2 obj=="+obj.getID());
        	console.log("====lfn_CompChangeCheck modifyFlag true2 colID=="+colID);
        	console.log("====lfn_CompChangeCheck modifyFlag true2 getCellData=="+obj.getCellData(i, colID));
        	console.log("====lfn_CompChangeCheck modifyFlag true2 getOriginalCellData=="+obj.getOriginalCellData(i, colID));
            modifyFlag = true;
        }
	};
	
	//**********************************************************
	// 필수값 입력 여부 체크
	//**********************************************************			
	scwin.lfn_ValidationCheck = function(gubun) {
	    var validFlag = false;
	    //변경여부 초기화
	    modifyFlag = false;
	
	    //전체 데이터 체크
	    if (gubun == "all") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck();
	
	        //단체관리 체크
	        if (!validFlag) {
	            validFlag = scwin.lfn_LTIEA10_ValidationCheck();
	            //피보험자 밸리데이션체크
	            if (!validFlag) {
	                validFlag = scwin.lfn_Pibo_ValidationCheck();
	
	                //특약사항 밸리데이션체크
	                if (!validFlag) {
	                    validFlag = scwin.Trty_ValidationCheck();
	                }
	            }
	        }
	    } 
	    else if (gubun == "level1") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck(); //계약기본사항,피보험자 체크
	    } 
	    else if (gubun == "level2") {
	        //계약기본사항 밸리데이션체크
	        validFlag = scwin.lfn_LTIDA00_ValidationCheck();
	        //피보험자 밸리데이션체크
	        if (!validFlag) {
	            validFlag = scwin.lfn_Pibo_ValidationCheck();
	        }
	    } 
	    else if (gubun == "level3") {
	        validFlag = scwin.lfn_Pibo_ValidationCheck();
	
	        //특약사항 밸리데이션체크
	        if (!validFlag) {
	            validFlag = scwin.Trty_ValidationCheck();
	        }
	        if (Ds_Pibo.getRowCount() != Ds_Pibo_BackUp.getRowCount()) {
	            //trace("사이즈 다름");
	            //trace("Ds_Pibo 인원수:"+Ds_Pibo.GetRowCount());
	            //trace("Ds_Pibo_BackUp 인원수:"+Ds_Pibo_BackUp.GetRowCount());
	            if (Ds_Pibo_BackUp.getRowCount() != 0) {
	                validFlag = true;
	                wprom.alert("피보험자 명부가 변경되었습니다. 일괄적용을 다시 하세요.");
	            }
	        }
	    }
	    
	    return validFlag;
	};
	
	//**********************************************************
	// 계약 기본사항 필수값 입력 여부 체크
	//**********************************************************			
	scwin.lfn_LTIDA00_ValidationCheck = function() {
	    var validFlag = false;
	    if (Ds_LTIDA00.getRowCount() > 0) {
	        for (var i = 0; i < Ds_LTIDA00.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < Ds_LTIDA00.getTotalCol(); j++) {
	               	var colID = Ds_LTIDA00.getColumnID(j);
	                //설계번호
	                if (colID == "sPlanNo") {
	                } 
	                else if (colID == "sGdCd") {
	                    if (mfn_IsEmpty(Ds_LTIDA00.getCellData(i, colID))) {
	                        wprom.alert("상품을  선택하세요");
	                        parent.btn_sGdCd.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID); //청약일자
	                } 
	                else if (colID == "sSsrtDate") {
	                    if (mfn_IsEmpty(Ds_LTIDA00.getCellData(i, colID))) {
	                        wprom.alert("청약일자를 입력하세요");
	                        parent.cal_sSsrtDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID); //보험시작일자
	                } 
	                else if (colID == "sInsurStrtdate") {
	                    if (mfn_IsEmpty(Ds_LTIDA00.getCellData(i, colID))) {
	                        wprom.alert("보험시작일자를 입력하세요");
	                        medt_sInsurStrtdate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID); //보험종료일자
	                } 
	                else if (colID == "sInsurEndDate") {
	                    if (mfn_IsEmpty(Ds_LTIDA00.getCellData(i, colID))) {
	                        wprom.alert("보험종료일자를 입력하세요");
	                        medt_sInsurEndDate.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID); //납입주기코드
	                } 
	                else if (colID == "sPaymCyclCd") {
	                    if (mfn_IsEmpty(Ds_LTIDA00.getCellData(i, colID))) {
	                        wprom.alert("납입주기를 입력하세요");
	                        cmb_PaymCycl.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID); //영업보험료
	                } 
	                else if (colID == "nBussPrem") {
	                    scwin.lfn_CompChangeCheck(Ds_LTIDA00, i, colID);
	                }
	            }
	        }
	    }
	
	    //플랜체크
	    if (wconv.length(Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) > 0) {
	        if (cmb_Plan.getValue() != Ds_Pibo.getCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "sApplPlanCd")) {
	        	console.log("====lfn_LTIDA00_ValidationCheck modifyFlag true");
	            modifyFlag = true;
	        }
	    }
	
	    return validFlag;
	};
	
	//**********************************************************
	// 단체관리 필수값 입력 여부 체크
	//**********************************************************			
	scwin.lfn_LTIEA10_ValidationCheck = function() {
	    var validFlag = false;
	    if (Ds_LTIEA10.getRowCount() > 0) {
	        for (var i = 0; i < Ds_LTIEA10.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < Ds_LTIEA10.getTotalCol(); j++) {
	                var colID = Ds_LTIEA10.getColumnID(j);
	                //단체계약관리번호
	                if (colID == "sGroupCrAdmNo") {
	                    if (mfn_IsEmpty(Ds_LTIEA10.getCellData(i, colID))) {
	                        wprom.alertF("단체계약관리을 선택하세요", {}, btn_GroupList);
//	                        btn_GroupList.focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_LTIEA10, i, colID);
	                }
	            }
	        }
	    }
	    return validFlag;
	};

	//**********************************************************
	// 피보험자 필수값 입력 여부 체크
	//**********************************************************			
	scwin.lfn_Pibo_ValidationCheck = function() {
	    var validFlag = false;
	    var bRpstInrpsYn = false;
	    var sToday = parent.sToday;
	    if (Ds_Pibo.getRowCount() > 0) {
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            if (Ds_Pibo.getCellData(i, "sRpstInrpsFlag") == "1") {
	                bRpstInrpsYn = true;
	                if (mfn_IsEmpty(Ds_Pibo.getCellData(i, "sAddrFlgcd"))) {
	                    wprom.alert("대표 피보험자 고객등록을 하세요.");
	                    validFlag = true;
	                    break;
	                }
	            }
	            for (var j = 0; j < Ds_Pibo.getTotalCol(); j++) {
	                var colID = Ds_Pibo.getColumnID(j);
	                //단체피보험자코드
	                if (colID == "sGroupInrpsCd") {
	                    if (mfn_IsEmpty(Ds_Pibo.getCellData(i, colID))) {
	                        wprom.alert("단체피보험자코드를 입력하세요");
	                   //     Object(obj_GetColumn(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_Pibo, i, colID); //단체피보험자명
	                } else if (colID == "sGroupInrpsName") {
	                    if (mfn_IsEmpty(Ds_Pibo.getCellData(i, colID))) {
	                        wprom.alert("단체피보험자명을 입력하세요");
	                    //    Object(obj_GetColumn(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_Pibo, i, colID); //단체피보험자직업코드
	                } else if (colID == "sGroupInrpsJobCd") {
	                    if (mfn_IsEmpty(Ds_Pibo.getCellData(i, colID))) {
	                        wprom.alert("단체피보험자직업을 선택하세요");
	                    //    Object(obj_GetColumn(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_Pibo, i, colID); //단체피보험자운전구분코드
	                } else if (colID == "sGroupInrpsDrveFlagCd") {
	                    if (mfn_IsEmpty(Ds_Pibo.getCellData(i, colID))) {
	                        wprom.alert("단체피보험자운전구분을 선택하세요");
	                    //    Object(obj_GetColumn(i, colID)).focus();
	                        validFlag = true;
	                        break;
	                    }
	                    scwin.lfn_CompChangeCheck(Ds_Pibo, i, colID);
	                }
	            }
	        }
	        if (bRpstInrpsYn == false) {
	            wprom.alert("대표 피보험자를 지정하세요.");
	            validFlag = true;
	        }
	    }
	    return validFlag;
	};
	
	//**********************************************************
	//특약정보 체크 여부 
	//**********************************************************			
	scwin.Trty_ValidationCheck = function() {
	    var validFlag = true;
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "N"); //실손가입 확인
	    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "N"); //정액가입 확인
	    if (Ds_Trty.getRowCount() > 0) {
	        for (var i = 0; i < Ds_Trty.getRowCount(); i++) {
	            if (Ds_Trty.getCellData(i, "chk") == "1") {
	                //보험기간코드
	                if (wconv.length(Ds_Trty.getCellData(i, "sInsurTermCd")) == 0) {
	                    wprom.alert("특약 보험기간을 선택하세요");
	                    grd_sTrty.setFocusedCell(i , 3, true);
	                    validFlag = true;
	                    break;
	                }
	                //lfn_CompChangeCheck(obj, i, "sInsurTermCd");	
	                
	                //납입기간코드
	                if (wconv.length(Ds_Trty.getCellData(i, "sPaymTermCd")) == 0) {
	                    wprom.alert("특약 납입기간을 선택하세요");
	                    /*grd_sTrty.focus();
	                    Ds_Trty.Row = i;
	                    grd_sTrty.setFocusedCell(4);
	                    grd_sTrty.wconv.showEditor();*/
	                    grd_sTrty.setFocusedCell(i , 4, true);
	                    validFlag = true;
	                    break;
	                }
	                //lfn_CompChangeCheck(obj, i, "sPaymTermCd");	
	                
	                //특약가입금액
	                if (wconv.length(Ds_Trty.getCellData(i, "nTrtyInsAmt")) == 0) {
	                    wprom.alert("특약 가입금액을 선택하세요");
	                    /*grd_sTrty.focus();
	                    Ds_Trty.Row = i;
	                    grd_sTrty.setFocusedCell(5);
	                    grd_sTrty.wconv.showEditor();*/
	                    grd_sTrty.setFocusedCell(i , 5, true);
	                    validFlag = true;
	                    break;
	                }	
	                //lfn_CompChangeCheck(obj, i, "nTrtyInsAmt");					
	                /*				
	                //보장보험료
	                if(Length(obj.getColumn(i, "nGrntPrem")) == 0){
	                	alert("보험료 산출을 해주세요");
	                	validFlag = true; 
	                	break;
	                }										
	                */
	                //trace("ds_Trty PronCmpsTrtyYn:"+ds_Trty.Getcolumn(i, "PronCmpsTrtyYn"));
	                //trace("ds_Trty FxamtCmpsFlag:"+ds_Trty.Getcolumn(i, "FxamtCmpsFlag"));
	                //2011.05.13 정액담보가입 또는 의료비가입시 사전조회 활성화
	                // 사전조회 무조건 활성화. (2013.01.31) 다시 체크 
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y" || Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    btn_Medical.setDisabled(false); //사전조회버튼 활성화
	                }
	
	
	                //2011.05.13 실손담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "PronCmpsTrtyYn") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasPronCmpsTrty", "Y"); //실손가입 확인
	                }
	
	
	                //2011.05.13 정액담보가입시 가입확인(사전조회시 사용)
	                if (Ds_Trty.getCellData(i, "FxamtCmpsFlag") == "Y") {
	                    Ds_Pibo_BackUp.setCellData(wconv.findRow(Ds_Pibo, "sel", "1"), "hasFxamtCmps", "Y"); //사전조회버튼 활성화
	                    //trace("Ds_Pibo_BackUp hasFxamtCmps["+Ds_Pibo.FindRow("sel","1")+"]:"+ Ds_Pibo_BackUp.GetColumn(Ds_Pibo.FindRow("sel","1"), "hasFxamtCmps"));
	                }
	                validFlag = false; //break;
	            }

	            //특약변경여부 체크
//	            scwin.lfn_Trty_CompChangeCheck(Ds_Trty, Ds_Trty_Backup, i);
	            scwin.lfn_Trty_CompChangeCheck(i);
	        }
	    }
	    return validFlag;
	};
	
	//**********************************************************
	//특약 데이터  변경여부 체크
	//**********************************************************			
	scwin.lfn_Trty_CompChangeCheck = function(i) {
	    //trace(obj.savexml());
	    //trace(objBack.savexml());
	    //trace("i==="+i+"==chkobj==="+obj.getColumn(i, "chk")+"==chkobjBack==="+objBack.getColumn(i, "chk"));
	    //기존엔 체크/해지 변경된경우 변경으로 봄
	    if (Ds_Trty.getCellData(i, "chk") != Ds_Trty_Backup.getCellData(i, "chk") && Ds_Trty.getCellData(i, "sScrnIndcYn") == "Y") {
	        modifyFlag = true;
	        console.log("== lfn_Trty_CompChangeCheck modifyFlag chk");        	
	        return false;
	    } else {
	        if (Ds_Trty.getCellData(i, "chk") == "1") {
	            //보험기간코드
	            if (Ds_Trty.getCellData(i, "sInsurTermCd") != Ds_Trty_Backup.getCellData(i, "sInsurTermCd")) {
	                modifyFlag = true;
					console.log("== lfn_Trty_CompChangeCheck modifyFlag sInsurTermCd");  
	                return false;
	            }
	
	            //납입기간코드
	            if (Ds_Trty.getCellData(i, "sPaymTermCd") != Ds_Trty_Backup.getCellData(i, "sPaymTermCd")) {
	                modifyFlag = true;
	                console.log("== lfn_Trty_CompChangeCheck modifyFlag sPaymTermCd");
	                return false;
	            }
	
	            //특약가입금액
	            if (Ds_Trty.getCellData(i, "nTrtyInsAmt") != Ds_Trty_Backup.getCellData(i, "nTrtyInsAmt")) {
	                modifyFlag = true;
					console.log("== lfn_Trty_CompChangeCheck modifyFlag nTrtyInsAmt");
	                return false;
	            }
	        }
	    }
	    return true;
	};
		
	//**********************************************************
	//dataset 변경여부 체크
	//**********************************************************			
	scwin.lfn_DataChangeCheck = function(obj, newObj, chk) {
//		newObj.removeAll();
		wconv.clear(newObj);
	    obj = util.insertColumn(obj, [["execFlag", "execFlag", "text"]]);
	    util.setCompBindRefresh(obj.getID());
//	    util.setRowPosition(obj, 0);
	    newObj = util.insertColumn(newObj, [["execFlag", "execFlag", "text"]]);
	    util.setCompBindRefresh(newObj.getID());
//	    util.setRowPosition(newObj, 0);
	    var execFlag = "";
	    var cnt = 0;
	    var changeFlag = false;
	    if (wconv.length(chk) == 0) {
	        chk = "chk";
		}
				
		//cbs - 초기상태:"R", 갱신:"U", 삽입:"C", 삭제:"D", 삽입 후 삭제:"V"
		// lfn_DataChangeCheck(Ds_Trty, Ds_Trty_Tmp, "chk");  
		// lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "sel");
	    //if ((obj.getID() == "Ds_Pibo" && chk == "sel") || (obj.getID() == "Ds_Trty" && chk == "chk")) {
	    if(chk == "sel" || chk == "chk") {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (obj.getCellData(i, chk) == "1") {
	                if (chk == "sel") {
	                    if (obj.getRowStatus(i) == "C") {
	                        obj.setCellData(i, "execFlag", "I");
	                        execFlag = "I";
	                    } else if (obj.getRowStatus(i) == "U") {
	                        obj.setCellData(i, "execFlag", "U");
	                    }
	                } 
	                else {
	                    obj.setCellData(i, "execFlag", "I");
	                }
//	                newObj.insertRow(cnt);
	                if (obj.getID() != "Ds_Trty") {
	                //    newObj.CopyRow(cnt++, obj, i);
	                    newObj.setRowJSON(i, obj.getRowJSON(i));
	                } else {
	                    for (var j = 0; j < obj.getTotalCol(); j++) {
//	                        newObj.SetColumn(cnt, obj.GetColID(j), obj.GetColumnNF(i, obj.GetColID(j)));
	                        newObj.setCellData(cnt, obj.getColumnID(j), obj.getCellData(i, obj.getColumnID(j)));	                        
	                    }
	                    //cnt++;
	                }
	                cnt++;
	            }
	        }
	    } 
	    // lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "all"); 
	    //else if (obj.ID == "Ds_Pibo" && chk == "all") {
	    else if (chk == "all") {
	        //그리드에서 insert,update구분
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            //trace(i+"==GetRowType=="+obj.GetRowType(i));
	            execFlag = "";
	            if (obj.getRowStatus(i) == "I") {
	                execFlag = "I";
	            } else if (obj.getRowStatus(i) == "U") {
	                execFlag = "U";
	            }
	            obj.setCellData(i, "execFlag", execFlag);
	            newObj.insertRow(cnt);
	            //newObj.CopyRow(cnt++, obj, i); //trace("newObj입력=="+newObj.savexml());		
	            newObj.setRowJSON(cnt++, obj.getRowJSON(i));		
	        }
	
	        //그리드에서 delete 구분
	        for (var i = 0; i < obj.getDeletedData(); i++) {
	            //trace(obj.GetRowType(i)+"=="+i+"="+obj.GetTotalRowType(i)+"==cnt="+cnt);
	            newObj.insertRow(cnt);
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                if (obj.getColumnID(j) == "execFlag") {
	                    newObj.setCellData(cnt, obj.getColumnID(j), "D");
		            } else {
		                newObj.setCellData(cnt, obj.getColumnID(j), obj.getCellData(i, obj.getColumnID(j)));
		            }
	            }
	            cnt++;
	        }
	    } 
	    // lfn_DataChangeCheck(Ds_Trty, Ds_Trty_Tmp, ""); 
	    else {
	        //그리드에서 insert,update구분
	        for (var i = 0; i < obj.getRowCount(); i++) {
	        alert(obj.getRowStatus(i));
	            //trace(i+"==GetRowType=="+obj.GetRowType(i));
	            execFlag = "";
	            if (obj.getRowStatus(i) == "I") {
	                execFlag = "I";
	            } else if (obj.getRowStatus(i) == "U") {
	                execFlag = "U";
	            }
	            if (execFlag != "") {
	                obj.setCellData(i, "execFlag", execFlag);
	                newObj.insertRow(cnt);
           			newObj.setRowJSON(cnt, obj.getRowJSON(i));	
	            }
	        }
	
	        //그리드에서 delete 구분
	        for (var i = 0; i < obj.getDeletedData(); i++) {
	            //trace(obj.GetRowType(i)+"=="+i+"="+obj.GetTotalRowType(i)+"==cnt="+cnt);
	            newObj.insertRow(cnt);
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                if (obj.GetColID(j) == "execFlag") {
	                    newObj.setCellData(cnt, obj.getColumnID(j), "D");
	                } else {
	                    newObj.setCellData(cnt, obj.getColumnID(j), obj.getCellData(i, obj.getColumnID(j)));
	                }
	            }
	            cnt++;
	        }
	    }
	    
	    if (newObj.getTotalCol() > 0) {
	        changeFlag = true;
	    }
	
	    //trace("obj=="+obj.savexml());
	    //trace("newObj=="+newObj.savexml());
	    return changeFlag;
	};
	
	//**********************************************************
	//사전조회 버튼 클릭이벤트 fn_Medical
	//**********************************************************				
	scwin.btn_Medical_onclick = function() {
		 var promise = Promise.resolve();
	    // scan 이 아직 셋팅전. 
	    if ((parent.sScanObjtYn == "Y" && scwin.lfn_checkMedical(wconv.findRow(Ds_Pibo, "sel", "1"))) || parent.sScanObjtYn != "Y") {
	        var pi_nRow = wconv.findRow(Ds_Pibo, "sel", "1");
	        if (Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty") == "N" && Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps") == "N") {
	            scwin.Trty_ValidationCheck();
	        }
	        
	        var indata = {};
	        indata["sInrpsCd"] = Ds_Pibo.getCellData(pi_nRow, "sGroupInrpsCd"); //피보험자코드
	        indata["sInrpsName"] = Ds_Pibo.getCellData(pi_nRow, "sGroupInrpsName"); //피보험자명
	        indata["sPlanNo"] = parent.medt_PlanNo.getValue(); //설계번호
	        indata["hasPronCmpsTrty"] = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasPronCmpsTrty"); //실손가입여부(2011.05.13 김상운추가)
	        indata["hasFxamtCmps"] = Ds_Pibo_BackUp.getCellData(pi_nRow, "hasFxamtCmps"); //정액담보가입여부(2011.05.13 김상운추가)
	        var sSvtYn = "N";
	        if (DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2") {
	            sSvtYn = "Y";
	        }
	        indata["sSvtYn"] = sSvtYn;
	        indata["sAgreDocuRecpYn"] = chk_AgreDocuRecpYn.getValue();
	        indata["sPsnGroupFlgcd"] = Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
	        indata.sHandlerID = parent.scwin.lfn_GetDoerUser();
	        
	        var pObj = {  // 수정(추가) 2017.10.20, by 진태만 
					"Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds 
					,"Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds 
					,"Ds_Pibo_BackUp" : Ds_Pibo_BackUp 		//부모창 Ds_Pibo_BackUp  
				} 	//
	        // CBSC056P 보험계약정보조회[B250_Pop] 진태만 
	        promise = promise.then(function(rtnVal) {
	        	var popInfo = {"width": 826,
	    	                   "height": 699,
	    	                   "indata": indata,
							   "parentObject": pObj,	 	// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.20, by 진태만 
							   "title": "보험계약정보조회"
	    	                  };
	    	    return wprom.popupOpen("/ui/cbsc/CBSC056P.xml", popInfo);
		    }); 
		    
		    promise = promise.then(function(rtnVal) {
				var rtnValue = wprom.getReturnData();
				if (rtnValue != ""){
					
				}
			});	    
	    }
	};
	
	//**********************************************************
	//사전조회 이미지등록여부조회및 check
	//**********************************************************
	scwin.lfn_checkMedical = function(nRow) {
	    var result = true;
	    //사전조회 체크시 대면일 경우 (가입설계 동의가 없는 경우만 이미지 등록여부 체크
	    if (chk_AgreDocuRecpYn.getValue() != "1") {
	        if (scwin.lfn_getCUSAA42Info(Ds_Pibo.getCellData(nRow, "sGroupInrpsCd")) == "Y") {
	        
	            //데이터셋 초기화
	            wconv.clear(DsWs_LTIDB01Cnt);
	            wconv.clear(DsWs_Warning);
	            
	            var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB011Task", "selMedicImageCheck", "", "");
			    MethodObj.setId("selMedicImageCheck");
			    MethodObj.setParam("sImagClsfCd", "JCD10001");		//이미지분류코드(JCD10001)
			    MethodObj.setParam("sResno", Ds_Pibo.getCellData(nRow, "sGroupInrpsCd")); //이미지키정보
			    MethodObj.setParam("sValdDate", parent.sToday);
			    MethodObj.setParam("sUserID", parent.gUserID);
			    MethodObj.setUrl("/contract/CBSC042MController.do");
				MethodObj.setXPath("//hashtable/data[@hashkey='LTIDB07Cnt']/LTIDB07Cnt");
				MethodObj.addXPath("//WARNING");
				MethodObj.sync();
				MethodObj.send();
			
				// 오류처리
		        util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
		        if (DsWs_Warning.getRowCount() != 0){
		        	alert(DsWs_Warning.getCellData(0, "msg"));
		            return false;
		        }
		        else {
		        	util.copyM(DsWs_LTIDB01Cnt, _tranSync.getDsJson("LTIDB07Cnt"));
		            
		            if (wconv.toNumber(DsWs_LTIDB01Cnt.getCellData(0, "nCount")) == 0) {
		                wprom.alert(Ds_Pibo.getCellData(nRow, "sGroupInrpsName") + "님의 보험계약사전조회동의서 스캔처리후 조회가능합니다.");
		                return false;
		            }
		
		            //본인 스캔한 고객인지 체크 
		            if(parent.gUserDuty == "30" || parent.gUserDuty == "33" || parent.gUserDuty == "35") {
		                if (DsWs_LTIDB01Cnt.getCellData(0, "sSelfWrcsYn") == "N") {
		                    wprom.alert(Ds_Pibo.getCellData(nRow, "sGroupInrpsName") + "님의 보험계약사전조회동의서의 담당자 스캔처리후 조회가능합니다.");
		                	return false;
		                }
		            }
	            }
	        }
	    }
	    return result;
	};				
	
	//**********************************************************
	//인수제한사유 버튼 클릭이벤트 lfn_insuDetail
	//**********************************************************
	scwin.btn_InsuDetail_onclick = function() {
		// 인수제한사유조회
		var promise = Promise.resolve();   
		var pObj = {"Ds_LTIDA00" : Ds_LTIDA00,
					"Ds_LTIDA03" : parent.Ds_LTIDA03,
					"Ds_LTIDA15" : Ds_LTIDA15,
					"Ds_Pibo"    : Ds_Pibo, 					// 피보험자 정보 Ds Set 
					"medt_PlanNo" : parent.medt_PlanNo,
					"edt_sGdCdNm" : parent.edt_sGdCdNm
					};
		// CBSC085P 인수제한사유조회[B080_Pop] 진태만 
	    promise = promise.then(function(rtnVal) {	    	
        	var popInfo = {"width":837,
    	                   "height":480,
    	                "indata":"",//indata,
    	                parentObject : pObj,
						   "title"     : "인수제한사유조회"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);
	    });    
	};
	
	//**********************************************************
	//보험료 요약 버튼 클릭이벤트 lfn_summary
	//**********************************************************
	scwin.btn_Summary_onclick = function() {
		var promise = Promise.resolve();
	    if (wconv.length(Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	        wprom.alert("보험료 산출이 되지 않았습니다");
	        return;
	    }
	    if (Ds_Pibo.getRowCount() == 0) {
	        wprom.alert("피보험자 정보가 없습니다");
	        return;
	    }
	    
	    var indata = {};
	    indata["sPlanNo"] 			= Ds_LTIDA00.getCellData(0, "sPlanNo"); //설계번호
	    indata["sPsnGroupFlgcd"]	= Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
	    var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					  "Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
					, "Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds Set 
					, "Ds_LTIEA10" : Ds_LTIEA10  			// 부모창 단체 정보 Ds Set
					, "Ds_Prprt" : "" 			// 부모창 목적물 정보 Ds Set 
				}; 	// 자식으로 보낼 부모 Ds OBJECT 리스트
   		// CBSC057P 보험료 요약[B050_Pop] 진태만 	
	    promise = promise.then(function(rtnVal) {
        	var popInfo = {"width":843,
    	                   "height":735,
    	                   "indata":indata,
    	                   "parentObject" : pObj,// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
 						   "title"     : "보험료 요약"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC057P.xml", popInfo);
	    });   
	};
	
	//**********************************************************
	//예상환급금조회 버튼 클릭이벤트 lfn_hwangup
	//**********************************************************		
	scwin.btn_Hwang_onclick = function() {
		var promise = Promise.resolve();
		if(!AllCalcPremFlag){
			alert("보험료 산출을 해주세요");
			return;
		}
		
		var	indata = {"sPsnGroupFlgcd" : Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd")};
		
		var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					  "Ds_LTIDA00" : Ds_LTIDA00 		// 보험 기본사항 정보 Ds Set	 
					, "Ds_Pibo" : Ds_Pibo 				// 피보험자 정보 Ds Set 
					, "Ds_Trty" : Ds_Trty  				// 특약 정보 Ds Set
				}; 	// 자식으로 보낼 부모 Ds OBJECT 리스트
				
		// CBSC131P 해지환급금 조회[B200_Pop] 진태만 	
	    promise = promise.then(function(rtnVal) {
        	var popInfo = {"width": 870,
    	                   "height":613,
    	                   "indata": indata,
     	                   "parentObject" : pObj,// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "title"     : "해지환급금 조회"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC131P.xml", popInfo);
	    });   
	};
	
	//**********************************************************
	//경과기간예상환급금산출 버튼 클릭이벤트  lfn_getHwangup
	//**********************************************************		
	scwin.btn_GetHwangup_onclick = function() {
		//피보험자나 특약정보가 변경되었는지 체크한다.
	    if (scwin.lfn_ValidationCheck("level3")) {
	        return;
	    }
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) == 0) {
	        wprom.alertF("영업보험료를 입력하세요", {}, medt_nBussPrem);
	   //     medt_nBussPrem.focus();
	        return;
	    }
	    
	    //데이터셋 초기화
        wconv.clear(DsWs_Warning);
          
        var MethodObj = new callService("com.inswave.longterm.ssr.sst.task.DBB200Task", "getExptRtnAmtBatch", "", "");
	    MethodObj.setId("getExptRtnAmtBatch");
	    MethodObj.setParam("sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	
		// 오류처리
       	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
       	if (DsWs_Warning.getRowCount() != 0){
       		alert(DsWs_Warning.getCellData(0, "msg"));
           	return;
       	}
       	else {
       		wconv.clear(DsWs_LTIEA10);
	        util.copyM(DsWs_LTIEA10, _tranSync.getDsJson("LTIEA10"), true);		       
	        ExptRtnAmtFlag = true;
	        wprom.alert("배치가 실행되었습니다.\n10분후 예상환급금조회버튼을 눌러주세요");
	    }	
	};
	
	//**********************************************************
	//안내문발송 버튼 클릭이벤트  lfn_printInfo
	//**********************************************************		
	scwin.btn_PrintInfo_onclick = function() {
		var promise = Promise.resolve();
	    var sSvtYn = "N";
	    if (parent.DsWs_PrdAttr.getCellData(0, "GdFlgcd") == "2") {
	        sSvtYn = "Y";
	    }
	    var indata = {};
	    var sPlanNo = parent.medt_PlanNo.getValue();
	    indata["sPlanNo"] = sPlanNo;
	    indata["sPsnGroupFlgcd"] = "21";
	    indata["sGdCd"] = parent.edt_sGdCd.getValue();
	    indata["sGdCdNm"] = parent.edt_sGdCdNm.getValue();
	    indata["sPlanProgRankCd"] = parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
	    indata["sSrdoIssuDate"] = parent.Ds_LTIDA00.getCellData(0, "sSrdoIssuDate");
	    indata["sSvtYn"] = sSvtYn;
	    indata["tab"] = 1;
	    
	     var pObj = {  // 수정(추가) 2017.10.31, by 진태만 
					 "Ds_Pibo" : Ds_Pibo 					// 피보험자 정보 Ds Set 				
				     }; 	// 자식으로 보낼 부모 Ds OBJECT 리스트
	    // CBSC101P 증명서발급 B410_Pop 진태만 
	    promise = promise.then(function(rtnVal) {
	        var popInfo = {"width":680,
    	                   "height":204,
    	                   "indata":indata,
     	                   "parentObject" : pObj,// 자식으로 보낼 부모 Ds OBJECT 리스트   // 수정(추가) 2017.10.31, by 진태만  
						   "title"     : "증명서발급"
    	                  };
    	    return wprom.popupOpen("/ui/cbsc/CBSC101P.xml", popInfo);
	    });
	    
	    promise = promise.then(function(rtnVal) {
	    var rtnValue = wprom.getReturnData();
			console.log("====CBSC101P promise close \n"+JSON.stringify(rtnValue));
			if (rtnValue != "") {
				if (!mfn_IsEmpty(rtnValue)) {
	            	DsWs_LTIDA00.setCellData(0, "sSrdoIssuDate", rtnValue);
	            	parent.DS_LTIDA00.setCellData(0, "sSrdoIssuDate", rtnValue);
	        	}

		        //청약서발행건은 재산출 / 수정 금지
		        if (Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y" && wconv.length(parent.Ds_LTIDA00.getCellData(0, "sSrdoIssuDate")) > 0) {
		            parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", false);
		            parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", false);
		        }
		    }
	    });
	};
	
	//**********************************************************
	//다음 버튼 클릭이벤트  lfn_next
	//**********************************************************
	scwin.btn_Next_OnClick_Async = function() {
		util.eventAsyncCall(this, scwin.btn_Next_onclick, arguments);
	};		
	var tabNextkey = "";
	scwin.btn_Next_onclick = function() {
		var flag = true;
	    if (wconv.toNumber(Ds_LTIDA00.getCellData(0, "nBussPrem")) == 0) {
	        wprom.alertF("영업보험료를 입력하세요", {}, medt_nBussPrem);
	        flag = false;
	        return;
	    }
	    if (scwin.lfn_GroupInrpsChangeCheck() == false) {
	        flag = false;
	        return;
	    }
	    if (scwin.lfn_PreInqrCheck() == false) {
	        flag = false;
	        return;
	    }
	    	    
	    if(parent.tab2Load){
			var flag = parent.scwin.lfn_TabChanging(0, 1);
		    if (flag) {
		    	parent.scwin.lfn_Tab_Focus(1);
		    	
		    	parent.scwin.lfn_set_Tab_Info("S2", "T1");
	    		parent.scwin.lfn_set_Tab_Info("S2", "T2");
		    }
		}else{
			parent.util.setBind(parent.Tab_Req_Step2, "oniframeload", "scwin.Tab_Req_Step2_oniframeload");
			parent.Tab_Req_Step2.setSrc("/websquare/websquare.do?w2xPath=/ui/cbsc/CBSC044S.xml");
 							
			tabNextkey = setInterval("scwin.Tab2LoadCall()", 100);
		}
	};
	
	scwin.Tab2LoadCall = function() {
		if(parent.tab2Load){
			clearInterval(tabNextkey);
			var flag = parent.scwin.lfn_TabChanging(0, 1);
		    if (flag) {
		    	parent.scwin.lfn_Tab_Focus(1);
		    	
		    	parent.scwin.lfn_set_Tab_Info("S2", "T1");
	    		parent.scwin.lfn_set_Tab_Info("S2", "T2");
		    }
		}
	}
	
	//**********************************************************
	//단체피보험자 사항이나 특약사항 변경 여부 확인
	//**********************************************************		
	scwin.lfn_GroupInrpsChangeCheck = function() {
		//데이터셋 초기화
 //     wconv.clear(DsWs_LTIEA10);
        wconv.clear(DsWs_Warning);
          
        var MethodObj = new callService("com.inswave.longterm.ssr.sst.task.DBB181Task", "getGroupInrpsTrtyCheck", "", "");
	    MethodObj.setId("getGroupInrpsTrtyCheck");
	    MethodObj.setParam("sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	
		// 오류처리
       	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
       	if (DsWs_Warning.getRowCount() != 0){
       		alert(DsWs_Warning.getCellData(0, "msg"));
           	return false;
       	}
       	else {
	        return true;
	    }
	};
	
	//**********************************************************
	//단체피보험자 사항이나 특약사항 변경 여부 확인
	//**********************************************************		
	scwin.lfn_PreInqrCheck = function(obj) {
		wconv.clear(DsWs_Warning);
          
        var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB250Task", "checkPreInqrYn", "", "");
	    MethodObj.setId("checkPreInqrYn");
	    MethodObj.setParam("sPlanNo", Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호
	    MethodObj.setUrl("/contract/CBSC042MController.do");
		MethodObj.setXPath("//hashtable/data[@hashkey='LTIEA10']/LTIEA10");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	
		// 오류처리
       	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning.getID());
       	if (DsWs_Warning.getRowCount() != 0){
       		alert(DsWs_Warning.getCellData(0, "msg"));
           	return false;
       	}
       	else {
	        return true;
	    }
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도 DataList Filter
	//---------------------------------------------------------------------------
	scwin.filterTrtyCmpsContAmtLimit = function(cellData, param, rowIndex){
		if(Number(DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "nTrtyInsAmt")) == Number(param.nTrtyInsAmt)
		&& DS_TrtyCmpsContAmtLimitInfo.getCellData(rowIndex, "sTrtyCd") == param.sTrtyCd){
			return true;
		}else{
			return false;
		}
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 보상한도내용
	//---------------------------------------------------------------------------
	scwin.subCallBack = function(e) {
		//alert(JSON.stringify(e));
		switch (e.subID) {
			case "retrieveTrtyCmpsContAmtLmit":
				if(e.flag == "s"){
					//TrtyCmpsContAmtLimitDtalVo.setJSON(e.result.listTrtyCmpsContAmtLimitDtalVo);
					util.copyM(TrtyCmpsContAmtLimitDtalVo, e.result.listTrtyCmpsContAmtLimitDtalVo);
					var contMsg = "";
	     			for (var i=0; i<TrtyCmpsContAmtLimitDtalVo.getRowCount();i++) {
		      			contMsg += "[ " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "cvrgeName") + " ]<br/>";
		      			contMsg += TrtyCmpsContAmtLimitDtalVo.getCellData(i, "pymStndSpec") + "<br/>";
		      			contMsg += "# 보상한도 " + TrtyCmpsContAmtLimitDtalVo.getCellData(i, "conts") + "<br/>";
		      			contMsg += "<br/>";
	     			}
	     			//alert("조회완료\n\n"+contMsg);
	     			//txtTrtyInfo.setValue(contMsg);
	     			var row = grd_sTrty.getRealRowIndex(grd_sTrty.getFocusedRowIndex());
	     			var idx = DS_TrtyCmpsContAmtLimitInfo.getRowCount();
	     			DS_TrtyCmpsContAmtLimitInfo.insertRow(idx);
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sTrtyCd", TrtyCmpsContAmtLimitVo.get("trtyCd"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "nTrtyInsAmt", TrtyCmpsContAmtLimitVo.get("trtyInsAmt"));
	     			DS_TrtyCmpsContAmtLimitInfo.setCellData(idx, "sInfo", contMsg);
	     			txtTrtyInfo.setValue(DS_TrtyCmpsContAmtLimitInfo.getCellData(idx, "sInfo"));
				}else{
					wprom.alert(e.msg);
				}
			break;
		}
	};
	
	/*-----------------------------------
	// function 명 : lfn_TrtyEnableCheck
	// 내용        : 기본특약 비활성화 처리
	-----------------------------------*/
	scwin.lfn_TrtyEnableCheck = function(nRow) {
		if(Ds_Trty.getCellData(nRow, "TrtyFlagCd") == "01" || Ds_Trty.getCellData(nRow, "sScrnIndcYn") == "N"){
			var trtyFilter = Ds_Trty.getFilterList();
			wconv.filter(Ds_Trty, "TrtyFlagCd == '01' && chk == '1'");
			if(Ds_Trty.getRowCount() == 0 ){
				//Ds_Trty.FireEvent = false;
				var arrtrty = util.getDataListEvent(Ds_Trty);
				util.removeAllDataListEvent(Ds_Trty);
				Ds_Trty.setCellData(nRow, "chk", "1");
				//Ds_Trty.FireEvent = true;
				util.setDataListEvent(Ds_Trty, arrtrty);
				return 1;
			}else{
			    return 2;
			}
			Ds_Trty.clearFilter();
			for(var i = 0; i < trtyFilter.length; i++){Ds_Trty.setColumnFilter(trtyFilter[i]);}
		}		 
		return 2;
	};

	var showPopPibo = true;
	//**********************************************************
	//피보험자 확대/축소 버튼 클릭이벤트 (신규기능)
	//**********************************************************			
	scwin.btn_View_Pibo_onclick = function() {
		if (showPopPibo) {
			//피보험자 그리드 높이 조정 
			grd_Pibo.setStyle("height", "500px");
			top_main.setStyle("display", "none");
			body_trty.setStyle("display", "none");
			//right_main.setStyle("display", "none");
			//body_main.removeClass("layout_7_3 mt15");
			showPopPibo = false;
		} else {
			//피보험자 그리드 높이 조정
			grd_Pibo.setStyle("height", "72px");
			top_main.setStyle("display", "");
			body_trty.setStyle("display", "");
			//right_main.setStyle("display", "");
			//body_main.addClass("layout_7_3 mt15");
			showPopPibo = true;
		}	
	};
	
	var showPopTrty = true;
	//**********************************************************
	//특약사항 확대/축소 버튼 클릭이벤트 (신규기능)
	//**********************************************************				
	scwin.btn_View_Trty_onclick = function() {
		if (showPopTrty) {
			//특약사항 그리드 높이 조정 
			grd_sTrty.setStyle("height", "500px");
			top_main.setStyle("display", "none");
			body_pibo.setStyle("display", "none");
			right_main.setStyle("display", "none");
			body_trty.removeClass("layout_7_3 mt15");
			showPopTrty = false;
		} else {
			//특약사항 그리드 높이 조정 
			grd_sTrty.setStyle("height", "320px");
			top_main.setStyle("display", "");
			body_pibo.setStyle("display", "");
			right_main.setStyle("display", "");
			body_trty.addClass("layout_7_3 mt15");
			showPopTrty = true;
		}		
	};
	
	//**********************************************************
	//특약사항 전체 체크 헤더클릭 
	//**********************************************************		
	var trtyChk = "0";		
	scwin.lfn_trtyOnHeadClick = function(headerId) {	
		if(headerId == "gh101"){
			var chk = trtyChk;
			if (Ds_Trty.getRowCount() > 0) {
				for (var i = 0; i < Ds_Trty.getRowCount(); i++) {			
					if(Ds_Trty.getCellData(i, "TrtyFlagCd") != "01"){
						//화면에 표시되지않은 특약은 체크처리에서 뺀다.
						if (Ds_Trty.getCellData(i, "sScrnIndcYn") == "Y"){
							Ds_Trty.setCellData(i, "chk", chk);														
						}
					}
					
					// 특약구분이 '기본'인 경우 선택해제 불가처리 
					if(Ds_Trty.getCellData(i, "TrtyFlagCd") == "01" || Ds_Trty.getCellData(i, "sScrnIndcYn") == "N"){
						Ds_Trty.setCellData(i, "chk", "1");	
					}
		            //체크 해제시 해당row 초기화(보험료)
		            if (Ds_Trty.getCellData(i, "chk") == "0") {
		                Ds_Trty.setCellData(i, "nGrntPrem", ""); //보장보험료
		                Ds_Trty.setCellData(i, "nExptGrntBussPrem", ""); //예상보장영업보험료
		                //특약간 관계 체크
		                scwin.lfn_Trty_Relation_Check(i, Ds_Trty.getCellData(i, "sPkgCd"), Ds_Trty.getCellData(i, "sExcluGroupCd1"), Ds_Trty.getCellData(i, "sExcluGroupCd2"), Ds_Trty.getCellData(i, "TrtyHnglAbbName"), "", false);
		            } 
		            else if (Ds_Trty.getCellData(i, "chk") == "1") {
		                trtyCheckFlag = false;
		                //특약간 관계 체크
		                scwin.lfn_Trty_Relation_Check(i, Ds_Trty.getCellData(i, "sPkgCd"), Ds_Trty.getCellData(i, "sExcluGroupCd1"), Ds_Trty.getCellData(i, "sExcluGroupCd2"), Ds_Trty.getCellData(i, "TrtyHnglAbbName"), "", true);
		
		                //기존에 특약보험료가 존재하면 다시 원복한다.
		                for (var j = 0; j < Ds_Trty.getRowCount(); j++) {
		                    if (Ds_Trty.getCellData(j, "chk") == "1" && Ds_Trty.getCellData(j, "nGrntPrem") == "") {
		                        Ds_Trty.setCellData(j, "nGrntPrem", Ds_Trty_Backup.getCellData(j, "nGrntPrem")); //보장보험료
		                        Ds_Trty.setCellData(j, "nExptGrntBussPrem", Ds_Trty_Backup.getCellData(j, "nExptGrntBussPrem")); //예상보장영업보험료
		                    }
		                }
		            }
		            
	            }
			}else{
				//scwin.grd_Trty_head_Check();
			}
			trtyChk = (trtyChk=="1"?"0":"1");
		}
		
		
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 그리드 헤더 체크
	//---------------------------------------------------------------------------
	scwin.grd_Trty_head_Check = function(){
		if(trtyChk == "1" && (Ds_Trty.getRowCount() == 0 || wconv.length(Ds_Trty.getMatchedData("chk", "0", true)) < 1)){
	        $("#grd_sTrty_gh101").html("<img src='/cm/images/chkon.jpg'/>");
	    }else{
	    	$("#grd_sTrty_gh101").html("<img src='/cm/images/chkoff.jpg'/>");
	    }
	};

	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 아웃 확인 Null일경우 0 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onblur = function(e) {
		if(wconv.length(wconv.trim(medt_nBussPrem.getValue())) == 0){
			if(wconv.length(wconv.trim(parent.edt_sGdCd.getValue())) > 0){
				medt_nBussPrem.setValue("0");
			}
		}	
	};
	
	//---------------------------------------------------------------------------
	// function 명 : 신규
	// 내용        : 영업보험료 포커스 확인 0인경우 Null 입력
	//---------------------------------------------------------------------------
	scwin.medt_nBussPrem_onfocus = function(e) {
		if(medt_nBussPrem.getValue() == "0"){
			medt_nBussPrem.setValue("");
		}	
	};
	]]></script>
	</head>
	<body style="height:97%;">
		
			<!-- group:s -->
			<!-- group:e -->
			
	    	<!-- group:s -->
	    	<xf:group id="top_main" style="" class="section">
	    		<xf:group id="" style="" class="w2tb tb"
	    			tagname="table">
	    			<w2:attributes>
	    				<w2:summary></w2:summary>
	    			</w2:attributes>
	    			<xf:group tagname="colgroup">
	    				<xf:group style="width:100.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:200.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:90.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:120.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:80.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:50.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="width:80.00px;"
	    					tagname="col">
	    				</xf:group>
	    				<xf:group style="" tagname="col"></xf:group>
	    			</xf:group>
	    			<xf:group style="" tagname="tr">
	    				<xf:group style="" class="w2tb_th"
	    					tagname="th">
	    					보험기간
	    				</xf:group>
	    				<xf:group style="" class="w2tb_td"
	    					tagname="td">



	    					<xf:group class="" style="">
	    						<xf:input displayFormat="####-##-##"
	    							id="medt_sInsurStrtdate" readOnly="true"
	    							ref="data:Ds_LTIDA00.sInsurStrtdate" style="width:80px">
	    						</xf:input>
	    						<w2:textbox class="txt_bw" id=""
	    							label="~" tagname="span" style="">
	    						</w2:textbox>
	    						<xf:input displayFormat="####-##-##"
	    							id="medt_sInsurEndDate" readOnly="true"
	    							ref="data:Ds_LTIDA00.sInsurEndDate" style="width:80px">
	    						</xf:input>
	    					</xf:group>
	    				</xf:group>
	    				<xf:group class="w2tb_th" tagname="th">
	    					납입주기
	    				</xf:group>
	    				<xf:group class="w2tb_td" tagname="td">
	    					<!-- group:s -->
	    					<!-- group:e -->
	    					<xf:select1 allOption=""
	    						appearance="minimal" chooseOption="true" direction="auto"
	    						disabled="" disabledClass="" displayMode="label"
	    						ev:onviewchange="" id="cmb_PaymCycl" optionOrder=""
	    						ref="" style="" submenuSize=""
	    						renderType="native" chooseOptionLabel="-선택-">
	    						<xf:choices>
	    							<xf:itemset
	    								nodeset="data:DsWs_PaymCycl">
	    								<xf:label ref="sPaymCyclName"></xf:label>
	    								<xf:value ref="sPaymCyclCd"></xf:value>
	    							</xf:itemset>
	    						</xf:choices>
	    					</xf:select1>
	    				</xf:group>
	    				<xf:group style="" class="w2tb_th"
	    					tagname="th">
	    					보기/납기
	    				</xf:group>
	    				<xf:group style="" class="w2tb_td"
	    					tagname="td">
	    					<w2:attributes>
								<w2:colspan>3</w2:colspan>
							</w2:attributes>
	    					<xf:select1 allOption=""
	    						appearance="minimal" chooseOption="" direction="auto"
	    						disabled="" disabledClass="" displayMode="label"
	    						ev:onviewchange="scwin.lfn_InsurTermPaymTermChanged"
	    						id="cmb_InsurTermPaymTerm" optionOrder="" ref=""
	    						style="" submenuSize="" renderType="native">
	    						<xf:choices>
	    							<xf:itemset
	    								nodeset="data:DsWs_InsurTermPaymTerm">
	    								<xf:label
	    									ref="sInsurPaymName">
	    								</xf:label>
	    								<xf:value ref="sInsurPaymCd"></xf:value>
	    							</xf:itemset>
	    						</xf:choices>
	    					</xf:select1>
	    				</xf:group>
	    				
	    			</xf:group>
	    			<xf:group style="" tagname="tr">
	    				<xf:group style="" class="w2tb_th"
	    					tagname="th">
	    					단체관리번호
	    				</xf:group>
	    				<xf:group style="" class="w2tb_td"
	    					tagname="td">
	    					<xf:group class="input_btn icon prot"
	    						style="">
	    						<xf:input dataType=""
	    							displayFormat="##-####" ev:onkeydown="" ev:onviewchange=""
	    							id="medt_sGroupCrAdmNo" maxlength="6"
	    							ref="data:Ds_LTIEA10.sGroupCrAdmNo" style=""
	    							disabled="true">
	    						</xf:input>
	    						<w2:anchor class=""
	    							ev:onclick="scwin.lfn_ltiea10_OnClick" id="btn_GroupList"
	    							outerDiv="" style="">
	    							<xf:label><![CDATA[저장]]></xf:label>
	    						</w2:anchor>
	    					</xf:group>
	    				</xf:group>
	    				<xf:group class="w2tb_th" tagname="th">
	    					단체관리명
	    				</xf:group>
	    				<xf:group class="w2tb_td" tagname="td">
	    					<!-- group:s -->
	    					<!-- group:e -->
	    					<xf:input disabled="true"
	    						id="edt_sGroupName" style=""
	    						ref="data:Ds_LTIEA10.sGroupName">
	    					</xf:input>
	    				</xf:group>
	    				<xf:group style="" class="w2tb_th"
	    					tagname="th">
	    					총인원수
	    				</xf:group>
	    				<xf:group style="" class="w2tb_td"
	    					tagname="td">
	    					<xf:input disabled="true"
	    						id="medt_nFrstPsct" style="text-align:right; "
	    						ref="data:Ds_LTIEA10.nFrstPsct" dataType="number">
	    					</xf:input>
	    				</xf:group>
	    				<xf:group class="w2tb_th" tagname="th">
	    					단체할인율
	    				</xf:group>
	    				<xf:group class="w2tb_td" tagname="td">
	    					<xf:input disabled="true"
	    						id="edt_nGroupDcrt" style="width:40px;text-align:right;"
	    						ref="data:Ds_LTIEA10.nGroupDcrt">
	    					</xf:input>
	    					<xf:select appearance="full" cols=""
	    						id="chk_AgreDocuRecpYn" rows="" selectedindex="-1"
	    						style="margin-left:5px;" title="" useCheckboxTitle="true"
	    						ref="data:Ds_LTIEA10.sAgreDocuRecpYn" disabled="true">
	    						<xf:choices>
	    							<xf:item>
	    								<xf:label><![CDATA[단체협약여부]]></xf:label>
	    								<xf:value><![CDATA[1]]></xf:value>
	    							</xf:item>
	    						</xf:choices>
	    					</xf:select>
	    				</xf:group>
	    			</xf:group>
	    		</xf:group>
	    		
	    	</xf:group>
	    	<!-- group:e -->
			
			<!-- group:s -->
			<xf:group id="body_pibo" style="" class="section">
				<xf:group id="" style="" class="defaultbox">
					<w2:textbox id="" style="" class="df_tt fl"
						label="피보험자">
					</w2:textbox>
					<w2:anchor class="fl btn_expand"
						ev:onclick="scwin.btn_View_Pibo_onclick" id="btn_View_Pibo"
						outerDiv="false" style="">
						<xf:label>확대</xf:label>
					</w2:anchor>
					<xf:group class="fr" id="" style="">
						<w2:anchor class="btn_add" ev:onclick="" id=""
							outerDiv="false" style="visibility:hidden;">
							<xf:label><![CDATA[보상한도]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_del" ev:onclick="" id=""
							outerDiv="false" style="visibility:hidden;">
							<xf:label><![CDATA[보험료계산]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_nml"
							ev:onclick="scwin.lfn_Btn_RtnAmt_OnClick" id="btn_maxData"
							outerDiv="true" style="visibility:hidden;">
							<xf:label><![CDATA[보험료계산배치]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_nml"
							ev:onclick="scwin.lfn_Excel_OnClick" id="btn_PiboExcel"
							outerDiv="true" style="">
							<xf:label><![CDATA[피보험자엑셀로드]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_nml"
							ev:onclick="scwin.lfn_B180_OnClick" id="btn_PiboDetail"
							outerDiv="true" style="">
							<xf:label><![CDATA[피보험자명세]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>

				<w2:gridView autoFit="allColumn" class="cm_grid"
					dataList="Ds_Pibo" editModeEvent="onClick" id="grd_Pibo"
					ignoreCellClick="false" noResultMessageVisible="false"
					rowNumWidth="10" rowStatusHeaderValue="상태" rowStatusWidth="20"
					scrollByColumn="false" style="height:72px; position:relative; top:5px !important; margin-top:0px !important;" useShiftKey="true"
					ev:oncellclick="scwin.lfn_PiboOnCellClick"
					ev:onviewchange="scwin.grd_Pibo_onviewchange" fastScroll="true">
					<w2:header id="" style="">
						<w2:row id="" style="">
							<w2:column blockSelect="false"
								displayMode="label" id="gh101" inputType="text"
								style="height:20px;" value="선택" width="40">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh102" inputType="text"
								style="height:20px;" value="구분" width="90">
							</w2:column>
							<w2:column blockSelect="false" colSpan="2"
								displayMode="label" id="gh103" inputType="text"
								style="height:20px;" value="주민번호" width="160">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh104" inputType="text"
								style="height:20px;" value="성명" width="110">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh105" inputType="text"
								style="height:20px;" value="나이" width="70">
							</w2:column>
							<w2:column blockSelect="false" colSpan="2"
								displayMode="label" id="gh107" inputType="text"
								style="height:20px;" value="직업" width="180">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh108" inputType="text"
								style="height:20px;" value="급수" width="70">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh109" inputType="text"
								style="height:20px;" value="운전용도" width="90">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="gh110" inputType="text"
								style="height:20px;" value="보장보험료" width="115">
							</w2:column>
							<w2:column blockSelect="false" id="column1"
								style="height:20px;" inputType="text" width="70"
								displayMode="label" value="대표">
							</w2:column>
						</w2:row>
					</w2:header>
					<w2:gBody id="" style="">
						<w2:row id="" style="">
							<w2:column blockSelect="false"
								displayMode="label" falseValue="0" id="sel" inputType="checkbox"
								trueValue="1" valueType="other" width="30">
							</w2:column>
							<w2:column blockSelect="false"
								chooseOption="false" dataType="" defaultValue="1"
								id="sInrpsFlagCd" inputType="select" width="90" readOnly="true"
								displayMode="label">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_FlagCd">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column blockSelect="false"
								displayFormat="######-#######" id="sGroupInrpsCd"
								inputType="text" maxLength="13" width="140" readOnly="true" dataType="text">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="btn_GridRow_Search"
								imageSrc="/cm/images/contents/ico_btn_input_sch.png"
								inputType="image" style="height:20px" width="25">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="sGroupInrpsName" inputType="text"
								readOnly="true" width="110">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="nGroupInrpsAge" inputType="text"
								readOnly="true" width="70">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="sGroupInrpsJobName" inputType="text"
								width="160" dataType="text" readOnly="true">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="btn_Job_Search"
								imageSrc="/cm/images/contents/ico_btn_input_sch.png"
								inputType="image" style="height:20px" width="25">
							</w2:column>
							<w2:column blockSelect="false"
								displayMode="label" id="sGroupInrpsJobGradCd" inputType="select"
								readOnly="true" width="70">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_Grade">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column blockSelect="false" dataType=""
								id="sGroupInrpsDrveFlagCd" inputType="select" width="90"
								readOnly="true" displayMode="label">
								<w2:choices>
									<w2:itemset
										nodeset="data:DsWs_Drive">
										<w2:label ref="sHnglCdName"></w2:label>
										<w2:value ref="sCd"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:column>
							<w2:column blockSelect="false"
								displayFormat="###,###,###,###,###,###" displayMode="label"
								id="nGrntPrem" inputType="text" readOnly="true"
								textAlign="right" width="115">
							</w2:column>
							<w2:column blockSelect="false"
								id="sRpstInrpsFlag" style="height:20px" inputType="checkbox"
								width="70" displayMode="label">
							</w2:column>
						</w2:row>
					</w2:gBody>
				</w2:gridView><w2:gridView autoFit="allColumn" class="cm_grid" dataList="Ds_PiboExcel" editModeEvent="onClick" ev:oncellclick="" ev:onfilereadend="scwin.grd_PiboExcel_onfilereadend" ev:onviewchange="" id="grd_PiboExcel" ignoreCellClick="false" noResultMessageVisible="" rowNumWidth="" rowStatusHeaderValue="" rowStatusWidth="" scrollByColumn="false" style="display:none" useShiftKey="true">
	    			<w2:header id="" style="">
	    				<w2:row id="" style="">
	    					<w2:column blockSelect="false" displayMode="label" id="gh104" inputType="text" style="height:20px;" value="sGroupInrpsName" width="110">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column2" inputType="text" style="height:20px;" value="sGroupInrpsCd" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" colSpan="1" displayMode="label" id="gh107" inputType="text" style="height:20px;" value="sGroupInrpsJobCd" width="150">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="gh109" inputType="text" style="height:20px;" value="sGroupInrpsDrveFlagCd" width="90">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column4" inputType="text" style="height:20px;" value="sCrtorRelnCd" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column6" inputType="text" style="height:20px;" value="sPftbpInrpsRelnCd" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column8" inputType="text" style="height:20px;" value="sPftbpName" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column10" inputType="text" style="height:20px;" value="sPftbpCd" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column12" inputType="text" style="height:20px;" value="sPftbpTelno" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column14" inputType="text" style="height:20px;" value="sGroupInrpsJobGradCd" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="gh110" inputType="text" style="height:20px;" value="sInrpsFlagCd" width="115">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="column1" inputType="text" style="height:20px;" value="nGroupInrpsAge" width="70">
	    					</w2:column>
	    				</w2:row>
	    			</w2:header>
	    			<w2:gBody id="" style="">
	    				<w2:row id="" style="">
	    					<w2:column blockSelect="false" displayMode="label" id="sGroupInrpsName" inputType="text" readOnly="true" width="110">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sGroupInrpsCd" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sGroupInrpsJobCd" inputType="text" width="150">
	    					</w2:column>
	    					<w2:column blockSelect="false" dataType="own" id="sGroupInrpsDrveFlagCd" inputType="text" readOnly="true" width="90">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sCrtorRelnCd" inputType="text" readOnly="true" textAlign="right" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sPftbpInrpsRelnCd" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sPftbpName" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sPftbpCd" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sPftbpTelno" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sGroupInrpsJobGradCd" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="sInrpsFlagCd" inputType="text" style="height:20px" width="115">
	    					</w2:column>
	    					<w2:column blockSelect="false" displayMode="label" id="nGroupInrpsAge" inputType="text" style="height:20px" width="70">
	    					</w2:column>
	    				</w2:row>
	    			</w2:gBody>
	    		</w2:gridView>
			</xf:group>
			<!-- group:e -->
			
			
			<xf:group id="body_trty" style="" class="layout_7_3 mt15">
				<xf:group id="" style="" class="leftarea">
					<!-- group:s -->
					<xf:group id="" style="" class="section">
						<xf:group id="" style="" class="defaultbox">
							<w2:textbox id="" style="" class="df_tt fl"
								label="특약사항">
							</w2:textbox>
							<w2:anchor class="fl btn_expand"
								ev:onclick="scwin.btn_View_Trty_onclick" id="btn_View_Trty"
								outerDiv="false" style="">
								<xf:label>확대</xf:label>
							</w2:anchor>
							<xf:group id="" style="" class="fl ml20">
								<xf:select1 allOption=""
									appearance="minimal" chooseOption="" direction="auto"
									disabled="false" disabledClass="" displayMode="label"
									ev:onviewchange="scwin.cmb_Plan_onviewchange_Async" id="cmb_Plan"
									optionOrder="" ref="data:Ds_LTIDA00.sApplPlanCd"
									style="width:170px" submenuSize="" renderType="native"
									ev:onchange="">
									<xf:choices>
										<xf:itemset
											nodeset="data:DsWs_Plan">
											<xf:label ref="sPlanName"></xf:label>
											<xf:value ref="sPlanCd"></xf:value>
										</xf:itemset>
									</xf:choices>
								</xf:select1>
							</xf:group>
							<xf:group id="" style="" class="fr">
								<w2:anchor class="btn_nml" ev:onclick=""
									id="btn_Bosang" outerDiv="true" style="visibility:hidden;">
									<xf:label><![CDATA[보상한도]]></xf:label>
								</w2:anchor>
								<w2:anchor id="btn_AllCalPrem"
									ev:onclick="scwin.btn_AllCalPrem_OnClick_Async" class="btn_nml"
									outerDiv="true">
									<xf:label><![CDATA[일괄적용]]></xf:label>
								</w2:anchor>
								<w2:anchor id="btn_CalPrem"
									ev:onclick="scwin.btn_CalPrem_OnClick_Async" class="btn_blue sum"
									outerDiv="true">
									<xf:label><![CDATA[보험료계산]]></xf:label>
								</w2:anchor>
							</xf:group>
						</xf:group>
						<w2:gridView autoFit="allColumn" class="cm_grid"
							dataList="Ds_Trty" ev:oncellclick="scwin.lfn_Trty_OnCellClick"
							ev:onheaderclick="scwin.lfn_trtyOnHeadClick" gnoreCellClick="false" id="grd_sTrty"
							noResultMessageVisible="false" rowNumWidth="10"
							rowStatusHeaderValue="상태" rowStatusWidth="20"
							scrollByColumn="false" style="height:320px;" useShiftKey="true"
							ev:onviewchange="scwin.grd_sTrty_onviewchange" ev:onkeyup="">
							<w2:header id="" style="">
								<w2:row id="" style="">
									<w2:column blockSelect="false"
										displayMode="label" id="gh101" inputType="checkbox"
										style="height:20px;" value="" width="30">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh102" inputType="text"
										style="height:20px;" value="구분" width="50">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh103" inputType="text"
										style="height:20px;" value="특약" width="150">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh104" inputType="text"
										style="height:20px;" value="보험기간" width="80">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh105" inputType="text"
										style="height:20px;" value="납입기간" width="80">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh106" inputType="text"
										style="height:20px;" value="가입금액" width="80">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="gh107" inputType="text"
										style="height:20px;" value="보장보험료" width="100">
									</w2:column>
									<w2:column blockSelect="false"
										id="column1" style="height:20px;" inputType="text" width="120"
										displayMode="label" value="예상보장영업보험료" hidden="true">
									</w2:column>
								</w2:row>
							</w2:header>
							<w2:gBody id="" style="">
								<w2:row id="" style="">
									<w2:column blockSelect="false"
										defaultValue="0" displayMode="label" falseValue="0" id="chk"
										inputType="checkbox" trueValue="1" width="30">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="BascSlctFlagCd_H" inputType="text"
										readOnly="true" width="90">
									</w2:column>
									<w2:column blockSelect="false"
										displayMode="label" id="TrtyHnglAbbName" inputType="text"
										readOnly="true" textAlign="left" width="250px;">
									</w2:column>
									<w2:column blockSelect="false"
										chooseOption="" dataType="" id="sInsurTermCd"
										inputType="select" readOnly="true" selectedData="false"
										width="110" allOption="" displayMode="label"
										editType="select">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_InsurTerm">
												<w2:label
													ref="sInsurTermName">
												</w2:label>
												<w2:value
													ref="sInsurTermCd">
												</w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column blockSelect="false"
										chooseOption="" dataType="" id="sPaymTermCd"
										inputType="select" readOnly="true" selectedData="false"
										width="70" allOption="" expression="" useFilter="true"
										editType="select" displayMode="label">
										<w2:choices>
											<w2:itemset
												nodeset="data:DsWs_PaymTerm">
												<w2:label
													ref="sPaymTermName">
												</w2:label>
												<w2:value
													ref="sPaymTermCd">
												</w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column blockSelect="false"
										chooseOption="" dataType="own" id="nTrtyInsAmt"
										inputType="select" selectedData="false" width="90"
										allOption="" customFormatter="scwin.setTrtyInsAmt"
										textAlign="" displayMode="label" editType="select">
										<w2:choices>
											<w2:itemset
												nodeset="data:Dsws_InsAmt">
												<w2:label
													ref="sHnglCdName">
												</w2:label>
												<w2:value ref="sCd"></w2:value>
											</w2:itemset>
										</w2:choices>
									</w2:column>
									<w2:column blockSelect="false"
										displayFormat="###,###,###,###,###,###" displayMode="label"
										id="nGrntPrem" inputType="text" readOnly="true"
										textAlign="right" width="100">
									</w2:column>
									<w2:column blockSelect="false"
										id="nExptGrntBussPrem" style="height:20px" inputType="text"
										width="100" displayMode="label"
										displayFormat="###,###,###,###,###,###" textAlign="right">
									</w2:column>
								</w2:row>
							</w2:gBody>
						</w2:gridView>

					</xf:group>
					<!-- group:e -->
				</xf:group>

				<xf:group id="right_main" style="" class="rightarea">
					<!-- group:s -->
					<xf:group id="" style="" class="section">
						<xf:group id="" style="" class="defaultbox">
							<w2:textbox id="" style="" class="df_tt fl"
								label="보상내용 및 한도">
							</w2:textbox>
						</xf:group>
						<xf:group id="" style="height:146px;"
							class="txtbox">
							<w2:textbox id="txtTrtyInfo" style=""
								class="txt" label="">
							</w2:textbox>
						</xf:group>
					</xf:group>
					<!-- group:e -->
					<xf:group class="w2tb tb" id="" style=""
						tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup">
							<xf:group style="width:75.00px;"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
							<xf:group style="width:75.00px;"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group id="1" style="" tagname="tr">
							<xf:group class="w2tb_th" style=""
								tagname="th">
								최소보험료
							</xf:group>
							<xf:group class="w2tb_td" style=""
								tagname="td">
								<xf:input disabled="true"
									id="medt_nMinPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nMinPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">
								최대보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true"
									id="medt_nMaxPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nMaxPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">
								보장보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true"
									id="medt_nGrntPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nGrntPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">
								적립보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true"
									id="medt_nAccuPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nAccuPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">
								할인보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true"
									id="medt_nDcPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nDcPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">
								적용보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<xf:input disabled="true"
									id="medt_nApplPrem" style="text-align:right;"
									ref="data:Ds_LTIDA00.nApplPrem"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">
								영업보험료
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<xf:group class="input_btn icon"
									style="">
									<xf:input id="medt_nBussPrem"
										ref="data:Ds_LTIDA00.nBussPrem" style="text-align:right;"
										displayFormat="###,###,###,###,###,###" ev:onblur="scwin.medt_nBussPrem_onblur" dataType="number" ev:onfocus="scwin.medt_nBussPrem_onfocus">
									</xf:input>
									<w2:anchor class=""
										ev:onclick="scwin.btn_Input_Save_OnClick_Async" id="btn_Input_Save"
										outerDiv="" style="">
										<xf:label><![CDATA[저장]]></xf:label>
									</w2:anchor>
								</xf:group>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group class="w2tb_th" tagname="th">
								예상환급금
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<xf:input disabled="true"
									id="medt_nExptEndRetrnAmt" style="width:80px;text-align:right;"
									ref="data:Ds_LTIDA00.nExptEndRetrnAmt"
									displayFormat="###,###,###,###,###,###" dataType="number">
								</xf:input>
								<xf:input disabled="true"
									id="medt_nExptEndRtnrt" style="width:40px;text-align:right;"
									ref="data:Ds_LTIDA00.nExptEndRtnrt" dataType="number">
								</xf:input>
								<w2:textbox class="txt_bw" id=""
									label="%" style="" tagname="span">
								</w2:textbox>
							</xf:group>
						</xf:group>
					</xf:group>
				</xf:group>
			</xf:group>

			<!-- group:s -->
			<xf:group id="bottom" style="" class="section">
				<xf:group id="" style="" class="defaultbox last">
					<xf:group id="" style="" class="fl">
						<w2:anchor id="btn_Medical"
							ev:onclick="scwin.btn_Medical_onclick" class="btn_nml ml5"
							outerDiv="true">
							<xf:label><![CDATA[사전조회]]></xf:label>
						</w2:anchor>
						<w2:anchor id="btn_InsuDetail"
							ev:onclick="scwin.btn_InsuDetail_onclick" class="btn_nml ml5"
							outerDiv="true">
							<xf:label><![CDATA[인수제한사유]]></xf:label>
						</w2:anchor>
						<w2:anchor id="btn_Summary"
							ev:onclick="scwin.btn_Summary_onclick" class="btn_nml ml5"
							outerDiv="true" disabled="">
							<xf:label><![CDATA[보험료 요약]]></xf:label>
						</w2:anchor>
						<w2:anchor id="btn_Hwang"
							ev:onclick="scwin.btn_Hwang_onclick" class="btn_nml ml5"
							outerDiv="true">
							<xf:label><![CDATA[예상환급금]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_nml ml5"
							ev:onclick="scwin.btn_GetHwangup_onclick" id="btn_GetHwangup"
							outerDiv="true" style="">
							<xf:label><![CDATA[경과기간예상환급금산출]]></xf:label>
						</w2:anchor>
						<w2:anchor class="btn_nml ml5"
							ev:onclick="scwin.btn_PrintInfo_onclick" id="btn_PrintInfo"
							outerDiv="true" style="">
							<xf:label><![CDATA[안내문발송]]></xf:label>
						</w2:anchor>
					</xf:group>
					<xf:group id="" style="" class="fr">
						<w2:anchor id="btn_Next"
							ev:onclick="scwin.btn_Next_OnClick_Async" class="btn_nml1 bul"
							outerDiv="true">
							<xf:label><![CDATA[다음]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
				
			</xf:group>
			<!-- group:e -->
			
	</body>
</html>