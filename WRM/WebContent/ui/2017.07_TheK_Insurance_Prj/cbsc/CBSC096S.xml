<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/new.css" type="text/css"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<!-- 
	       ###################################################
	        파일명 : BM001M03.xml
	        프로그램명 : 메뉴 관리
	        설 명 :  메뉴를 관리하는 화면
	        작성자 : Inswave Systems
	        작성일 : 2016.10.25
	
	        수정일자            수정자                  수정내용
	       ==================================================
	       2016.10.25       Inswave Systems       최초작성
	       ###################################################
	    -->
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataList baseNode="list" id="DsWs_CmCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sClsfCd"
							name="sClsfCd">
						</w2:column>
						<w2:column dataType="text" id="sCdType"
							name="sCdType">
						</w2:column>
						<w2:column dataType="text" id="sCd"
							name="sCd">
						</w2:column>
						<w2:column dataType="text" id="sHnglCdName"
							name="sHnglCdName">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:linkedDataList id="DsWs_RlnmCnfmInfoRvMatt1"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AddrFlag"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_RlnmCnfmInfoRvMatt2"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AddrFlag"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_AddrFlag"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AddrFlag"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_Reln" bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="CrtorRelnCd"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_RlnmCnfmRgcr"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="RlnmCnfmRgcr"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:linkedDataList id="DsWs_AqamtChnlCd"
					bind="DsWs_CmCd">
					<w2:condition type="filter"><![CDATA[sCdType=="AqamtChnlCd"]]></w2:condition>
					<w2:condition type="sort"><![CDATA[]]></w2:condition>
				</w2:linkedDataList>
				<w2:dataList baseNode="list" id="DsWs_InsurTerm"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_PaymTerm"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sPaymTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sInsurTermCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sPaymTermName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Dsws_InsAmt"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column id="sCdAttrValue" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sHnglCdName" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sTrtyCd" name=""
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="" dataType="text"></w2:column>
						<w2:column id="sEngCdName" name=""
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA03"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sCrtorFlgcd"
							name="sCrtorFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="nCrtorAge"
							name="nCrtorAge">
						</w2:column>
						<w2:column dataType="text" id="sCrtorSexFlag"
							name="sCrtorSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCstId"
							name="sCrtorCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpRelnCd"
							name="sEndPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCd"
							name="sEndPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpName"
							name="sEndPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCntad"
							name="sEndPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntFlagCd"
							name="sAsmtAgntFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntRelnCd"
							name="sAsmtAgntRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCd"
							name="sAsmtAgntCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntName"
							name="sAsmtAgntName">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCntad"
							name="sAsmtAgntCntad">
						</w2:column>
						<w2:column dataType="text" id="sZip1"
							name="sZip1">
						</w2:column>
						<w2:column dataType="text" id="sZip2"
							name="sZip2">
						</w2:column>
						<w2:column dataType="text" id="sAdrs1"
							name="sAdrs1">
						</w2:column>
						<w2:column dataType="text" id="sAdrsAdd"
							name="sAdrsAdd">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel1"
							name="sOfficeTel1">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel2"
							name="sOfficeTel2">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel3"
							name="sOfficeTel3">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone1"
							name="sCellPhone1">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone2"
							name="sCellPhone2">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone3"
							name="sCellPhone3">
						</w2:column>
						<w2:column dataType="text" id="sFax1"
							name="sFax1">
						</w2:column>
						<w2:column dataType="text" id="sFax2"
							name="sFax2">
						</w2:column>
						<w2:column dataType="text" id="sFax3"
							name="sFax3">
						</w2:column>
						<w2:column dataType="text" id="sEmail1"
							name="sEmail1">
						</w2:column>
						<w2:column dataType="text" id="RvadAddr"
							name="RvadAddr">
						</w2:column>
						<w2:column dataType="text" id="sEnntmPftbpYn"
							name="sEnntmPftbpYn">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntYn"
							name="sAsmtAgntYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCd"
							name="sInsurPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpName"
							name="sInsurPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCntad"
							name="sInsurPftbpCntad">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmRgcr"
							name="sRlnmCnfmRgcr">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmDate"
							name="sRlnmCnfmDate">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfm"
							name="sRlnmCnfm">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA15"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nSeqno"
							name="nSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCcndFlagCd"
							name="sCcndFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sCcndFlagName"
							name="sCcndFlagName">
						</w2:column>
						<w2:column dataType="text" id="sCcndResno"
							name="sCcndResno">
						</w2:column>
						<w2:column dataType="text" id="sCcndName"
							name="sCcndName">
						</w2:column>
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="sTrtyName"
							name="sTrtyName">
						</w2:column>
						<w2:column dataType="text" id="sJugmAuthCd"
							name="sJugmAuthCd">
						</w2:column>
						<w2:column dataType="text" id="sJugmAuthName"
							name="sJugmAuthName">
						</w2:column>
						<w2:column dataType="text" id="sJugmGradName"
							name="sJugmGradName">
						</w2:column>
						<w2:column dataType="text" id="sJugmCont"
							name="sJugmCont">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sConuObjtYn"
							name="sConuObjtYn">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nOthrInsurSeqno"
							name="nOthrInsurSeqno">
						</w2:column>
						<w2:column dataType="text" id="nGroupInrpsSeqno"
							name="nGroupInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sRqstCd"
							name="sRqstCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_TaxPrfrYn"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="value"
							name="value">
						</w2:column>
						<w2:column dataType="text" id="text"
							name="text">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<text><![CDATA[비과세]]></text>
							<value><![CDATA[B]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[미가입]]></text>
							<value><![CDATA[N]]></value>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_long_mPlr"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCustNo"
							name="sCustNo">
						</w2:column>
						<w2:column dataType="text" id="sCstId"
							name="sCstId">
						</w2:column>
						<w2:column dataType="text" id="nSeqNo"
							name="nSeqNo">
						</w2:column>
						<w2:column dataType="text" id="sName"
							name="sName">
						</w2:column>
						<w2:column dataType="text" id="sCustType"
							name="sCustType">
						</w2:column>
						<w2:column dataType="text" id="sClass"
							name="sClass">
						</w2:column>
						<w2:column dataType="text" id="sMarry"
							name="sMarry">
						</w2:column>
						<w2:column dataType="text" id="sJobCode"
							name="sJobCode">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text" id="sDrvCls"
							name="sDrvCls">
						</w2:column>
						<w2:column dataType="text" id="sJobCls"
							name="sJobCls">
						</w2:column>
						<w2:column dataType="text" id="nHomAdrsChangeNo"
							name="nHomAdrsChangeNo">
						</w2:column>
						<w2:column dataType="text" id="sHomZco"
							name="sHomZco">
						</w2:column>
						<w2:column dataType="text" id="sHomAdr1"
							name="sHomAdr1">
						</w2:column>
						<w2:column dataType="text" id="sHomAdr2"
							name="sHomAdr2">
						</w2:column>
						<w2:column dataType="text" id="nCrpAdrsChangeNo"
							name="nCrpAdrsChangeNo">
						</w2:column>
						<w2:column dataType="text" id="sCrpZco"
							name="sCrpZco">
						</w2:column>
						<w2:column dataType="text" id="sCrpAdr1"
							name="sCrpAdr1">
						</w2:column>
						<w2:column dataType="text" id="sCrpAdr2"
							name="sCrpAdr2">
						</w2:column>
						<w2:column dataType="text" id="nEtcAdrsChangeNo"
							name="nEtcAdrsChangeNo">
						</w2:column>
						<w2:column dataType="text" id="sEtcZco"
							name="sEtcZco">
						</w2:column>
						<w2:column dataType="text" id="sEtcAdr1"
							name="sEtcAdr1">
						</w2:column>
						<w2:column dataType="text" id="sEtcAdr2"
							name="sEtcAdr2">
						</w2:column>
						<w2:column dataType="text" id="sAdrsType"
							name="sAdrsType">
						</w2:column>
						<w2:column dataType="text" id="nAdrsChangeNo"
							name="nAdrsChangeNo">
						</w2:column>
						<w2:column dataType="text" id="sAdrsZco"
							name="sAdrsZco">
						</w2:column>
						<w2:column dataType="text" id="sAdrs1"
							name="sAdrs1">
						</w2:column>
						<w2:column dataType="text" id="sAdrs2"
							name="sAdrs2">
						</w2:column>
						<w2:column dataType="text" id="sDMAdrsTyp"
							name="sDMAdrsTyp">
						</w2:column>
						<w2:column dataType="text" id="nTelChangeNo"
							name="nTelChangeNo">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel1"
							name="sOfficeTel1">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel2"
							name="sOfficeTel2">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel3"
							name="sOfficeTel3">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone1"
							name="sCellPhone1">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone2"
							name="sCellPhone2">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone3"
							name="sCellPhone3">
						</w2:column>
						<w2:column dataType="text" id="sFax1"
							name="sFax1">
						</w2:column>
						<w2:column dataType="text" id="sFax2"
							name="sFax2">
						</w2:column>
						<w2:column dataType="text" id="sFax3"
							name="sFax3">
						</w2:column>
						<w2:column dataType="text" id="sEtcType"
							name="sEtcType">
						</w2:column>
						<w2:column dataType="text" id="sEtcTel1"
							name="sEtcTel1">
						</w2:column>
						<w2:column dataType="text" id="sEtcTel2"
							name="sEtcTel2">
						</w2:column>
						<w2:column dataType="text" id="sEtcTel3"
							name="sEtcTel3">
						</w2:column>
						<w2:column dataType="text" id="sEmail1"
							name="sEmail1">
						</w2:column>
						<w2:column dataType="text" id="sEmail2"
							name="sEmail2">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Jindan"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="id_cd"
							name="id_cd">
						</w2:column>
						<w2:column dataType="text" id="id_nm"
							name="id_nm">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<id_cd><![CDATA[Y]]></id_cd>
							<id_nm><![CDATA[대상]]></id_nm>
						</w2:row>
						<w2:row>
							<id_cd><![CDATA[N]]></id_cd>
							<id_nm><![CDATA[비대상]]></id_nm>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsSexFlag"
							name="sInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sJobGradCd"
							name="sJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nInrpsAge"
							name="nInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sPftbpFlagCd"
							name="sPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text" id="sRqstYnName"
							name="sRqstYnName">
						</w2:column>
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt">
						</w2:column>
						<w2:column dataType="text"
							id="sOthrInsurCntName" name="sOthrInsurCntName">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYnName"
							name="sSubCvrgeYnName">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYnName"
							name="sDgnsObjtYnName">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn">
						</w2:column>
						<w2:column dataType="text" id="sMNumCrInsAgreYn"
							name="sMNumCrInsAgreYn">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA03_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sCrtorFlgcd"
							name="sCrtorFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorName"
							name="sCrtorName">
						</w2:column>
						<w2:column dataType="text" id="nCrtorAge"
							name="nCrtorAge">
						</w2:column>
						<w2:column dataType="text" id="sCrtorSexFlag"
							name="sCrtorSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sCrtorCstId"
							name="sCrtorCstId">
						</w2:column>
						<w2:column dataType="text" id="nCstChngSeqno"
							name="nCstChngSeqno">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sEnntmPftbpFlagCd" name="sEnntmPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpRelnCd"
							name="sEndPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCd"
							name="sEndPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpName"
							name="sEndPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sEndPftbpCntad"
							name="sEndPftbpCntad">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntFlagCd"
							name="sAsmtAgntFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntRelnCd"
							name="sAsmtAgntRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCd"
							name="sAsmtAgntCd">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntName"
							name="sAsmtAgntName">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntCntad"
							name="sAsmtAgntCntad">
						</w2:column>
						<w2:column dataType="text" id="sZip1"
							name="sZip1">
						</w2:column>
						<w2:column dataType="text" id="sZip2"
							name="sZip2">
						</w2:column>
						<w2:column dataType="text" id="sAdrs1"
							name="sAdrs1">
						</w2:column>
						<w2:column dataType="text" id="sAdrsAdd"
							name="sAdrsAdd">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel1"
							name="sHomeTel1">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel2"
							name="sHomeTel2">
						</w2:column>
						<w2:column dataType="text" id="sHomeTel3"
							name="sHomeTel3">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel1"
							name="sOfficeTel1">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel2"
							name="sOfficeTel2">
						</w2:column>
						<w2:column dataType="text" id="sOfficeTel3"
							name="sOfficeTel3">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone1"
							name="sCellPhone1">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone2"
							name="sCellPhone2">
						</w2:column>
						<w2:column dataType="text" id="sCellPhone3"
							name="sCellPhone3">
						</w2:column>
						<w2:column dataType="text" id="sFax1"
							name="sFax1">
						</w2:column>
						<w2:column dataType="text" id="sFax2"
							name="sFax2">
						</w2:column>
						<w2:column dataType="text" id="sFax3"
							name="sFax3">
						</w2:column>
						<w2:column dataType="text" id="sEmail1"
							name="sEmail1">
						</w2:column>
						<w2:column dataType="text" id="RvadAddr"
							name="RvadAddr">
						</w2:column>
						<w2:column dataType="text" id="sEnntmPftbpYn"
							name="sEnntmPftbpYn">
						</w2:column>
						<w2:column dataType="text" id="sAsmtAgntYn"
							name="sAsmtAgntYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpFlagCd" name="sInsurPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpRelnCd" name="sInsurPftbpRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCd"
							name="sInsurPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpName"
							name="sInsurPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sInsurPftbpCntad"
							name="sInsurPftbpCntad">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmPstnFlgcd" name="sRlnmCnfmPstnFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmRgcr"
							name="sRlnmCnfmRgcr">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt1" name="sRlnmCnfmInfoRvMatt1">
						</w2:column>
						<w2:column dataType="text"
							id="sRlnmCnfmInfoRvMatt2" name="sRlnmCnfmInfoRvMatt2">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfmDate"
							name="sRlnmCnfmDate">
						</w2:column>
						<w2:column dataType="text" id="sRlnmCnfm"
							name="sRlnmCnfm">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurPftbpAsmtYn" name="sInsurPftbpAsmtYn">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Trty"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="chk"
							name="chk">
						</w2:column>
						<w2:column dataType="text" id="sBascSlctFlagCd"
							name="sBascSlctFlagCd">
						</w2:column>
						<w2:column dataType="text" id="BascSlctFlagCd_H"
							name="BascSlctFlagCd_H">
						</w2:column>
						<w2:column dataType="text" id="sTrtyName"
							name="sTrtyName">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnPrprtGroupFlgcd" name="sPsnPrprtGroupFlgcd">
						</w2:column>
						<w2:column dataType="text"
							id="nPsnPrprtGroupSeqno" name="nPsnPrprtGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="sTrtyCd"
							name="sTrtyCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="nTrtyOrdr"
							name="nTrtyOrdr">
						</w2:column>
						<w2:column dataType="text" id="sScrnIndcYn"
							name="sScrnIndcYn">
						</w2:column>
						<w2:column dataType="text" id="sGdCd"
							name="sGdCd">
						</w2:column>
						<w2:column dataType="text" id="sGnrzCd"
							name="sGnrzCd">
						</w2:column>
						<w2:column dataType="text" id="sAutoRenwlAvaYn"
							name="sAutoRenwlAvaYn">
						</w2:column>
						<w2:column dataType="text" id="sAutoRenwlCyclCd"
							name="sAutoRenwlCyclCd">
						</w2:column>
						<w2:column dataType="text" id="nTrtyInsAmt"
							name="nTrtyInsAmt">
						</w2:column>
						<w2:column dataType="text" id="nSelfChamt"
							name="nSelfChamt">
						</w2:column>
						<w2:column dataType="text" id="sGrntAccuFlagCd"
							name="sGrntAccuFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="nAccuPrem"
							name="nAccuPrem">
						</w2:column>
						<w2:column dataType="text"
							id="nExptGrntBussPrem" name="nExptGrntBussPrem">
						</w2:column>
						<w2:column dataType="text" id="nRiskPrem"
							name="nRiskPrem">
						</w2:column>
						<w2:column dataType="text" id="nTrtyPrem"
							name="nTrtyPrem">
						</w2:column>
						<w2:column dataType="text" id="nRenwlSeq"
							name="nRenwlSeq">
						</w2:column>
						<w2:column dataType="text" id="sRenwlYn"
							name="sRenwlYn">
						</w2:column>
						<w2:column dataType="text" id="sPaymTermCd"
							name="sPaymTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealPaymTerm"
							name="nRealPaymTerm">
						</w2:column>
						<w2:column dataType="text" id="sInsurTermCd"
							name="sInsurTermCd">
						</w2:column>
						<w2:column dataType="text" id="nRealInsurTerm"
							name="nRealInsurTerm">
						</w2:column>
						<w2:column dataType="text" id="nPaymAge"
							name="nPaymAge">
						</w2:column>
						<w2:column dataType="text" id="nEndAge"
							name="nEndAge">
						</w2:column>
						<w2:column dataType="text" id="sTrtyStatCd"
							name="sTrtyStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="TrtyTypeCd"
							name="TrtyTypeCd">
						</w2:column>
						<w2:column dataType="text" id="TrtyFlagCd"
							name="TrtyFlagCd">
						</w2:column>
						<w2:column dataType="text" id="BascSlctFlagCd"
							name="BascSlctFlagCd">
						</w2:column>
						<w2:column dataType="text" id="AutoRenwlAvaYn"
							name="AutoRenwlAvaYn">
						</w2:column>
						<w2:column dataType="text" id="GrntAccuFlagCd"
							name="GrntAccuFlagCd">
						</w2:column>
						<w2:column dataType="text" id="AutoRenwlCyclCd"
							name="AutoRenwlCyclCd">
						</w2:column>
						<w2:column dataType="text" id="PmmiInsurFlagCd"
							name="PmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="RenwlUseCrFlagCd"
							name="RenwlUseCrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="PronCmpsTrtyYn"
							name="PronCmpsTrtyYn">
						</w2:column>
						<w2:column dataType="text" id="sPronCmpsTrtyYn"
							name="sPronCmpsTrtyYn">
						</w2:column>
						<w2:column dataType="text" id="sPmmiInsurFlagCd"
							name="sPmmiInsurFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sResvAmtKey"
							name="sResvAmtKey">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Pibo"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel"
							name="sel">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nGroupSeqno"
							name="nGroupSeqno">
						</w2:column>
						<w2:column dataType="text" id="nInrpsSeqno"
							name="nInrpsSeqno">
						</w2:column>
						<w2:column dataType="text" id="sInrpsFlagCd"
							name="sInrpsFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCd"
							name="sInrpsCd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsName"
							name="sInrpsName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsSexFlag"
							name="sInrpsSexFlag">
						</w2:column>
						<w2:column dataType="text" id="sJobCd"
							name="sJobCd">
						</w2:column>
						<w2:column dataType="text" id="sJobGradCd"
							name="sJobGradCd">
						</w2:column>
						<w2:column dataType="text" id="sDrveFlagCd"
							name="sDrveFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nInrpsAge"
							name="nInrpsAge">
						</w2:column>
						<w2:column dataType="text"
							id="sExisPftbpInrpsRelnCd" name="sExisPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpCd"
							name="sExisPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpName"
							name="sExisPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sExisPftbpTelno"
							name="sExisPftbpTelno">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnCd" name="sPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpCd"
							name="sPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sPftbpName"
							name="sPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sPftbpTelno"
							name="sPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sPftbpFlagCd"
							name="sPftbpFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
						<w2:column dataType="text" id="sInrpsStatCd"
							name="sInrpsStatCd">
						</w2:column>
						<w2:column dataType="text" id="sInsurStrtdate"
							name="sInsurStrtdate">
						</w2:column>
						<w2:column dataType="text" id="sInsurEndDate"
							name="sInsurEndDate">
						</w2:column>
						<w2:column dataType="text" id="sCnclExtnEndDate"
							name="sCnclExtnEndDate">
						</w2:column>
						<w2:column dataType="text" id="sJobName"
							name="sJobName">
						</w2:column>
						<w2:column dataType="text"
							id="sPftbpInrpsRelnName" name="sPftbpInrpsRelnName">
						</w2:column>
						<w2:column dataType="text" id="nGrntPrem"
							name="nGrntPrem">
						</w2:column>
						<w2:column dataType="text" id="sRqstYn"
							name="sRqstYn">
						</w2:column>
						<w2:column dataType="text" id="sRqstYnName"
							name="sRqstYnName">
						</w2:column>
						<w2:column dataType="text" id="sOthrInsurCnt"
							name="sOthrInsurCnt">
						</w2:column>
						<w2:column dataType="text"
							id="sOthrInsurCntName" name="sOthrInsurCntName">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYn"
							name="sSubCvrgeYn">
						</w2:column>
						<w2:column dataType="text" id="sSubCvrgeYnName"
							name="sSubCvrgeYnName">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYn"
							name="sDgnsObjtYn">
						</w2:column>
						<w2:column dataType="text" id="sDgnsObjtYnName"
							name="sDgnsObjtYnName">
						</w2:column>
						<w2:column dataType="text"
							id="sPsnInfoOferAgreYn" name="sPsnInfoOferAgreYn">
						</w2:column>
						<w2:column dataType="text" id="sMNumCrInsAgreYn"
							name="sMNumCrInsAgreYn">
						</w2:column>
						<w2:column dataType="text" id="nAddrChngSeq"
							name="nAddrChngSeq">
						</w2:column>
						<w2:column dataType="text" id="nTelnoChngSeq"
							name="nTelnoChngSeq">
						</w2:column>
						<w2:column dataType="text"
							id="sMailRvadAddrFlagCd" name="sMailRvadAddrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nMailRvadChngSeq"
							name="nMailRvadChngSeq">
						</w2:column>
						<w2:column dataType="text" id="sAddrFlgcd"
							name="sAddrFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sInrpsCstId"
							name="sInrpsCstId">
						</w2:column>
						<w2:column dataType="text" id="sCstFlgcd"
							name="sCstFlgcd">
						</w2:column>
						<w2:column dataType="text" id="sCrtorRelnCd"
							name="sCrtorRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sMinsrRelnCd"
							name="sMinsrRelnCd">
						</w2:column>
						<w2:column dataType="text"
							id="sXcptPftbpInrpsRelnCd" name="sXcptPftbpInrpsRelnCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpCd"
							name="sXcptPftbpCd">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpName"
							name="sXcptPftbpName">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpTelno"
							name="sXcptPftbpTelno">
						</w2:column>
						<w2:column dataType="text" id="sXcptPftbpFlagCd"
							name="sXcptPftbpFlagCd">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_PiboBackup"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_CrtorCd"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sCrtorCd"
							name="sCrtorCd">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<sCrtorCd></sCrtorCd>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="ds_code"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Prprt"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel1"
							name="sel1">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nInsrdObjctSeqno"
							name="nInsrdObjctSeqno">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCd"
							name="sInsBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCdMcls"
							name="sInsBntpCdMcls">
						</w2:column>
						<w2:column dataType="text"
							id="sInsBntpObjtFlagCd" name="sInsBntpObjtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpCd"
							name="sRatoBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpCdMcls"
							name="sRatoBntpCdMcls">
						</w2:column>
						<w2:column dataType="text"
							id="sRatoBntpObjtFlagCd" name="sRatoBntpObjtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sBuldgStrt"
							name="sBuldgStrt">
						</w2:column>
						<w2:column dataType="text" id="sPoleTypeCd"
							name="sPoleTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sExtrnWlTypeCd"
							name="sExtrnWlTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sRoofTypeCd"
							name="sRoofTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sBuldgStrtGradCd"
							name="sBuldgStrtGradCd">
						</w2:column>
						<w2:column dataType="text" id="nInsArea"
							name="nInsArea">
						</w2:column>
						<w2:column dataType="text" id="nBuldgGrodFlct"
							name="nBuldgGrodFlct">
						</w2:column>
						<w2:column dataType="text" id="nBuldgUndgFlct"
							name="nBuldgUndgFlct">
						</w2:column>
						<w2:column dataType="text"
							id="sObjctGrodUndgFlagCd" name="sObjctGrodUndgFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nObjctRelvFlct"
							name="nObjctRelvFlct">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCdName"
							name="sInsBntpCdName">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpName"
							name="sRatoBntpName">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgFlagCd"
							name="sSpclBuldgFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgNo"
							name="sSpclBuldgNo">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgTypeCd"
							name="sSpclBuldgTypeCd">
						</w2:column>
						<w2:column dataType="text"
							id="sEmplSubCvrgeInsYn" name="sEmplSubCvrgeInsYn">
						</w2:column>
						<w2:column dataType="text"
							id="sEqmtOwnRprtnBntpCd" name="sEqmtOwnRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sEqmtScal"
							name="sEqmtScal">
						</w2:column>
						<w2:column dataType="text"
							id="sSchlMngrRprtnBntpCd" name="sSchlMngrRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="nStuNum"
							name="nStuNum">
						</w2:column>
						<w2:column dataType="text" id="sParkEqmtFlagCd"
							name="sParkEqmtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nPrkLtArea"
							name="nPrkLtArea">
						</w2:column>
						<w2:column dataType="text" id="nParkAvaCarNum"
							name="nParkAvaCarNum">
						</w2:column>
						<w2:column dataType="text" id="nPrkLtMachNum"
							name="nPrkLtMachNum">
						</w2:column>
						<w2:column dataType="text" id="sFoodRprtnBntpCd"
							name="sFoodRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="nBfyySaleAmt"
							name="nBfyySaleAmt">
						</w2:column>
						<w2:column dataType="text" id="sGasRprtnBntpCd"
							name="sGasRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasRprtnAreaFlagCd" name="sGasRprtnAreaFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasEqmtCpctFlagCd" name="sGasEqmtCpctFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sCityGasUseFlagCd" name="sCityGasUseFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasEqmtUndgLctnYn" name="sGasEqmtUndgLctnYn">
						</w2:column>
						<w2:column dataType="text" id="sAgreRestTermCd"
							name="sAgreRestTermCd">
						</w2:column>
						<w2:column dataType="text" id="sOwnrFlagCd"
							name="sOwnrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sOwnrDscrNo"
							name="sOwnrDscrNo">
						</w2:column>
						<w2:column dataType="text" id="sOwnrNm"
							name="sOwnrNm">
						</w2:column>
						<w2:column dataType="text" id="sCrtorReln"
							name="sCrtorReln">
						</w2:column>
						<w2:column dataType="text" id="sAccptPlac"
							name="sAccptPlac">
						</w2:column>
						<w2:column dataType="text"
							id="sBuldgStrtGradCdNm" name="sBuldgStrtGradCdNm">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
					</w2:columnInfo>
					<w2:data>
						<w2:row>
							<sInsBntpCd><![CDATA[1]]></sInsBntpCd>
							<sInsBntpCdMcls><![CDATA[2]]></sInsBntpCdMcls>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_ObjLctn"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nInsrdObjctSeqno"
							name="nInsrdObjctSeqno">
						</w2:column>
						<w2:column dataType="text" id="nLctnSeqno"
							name="nLctnSeqno">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost1"
							name="sLctnPost1">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost2"
							name="sLctnPost2">
						</w2:column>
						<w2:column dataType="text" id="sLctnPostAddr"
							name="sLctnPostAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnDtalAddr"
							name="sLctnDtalAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnStno"
							name="sLctnStno">
						</w2:column>
						<w2:column dataType="text" id="sLctnHouse"
							name="sLctnHouse">
						</w2:column>
						<w2:column dataType="text" id="sZipType"
							name="sZipType">
						</w2:column>
						<w2:column dataType="text" id="sAddrMgtNo"
							name="sAddrMgtNo">
						</w2:column>
						<w2:column dataType="text" id="nAddrStdSeq"
							name="nAddrStdSeq">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipType"
							name="sOrgZipType">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipCode"
							name="sOrgZipCode">
						</w2:column>
						<w2:column dataType="text" id="sOrgAddr"
							name="sOrgAddr">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_Prprt_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sel1"
							name="sel1">
						</w2:column>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nInsrdObjctSeqno"
							name="nInsrdObjctSeqno">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCd"
							name="sInsBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCdMcls"
							name="sInsBntpCdMcls">
						</w2:column>
						<w2:column dataType="text"
							id="sInsBntpObjtFlagCd" name="sInsBntpObjtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpCd"
							name="sRatoBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpCdMcls"
							name="sRatoBntpCdMcls">
						</w2:column>
						<w2:column dataType="text"
							id="sRatoBntpObjtFlagCd" name="sRatoBntpObjtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sBuldgStrt"
							name="sBuldgStrt">
						</w2:column>
						<w2:column dataType="text" id="sPoleTypeCd"
							name="sPoleTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sExtrnWlTypeCd"
							name="sExtrnWlTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sRoofTypeCd"
							name="sRoofTypeCd">
						</w2:column>
						<w2:column dataType="text" id="sBuldgStrtGradCd"
							name="sBuldgStrtGradCd">
						</w2:column>
						<w2:column dataType="text" id="nInsArea"
							name="nInsArea">
						</w2:column>
						<w2:column dataType="text" id="nBuldgGrodFlct"
							name="nBuldgGrodFlct">
						</w2:column>
						<w2:column dataType="text" id="nBuldgUndgFlct"
							name="nBuldgUndgFlct">
						</w2:column>
						<w2:column dataType="text"
							id="sObjctGrodUndgFlagCd" name="sObjctGrodUndgFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nObjctRelvFlct"
							name="nObjctRelvFlct">
						</w2:column>
						<w2:column dataType="text" id="sInsBntpCdName"
							name="sInsBntpCdName">
						</w2:column>
						<w2:column dataType="text" id="sRatoBntpName"
							name="sRatoBntpName">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgFlagCd"
							name="sSpclBuldgFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgNo"
							name="sSpclBuldgNo">
						</w2:column>
						<w2:column dataType="text" id="sSpclBuldgTypeCd"
							name="sSpclBuldgTypeCd">
						</w2:column>
						<w2:column dataType="text"
							id="sEmplSubCvrgeInsYn" name="sEmplSubCvrgeInsYn">
						</w2:column>
						<w2:column dataType="text"
							id="sEqmtOwnRprtnBntpCd" name="sEqmtOwnRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="sEqmtScal"
							name="sEqmtScal">
						</w2:column>
						<w2:column dataType="text"
							id="sSchlMngrRprtnBntpCd" name="sSchlMngrRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="nStuNum"
							name="nStuNum">
						</w2:column>
						<w2:column dataType="text" id="sParkEqmtFlagCd"
							name="sParkEqmtFlagCd">
						</w2:column>
						<w2:column dataType="text" id="nPrkLtArea"
							name="nPrkLtArea">
						</w2:column>
						<w2:column dataType="text" id="nParkAvaCarNum"
							name="nParkAvaCarNum">
						</w2:column>
						<w2:column dataType="text" id="nPrkLtMachNum"
							name="nPrkLtMachNum">
						</w2:column>
						<w2:column dataType="text" id="sFoodRprtnBntpCd"
							name="sFoodRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text" id="nBfyySaleAmt"
							name="nBfyySaleAmt">
						</w2:column>
						<w2:column dataType="text" id="sGasRprtnBntpCd"
							name="sGasRprtnBntpCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasRprtnAreaFlagCd" name="sGasRprtnAreaFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasEqmtCpctFlagCd" name="sGasEqmtCpctFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sCityGasUseFlagCd" name="sCityGasUseFlagCd">
						</w2:column>
						<w2:column dataType="text"
							id="sGasEqmtUndgLctnYn" name="sGasEqmtUndgLctnYn">
						</w2:column>
						<w2:column dataType="text" id="sAgreRestTermCd"
							name="sAgreRestTermCd">
						</w2:column>
						<w2:column dataType="text" id="sOwnrFlagCd"
							name="sOwnrFlagCd">
						</w2:column>
						<w2:column dataType="text" id="sOwnrDscrNo"
							name="sOwnrDscrNo">
						</w2:column>
						<w2:column dataType="text" id="sOwnrNm"
							name="sOwnrNm">
						</w2:column>
						<w2:column dataType="text" id="sCrtorReln"
							name="sCrtorReln">
						</w2:column>
						<w2:column dataType="text" id="sAccptPlac"
							name="sAccptPlac">
						</w2:column>
						<w2:column dataType="text"
							id="sBuldgStrtGradCdNm" name="sBuldgStrtGradCdNm">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanCd"
							name="sApplPlanCd">
						</w2:column>
						<w2:column dataType="text" id="sApplPlanName"
							name="sApplPlanName">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_ObjLctn_Tmp"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nInsrdObjctSeqno"
							name="nInsrdObjctSeqno">
						</w2:column>
						<w2:column dataType="text" id="nLctnSeqno"
							name="nLctnSeqno">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost1"
							name="sLctnPost1">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost2"
							name="sLctnPost2">
						</w2:column>
						<w2:column dataType="text" id="sLctnPostAddr"
							name="sLctnPostAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnDtalAddr"
							name="sLctnDtalAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnStno"
							name="sLctnStno">
						</w2:column>
						<w2:column dataType="text" id="sLctnHouse"
							name="sLctnHouse">
						</w2:column>
						<w2:column dataType="text" id="sZipType"
							name="sZipType">
						</w2:column>
						<w2:column dataType="text" id="sAddrMgtNo"
							name="sAddrMgtNo">
						</w2:column>
						<w2:column dataType="text" id="nAddrStdSeq"
							name="nAddrStdSeq">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipType"
							name="sOrgZipType">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipCode"
							name="sOrgZipCode">
						</w2:column>
						<w2:column dataType="text" id="sOrgAddr"
							name="sOrgAddr">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_InsAmt"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_InsAmt_Tmp"
					repeatNode="map">
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_OwnrReln"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="value"
							name="value">
						</w2:column>
						<w2:column dataType="text" id="text"
							name="text">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<text><![CDATA[본인]]></text>
							<value><![CDATA[10]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[배우자]]></text>
							<value><![CDATA[11]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[자]]></text>
							<value><![CDATA[12]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[녀]]></text>
							<value><![CDATA[13]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[부]]></text>
							<value><![CDATA[14]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[모]]></text>
							<value><![CDATA[15]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[배우자부]]></text>
							<value><![CDATA[16]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[배우자모]]></text>
							<value><![CDATA[17]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[형제자매]]></text>
							<value><![CDATA[18]]></value>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_CrPrtrRole_Cod"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="value"
							name="value">
						</w2:column>
						<w2:column dataType="text" id="text"
							name="text">
						</w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<text><![CDATA[-선택-]]></text>
							<value></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[계약자]]></text>
							<value><![CDATA[10]]></value>
						</w2:row>
						<w2:row>
							<text><![CDATA[피보험자]]></text>
							<value><![CDATA[20]]></value>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataList baseNode="list" id="Ds_LTIDA51"
					repeatNode="map">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nCrChngNo"
							name="nCrChngNo">
						</w2:column>
						<w2:column dataType="text" id="sTxfrYn"
							name="sTxfrYn">
						</w2:column>
						<w2:column dataType="text" id="sSvGdCd"
							name="sSvGdCd">
						</w2:column>
						<w2:column dataType="text" id="sRcknDate"
							name="sRcknDate">
						</w2:column>
						<w2:column dataType="text" id="nTaxPrfrInsAmt"
							name="nTaxPrfrInsAmt">
						</w2:column>
						<w2:column dataType="text"
							id="sInsurMgprfRprtYn" name="sInsurMgprfRprtYn">
						</w2:column>
						<w2:column dataType="text" id="sInptDler"
							name="sInptDler">
						</w2:column>
						<w2:column dataType="text" id="sInptDlerIP"
							name="sInptDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sInptDate"
							name="sInptDate">
						</w2:column>
						<w2:column dataType="text" id="sInptHms"
							name="sInptHms">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDler"
							name="sMdfcDler">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDlerIP"
							name="sMdfcDlerIP">
						</w2:column>
						<w2:column dataType="text" id="sMdfcDate"
							name="sMdfcDate">
						</w2:column>
						<w2:column dataType="text" id="sMdfcHms"
							name="sMdfcHms">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Warning"
					repeatNode="map" userData2="//*/WARNING">
					<w2:columnInfo>
						<w2:column dataType="text" id="timestamp"
							name="timestamp" />
						<w2:column dataType="text" id="detail"
							name="detail" />
						<w2:column dataType="text" id="level"
							name="level" />
						<w2:column dataType="text" id="msg" name="msg" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIDA03"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='lTIDA03List']/vector/data/LTIDA03">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIDA15"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Drive"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='vDrivFlagCd']/vector/data/com_DrivFlagCd">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_FlagCd"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='vCcndFlagCd']/vector/data/com_CcndFlagCd">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Trty"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='multi']/vector/data/multi">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Others"
					repeatNode="map" userData2="//*/vector/data/OTHER">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LTIDA00"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='LTIDA00']/LTIDA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_SendTax"
					repeatNode="map" userData2="//*/TAX0020">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_SendTaxList"
					repeatNode="map" userData2="//*/vector/data/TAX0200">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_BntpCd"
					repeatNode="map" userData2="//*/hashtable/data/vector/data">
					<w2:columnInfo>
						<w2:column id="sClsfCd" name="sClsfCd"
							dataType="text">
						</w2:column>
						<w2:column id="sCdType" name="sCdType"
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="sCd"
							dataType="text">
						</w2:column>
						<w2:column id="sHnglCdName" name="sHnglCdName"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_ObjLctn"
					repeatNode="map" userData2="//*/vector/data/objctLctnList">
					<w2:columnInfo>
						<w2:column dataType="text" id="sPlanNo"
							name="sPlanNo">
						</w2:column>
						<w2:column dataType="text" id="nInsrdObjctSeqno"
							name="nInsrdObjctSeqno">
						</w2:column>
						<w2:column dataType="text" id="nLctnSeqno"
							name="nLctnSeqno">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost1"
							name="sLctnPost1">
						</w2:column>
						<w2:column dataType="text" id="sLctnPost2"
							name="sLctnPost2">
						</w2:column>
						<w2:column dataType="text" id="sLctnPostAddr"
							name="sLctnPostAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnDtalAddr"
							name="sLctnDtalAddr">
						</w2:column>
						<w2:column dataType="text" id="sLctnStno"
							name="sLctnStno">
						</w2:column>
						<w2:column dataType="text" id="sLctnHouse"
							name="sLctnHouse">
						</w2:column>
						<w2:column dataType="text" id="sZipType"
							name="sZipType">
						</w2:column>
						<w2:column dataType="text" id="sAddrMgtNo"
							name="sAddrMgtNo">
						</w2:column>
						<w2:column dataType="text" id="nAddrStdSeq"
							name="nAddrStdSeq">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipType"
							name="sOrgZipType">
						</w2:column>
						<w2:column dataType="text" id="sOrgZipCode"
							name="sOrgZipCode">
						</w2:column>
						<w2:column dataType="text" id="sOrgAddr"
							name="sOrgAddr">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_BntpLargClsfCd"
					repeatNode="map" userData2="//*/vector/data/LTIBB01Larg">
					<w2:columnInfo>
						<w2:column id="sClsfCd" name="sClsfCd"
							dataType="text">
						</w2:column>
						<w2:column id="sCdType" name="sCdType"
							dataType="text">
						</w2:column>
						<w2:column id="sCd" name="sCd"
							dataType="text">
						</w2:column>
						<w2:column id="sHnglCdName" name="sHnglCdName"
							dataType="text">
						</w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LapsCnclCrCnt"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='LapsCnclCrCnt']/LTIEA00Cnt">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_LapsCnclCrList"
					repeatNode="map" userData2="//*/LTIEA00">
				</w2:dataList>
				<w2:dataList baseNode="list" id="warning_LapsCnclCrCnt"
					repeatNode="map" userData2="//*/WARNING">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_CmprCrNotc"
					repeatNode="map"
					userData2="//hashtable/data[@hashkey='CmprCrNotc']/CmprCrNotc">
				</w2:dataList>
				<w2:dataList baseNode="list" id="DsWs_Dmcy"
					repeatNode="map" userData2="//*/DMCY">
				</w2:dataList>
				<w2:dataList id="warning_Insert" baseNode="list"
					saveRemovedData="true" repeatNode="map">
				</w2:dataList>
			</w2:dataCollection>
			<w2:workflowCollection>
			</w2:workflowCollection>			
		</xf:model>
	    <script src="/cm/js/convertJs/Global_Script.js"/>
	    <script src="/cm/js/convertJs/comm_Webservice.js"/>
	    <script src="/cm/js/convertJs/NewGen_Script.js"/>
	    <script src="/cm/js/convertJs/LongTerm_Script.js"/>
	    <script src="/cm/js/convertJs/Marine_Script.js"/> 
		<script type="javascript"><![CDATA[
	/*
 	 *===================================File description================================================
 	 * Create Date : 2017/10/16
 	 * Creater     : KMJ
 	 *====================================================================================================
	 */
	var gsSysDate;			// global 현재일자
	var gUserID; 			// global 사용자 ID
	var gUserEmpName; 	    // global 사용자명 
	var gUserDepartCode;	// global 소속부서코드
	var gUserIP;			// global 사용자IP
	var gUserDuty;			// global 
	var gUserCenterCode;
	
	var modifyFlag = false;//화면값중 기존값에서 변경된 경우 체크
	var sCrtorCd_Backup = "";
	var sPopupFlag = ""; // ivr 연계 확인을 위한 flag
	var sRlnmCnfmFlag = false; //실명확인 플래그 false 경우 실명 확인 입력란 unvisible, true 경우 visible
	
	var sOnlySrarch = "";         //2015.06.02(N1506-00025) : 조회전용구분값 -> 인수심사요청 팝업화면(B170_Pop)에서 사용
	
	var nTaxPrfrLmitRemnAmt = 0; //2015.10.01 (N1510-00004) : 세금우대한도 잔여액
	var sTxfrCheckFlag = "1";    // 2015.10.01(N1510-00004) 1 : 세금우대, 2: 비과세.
	
	var sEndPftbpAddrFlagPop = "";
	var sEndPftbpAddrPop = "";
	var sAsmtAgntAddFlagPop = "";
	var sAsmtAgntAddrPop = "";
	var sPftbpAddFlagPop = "";
	var sPftbpAddrPop = "";
	var sXcptPftbpAddFlagPop = "";
	var sXcptPftbpAddrPop = "";	
	//**********************************************************
	// 메인에서 호출 초기화 
	//**********************************************************
	scwin.lfn_Init = function() {
		//cbs 추가
		btn_Insu.setUserData("currClass", "btn_nml1");
	
		gfn_getServerTime();//서버시간
		gsSysDate 		= wconv.substr(gds.gDs_ServerTime.getCellData(0, "sToday"), 0, 8); 	// global 현재일자
		gUserID 		= util.getGdsValue("gUserID");    					// global 사용자 ID
		gUserEmpName 	= util.getGdsValue("gUserEmpName");    				// global 부서명
		gUserIP			= util.getGdsValue("gUserIP");						// global 사용자IP
		gUserDuty		= util.getGdsValue("gUserDuty");					// global 
		gUserCenterCode = util.getGdsValue("gUserCenterCode"); 			// global 
		
		//설계번호가 있으면 계약자 정보를 조회해 온다.
		// 인수심사건이 있는지 조회한다.
		if(parent.Ds_LTIDA03.getRowCount() > 0){
			scwin.lfn_Search();		
		//초기입력일경우 공통코드에서 주소구분코드를 조회한다.
		}else{
			//공통코드호출
//			gfn_getCommonCodes(SOBJ, DOBJ_AddrFlag, "DsWs_AddrFlag DsWs_Reln DsWs_RlnmCnfmRgcr DsWs_AqamtChnlCd", "AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd", "cmb_sMailRvadAddrFlagCd cmb_Reln cmb_RlnmCnfmRgcr cmb_AqamtChnlCd", "S");
			scwin.lfn_commCodeSetting("AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd");
			//cbs - insertRow -> Choose Option 사용
	        //취득경로
	//        var insRow = util.insertRow(DsWs_AqamtChnlCd, 0);
	//        DsWs_AqamtChnlCd.setCellData(0, "sCd", "");
	//        DsWs_AqamtChnlCd.setCellData(0, "sHnglCdName", "- 선택 -");
	        cmb_AqamtChnlCd.setSelectedIndex(0);			
						
			//우편수령구분콤보 비활성화 처리
			//cmb_sMailRvadAddrFlagCd.Enable = "False";	
			
			if (parent.Ds_LTIDA03.getRowCount() > 0){
				util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
        		util.setCompBindRefresh(Ds_LTIDA03.getID());
        		Ds_LTIDA03.setRowPosition(0 , false);			
			}
			
			//대상고객,취득경로
	        cmb_CrPrtrRole.setValue("10");
	        cmb_AqamtChnlCd.setValue("");
	
		}
		
		if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
			//cmb_CmmcMeanCnclYn.setDisabled(false);
	        cmb_CmmcMeanCnclYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sCmmcMeanCnclAgreYn"));
	    } else {
	        //cmb_CmmcMeanCnclYn.setDisabled(true);
	    }
	    
	    //2015.10.01 (N1510-00004)
	    //세금우대상품여부가 n일경우 세금우대 
	    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrGdYn") == "N") {
	        cmb_sTaxPrfrYn.setValue("N");
	        cmb_sTaxPrfrYn.setDisabled(true);
	        btn_TaxSearch.setDisabled(true);
	    } else {
	        //세금우대인지 비과세인지 체크 후속 프로세스 확인.
	        scwin.lfn_TxfrYn_Check();
	    }
	    
	    //고객구분코드(공통)
	    DsWs_FlagCd.setJSON(parent.DsWs_FlagCd.getAllJSON());	
	    // 운전자급수코드(공통)
	    DsWs_Drive.setJSON(parent.DsWs_Drive.getAllJSON());	
	    // 업종명(공통)
	    DsWs_BntpCd.setJSON(parent.Tab_Step1.DsWs_BntpCd.getAllJSON());	
		// 물건구분코드(대분류)	    
		DsWs_BntpLargClsfCd.getC
		DsWs_BntpLargClsfCd.setJSON(parent.Tab_Step1.DsWs_BntpLargClsfCd.getAllJSON());
		
		//인수제한사항copy
    	Ds_LTIDA15.setJSON(parent.Ds_LTIDA15.getAllJSON());	

	    parent.util.insertColumn(parent.Ds_Pibo, [ ["sRqstYn", "sRqstYn", "text"], 
	    										   ["sRqstYnName", "sRqstYnName", "text"],
	    										   ["sOthrInsurCnt", "sOthrInsurCnt", "text"], 
	    										   ["sOthrInsurCntName", "sOthrInsurCntName", "text"], 
	    										   ["sSubCvrgeYn", "sSubCvrgeYn", "text"], 
	    										   ["sDgnsObjtYn", "sDgnsObjtYn", "text"], 
	    										   ["sDgnsObjtYnName", "sDgnsObjtYnName", "text"], 
	    										   ["sCrtorRelnCd", "sCrtorRelnCd", "text"] ]);
	    parent.util.setCompBindRefresh("Ds_Pibo");
	    
	    //특약정보 복사
	    //납입기간코드(공통)
	    DsWs_InsurTerm.setJSON(parent.DsWs_InsurTerm.getAllJSON());	
	    //보험기간코드(공통)	
	    DsWs_PaymTerm.setJSON(parent.DsWs_PaymTerm.getAllJSON());	
	    Dsws_InsAmt.setJSON(parent.Dsws_InsAmt.getAllJSON());	
	    
	    //피보험자Detail
	    //타사보험사항, 질의서사항, 부담보사항등을 조회한다.
	    wconv.clear(DsWs_Others);
	    wconv.clear(DsWs_Warning);
	    
		var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "getPibo_Detail", 0, 0);
		MethodObj.setId("getPibo_Detail");
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setHashTable();   // 저장할 때
			
	    parent.Ds_LTIDA00.setCellData(0, "sPlanNo", parent.medt_PlanNo.getValue()); //설계번호
	    //계약기본사항을 담는다
		util.dataListCloneCopy(parent.Ds_LTIDA00, "pDs_LTIDA00", "0");
		MethodObj.addSingleData("LTIDA00", "LTIDA00", "pDs_LTIDA00:A"); // 계약기본사항정보		    
	    //피보험자사항 담는다
	    util.dataListCloneCopy(parent.Ds_Pibo, "pDs_Pibo", "0");
	    MethodObj.addVectorData("vLTIDA01", "vLTIDA01", pDs_Pibo.getID()+":A"); //피보험자사항
	    
	    MethodObj.setXPath("//*/vector/data/OTHER");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
	
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
		if (DsWs_Warning.getRowCount() != 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} 
		else {
	    	util.jSonDsCreate(_tranSync.getDsJson("OTHER"), "DsWs_Others");
	        for (var i = 0; i < DsWs_Others.getRowCount(); i++) {
	            var nFindRow = wconv.findRow(parent.Ds_Pibo, "nInrpsSeqno", DsWs_Others.getCellData(i, "nInrpsSeqno"));
	            //cbs nFindRow가 있는 경우만 수행
	            if (nFindRow > -1) {
	  	            parent.Ds_Pibo.setCellData(nFindRow, "sRqstYn", DsWs_Others.getCellData(i, "sRqstYn"));     
					parent.Ds_Pibo.setCellData(nFindRow, "sOthrInsurCnt", DsWs_Others.getCellData(i, "sOthrInsurCnt")); //부담보입력여부
	            	parent.Ds_Pibo.setCellData(nFindRow, "sSubCvrgeYn", DsWs_Others.getCellData(i, "sSubCvrgeYn")); //질의서입력여부  
				}
	        }
	    }	
	    
	    //피보험자 정보 복사
		util.copyM(Ds_Pibo, parent.Ds_Pibo.getAllJSON());
		util.setCompBindRefresh(Ds_Pibo.getID());
		
	    //피보험목적물 정보 복사(@ysh)
	    util.copyM(Ds_Prprt, parent.Ds_Prprt.getAllJSON());
		util.setCompBindRefresh(Ds_Prprt.getID());
		Ds_Prprt.setRowPosition(0, false);
	    if (wconv.isNull(Ds_Prprt.getCellData(0, "sAccptPlac"))) {
	        for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	            Ds_Prprt.setCellData(i, "sAccptPlac", "소재지내 수용"); //수용장소
	        }
	    } 
	    
	    scwin.set_sel1("grd_Prprt", 0);

	    //목적물소재지
	    scwin.lfn_searchObjLctn();
	
	    //피보험자 화면 입력여부check
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        scwin.fn_subCheck(i);
	    }
	      	
		//특약정보 복사
		util.copyM(Ds_Trty, parent.Ds_Trty.getAllJSON()); 
	    util.insertColumn(Ds_Trty, [ ["sInrpsName", "sInrpsName", "text"] ]); //피보험자성명필드추가
	    util.setCompBindRefresh(Ds_Trty.getID());
	    
	    //피보험목적물명 Setting 
	    scwin.lfn_changePrprt();      
	    
		if (Ds_LTIDA03.getCellData(0, "sCrtorCd") == "") {
	        if (parent.sAgncYn == "Y") {
	            Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_Pibo.getCellData(0, "sInrpsCd"));
	        } else {
	            medt_sCrtorCd.setValue(Ds_Pibo.getCellData(0, "sInrpsCd"));
	        }
	    }

	    //계약자관계, 셋팅
    	for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "sMinsrRelnCd") != "10" && Ds_Pibo.getCellData(i, "sCrtorRelnCd") == "10") {
	            Ds_Pibo.setCellData(i, "sCrtorRelnCd", Ds_Pibo.getCellData(i, "sMinsrRelnCd"));
	        }
    	}  
    	
    	//계약자mask 세팅
	    scwin.medt_sCrtorCd_onviewchange();
	    
	    if (parent.sAgncYn == "Y") {
	        //계약번호 마스크 처리
	        medt_sCrtorCd.setRef("");
	        var obj_list = ["medt_sCrtorCd"];
	        var ds_list = ["Ds_CrtorCd"];
	        var column_list = ["sCrtorCd"];
	        var mask_list = ["######-#******"];
	        gfn_mkEditPassWord(obj_list, ds_list, column_list, mask_list);
	    }
	    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrGdYn") == "N") {
	        cmb_sTaxPrfrYn.setDisabled(true);
	    } 
	    
	    //2015.10.16(N1510-00004)
	    //통신수단해지 동의와 수익자 약정 기본값 셋팅
	    parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCmmcMeanCnclAgreYn", "sCmmcMeanCnclAgreYn", "text"], 
											          ["sInsurPftbpAsmtYn", "sInsurPftbpAsmtYn", "text"]
											        ]);
		parent.util.setCompBindRefresh("Ds_LTIDA00");
		parent.Ds_LTIDA00.setRowPosition(0, false);
													        
	    if (wconv.length(cmb_AsmtYn.getValue()) < 1) {
	        cmb_AsmtYn.setSelectedIndex(1);
	    }
	    if (wconv.length(cmb_CmmcMeanCnclYn.getValue()) < 1) {
	        cmb_CmmcMeanCnclYn.setSelectedIndex(1);
	    } 
	    
	};
	
	//**********************************************************
	// 공통 코드호출
	//**********************************************************
	scwin.lfn_commCodeSetting = function(strCommCode) {	
		//json 데이터를 가져와서 DataSet에 바인딩 해준다
	    var json = gfn_getJsonCommonCode(strCommCode);
	    if(json != null){
	    	//alert(JSON.stringify(json));
	    	DsWs_CmCd.setJSON(json, false);
	    }
	};	
	
	
	//**********************************************************
	// 계약자 정보를 조회/ 인수심사건이 있는지 조회
	//**********************************************************
	scwin.lfn_Search = function() {
		wconv.clear(DsWs_Warning);
	
	    //공통코드호출
//	    gfn_getCommonCodes(SOBJ, DOBJ_AddrFlag, "DsWs_AddrFlag DsWs_Reln DsWs_RlnmCnfmRgcr DsWs_AqamtChnlCd", "AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd", "cmb_sMailRvadAddrFlagCd cmb_Reln cmb_RlnmCnfmRgcr cmb_AqamtChnlCd", "S");
		scwin.lfn_commCodeSetting("AddrFlag CrtorRelnCd RlnmCnfmRgcr AqamtChnlCd");
			
	    //취득경로
	    cmb_AqamtChnlCd.setSelectedIndex(0);
	
	    //계약자정보 복사
	    Dsws_InsAmt.setJSON(parent.Dsws_InsAmt.getAllJSON());
	    util.copyM(Ds_LTIDA03, parent.Ds_LTIDA03.getAllJSON());
        util.setCompBindRefresh(Ds_LTIDA03.getID());
        Ds_LTIDA03.setRowPosition(0 , false);
        
        medt_sCrtorCd.setValue(Ds_LTIDA03.getCellData(0, "sCrtorCd"));

	    //2015.10.01(N1510-00004)
	    //비과세 정보 복사 
	    if (parent.DsWs_LTIDA51.getRowCount() > 0) {
	        //비과세 정보
	        util.copyM(Ds_LTIDA51, parent.DsWs_LTIDA51.getAllJSON());
	    }
	    sCrtorCd_Backup = Ds_LTIDA03.getCellData(0, "sCrtorCd"); //계약자코드Backup
	    if (parent.sAgncYn == "Y") {
	        Ds_CrtorCd.setCellData(0, "sCrtorCd", Ds_LTIDA03.getCellData(0, "sCrtorCd"));
	    }
	
	    //  Ds_LTIDA03.AddRow();
	    //trace("계약자=="+parent.Ds_LTIDA03.SaveXML());  
	    //만기수익자여부처리
	    if (wconv.length(Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd")) > 0) {
	        edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
	    } else {
	        edt_sEnntmPftbpYn.setValue("선택안됨");
	    }
	
	    //보험수익자여부처리
	    /*
		if(wconv.length(Ds_LTIDA03.getCellData(0, "sInsurPftbpFlagCd")) > 0){
			edt_sInsurPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sInsurPftbpName"));
		}else{
		    
			edt_sInsurPftbpYn.setValue("선택안됨");
		}
		*/
		
	    //지정대리인여부처리
	    if (wconv.length(Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd")) > 0) {
	        edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
	    } else {
	        edt_sAsmtAgntYn.setValue("선택안됨");
	    }
		
	    //2015.10.01(N1510-00004)
	    //세금우대여부처리 
	    cmb_sTaxPrfrYn.setValue(parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn"));
	    if (cmb_sTaxPrfrYn.getValue() == "Y") {
	    } else {
	        cmb_sTaxPrfrYn.setValue("N");
	    }
	
	    //세금우대조회버튼 활성/비활성처리
	    if (cmb_sTaxPrfrYn.getValue() == "Y" || cmb_sTaxPrfrYn.getValue() == "B") {
	        btn_TaxSearch.setDisabled(false);
	    } else {
	        btn_TaxSearch.setDisabled(true);
	    }
	
	    //대상고객,취득경로
	    var sCrPrtrRole = parent.Ds_LTIDA00.getCellData(0, "sCrPrtrRole");
	    if (sCrPrtrRole != null && sCrPrtrRole != "") {
	        cmb_CrPrtrRole.setValue(sCrPrtrRole);
	    } else {
	        cmb_CrPrtrRole.setValue("10");
	        parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCrPrtrRole", "sCrPrtrRole", "text"] ]);
	        parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
	        parent.Ds_LTIDA00.setRowPosition(0, false);
	        parent.Ds_LTIDA00.setCellData(0, "sCrPrtrRole", cmb_CrPrtrRole.getValue());
	    }
	    var sAqamtChnlCd =parent.Ds_LTIDA00.getCellData(0, "sAqamtChnlCd");
	    if (sAqamtChnlCd != null) {
	        cmb_AqamtChnlCd.setValue(sAqamtChnlCd);
	    }
	
	    //인수심사상태 출력
	    if (wconv.substr(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd"), 0, 1) == "5") {
	        edt_insu.setValue(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankName"));
	        //인수제한건 출력	
	        edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());
	
	        //51 심사대상일경우
	        if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "51") {
	            //인수요청버튼 활성화
	            btn_Insu.setDisabled(false);
	            btn_Simsa.setDisabled(false);
	            btn_Image.setDisabled(false);
	            sOnlySrarch = "";
	        } else {
	            //인수요청버튼 활성화
	            btn_Insu.setDisabled(true);
	            btn_Simsa.setDisabled(true);
	            //2015.06.02(N1506-00025) : 인수심사 완료후에도 인수심사요청 버튼 활성화
	            if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") != "50") {
	                btn_Simsa.setDisabled(false);
	                sOnlySrarch = "1";
	            }
	
	            //END
	            btn_Image.setDisabled(true);
	        }
	    } else {
	        btn_Insu.setDisabled(true);
	        btn_Simsa.setDisabled(true);
	        btn_Image.setDisabled(true);
	    }
	};
	
	
	//**********************************************************
	// 비과세 체크 
	//**********************************************************
	scwin.lfn_TxfrYn_Check = function() {
		var sYear10 = 0;
	    sTxfrCheckFlag = "1";
	    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn") == "Y") {
	    } 
	    else 
	    {
	        if (wconv.toNumber(parent.sToday) >= 20170401) {
	            if (Ds_LTIDA51.getRowcount() > 0 && ((Ds_LTIDA51.getCellData(0, "sSvGdCd") == "74" || Ds_LTIDA51.getCellData(0, "sSvGdCd") == "75" || Ds_LTIDA51.getCellData(0, "sSvGdCd") == "76"))) {
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	                    //비과세여부
	                    sTxfrCheckFlag = "2";
	                } else {
	                    sTxfrCheckFlag = "1";
	                }
	
	                //trace("" + Ds_LTIDA51.savexml());
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else {
	                    sTxfrCheckFlag = "1"; //비과세 대상에서 해제
	                }
	            } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                //신규일 경우 셋팅
	                Ds_LTIDA51.removeAll();
	                util.appendRow(Ds_LTIDA51);
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem")); 	                    
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem"))); 
	                }
	
                    //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                }
	            }
	            if (sTxfrCheckFlag == "2") {
	                Ds_LTIDA51.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                Ds_LTIDA51.setCellData(0, "nCrChngNo", parent.Ds_LTIDA00.getCellData(0, "nCrChngNo"));
	                /*
				   if(parent.Ds_LTIDA00.GetColumn(0,"sPaymCyclCd") == "99"){
					  Ds_LTIDA51.SetColumn(0,"nTaxPrfrInsAmt",parent.Ds_LTIDA00.GetColumn(0,"nBussPrem"));
				   }else{
					  Ds_LTIDA51.SetColumn(0,"nTaxPrfrInsAmt",ToNumber(parent.Ds_LTIDA00.GetColumn(0,"nRealPaymTerm"))  * ToNumber(parent.Ds_LTIDA00.GetColumn(0,"sPaymCyclCd"))  * ToNumber(parent.Ds_LTIDA00.GetColumn(0,"nBussPrem")));
				   }
					*/
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                /* 2014.04.01변경
	                보험기간	납입주기기간	가입한도	등록코드
	                10년이상	월납5년이상	월150만원,	74(월적립식저축성보험Ⅱ)
	                10년이상	월납5년미만,비월납	1억원	75(월적립식외저축성보험Ⅱ)
	                10년이상	월납5년이상	제한없음	76(월적립식 순수보장성보험)
	                */
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "N") {
	                    cmb_sTaxPrfrYn.setValue("N");
	                    if (sYear10 == "1") {
	                        btn_TaxSearch.setDisabled(false);
	                    }
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "76"); //총납입보험료로 한도 등록
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) <= 1500000) {
	                    //보험료 기본계약보험료+적립보험료
	                    var nTaxPrfrInsAmt = 0;
	                    for (var i = 0; i < parent.Ds_Trty.getRowCount(); i++) {
	                        if (parent.Ds_Trty.getCellData(i, "sBascSlctFlagCd") == "1") {
	                            nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_Trty.getCellData(i, "nGrntPrem"));
	                        }
	                    }
	                    nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem"));
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "74"); //연간보험료로 한도 등록(추납포함)
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", ((nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")))) * 12);
	                    btn_TaxSearch.setDisabled(false);
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) > 1500000) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "75"); //총납입보험료로 한도 등록
	                    if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                        Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                    } else {
	                        Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                    }
	                    btn_TaxSearch.setDisabled(false);
	                } else {
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                    cmb_sTaxPrfrYn.setValue("N");
	                }
	            } else {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                cmb_sTaxPrfrYn.setValue("N");
	            }
	        } else {
	            if (Ds_LTIDA51.getRowcount() > 0) {
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	                    sTxfrCheckFlag = "2";
	                } else {
	                    sTxfrCheckFlag = "1";
	                }
	
	                //trace("" + Ds_LTIDA51.savexml());
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else {
	                    sTxfrCheckFlag = "1"; //비과세 대상에서 해제
	                }
	            } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                //신규일 경우 셋팅
	                Ds_LTIDA51.removeAll();
	                util.appendRow(Ds_LTIDA51);
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
		
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                }
	            }
	            if (sTxfrCheckFlag == "2") {
	                Ds_LTIDA51.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                Ds_LTIDA51.setCellData(0, "nCrChngNo", parent.Ds_LTIDA00.getCellData(0, "nCrChngNo"));
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
		
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "N") {
	                    cmb_sTaxPrfrYn.setValue("N");
	                    if (sYear10 == "1") {
	                        btn_TaxSearch.setDisabled(false);
	                    }
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "56");
	                    btn_TaxSearch.setDisabled(false);
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "58");
	                    btn_TaxSearch.setDisabled(false);
	                } else {
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                    cmb_sTaxPrfrYn.setValue("N");
	                }
	            } else {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                cmb_sTaxPrfrYn.setValue("N");
	            }
	        }
	    }
	};
	
	//**********************************************************
	// 현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	//**********************************************************
	scwin.set_sel1 = function(objId, nRow) {
	    //현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        Ds_Pibo.setCellData(i, "sel", "0");
	    }
	    for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	        Ds_Prprt.setCellData(i, "sel1", "0");
	    }
	    
	    if (objId == "grd_Pibo") {
	        Ds_Pibo.setCellData(nRow, "sel", "1");
	    } else if (objId == "grd_Prprt") {
	        Ds_Prprt.setCellData(nRow, "sel1", "1");
	        Ds_ObjLctn.setRowPosition(nRow, false);
	    }
	};
	
	//**********************************************************
	// 목적물소재지조회
	//**********************************************************
	scwin.lfn_searchObjLctn = function() {
	    ////////////////////////////////////
	    var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "getObjctLctnList", 0, 0);
		MethodObj.setId("getObjctLctnList");
		MethodObj.setUrl("/contract/CBSC094MController.do");
	    MethodObj.setParam("sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호
	    
	    MethodObj.setXPath("//*/vector/data/objctLctnList");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send(); 
	
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
		if (DsWs_Warning.getRowCount() != 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} 
	    
	    util.jSonDsCreate(_tranSync.getDsJson("objctLctnList"), "DsWs_ObjLctn");
	    if (DsWs_ObjLctn.getRowCount() > 0) {
	        if (DsWs_ObjLctn.getRowCount() == Ds_Prprt.getRowCount()) {
	            wconv.clear(Ds_ObjLctn);
	            util.copyM(Ds_ObjLctn, DsWs_ObjLctn.getAllJSON());
	        } else {
			    //trace("## 목적물소재지 1-2 ##");
	            for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	                if (Ds_Prprt.getCellData(i, "nInsrdObjctSeqno") == DsWs_ObjLctn.getCellData(i, "nInsrdObjctSeqno")) {
	                    //trace("## 목적물소재지 1-2-1 ##");
	                    Ds_ObjLctn.removeRow(i);
	                    Ds_ObjLctn.insertRow(i);
	                    wconv.mi_copyRow("DsWs_ObjLctn", i, Ds_ObjLctn.getID(), i);
	                } else {
	                    //trace("## 목적물소재지 1-2-2 ##");
	                    Ds_ObjLctn.insertRow();
	                    var nRow = Ds_ObjLctn.getRowCount()-1;
	                    Ds_ObjLctn.setCellData(nRow, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                    Ds_ObjLctn.setCellData(nRow, "nInsrdObjctSeqno", Ds_Prprt.getCellData(i, "nInsrdObjctSeqno"));
	                    Ds_ObjLctn.setCellData(nRow, "nLctnSeqno", 1);
	                }
	            }
	        }
	    } else {
	        //trace("## 목적물소재지 2 ##");
	        if (Ds_ObjLctn.getRowCount() != Ds_Prprt.getRowCount()) {
	            for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	                if (Ds_Prprt.getCellData(i, "nInsrdObjctSeqno") == Ds_ObjLctn.getCellData(i, "nInsrdObjctSeqno")) {
	                } else {
	                    //trace("## 목적물소재지 1-2-2 ##");
	                    Ds_ObjLctn.insertRow();
	                    var nRow = Ds_ObjLctn.getRowCount()-1;
	                    Ds_ObjLctn.setCellData(nRow, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                    Ds_ObjLctn.setCellData(nRow, "nInsrdObjctSeqno", Ds_Prprt.getCellData(i, "nInsrdObjctSeqno"));
	                    Ds_ObjLctn.setCellData(nRow, "nLctnSeqno", 1);
	                }
	            }
	        }
	    }
	    util.setCompBindRefresh(Ds_ObjLctn.getID());
	    Ds_ObjLctn.setRowPosition(0, false);
	};
	
	//**********************************************************
	// 피보험자 서브화면 입력여부 check
	//**********************************************************
	scwin.fn_subCheck = function(nRow) {
	    //고지사항사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sRqstYn")) > 0) {
	        Ds_Pibo.setCellData(nRow, "sRqstYnName", "완료");
	    } else {
	        Ds_Pibo.setCellData(nRow, "sRqstYnName", "미입력");
	    }
		
	    //타보험입력사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sOthrInsurCnt")) > 0) {
	        Ds_Pibo.setCellData(nRow, "sOthrInsurCntName", Ds_Pibo.getCellData(nRow, "sOthrInsurCnt") + "건");
	    } else {
	        Ds_Pibo.setCellData(nRow, "sOthrInsurCntName", "0 건");
	    }
	
	
	    //사망수익자사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sPftbpName")) > 0) {
	    } else {
	        Ds_Pibo.setCellData(nRow, "sPftbpName", "법정상속인");
	    }
	
	    //사망외수익자사항
	    if (wconv.length(Ds_Pibo.getCellData(nRow, "sXcptPftbpName")) > 0) {
	    } else {
	        Ds_Pibo.setCellData(nRow, "sXcptPftbpName", "선택");
	    }
	
	    //부담보
	    if (Ds_Pibo.getCellData(nRow, "sSubCvrgeYn") == "Y") {
	        Ds_Pibo.setCellData(nRow, "sSubCvrgeYnName", "가입");
	    } else {
	        Ds_Pibo.setCellData(nRow, "sSubCvrgeYnName", "미가입");
	    }
		
	    //진단대상
	    if (Ds_Pibo.getCellData(nRow, "sDgnsObjtYn") == "Y") {
	        Ds_Pibo.setCellData(nRow, "sDgnsObjtYnName", "진단대상");
	    } else {
	        Ds_Pibo.setCellData(nRow, "sDgnsObjtYnName", " ");
	    }
	};
	
	//**********************************************************
	// 피보험목적물의 해당 특약/소재지로 필터링
	//**********************************************************	
	scwin.lfn_changePrprt = function() {
//	    Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
//	    Ds_ObjLctn.FireEvent = false; //이벤트 발생이 안되도록 셋팅
		var arrtrty = util.getDataListEvent(Ds_Trty);
		var arrobjlctn = util.getDataListEvent(Ds_ObjLctn);
		
    	var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
	
	    //특약 체크된것과 화면출력특약만 화면에 보여줌
	    var trtyFilter = Ds_Trty.getFilterList();
	    Ds_Trty.clearFilter();

	    wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >= 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '2' && nPsnPrprtGroupSeqno == '" + Ds_Prprt.getCellData(nFindRow, "nInsrdObjctSeqno") + "'"); //목적물일련번호
	    
	    //체크된 피보험목적물명 삽입
	    Ds_Trty.setCellData(0, "sInrpsName", "건물" + (nFindRow + 1));

	    util.setRowPosition(Ds_ObjLctn, nFindRow);

//	    Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
//	    Ds_ObjLctn.FireEvent = true; //이벤트 발생이 안되도록 셋팅
		util.setDataListEvent(Ds_Trty, arrtrty);
		util.setDataListEvent(Ds_ObjLctn, arrobjlctn);
	};

	//**********************************************************
	// 피보험자의 해당 특약으로 필터링
	//**********************************************************	
	scwin.lfn_changeTrty = function() {
//	    Ds_Trty.FireEvent = false; //이벤트 발생이 안되도록 셋팅
		var arrtrty = util.getDataListEvent(Ds_Trty);

	    var nFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	
	    var trtyFilter = Ds_Trty.getFilterList();
	    Ds_Trty.clearFilter();

	    wconv.filter(Ds_Trty, "wconv.pos(chk, '1') >= 0 && wconv.pos(sScrnIndcYn, 'Y') >= 0 && sPsnPrprtGroupFlgcd == '1' && nPsnPrprtGroupSeqno == '" + Ds_Pibo.getCellData(nFindRow, "nInrpsSeqno") + "'");
	
	    //체크된 피보험자명 삽입
	    Ds_Trty.setCellData(0, "sInrpsName", Ds_Pibo.getCellData(nFindRow, "sInrpsName"));
	    util.setRowPosition(Ds_Trty, nFindRow);
	    
//	    Ds_Trty.FireEvent = true; //이벤트 발생이 안되도록 셋팅
		util.setDataListEvent(Ds_Trty, arrtrty);
	};
	
	//**********************************************************
	// 계약자코드 마스킹처리
	//**********************************************************
	scwin.medt_sCrtorCd_onviewchange = function(info) {
		//계약자코드
		var sCrtorCd = medt_sCrtorCd.getValue(); 

   		//대면
	    if (parent.sAgncYn == "Y") {
	        return;
	    }
	    
		if(wconv.length(sCrtorCd) == 10){
			if(isBizRegNo(sCrtorCd)){
				medt_sCrtorCd.setDisplayFormat("###-##-#####");
			}else{
				medt_sCrtorCd.setDisplayFormat("######-#######");
			}
		}
		else {
			medt_sCrtorCd.setDisplayFormat("######-#######");
		}

	};
	//**********************************************************
	// 피보험목적물 그리드 클릭시 처리
	//**********************************************************
	scwin.grd_Prprt_oncellclick = function(row,col) { 
		//현재 선택된 체크박스를 제외한 체크박스는 값을 0으로 바꾼다.
		scwin.set_sel1("grd_Prprt", row);
		
		scwin.lfn_changePrprt();	
	};
	
	//**********************************************************
	// 피보험자그리드 클릭시 처리
	//**********************************************************
	scwin.grd_Pibo_oncellclick = function(row,col) {
		var promise = Promise.resolve();
		
		var colId = grd_Pibo.getColumnID(col);	
		switch(colId) {
		//피보험자 선택시 특약조회
		case "sel":
			scwin.set_sel1("grd_Pibo", row);
			scwin.lfn_changeTrty();
		break;
		// 주민번호 클릭시 피보험자 누적[B290_Pop] 화면 팝업
		case "sInrpsCd":
			var indata = { "sRow" : row };
			var pObj = { "Ds_LTIDA00" : parent.Ds_LTIDA00,
						 "Ds_Pibo" : Ds_Pibo  
						}
		    promise = promise.then(function() {
		    	var popInfo = {
								"width"     : 1120,
								"height"    : 710,  
								"indata"    : indata,
								"title"     : "피보험자 누적",
								"parentObject" : pObj
							  };
				return wprom.popupOpen("/ui/cbsc/CBSC128P.xml", popInfo);				
			});
			break;
		// 고지사항 클릭시 피보험자고지사항[B230_Pop] 화면팝업
		case "sRqstYnName":
			var indata = {};	
			indata["sRqstYn"] = Ds_Pibo.getCellData(row, "sRqstYn");	
			if(wconv.length(parent.Tab_Step1.DsWs_PrdAttr.getCellData(0,"NotcGdFlag"))>0)
			{
				indata["sNotcGdFlag"] = parent.Tab_Step1.DsWs_PrdAttr.getCellData(0,"NotcGdFlag");	
			}else {
				indata["sNotcGdFlag"] = "00"; //고지상품구분(운전구분을 고지상품구분으로 대체)
			}
			
			//피보험자코드
			indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sInrpsCd");
			//성명
			indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sInrpsName");
			//관계명
			indata["sCrtorRelnName"] = grd_Pibo.getCellDisplayData(row, "sCrtorRelnCd");
			//설계번호
			indata["sPlanNo"] = parent.medt_PlanNo.getValue();
			//개인단체구분
			indata["sPsnGroupFlgcd"] = parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
			//seq
			indata["nPsnGroupSeqno"] = Ds_Pibo.getCellData(row, "nInrpsSeqno");
			//청약일자
			indata["sSsrtDate"] = parent.Ds_LTIDA00.getCellData(0, "sSsrtDate");
			//운전구분
			indata["sDrveFlagCd"] = Ds_Pibo.getCellData(row, "sDrveFlagCd");
			//운전구분
			indata["sJobName"] = Ds_Pibo.getCellData(row, "sJobName");						
			//저축상품 여부
			var sSvtYn = "N";
			if(parent.DsWs_PrdAttr.getCellData(0,"GdFlgcd") == "2"){
				sSvtYn = "Y";
			}
			indata["sSvtYn"] = sSvtYn;
			var pObj = { 	"Ds_Pibo" : Ds_Pibo,      // 피보험자 정보 Ds 
   							"Ds_LTIDA00" : parent.Ds_LTIDA00   // 보험 기본사항 정보 Ds  
  						}
			
		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
						"width"     : 880,
						"height"    : 885,  
						"indata"    : indata,
						"title"     : "피보험자고지사항",
						"parentObject" : pObj
					};
                    return wprom.popupOpen("/ui/cbsc/CBSC129P.xml", popInfo);				
			});
			
			promise = promise.then(function(rtnVal) {
                var rtnValue = wprom.getReturnData();
                if (!wconv.isNull(rtnValue)) {
                    Ds_Pibo.setCellData(row, "sRqstYn", rtnValue);
                    if (wconv.length(rtnValue) > 0) {
                        btn_Insu.setDisabled(true);
                        btn_Simsa.setDisabled(true);
                        btn_Image.setDisabled(true);
                        parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
                    }
                }
			});
			break;
		//타보험가입사항 클릭시 타보험 가입 사항[B220_Pop] 화면팝업 CBSC114 
		case "sOthrInsurCntName":
			var indata = {};	
			//설계번호
			indata["sPlanNo"] = parent.medt_PlanNo.getValue();
			//개인단체구분
			indata["sPsnGroupFlgcd"] = parent.Ds_LTIDA00.getCellData(0, "sPsnGroupFlgcd");
			//seq
			indata["sPsnPrprtGroupSeqno"] = Ds_Pibo.getCellData(row, "nInrpsSeqno");
			//변경일련번호
			indata["sCrChngNo"] = "0";
			//타보험사항건수
			indata["nCount"] = Ds_Pibo.getCellData(row, "sOthrInsurCnt");
			
			var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
			
			promise = promise.then(function(rv) {
				var popInfo = {
					"width"     : 795,
					"height"    : 415,  
					"indata"    : indata,
					"title"     : "타보험 가입 사항",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC114P.xml", popInfo);
                //타보험사항건수
            });
            promise = promise.then(function(rv) {
               	var rtnValue = wprom.getReturnData();
				if (!mfn_IsEmpty(rtnValue)) {
                    Ds_Pibo.setCellData(row, "sOthrInsurCnt", rtnValue);
                }
            });
			break;
		//사망수익자 클릭시 수익자등록[B110_Pop] 화면팝업 CBSC069P
		case "sPftbpName":
			var indata = {};
            //만기시수익자, 사망시수익자, 지정대리인 구분자 
            indata["fAgntFlag"] = "ed_Dead";
            //계약자/피보험자관계
            indata["sRelnCd"] = Ds_Pibo.getCellData(row, "sPftbpInrpsRelnCd");
            //수익자코드(주민번호)
            indata["sCd"] = Ds_Pibo.getCellData(row, "sPftbpCd");
            //성명
            indata["sName"] = Ds_Pibo.getCellData(row, "sPftbpName");
            //연락처
            indata["sTelno"] = Ds_Pibo.getCellData(row, "sPftbpTelno");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sInrpsCd");
            //계약자/피보험자 성명
            indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sInrpsName");
           	// 주소
            indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
            // 주소추가
            indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");           
            indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
            indata["sPftbpAddFlag"] = Ds_Pibo.getCellData(0, "sPftbpMailAddFlag");
            indata["nPftbpChngSeq"] = Ds_Pibo.getCellData(0, "nPftbpMailChngSeq");
            indata["sPftbpAddr"] = Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpAddr");
            //집전화번호
            indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
            //집전화번호
            indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
	        //집전화번호
	        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
	        indata["sOfficeTel1"] = Ds_LTIDA03.getCellData(0, "sOfficeTel1");
	        indata["sOfficeTel2"] = Ds_LTIDA03.getCellData(0, "sOfficeTel2");
	        indata["sOfficeTel3"] = Ds_LTIDA03.getCellData(0, "sOfficeTel3");
	        indata["sCellPhone1"] = Ds_LTIDA03.getCellData(0, "sCellPhone1");
	        indata["sCellPhone2"] = Ds_LTIDA03.getCellData(0, "sCellPhone2");
	        indata["sCellPhone3"] = Ds_LTIDA03.getCellData(0, "sCellPhone3");
            indata["fAgntFlagIdx"] = row;
            indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};

		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);				
			});
			promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				console.log("===> rtnValue edt_sEnntmPftbpYn" + rtnValue);
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});
            
			break;
		//사망외수익자 클릭시 수익자등록[B110_Pop] 화면팝업 CBSC069P
		case "sXcptPftbpName":
			var indata = {};
			//만기시수익자, 사망시수익자, 지정대리인, 사망외수익자 구분자 
            indata["fAgntFlag"] = "ed_Xcpt";
            //계약자/피보험자관계
            indata["sRelnCd"] = Ds_Pibo.getCellData(row, "sXcptPftbpInrpsRelnCd");
            //수익자코드(주민번호)
            indata["sCd"] = Ds_Pibo.getCellData(row, "sXcptPftbpCd");
            //성명
            indata["sName"] = Ds_Pibo.getCellData(row, "sXcptPftbpName");
            //연락처
            indata["sTelno"] = Ds_Pibo.getCellData(row, "sXcptPftbpTelno");
            //계약자/피보험자코드(주민번호)
            indata["sInrpsCd"] = Ds_Pibo.getCellData(row, "sInrpsCd");
            //계약자/피보험자 성명
            indata["sInrpsName"] = Ds_Pibo.getCellData(row, "sInrpsName");
            // 주소
            indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
            // 주소추가
            indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");           
            indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
            //집전화번호
            indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
            //집전화번호
            indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
	        //집전화번호
	        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
	        indata["sOfficeTel1"] = Ds_LTIDA03.getCellData(0, "sOfficeTel1");
	        indata["sOfficeTel2"] = Ds_LTIDA03.getCellData(0, "sOfficeTel2");
	        indata["sOfficeTel3"] = Ds_LTIDA03.getCellData(0, "sOfficeTel3");
	        indata["sCellPhone1"] = Ds_LTIDA03.getCellData(0, "sCellPhone1");
	        indata["sCellPhone2"] = Ds_LTIDA03.getCellData(0, "sCellPhone2");
	        indata["sCellPhone3"] = Ds_LTIDA03.getCellData(0, "sCellPhone3");
	        
	        indata["sXcptPftbpAddFlag"] = Ds_Pibo.getCellData(row, "sXcptPftbpMailAddFlag");
            indata["nXcptPftbpChngSeq"] = Ds_Pibo.getCellData(row, "nXcptPftbpMailChngSeq");
            indata["sXcptPftbpAddr"] = Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sXcptPftbpAddr");
            indata["sAddrFlgcd"] = Ds_LTIDA03.getCellData(row, "sMailRvadAddrFlagCd");
            indata["nAddrChngSeq"] = Ds_LTIDA03.getCellData(row, "nMailRvadChngSeq");
            indata["sMaildress"] = edt_RvadAddr.getValue();
            indata["sMaildressFlag"] = cmb_sMailRvadAddrFlagCd.getValue();
            indata["fAgntFlagIdx"] = row;
            indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
            var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
			// 단체청약에서는 B111_Pop 을 호출하나 재물청약에서 B110_Pop 함
		    promise = promise.then(function(rtnVal) {
		    	var popInfo = {
					"width"     : 664,
					"height"    : 162,  
					"indata"    : indata,
					"title"     : "수익자등록",
					"parentObject" : pObj
				};
                return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
				
			});
			promise = promise.then(function(rv) {
				var rtnValue = wprom.getReturnData();
      			if (wconv.length(rtnValue) != 0) {
      				scwin.lfn_B110_CallBack(rtnValue);
          		}	
          	});
			break;
		default:
            break;
		} // end switch
		
		promise = promise.then(function(rtnVal) {
        	scwin.fn_subCheck(row);
	    });
	    return promise;
	};
	
	//---------------------------------------------------------------------------
	// function 명 : lfn_searchCust
	// 내용        : 고객팝업호출
	//---------------------------------------------------------------------------
	scwin.lfn_searchCust = function(obj) {
	    var result;
		var parentInfo    = "";
		var msgInfo       = "";
		var this_sCrtorCd = "";
		var objID = this.getID();
	    
	    if(objID == "btn_Crtor"){
			msgInfo = "계약자";
			this_sCrtorCd = medt_sCrtorCd.getValue();
		} else if(objID == "btn_OwnrDscrNo"){
			msgInfo = "소유자";
			this_sCrtorCd = medt_sOwnrDscrNo.getValue();
		}

	    //대리점
		if(parent.sAgncYn == "Y"){
	    	if (!mfn_IsEmpty(Ds_CrtorCd.GetColumn(0, "sCrtorCd"))){
				this_sCrtorCd = Ds_CrtorCd.GetColumn(0, "sCrtorCd");
	    	}
		}
	
	    //휴면계약 존재여부 확인
	    var rtnValue = gfn_checkDmcyInsurByCustNo("DsWs_Dmcy", wconv.trim(this_sCrtorCd));
	    if (rtnValue != "") {
			noprom.alert(rtnValue);
	    }
	
	    //계약자번호 입력여부체크
	    if (wconv.isNull(this_sCrtorCd)) {
	        wprom.alert(msgInfo+"번호를 입력하세요.");
	        this.focus();
	        return false;
	    } else {
	        //사업자체크
	        if (this_sCrtorCd.length == 10) {
	            if (!isBizRegNo(this_sCrtorCd)) {
	                wprom.alert("사업자번호를 정확히 입력하세요.");
	                this.focus();
	                return false;
	            }
	        } else {
	        	if (!checkPersonID(this_sCrtorCd)) {
	                wprom.alert("계약자번호를 정확히 입력하세요."); 
	            }
	        }
	    }
	    
	    var pro = Promise.resolve();
	    
	    wconv.clear(Ds_long_mPlr);
	    if (wconv.length(this_sCrtorCd) == 10) {
	        //법인화면 오픈  
	        //107-86-24985
	        if (Ds_LTIDA03.getRowCount() > 0 && wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0
		 		&& (sCrtorCd_Backup == this_sCrtorCd)){
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
	            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
	            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	            //parentInfo += " screenId=long"; //스크린id
	        } else {
	            scwin.medt_sCrtorCd_onblur();
	            parentInfo += "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += "2^"; //고객유형 내국인
	            parentInfo += "^"; //주소구분코드 자택
	            parentInfo += "^"; //주소변경회차
	            parentInfo += "^"; //전화회차
	            parentInfo += "^"; //발송지주소구분
	            parentInfo += "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	            //parentInfo += " screenId=long"; //스크린id
	        }
	
	        //trace("parentInfo==="+parentInfo);
	        //대면/비대면체크  Y:  대면 , N : 비대면
	        pro = pro.then(function(rv) {
	        	var indata  = {"parentInfo" : parentInfo,
				               "screenId" : "long",
				               "sPlanNo" :""
				               };
				var pObj = {"Ds_long_mPlr": Ds_long_mPlr,
							"Ds_LTIDA00"   : parent.Ds_LTIDA00
							};
				var popInfo = {
					"width"     : 810,
					"height"    : 520,  
					"indata"    : indata,
					"title"     : "법인고객 등록",
					"parentObject" : pObj,
				};
				return wprom.popupOpen("/ui/cbso/CBSO012P.xml", popInfo);
	        });
	        pro = pro.then(function(rv) {
	        });
	    } else {
	        if (Ds_LTIDA03.getRowCount() > 0 && wconv.length(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) > 0 && 
	        //		 && (Ds_LTIDA03.GetColumn(0, "sCrtorCd") == medt_sCrtorCd.Value)){	
	            (sCrtorCd_Backup == this_sCrtorCd)) {
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCrtorCstId") + "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += Ds_LTIDA03.getCellData(0, "sCstFlgcd") + "^"; //고객유형 내국인
	            parentInfo += Ds_LTIDA03.getCellData(0, "sAddrFlgcd") + "^"; //주소구분코드 자택
	            parentInfo += Ds_LTIDA03.getCellData(0, "nAddrChngSeq") + "^"; //주소변경회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "nTelnoChngSeq") + "^"; //전화회차
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지주소구분
	            parentInfo += Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd") + "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        } else {
	            parentInfo += "^"; //고객ID
	            parentInfo += this_sCrtorCd + "^"; //주민번호
	            parentInfo += "0^"; //순번
	            parentInfo += "1^"; //고객유형 내국인
	            parentInfo += "^"; //주소구분코드 자택
	            parentInfo += "^"; //주소변경회차
	            parentInfo += "^"; //전화회차
	            parentInfo += "^"; //발송지주소구분
	            parentInfo += "^"; //발송지회차
	            parentInfo += "Ds_long_mPlr"; //데이터셋명	
	        }
	
			pro = pro.then(function(rv) {
				var indata  = {"parentInfo" : parentInfo,
				               "screenId" : "long",
				               "sStandDate" : parent.Ds_LTIDA00.getCellData(0, "sInsurStrtdate"),
				               "fAgntFlagPop" : "",
				               "sPlanNo" : parent.medt_PlanNo.getValue(),
				               "sHandlerID" : parent.scwin.lfn_GetDoerUser(),
				               "sScanObjtYn" : parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn")
				               };
				
				var popInfo = {
					"width"     : 800,
					"height"    : 580,  
					"indata"    : indata,
					"title"     : "개인고객등록"
				};
				
				return wprom.popupOpen("/ui/cbso/CBSO002P.xml", popInfo);
			});
			
			pro = pro.then(function(rv) {
				var rtnValue = wprom.getReturnData();
	
				if (rtnValue.Ds_long_mPlr != "") {
					Ds_long_mPlr.setJSON(rtnValue.Ds_long_mPlr);
				}
			});
	    }

	    pro = pro.then(function(rv) {
		    if (Ds_long_mPlr.getRowCount() > 0)	{
		    	if (objID == "btn_Crtor") {
					if (parent.sAgncYn != "Y") {
		                //계약자코드 바인딩
		                medt_sCrtorCd.setRef("data:Ds_LTIDA03.sCrtorCd");
		            }
		
		            //우편수령구분 바인딩
		            cmb_sMailRvadAddrFlagCd.setRef("data:Ds_LTIDA03.sMailRvadAddrFlagCd");
		
		            //초기화
		            Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo")); //설계번호                 
		            Ds_LTIDA03.setCellData(0, "nCrChngNo", "0"); //계약변경번호             
		            Ds_LTIDA03.setCellData(0, "sCrtorFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //계약자구분코드           
		            Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_long_mPlr.getCellData(0, "sCustNo")); //계약자코드               
		            Ds_LTIDA03.setCellData(0, "sCrtorName", Ds_long_mPlr.getCellData(0, "sName")); //계약자명                 
		            Ds_LTIDA03.setCellData(0, "nCrtorAge", gfn_getInsAge(Ds_LTIDA03.getCellData(0, "sCrtorCd"), parent.Ds_LTIDA00.getCellData(0, "sSsrtDate"))); //계약자연령               
		            Ds_LTIDA03.setCellData(0, "sCrtorSexFlag", scwin.lfn_getSex(Ds_LTIDA03.getCellData(0, "sCrtorCd"))); //계약자성별구분           
		            Ds_LTIDA03.setCellData(0, "sCrtorCstId", Ds_long_mPlr.getCellData(0, "sCstId")); //계약자고객ID             
		            Ds_LTIDA03.setCellData(0, "nCstChngSeqno", Ds_long_mPlr.getCellData(0, "nSeqNo")); //고객변경일련번호         
		            Ds_LTIDA03.setCellData(0, "sCstFlgcd", Ds_long_mPlr.getCellData(0, "sCustType")); //고객구분코드             
		            Ds_LTIDA03.setCellData(0, "sAddrFlgcd", "1"); //주소구분코드   1 자택 2 직장          
		            Ds_LTIDA03.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
		            Ds_LTIDA03.setCellData(0, "nTelnoChngSeq", Ds_long_mPlr.getCellData(0, "nTelChangeNo")); //전화번호변경회차         
		            Ds_LTIDA03.setCellData(0, "sMailRvadAddrFlagCd", Ds_long_mPlr.getCellData(0, "sDMAdrsTyp")); //우편물수령처주소구분코드 
		            Ds_LTIDA03.setCellData(0, "nMailRvadChngSeq", Ds_long_mPlr.getCellData(0, "nAdrsChangeNo")); //우편물수령처변경회차     
		            Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드     
		            Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
		            Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
		            Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
		            Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처         
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드       
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처 		 
		            Ds_LTIDA03.setCellData(0, "sZip1", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 0, 3)); //우편번호
		            Ds_LTIDA03.setCellData(0, "sZip2", wconv.substr(Ds_long_mPlr.getCellData(0, "sHomZco"), 3, 3)); //우편번호
		            Ds_LTIDA03.setCellData(0, "sAdrs1", Ds_long_mPlr.getCellData(0, "sHomAdr1")); //집주소
		            Ds_LTIDA03.setCellData(0, "sAdrsAdd", Ds_long_mPlr.getCellData(0, "sHomAdr2")); //집주소
		            Ds_LTIDA03.setCellData(0, "sHomeTel1", Ds_long_mPlr.getCellData(0, "sHomeTel1")); //집전화번호
		            Ds_LTIDA03.setCellData(0, "sHomeTel2", Ds_long_mPlr.getCellData(0, "sHomeTel2")); //집전화번호
		            Ds_LTIDA03.setCellData(0, "sHomeTel3", Ds_long_mPlr.getCellData(0, "sHomeTel3")); //집전화번호
		            Ds_LTIDA03.setCellData(0, "sOfficeTel1", Ds_long_mPlr.getCellData(0, "sOfficeTel1")); //사무실전화번호
		            Ds_LTIDA03.setCellData(0, "sOfficeTel2", Ds_long_mPlr.getCellData(0, "sOfficeTel2")); //사무실전화번호
		            Ds_LTIDA03.setCellData(0, "sOfficeTel3", Ds_long_mPlr.getCellData(0, "sOfficeTel3")); //사무실전화번호
		            Ds_LTIDA03.setCellData(0, "sCellPhone1", Ds_long_mPlr.getCellData(0, "sCellPhone1")); //핸드폰번호
		            Ds_LTIDA03.setCellData(0, "sCellPhone2", Ds_long_mPlr.getCellData(0, "sCellPhone2")); //핸드폰번호
		            Ds_LTIDA03.setCellData(0, "sCellPhone3", Ds_long_mPlr.getCellData(0, "sCellPhone3")); //핸드폰번호
		            Ds_LTIDA03.setCellData(0, "sFax1", Ds_long_mPlr.getCellData(0, "sFax1")); //fax번호
		            Ds_LTIDA03.setCellData(0, "sFax2", Ds_long_mPlr.getCellData(0, "sFax2")); //fax번호
		            Ds_LTIDA03.setCellData(0, "sFax3", Ds_long_mPlr.getCellData(0, "sFax3")); //fax번호
		            Ds_LTIDA03.setCellData(0, "sEmail1", Ds_long_mPlr.getCellData(0, "sEmail1")); //이메일
		            Ds_LTIDA03.setCellData(0, "RvadAddr", Ds_long_mPlr.getCellData(0, "sAdrs1") + " " + Ds_long_mPlr.getCellData(0, "sAdrs2")); //우편물수령처주소
		            Ds_LTIDA03.setCellData(0, "sEnntmPftbpYn", "N"); //만기수익자입력상태
		            Ds_LTIDA03.setCellData(0, "sAsmtAgntYn", "N"); //지정대리인입력상태	
		            Ds_LTIDA03.setCellData(0, "sInsurPftbpYn", "N"); //보험수익자입력상태
		            //피보험자, 계약자동일할때 피보험자 주소, 전화번호 update
		            if (Ds_Pibo.getCellData(0, "sInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
		                Ds_Pibo.setCellData(0, "nAddrChngSeq", Ds_long_mPlr.getCellData(0, "nHomAdrsChangeNo")); //주소변경회차             
		            }
		            
		            //통신수단해지 동의와 수익자 약정 기본값 셋팅
					if(wconv.length(cmb_AsmtYn.getValue()) < 1 || cmb_AsmtYn.getValue() == ""){
						cmb_AsmtYn.setSelectedIndex(1);
					}
					if(wconv.length(cmb_CmmcMeanCnclYn.getValue) < 1 || cmb_CmmcMeanCnclYn.getValue() == ""){
						cmb_CmmcMeanCnclYn.setSelectedIndex(1);
					}
					
					//cbs 추가
            		parent.scwin.lfn_set_Tab_Info("S2", "T1");
            		
				} else if(objID == "btn_OwnrDscrNo"){
				    var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
				    
				    Ds_Prprt.setCellData(nFindRow, "sOwnrNm", Ds_long_mPlr.getCellData(0, "sName")); 	//소유자명
					Ds_Prprt.setCellData(nFindRow, "sOwnrDscrNo", Ds_long_mPlr.getCellData(0, "sCustNo")); //소유자식별번호
					
					if(wconv.length(this_sCrtorCd) == 10){
						Ds_Prprt.setCellData(nFindRow, "sOwnrFlagCd", "2"); 				//소유자구분코드(사업자번호)	
					}else{
						Ds_Prprt.setCellData(nFindRow, "sOwnrFlagCd", "1"); 				//소유자구분코드(주민번호)
					}
				}
		    }
		});

	    return;
	};
		
	//**********************************************************
	// 통신수단 해지동의 셀렉트박스 뷰체인지
	//**********************************************************	
	scwin.cmb_CmmcMeanCnclYn_onviewchange = function(info) {
		var strCode = cmb_CmmcMeanCnclYn.getValue();
		parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCmmcMeanCnclAgreYn", "sCmmcMeanCnclAgreYn", "text"] ]);
	    parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
	    parent.Ds_LTIDA00.setRowPosition(0, false);
	    parent.Ds_LTIDA00.setCellData(0, "sCmmcMeanCnclAgreYn", strCode);
    	edt_sCrtorName.focus();	
	};
		
	//**********************************************************
	// 대상고객 셀렉트박스 뷰체인지 
	//**********************************************************	
	scwin.cmb_CrPrtrRole_onviewchange = function(info) {
		var strCode = cmb_CrPrtrRole.getValue();
		parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sCrPrtrRole", "sCrPrtrRole", "text"] ]);
	    parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
	    parent.Ds_LTIDA00.setRowPosition(0, false);
	    parent.Ds_LTIDA00.setCellData(0, "sCrPrtrRole", strCode);
 	};
	
	//**********************************************************
	// 취득경로 셀렉트박스 뷰체인지 
	//**********************************************************		
	scwin.cmb_AqamtChnlCd_onviewchange = function(info) {
		var strCode = cmb_AqamtChnlCd.getValue();
		parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sAqamtChnlCd", "sAqamtChnlCd", "text"] ]);
		parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
		parent.Ds_LTIDA00.setRowPosition(0, false);
	    parent.Ds_LTIDA00.setCellData(0, "sAqamtChnlCd", strCode);	
	};
	
	//**********************************************************
	// 만기수익자 에디트박스 클릭이벤트 
	//**********************************************************	
	scwin.edt_sEnntmPftbpYn_onclick = function(e) {
		// 수익자 등록 팝업화면 호출	
		var indata = {};
	    //만기시수익자, 사망시수익자, 지정대리인 구분자 
       	indata["fAgntFlag"] = "ed_Mangi";
       	//계약자/피보험자관계
       	indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd");
	    //수익자코드(주민번호)
	    indata["sCd"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCd");
        //성명
        indata["sName"] = Ds_LTIDA03.getCellData(0, "sEndPftbpName");
        //연락처
        indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sEndPftbpCntad");
        //계약자/피보험자코드(주민번호)
        indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd");
        //계약자/피보험자 성명
        indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName");
        //주소
        indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
        //주소추가
        indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");    
        //발송지주소구분       
        indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        //집전화번호
        indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
        indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
        indata["sOfficeTel1"] = Ds_LTIDA03.getCellData(0, "sOfficeTel1");
        indata["sOfficeTel2"] = Ds_LTIDA03.getCellData(0, "sOfficeTel2");
        indata["sOfficeTel3"] = Ds_LTIDA03.getCellData(0, "sOfficeTel3");
		indata["sCellPhone1"] = Ds_LTIDA03.getCellData(0, "sCellPhone1");
        indata["sCellPhone2"] = Ds_LTIDA03.getCellData(0, "sCellPhone2");
        indata["sCellPhone3"] = Ds_LTIDA03.getCellData(0, "sCellPhone3");  
                    
        indata["sEndPftbpAddFlag"] = Ds_LTIDA03.getCellData(0, "sEndPftbpMailAddFlag");
        indata["nEndPftbpChngSeq"] = Ds_LTIDA03.getCellData(0, "nEndPftbpChngSeq");
        indata["sEndPftbpAddr"] = Ds_LTIDA03.getCellData(0, "sEndPftbpAddr");
        indata["sMaildress"] = Ds_LTIDA03.getCellData(0, "RvadAddr");
        indata["sMaildressFlag"] = cmb_sMailRvadAddrFlagCd.getValue();
        indata["sAddrFlgcd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        indata["nAddrChngSeq"] = Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq");
        indata["fAgntFlagIdx"] = 0;
        indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
        var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
        // 수익자등록[B110_Pop] 화면팝업 CBSC069P
        var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var popInfo = {
				"width"     : 664,
				"height"    : 162,  
 		        "indata"    : indata,
				"title"     : "수익자등록",
				"parentObject" : pObj
			};
            return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
		});
		promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
     		if (wconv.length(rtnValue) != 0) {
     			scwin.lfn_B110_CallBack(rtnValue);
         	}	
		});
	};
	
	//**********************************************************
	// 지정대리인 에디트박스 클릭이벤트 
	//**********************************************************
	scwin.edt_sAsmtAgntYn_onclick = function(e) {
		if(Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sInrpsCd")){
			alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
			return;
		}
	
		if(Ds_Pibo.getRowCount()  > 1){
			alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
			return;
		}
			
		// 수익자 등록 팝업화면 호출	
		var indata = {};
	    //만기시수익자, 사망시수익자, 지정대리인 구분자 
       	indata["fAgntFlag"] = "ed_Proxy";
       	//계약자/피보험자관계
       	indata["sRelnCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd");
	    //수익자코드(주민번호)
	    indata["sCd"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCd");
        //성명
        indata["sName"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntName");
        //연락처
        indata["sTelno"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad");
        //계약자/피보험자코드(주민번호)
        indata["sInrpsCd"] = Ds_LTIDA03.getCellData(0, "sCrtorCd");
        //계약자/피보험자 성명
        indata["sInrpsName"] = Ds_LTIDA03.getCellData(0, "sCrtorName");
        //주소
        indata["sAdrs1"] = Ds_LTIDA03.getCellData(0, "sAdrs1");
        //주소추가
        indata["sAdrsAdd"] = Ds_LTIDA03.getCellData(0, "sAdrsAdd");    
        //발송지주소구분       
        indata["sMailFlagCd"] = Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd");
        //집전화번호
        indata["sHomeTel1"] = Ds_LTIDA03.getCellData(0, "sHomeTel1");
        indata["sHomeTel2"] = Ds_LTIDA03.getCellData(0, "sHomeTel2");
        indata["sHomeTel3"] = Ds_LTIDA03.getCellData(0, "sHomeTel3");
        indata["sOfficeTel1"] = Ds_LTIDA03.getCellData(0, "sOfficeTel1");
        indata["sOfficeTel2"] = Ds_LTIDA03.getCellData(0, "sOfficeTel2");
        indata["sOfficeTel3"] = Ds_LTIDA03.getCellData(0, "sOfficeTel3");
		indata["sCellPhone1"] = Ds_LTIDA03.getCellData(0, "sCellPhone1");
        indata["sCellPhone2"] = Ds_LTIDA03.getCellData(0, "sCellPhone2");
        indata["sCellPhone3"] = Ds_LTIDA03.getCellData(0, "sCellPhone3");              
        indata["sAsmtAgntAddFlag"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntMailAddFlag");
        indata["nAsmtAgntChngSeq"] = Ds_LTIDA03.getCellData(0, "nAsmtAgntMailChngSeq");
        indata["sAsmtAgntAddr"] = Ds_LTIDA03.getCellData(0, "sAsmtAgntAddr");
        indata["sAsmtAgntAddFlag"] = sAsmtAgntAddFlagPop;
        indata["sAsmtAgntAddr"] = sAsmtAgntAddrPop;
        indata["sHandlerID"] = parent.scwin.lfn_GetDoerUser();	//cbs 추가 - 취급자
        var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00};
        // 수익자등록[B110_Pop] 화면팝업 CBSC069P
        var promise = Promise.resolve();
	    promise = promise.then(function(rtnVal) {
	    	var popInfo = {
				"width"     : 664,
				"height"    : 162,  
                "indata"    : indata,
				"title"     : "수익자등록",
				"parentObject" : pObj
			};
	        return wprom.popupOpen("/ui/cbsc/CBSC069P.xml", popInfo);
	    });
	    promise = promise.then(function(rv) {
			var rtnValue = wprom.getReturnData();
    		if (wconv.length(rtnValue) != 0) {
    			scwin.lfn_B110_CallBack(rtnValue);
        	}	
        });
	};
	
	//**********************************************************
	// 세금우대 버튼 클릭이벤트 
	//**********************************************************
	scwin.btn_TaxSearch_onclick = function() {
		// 세금우대전금융기관가입내역조회[G440_Pop] 
		var promise = Promise.resolve();		
		var sConnectFlag = util.getGdsValue("gFaceSalesYN") == "Y"? util.getGdsValue("gFaceSalesYN"):"N";
        if (sConnectFlag == "Y") {
         	var oDsJson = [{"sCrtorCd" : Ds_LTIDA03.getCellData(0, "sCrtorCd"),
				         "sTaxPrfrFlag": sTxfrCheckFlag
			             }];
			gds.gDs_LinkArg.setJSON(oDsJson);
			gfn_OpenLinkPage("CBSC068M");
        } else {
            promise = promise.then(function(rtnVal) {
           	var oDsJson = [{"nCrtorCd" : medt_sCrtorCd.getValue(),
		         			"nSvKind" : "58"
				           }];
			gds.gDs_LinkArg.setJSON(oDsJson);

			var popInfo = {
				"width"     : 807,
				"height"    : 608,  
				"title"     : "세금우대전금융기관가입내역조회"
			};

             return wprom.popupOpen("/ui/cbsc/CBSC067P.xml", popInfo);
            });
        }
	};
	
	//**********************************************************
	// 수익자약정 셀렉트박스 뷰체인지 
	//**********************************************************
	scwin.cmb_AsmtYn_onviewchange = function(info) {
		var strCode = cmb_AsmtYn.getValue();
		parent.util.insertColumn(parent.Ds_LTIDA00, [ ["sInsurPftbpAsmtYn", "sInsurPftbpAsmtYn", "text"] ]);
    	parent.util.setCompBindRefresh(parent.Ds_LTIDA00.getID());
    	parent.Ds_LTIDA00.setRowPosition(0, false);
    	
    	parent.Ds_LTIDA00.setCellData(0, "sInsurPftbpAsmtYn", strCode);
    	edt_sCrtorName.focus();	
	};
	
	//**********************************************************
	//세금우대선택시 세금우대가입한도조회팝업버튼 활성/비활성처리
	//**********************************************************
	scwin.cmb_sTaxPrfrYn_onviewchange = function(info) {
		var strCode = cmb_sTaxPrfrYn.getValue();
	    var sCrtorCd = medt_sCrtorCd.getValue();
	    if (parent.sAgncYn == "Y") {
	        sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
	    }
	    if (wconv.length(sCrtorCd) == 10) {
	        //alert("법인은 세금우대를 가입할 수 없습니다.");
	        cmb_sTaxPrfrYn.setValue("N");
	        strCode = "N";
	    }
	    if (strCode == "N") {
	        btn_TaxSearch.setDisabled(true);
	    } else {
	        btn_TaxSearch.setDisabled(false);
	    }
	    if (wconv.toNumber(parent.sToday) >= 20170401) {
	        //비과세 가입 안할경우 체크 로직.
	        if (strCode == "N") {
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	            sTxfrCheckFlag = "1";
	        } 
	        else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) < 10 && strCode == "B") {
	            wprom.alert("비과세 대상이 아닙니다");
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	            cmb_sTaxPrfrYn.setValue("N");
	            sTxfrCheckFlag = "1";
	        } else if (strCode == "B") {
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	            sTxfrCheckFlag = "2";
	            if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
	                wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && 
	                wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "76"); //총납입보험료로 한도 등록
	                Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	            } 
	            else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
	                      parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && 
	                      wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && 
	                      wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) <= 1500000) {
	                //보험료 기본계약보험료+적립보험료
	                var nTaxPrfrInsAmt = 0;
	                for (var i = 0; i < parent.Ds_Trty.getRowCount(); i++) {
	                    if (parent.Ds_Trty.getCellData(i, "sBascSlctFlagCd") == "1") {
	                        nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_Trty.getCellData(i, "nGrntPrem"));
	                    }
	                }
	                nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem"));
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "74"); //연간보험료로 한도 등록(추납포함)
	                Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", ((nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")))) * 12);
	            } 
	            else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
	                     (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && 
	                        wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) > 1500000) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "75"); //총납입보험료로 한도 등록
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } 
	                else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
	            }
	        } else if (strCode == "Y") {
	            sTxfrCheckFlag = "1";
	        }
	    } else {
	        //비과세 가입 안할경우 체크 로직.
	        if (strCode == "N") {
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	            sTxfrCheckFlag = "1";
	        } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) < 10 && strCode == "B") {
	            wprom.alert("비과세 대상이 아닙니다");
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	            cmb_sTaxPrfrYn.setValue("N");
	            sTxfrCheckFlag = "1";
	        } else if (strCode == "B") {
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	            sTxfrCheckFlag = "2";
	            if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
	                parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && 
	                wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "56");
	            } else if ( wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && 
	            			(((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "58");
	            }
	        } else if (strCode == "Y") {
	            sTxfrCheckFlag = "1";
	        }
	    }		
	};
	
	//**********************************************************
	//비과세 체크 
	//**********************************************************
	scwin.lfn_TxfrYn_Check = function() {
	    //wconv.trace("lfn_TxfrYn_Check ");
	    //trace("보험기간=="+Ds_LTIDA00.SaveXML());
	    var sYear10 = 0;
	    sTxfrCheckFlag = "1";
	    //trace("=====Ds_LTIDA51===" + Ds_LTIDA51.savexml());
	    if (parent.Ds_LTIDA00.getCellData(0, "sTaxPrfrYn") == "Y") {} else {
	        if (wconv.toNumber(parent.sToday) >= 20170401) {
	            if (Ds_LTIDA51.getRowCount() > 0 && ((Ds_LTIDA51.getCellData(0, "sSvGdCd") == "74" || Ds_LTIDA51.getCellData(0, "sSvGdCd") == "75" || Ds_LTIDA51.getCellData(0, "sSvGdCd") == "76"))) {
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	                    //비과세여부
	                    sTxfrCheckFlag = "2";
	                } else {
	                    sTxfrCheckFlag = "1";
	                }
	
	                //trace("" + Ds_LTIDA51.savexml());
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else {
	                    sTxfrCheckFlag = "1"; //비과세 대상에서 해제
	                }
	            } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                //신규일 경우 셋팅
	                wconv.clear(Ds_LTIDA51);
	                Ds_LTIDA51.insertRow(0);
	                Ds_LTIDA51.setRowPosition(0, false);
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem")); //trace("aaaaa" + Ds_LTIDA00.GetColumn(0,"nBussPrem"));
	                    //trace("bbbbb" + Ds_LTIDA51.GetColumn(0,"nTaxPrfrInsAmt"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem"))); //trace("aaaaa2" + Ds_LTIDA00.GetColumn(0,"nBussPrem"));
	                    //trace("bbbbb2" + Ds_LTIDA51.GetColumn(0,"nTaxPrfrInsAmt"));
	                }
	
	
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                }
	            }
	            if (sTxfrCheckFlag == "2") {
	                Ds_LTIDA51.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                Ds_LTIDA51.setCellData(0, "nCrChngNo", parent.Ds_LTIDA00.getCellData(0, "nCrChngNo"));
	                /*
				   if(parent.Ds_LTIDA00.GetColumn(0,"sPaymCyclCd") == "99"){
					  Ds_LTIDA51.SetColumn(0,"nTaxPrfrInsAmt",parent.Ds_LTIDA00.GetColumn(0,"nBussPrem"));
				   }else{
					  Ds_LTIDA51.SetColumn(0,"nTaxPrfrInsAmt",ToNumber(parent.Ds_LTIDA00.GetColumn(0,"nRealPaymTerm"))  * ToNumber(parent.Ds_LTIDA00.GetColumn(0,"sPaymCyclCd"))  * ToNumber(parent.Ds_LTIDA00.GetColumn(0,"nBussPrem")));
				   }
					*/
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                /* 2014.04.01변경
	                보험기간	납입주기기간	가입한도	등록코드
	                10년이상	월납5년이상	월150만원,	74(월적립식저축성보험Ⅱ)
	                10년이상	월납5년미만,비월납	1억원	75(월적립식외저축성보험Ⅱ)
	                10년이상	월납5년이상	제한없음	76(월적립식 순수보장성보험)
	                */
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "N") {
	                    cmb_sTaxPrfrYn.setValue("N");
	                    if (sYear10 == "1") {
	                        btn_TaxSearch.setDisabled(false);
	                    }
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAccuPrem")) == 0) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "76"); //총납입보험료로 한도 등록
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5 && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) <= 1500000) {
	                    //보험료 기본계약보험료+적립보험료
	                    var nTaxPrfrInsAmt = 0;
	                    for (var i = 0; i < parent.Ds_Trty.getRowCount(); i++) {
	                        if (parent.Ds_Trty.getCellData(i, "sBascSlctFlagCd") == "1") {
	                            nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_Trty.getCellData(i, "nGrntPrem"));
	                        }
	                    }
	                    nTaxPrfrInsAmt = nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_Trty.getCellData(0, "nAccuPrem"));
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "74"); //연간보험료로 한도 등록(추납포함)
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", ((nTaxPrfrInsAmt + wconv.toNumber(parent.Ds_Trty.getCellData(0, "nAddPaymPrem")))) * 12);
	                    btn_TaxSearch.setDisabled(false);
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")) + wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nAddPaymPrem")) > 1500000) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "75"); //총납입보험료로 한도 등록
	                    if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                        Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                    } else {
	                        Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                    }
	                    btn_TaxSearch.setDisabled(false);
	                } else {
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                    cmb_sTaxPrfrYn.setValue("N");
	                }
	            } else {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                cmb_sTaxPrfrYn.setValue("N");
	            }
	        } else {
	            if (Ds_LTIDA51.getRowcount() > 0) {
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	                    sTxfrCheckFlag = "2";
	                } else {
	                    sTxfrCheckFlag = "1";
	                }
	
	                //trace("" + Ds_LTIDA51.savexml());
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else {
	                    sTxfrCheckFlag = "1"; //비과세 대상에서 해제
	                }
	            } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10) {
	                //신규일 경우 셋팅
	                wconv.clear(Ds_LTIDA51);
	                Ds_LTIDA51.insertRow(0);
	                Ds_LTIDA51.setRowPosition(0 , false);
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
	
	
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    sTxfrCheckFlag = "2";
	                    sYear10 = 1; //10년 이상 여부 확인
	                }
	            }
	            if (sTxfrCheckFlag == "2") {
	                Ds_LTIDA51.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	                Ds_LTIDA51.setCellData(0, "nCrChngNo", parent.Ds_LTIDA00.getCellData(0, "nCrChngNo"));
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
	
	
	                //1. 보험기간 10년 이상인 경우 무조건 비과세 
	                //2. 납기가 5년 이상 월납 : 상품 무조건 56
	                //3. 납기가 3년.or 일시납 : 상품 무조건 58
	                if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "N") {
	                    cmb_sTaxPrfrYn.setValue("N");
	                    if (sYear10 == "1") {
	                        btn_TaxSearch.setDisabled(false);
	                    }
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) >= 5) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "56");
	                    btn_TaxSearch.setDisabled(false);
	                } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealInsurTerm")) >= 10 && (((parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "12" && wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) < 5) || parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") != "12"))) {
	                    cmb_sTaxPrfrYn.setValue("B");
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "58");
	                    btn_TaxSearch.setDisabled(false);
	                } else {
	                    Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                    Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                    cmb_sTaxPrfrYn.setValue("N");
	                }
	            } else {
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "N");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "");
	                cmb_sTaxPrfrYn.setValue("N");
	            }
	        }
	    }
	};
	
	//**********************************************************
	//비과세 한도 체크  
	//**********************************************************
	scwin.lfn_TxfrLimitCheck = function() {
		var sCrtorCd = medt_sCrtorCd.getValue();
	    var nSvKind = Ds_LTIDA51.getCellData(0, "sSvGdCd");
	    
	    wconv.clear(DsWs_SendTax);
	    wconv.clear(DsWs_SendTaxList);
	    wconv.clear(DsWs_Warning);

		var MethodObj = new callService("com.inswave.longterm.pay.ptm.task.GEG440Task", "sendSelectFinaOrgn", 0, 0);
		MethodObj.setId("sendSelectFinaOrgn");
		MethodObj.setUrl("/contract/CBSC094MController.do"); 
		MethodObj.setParam("sTermNo", gUserCenterCode);	// 입력지점
		MethodObj.setParam("sTrmnUserID", gUserID); //단말기조작자ID
		MethodObj.setParam("sTrmnUserNm", gUserEmpName); //단말기조작자성명
		MethodObj.setParam("nCrtorCd", sCrtorCd); //계약자코드
		MethodObj.setParam("nSvKind", nSvKind); //조회 저축 종류
		if (wconv.length(sCrtorCd) == 10) {
	        MethodObj.setParam("nCrtorCdFlag", 2); //사업자번호 2
	    } else if (wconv.length(sCrtorCd) == 13) {
	        MethodObj.setParam("nCrtorCdFlag", 1); //주빈번호 1
	    }
		
		if (nSvKind != "") {
			MethodObj.setXPath("//*/vector/data/TAX0210");
			MethodObj.addXPath("//*/TAX0021");
	    }
	    else {
	    	MethodObj.setXPath("//*/vector/data/TAX0200");
			MethodObj.addXPath("//*/TAX0020");
	    }	    
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send();    
		
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");
		if (DsWs_Warning.getRowCount() != 0 && wconv.length(DsWs_Warning.getCellData(0, "msg")) > 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
		}
		
		if (nSvKind != "") {
			util.jSonDsCreate(_tranSync.getDsJson("//*/vector/data/TAX0210"), "DsWs_SendTaxList");
			util.jSonDsCreate(_tranSync.getDsJson("//*/TAX0021"), "DsWs_SendTax");
		}
		else {
			util.jSonDsCreate(_tranSync.getDsJson("//*/vector/data/TAX0200"), "DsWs_SendTaxList");
			util.jSonDsCreate(_tranSync.getDsJson("//*/TAX0020"), "DsWs_SendTax");
		}
	    if (wconv.toNumber(parent.sToday) >= 20170401) {
	        if (nSvKind == "74") {
	            var nTaxPrfrLmitRemnAmt = DsWs_SendTax.getCellData(0, "nTaxPrfrLmitRemnAmt");
	            var nTaxPrfrInsTamt = Ds_LTIDA51.getCellData(0, "nTaxPrfrInsAmt");
	            //alert("74 한도금액 : " + nTaxPrfrLmitRemnAmt + " 등록금액 : " + nTaxPrfrInsTamt);
	            console.log("74nTaxPrfrInsTamt:" + nTaxPrfrInsTamt + "  nTaxPrfrLmitRemnAmt:" + nTaxPrfrLmitRemnAmt);
	            if (wconv.toNumber(nTaxPrfrInsTamt) > wconv.toNumber(nTaxPrfrLmitRemnAmt)) {
	                //한도초과일경우 75로등록
	                cmb_sTaxPrfrYn.setValue("B");
	                Ds_LTIDA51.setCellData(0, "sTxfrYn", "Y");
	                Ds_LTIDA51.setCellData(0, "sSvGdCd", "75"); //총납입보험료로 한도 등록
	                if (parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd") == "99") {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", parent.Ds_LTIDA00.getCellData(0, "nBussPrem"));
	                } else {
	                    Ds_LTIDA51.setCellData(0, "nTaxPrfrInsAmt", wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd")) * wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "nBussPrem")));
	                }
	                // 다시 서비스콜  
	                if (scwin.lfn_TxfrLimitCheck()) {
	                    //75로 한도조회
	                    return true;
	                }
	            }
	        }
	        if (nSvKind == "75") {
	            var nTaxPrfrLmitRemnAmt = DsWs_SendTax.getCellData(0, "nTaxPrfrLmitRemnAmt");
	            var nTaxPrfrInsTamt = Ds_LTIDA51.getCellData(0, "nTaxPrfrInsAmt");
	            wprom.alert("75 한도금액 : " + nTaxPrfrLmitRemnAmt + " 등록금액 : " + nTaxPrfrInsTamt);
	            if (wconv.toNumber(nTaxPrfrInsTamt) > wconv.toNumber(nTaxPrfrLmitRemnAmt)) {
	                wprom.alert("월적립식 외 저축성 보험 비과세 1억 한도 초과되었습니다 \n해당계약을 비과세 미가입으로 변경하세요." + "\n월적립식외 저축성보험II(75) 한도금액 : " + nTaxPrfrLmitRemnAmt + " 원" + "\n현재청약 등록금액 : " + nTaxPrfrInsTamt + " 원");
	                console.log("75nTaxPrfrInsTamt:" + nTaxPrfrInsTamt + "  nTaxPrfrLmitRemnAmt:" + nTaxPrfrLmitRemnAmt);
	                return true;
	            }
	        }
	    } else {
	        if (nSvKind == "58") {
	            var nTaxPrfrLmitRemnAmt = DsWs_SendTax.getCellData(0, "nTaxPrfrLmitRemnAmt");
	            var nTaxPrfrInsTamt = Ds_LTIDA51.getCellData(0, "nTaxPrfrInsAmt");
	            if (wconv.toNumber(nTaxPrfrInsTamt) > wconv.toNumber(nTaxPrfrLmitRemnAmt)) {
	                wprom.alert("월적립식 외 저축성 보험 비과세 2억 한도 초과되었습니다 \n해당계약을 비과세 미가입으로 변경하세요");
	                console.log("nTaxPrfrInsTamt:" + nTaxPrfrInsTamt + "  nTaxPrfrLmitRemnAmt:" + nTaxPrfrLmitRemnAmt);
	                return true;
	            }
	        }
	    }
	    return false;
	};
	
	
	//**********************************************************
	//주소찾기창을 띄움
	//**********************************************************	
	scwin.zipPopup = function() {
	    var pro = Promise.resolve();
	    //2014.02.06 새주소
	    var indata = {};
	    indata["sTableNm"] = "CUSAA01";
	    indata["sAdrsType"] = "1";
	    
		pro = pro.then(function(rv) {
			var popInfo = {
				"width"     : 780,
				"height"    : 786,  
				"indata"    : indata,
				"title"     : "우편번호 찾기"
			};
				
			return wprom.popupOpen("/ui/cbso/CBSO019P.xml", popInfo);
		});
	    pro = pro.then(function(ret) {
	        if (wconv.length(wconv.trim(ret)) != 0) {
	            var zipArr = wconv.split(ret, "^");
	            var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
	            console.log("nFindRow  :" + nFindRow);
	            console.log("zipArr[0] :" + zipArr[0]);
	
	            //2014.02.06 새주소
	            util.insertColumn(Ds_ObjLctn, [ ["sZipType", "sZipType","text"], 
	            								["sAddrMgtNo", "sAddrMgtNo", "text"],
	                    						["nAddrStdSeq", "nAddrStdSeq", "text"],
	           									["sOrgZipType", "sOrgZipType", "text"],
	           									["sOrgZipCode", "sOrgZipCode", "text"],
												["sOrgAddr", "sOrgAddr", "text"] ]);
				util.setCompBindRefresh(Ds_ObjLctn.getID());
				Ds_ObjLctn.setRowPosition(nFindRow, false);
												
	            Ds_ObjLctn.setCellData(nFindRow, "sLctnPost1", wconv.trim(zipArr[0]));
	            Ds_ObjLctn.setCellData(nFindRow, "sLctnPost2", wconv.trim(zipArr[1]));
	            Ds_ObjLctn.setCellData(nFindRow, "sLctnPostAddr", wconv.trim(zipArr[2]));
	            Ds_ObjLctn.setCellData(nFindRow, "sLctnDtalAddr", wconv.trim(zipArr[3]));
	
	            //2014.02.06 새주소 	
	            Ds_ObjLctn.setCellData(nFindRow, "sZipType", wconv.trim(zipArr[8]));
	            Ds_ObjLctn.setCellData(nFindRow, "sAddrMgtNo", wconv.trim(zipArr[9]));
	            Ds_ObjLctn.setCellData(nFindRow, "nAddrStdSeq", wconv.trim(zipArr[10]));
	            Ds_ObjLctn.setCellData(nFindRow, "sOrgZipType", wconv.trim(zipArr[11]));
	            Ds_ObjLctn.setCellData(nFindRow, "sOrgZipCode", wconv.trim(zipArr[12]));
	            Ds_ObjLctn.setCellData(nFindRow, "sOrgAddr", wconv.trim(zipArr[13]));
	            edt_sLctnPostAddr.focus();
	            console.log("sLctnDtalAddr :" + Ds_ObjLctn.getCellData(nFindRow, "sLctnPost1"));
	        }
	    });
    	return promise;
	};
	
	//**********************************************************
	//소재지우편번호 버튼클릭 
	//**********************************************************
	scwin.Btn_AddrSearch_onclick = function() {
		// 주소찾기창을 띄움
		scwin.zipPopup();	
	};
	
	//**********************************************************
	//명기물건 버튼클릭 
	//**********************************************************
	scwin.btn_SwHsHldGds_onclick = function() {
		// CBSC050P 명기가재등록[B670_Pop]
		var promise = Promise.resolve();
	    var applyEnable = "N";
	
	    //trace("설계상태 =" + parent.Ds_LTIDA00.GetColumn(0,"sPlanProgRankCd"));
	    //trace("설계번호 =" + parent.Ds_LTIDA00.GetColumn(0,"sPlanNo"));
	    //trace("설계번호 toNumber =" + toNumber(parent.Ds_LTIDA00.GetColumn(0,"sPlanNo")));
	    if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) >= 52 && 
	        wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) <= 58) {
	        applyEnable = "N"; //00 완료 90 수납대기일경우 화면 비활성화 처리함
	    } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 0) {
	        //완료
	        applyEnable = "N";
	    } else if (wconv.toNumber(parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd")) == 90) {
	        applyEnable = "N";
	    } else if (parent.Ds_LTIDA00.getCellData(0, "sConuResltCd") == "01") {
	        //승인완료==>품의결과[11:요청/01:인수/02:조건부인수/03:거절]
	        applyEnable = "N";
	    } else {
	        applyEnable = "Y";
	    }
	    
	    var indata = {};
	    var nPiboFindRow = wconv.findRow(Ds_Pibo, "sel", "1");
	    var nPrprtFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
	    if (nPiboFindRow != -1) {
	        indata["sNo"] = parent.medt_PlanNo.getValue(); //설계번호
	        indata["sGb"] = 1; //설계/계약구분   
	        indata["nSeq"] = Ds_Pibo.getCellData(nPiboFindRow, "nInrpsSeqno"); //피보험순번
	        indata["applyEnable"] = applyEnable;
	    }
	    if (nPrprtFindRow != -1) {
	        indata["sNo"] = parent.medt_PlanNo.getValue(); //설계번호
	        indata["sGb"] = 1; //설계/계약구분   
	        indata["nSeq"] = Ds_Prprt.getCellData(nPrprtFindRow, "nInsrdObjctSeqno"); //피보험목적물순번
	        indata["applyEnable"] = applyEnable;
	    }
	    var pObj = {"Ds_Prprt" : Ds_Prprt,
	    			"Ds_Pibo" : Ds_Pibo,
	    			"Ds_Trty" : Ds_Trty
	    			};
	    // CBSC050P 명기가재등록[B670_Pop] 
	    promise = promise.then(function(rtnVal) {	        
		    var popInfo = {
				"width"     : 800,
				"height"    : 430,  
	            "indata"    : indata,
				"title"     : "명기가재등록",
				"parentObject" : pObj
			};
	        return wprom.popupOpen("/ui/cbsc/CBSC050P.xml", popInfo);	
        });
	    return promise;
	};
	
	//**********************************************************
	//관계 셀렉트박스 셀체인지 
	//**********************************************************
	scwin.cmb_sCrtorReln_onviewchange = function(info) {
		var nFindRow = wconv.findRow(Ds_Prprt, "sel1", "1");
		
		var sCrtorCd = medt_sCrtorCd.getValue();
		var sCrtorRel = cmb_sCrtorReln.getValue();
		if(sCrtorRel == "10"){
			//소유자 정보
			Ds_Prprt.setCellData(nFindRow, "sOwnrDscrNo" , Ds_LTIDA03.getCellData(0, "sCrtorCd")); 	//소유자명
			Ds_Prprt.setCellData(nFindRow, "sOwnrNm"     , Ds_LTIDA03.getCellData(0, "sCrtorName")); //소유자식별번호
	
			if(wconv.length(sCrtorCd) == 10){
				Ds_Prprt.setCellData(nFindRow, "sOwnrFlagCd", "2"); 	//소유자구분코드(사업자번호)	
			}else{
				Ds_Prprt.setCellData(nFindRow, "sOwnrFlagCd", "1");		//소유자구분코드(주민번호)
			}
			
			//목적물소재지 정보
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPost1"   , Ds_LTIDA03.getCellData(0, "sZip1"));
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPost2"   , Ds_LTIDA03.getCellData(0, "sZip2"));
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPostAddr", Ds_LTIDA03.getCellData(0, "sAdrs1"));
			Ds_ObjLctn.setCellData(nFindRow, "sLctnDtalAddr", Ds_LTIDA03.getCellData(0, "sAdrsAdd"));			
		}else{		
			//소유자 정보
			Ds_Prprt.setCellData(nFindRow, "sOwnrDscrNo"    , ""); 	//소유자명
			Ds_Prprt.setCellData(nFindRow, "sOwnrNm"        , "");    //소유자식별번호
			Ds_Prprt.setCellData(nFindRow, "sOwnrFlagCd"    , "");    //소유자구분코드
	
			//목적물소재지 정보
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPost1"   , "");
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPost2"   , "");
			Ds_ObjLctn.setCellData(nFindRow, "sLctnPostAddr", "");
			Ds_ObjLctn.setCellData(nFindRow, "sLctnDtalAddr", "");
	
		}	
	};
	
	//**********************************************************
	//즉시고위험고객 버튼 클릭이벤트 
	//**********************************************************
	scwin.btn_RiskInfo_onclick = function() {
		//  CBSC099P 즉시 고위험 고객 진태만
		var popInfo = {
			"width"     : 556,
			"height"    : 529,  
            "indata"    : "", //indata,
//          "callback"  : scwin.popupCallback,
			"title"     : "즉시 고위험 고객"
		};
        return wprom.popupOpen("/ui/cbsc/CBSC099P.xml", popInfo);		
	};
	
	//**********************************************************
	//이미지등록 버튼 클릭이벤트 
	//**********************************************************	
	scwin.btn_Image_onclick = function() {
		// CBSC083P 이미지리스트 ssr_sst::B340_Pop01.xml 진태만 
		var popInfo = {
			"width"     : 556,
			"height"    : 502,  
            "indata"    : "", //indata,
//          "callback"  : scwin.popupCallback,
			"title"     : "이미지리스트"
		};
        return wprom.popupOpen("/ui/cbsc/CBSC083P.xml", popInfo);	
	};
	
	//**********************************************************
	//인수제한사항 버튼 클릭이벤트 
	//**********************************************************		
	scwin.btn_Insu_onclick = function() {
		var pObj = {"Ds_LTIDA00" : parent.Ds_LTIDA00,
					"Ds_LTIDA03" : Ds_LTIDA03,
					"Ds_LTIDA15" : Ds_LTIDA15,
					"Ds_Pibo"     : Ds_Pibo,
					"medt_PlanNo" : parent.medt_PlanNo,
					"edt_sGdCdNm" : parent.edt_sGdCdNm
					};
		var popInfo = {
			"width"     : 834,
			"height"    : 480,
            "indata"    : "", //indata,
			"title"     : "인수제한사유조회",
			parentObject : pObj
		};
        return wprom.popupOpen("/ui/cbsc/CBSC085P.xml", popInfo);		
	};
	
	//**********************************************************
	//인수심사요청 버튼 클릭이벤트 
	//**********************************************************			
	scwin.btn_Simsa_onclick = function() {
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "sRqstYn") != "Y") {
	            wprom.alert("고지사항 미입력 계약입니다. 고지사항 입력 후 인수심사 신청바랍니다.");
	            return;
	        }
	    }
	    if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "20") {
	        wprom.alert("다음버튼을 눌러 청약사항을 저장 후 인수심사 신청 바랍니다.");
	        return;
	    }
	    console.log("sTxfrCheckFlag2 : " + sTxfrCheckFlag);
	    if (sTxfrCheckFlag == "2") {
	        Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", "N");
	        parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
	        if (scwin.lfn_TxfrLimitCheck()) {
	            return false;
	        }
	    } else if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	        Ds_LTIDA51.setCellData(0, "sTxfrYn", "N"); //비과세 대상이 아닌경우 비과세 해제
	    }
	    
   		var pro = Promise.resolve();
	    var indata = {};
	    indata["sPlanNo"] = parent.medt_PlanNo.getValue();
	    indata["rqstFlag"] = "52";	//요청승인구분(52:인수요청  56:인수승인)
	    indata["sOnlySrarch"] = sOnlySrarch;

	    pro = pro.then(function(rv) {
			var popInfo = {
				"width"     : 780,
				"height"    : 680,  
				"indata"    : indata,
				"title"     : "인수심의결재"
			};
	        return wprom.popupOpen("/ui/cbsc/CBSC165P.xml", popInfo);
		});
	    
	    pro = pro.then(function(result) {
	        if (wconv.length(result) != 0) {
	            var rqstRetArr = wconv.split(result, "^", true);
	            if (rqstRetArr[0] == "52") {
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "52");
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사요청");
	                edt_insu.setValue("심사요청");
	                parent.Ds_LTIDA00.setCellData(0, "sConuResltCd", "11");
	                parent.scwin.lfn_setConuReslt();
	                // edt_sPlanProgRankCd 컨트롤 화면에 미존재하여 주석처리
//	                edt_sPlanProgRankCd.Text = rqstRetArr[1]; //요청승인구분명
	                edt_UdrtkLmitCnt.setValue(rqstRetArr[2]); //제한건수
	                //화면비활성처리
	                parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", false);
	
	                // 이력 저장(심사)
	                parent.scwin.saveHistory("3");
	                scwin.lfn_Search();
					//btn_Simsa.Enable = true;
				} else if(rqstRetArr[0] == "51") {
					parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd","51");
					parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사대상");
					edt_insu.setValue("심사대상");
					
					parent.Ds_LTIDA00.setCellData(0, "sConuResltCd", "");
					parent.scwin.lfn_setConuReslt();
		
					//edt_sPlanProgRankCd.setValue(rqstRetArr[1]); //요청승인구분명
					edt_UdrtkLmitCnt.setValue(rqstRetArr[2]); //제한건수
					
					parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step1, "", true);
					parent.scwin.lfn_ComponentEnable(parent.Tab_Req_Step2, "", true);
					scwin.lfn_Search();
	            }
	        }
	    });
	    return pro;	
	};
	
	//**********************************************************
	//다음 버튼 클릭이벤트 계약자 정보를 저장
	//**********************************************************				
	scwin.btn_Next_onclick = function() {
		//유효값 체크
	    //밸리데이션 체크
	    if (scwin.lfn_ValidationCheck(true)) {
	        return false;
	    }
	    
	    var promise = Promise.resolve();
	    
	    //대면계약 && 간편설계가 아닐때 승환계약 여부 확인하여 팝업 안내
	    var cnt = scwin.lfn_LapsCnclCrSearch(parent.Ds_Pibo.getCellData(0, "sInrpsCd"));
	    if (wconv.toNumber(cnt) > 0) {
	        if (parent.sScanObjtYn == "Y" && parent.sSimpleYn != "Y") {
	        	parent.scwin.lfn_set_Tab_Info("S2", "T2");
	            if (DsWs_LapsCnclCrList.getCellData(0, "sGdNamePast") != "") {
	            	var indata = {};
	            	indata["sInrpsCd"] 		= parent.Ds_Pibo.getCellData(0, "sInrpsCd");
	                indata["sSsrtScrnYn"] 	= "Y";
	                indata["sPlanNo="] 		= parent.Ds_Pibo.getCellData(0, "sPlanNo");
	                indata["sCrtorName"] 	= DsWs_LTIDA03.getCellData(0, "sCrtorName");
	                indata["sDoer"] 		= parent.Ds_LTIDA00.getCellData(0, "sDoer");
	                indata["sGdTypeFlagCd"] = parent.DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd");
	                indata["sScrnId"]		= "Div2";
	                
	                promise = promise.then(function(rtnVal) {
				       	var popInfo = {
										"width"     : 556,
										"height"    : 502,  
							            "indata"    : indata,
										"title"     : "비교계약안내"
										};
				        return wprom.popupOpen("/ui/cbsc/CBSC062P.xml", popInfo);	
				    });
	            }
	        }
	    }
	    promise = promise.then(function(rtnVal) {
 			return util.winTopShowModalPromise(rtnVal);
		});
	    promise = promise.then(function(rtnVal) {
	        //설계번호
	        if (wconv.length(parent.medt_PlanNo.getValue()) != 0) {
	            Ds_LTIDA03.setCellData(0, "sPlanNo", parent.Ds_LTIDA00.getCellData(0, "sPlanNo"));
	        }
	
	        //계약자자변경체크
	        fLTIDA03_Flag = scwin.lfn_DataChangeCheck(Ds_LTIDA03, Ds_LTIDA03_Tmp, "");
	
	        //계약변경번호
	        Ds_LTIDA03.setCellData(0, "nCrChngNo", "0");
	
	        //세금우대여부를 Ds_LTIDA03 dataset에 추가로 저장한다.
	        util.insertColumn(Ds_LTIDA03, [ ["sTaxPrfrYn", "sTaxPrfrYn", "text"] ]);
	        util.setCompBindRefresh(Ds_LTIDA03.getID());
	        Ds_LTIDA03.setRowPosition(0, false);
	        
	        var sTaxPrfrYn = cmb_sTaxPrfrYn.getValue();
	        Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", sTaxPrfrYn);
	        parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", sTaxPrfrYn);
	
	        //2015.10.01(N1510-00004)
	        //소득세법 개정에 따른 LIS 체크
	        console.log("sTxfrCheckFlag : " + sTxfrCheckFlag);
	        if (sTxfrCheckFlag == "2") {
	            Ds_LTIDA03.setCellData(0, "sTaxPrfrYn", "N");
	            parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", "N");
	            if (scwin.lfn_TxfrLimitCheck()) {
	                return false;
	            }
	        } else if (Ds_LTIDA51.getCellData(0, "sTxfrYn") == "Y") {
	            Ds_LTIDA51.setCellData(0, "sTxfrYn", "N"); //비과세 대상이 아닌경우 비과세 해제
	        }
		
	        //입력처리자,입력처리자IP
	        util.insertColumn(Ds_LTIDA03, [ ["sInptDler", "sInptDler", "text"],
	       									["sInptDlerIP", "sInptDlerIP", "text"],
											["gUserID", "gUserID", "text"],
											["gUserIP", "gUserIP", "text"],  
											["sDoer", "sDoer", "text"] ]); //취급자
			util.setCompBindRefresh(Ds_LTIDA03.getID());
			Ds_LTIDA03.setRowPosition(0, false);
											
	        Ds_LTIDA03.setCellData(0, "gUserID", gds.gUserID);
	        Ds_LTIDA03.setCellData(0, "gUserIP", gds.gUserIP);
	        Ds_LTIDA03.setCellData(0, "sDoer", gds.gDoer); //취급자
	        Ds_LTIDA03.setCellData(0, "sInptDler", gds.gUserID);
	        Ds_LTIDA03.setCellData(0, "sInptDlerIP", gds.gUserIP);
	
	        //피보험자변경체크(수익자)
	        fPibo_Flag = scwin.lfn_DataChangeCheck(Ds_Pibo, Ds_Pibo_Tmp, "");
	
	        //피보험목적물변경체크
	        fPrprt_Flag = scwin.lfn_DataChangeCheck(Ds_Prprt, Ds_Prprt_Tmp, "");
	
	        //목적물소재지변경체크
	        fObjLctn_Flag = scwin.lfn_DataChangeCheck(Ds_ObjLctn, Ds_ObjLctn_Tmp, "");
	
	        //인수요청, 인수승인일대 보관하지 않는다.
	        var sPlanProgRankCd = parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd");
	        if (sPlanProgRankCd == "52" || sPlanProgRankCd == "56" || sPlanProgRankCd == "53" || 
	            wconv.toNumber(sPlanProgRankCd) >= 60) {
	            //초기화
	            Ds_LTIDA03.setCellData(0, "execFlag", "");
	            for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	                Ds_Pibo.setCellData(i, "execFlag", "");
	            }
	            for (var i = 0; i < Ds_Prprt.getRowCount(); i++) {
	                Ds_Prprt.setCellData(i, "execFlag", "");
	            }
	            for (var i = 0; i < Ds_ObjLctn.getRowCount(); i++) {
	                Ds_ObjLctn.setCellData(i, "execFlag", "");
	            }
	            var flag = parent.scwin.lfn_TabChanging(1, 2);
	            if (flag)
	                parent.scwin.lfn_Tab_Focus(2); //다음으로이동
	        } else {
	            scwin.lfn_save();
	        }
	        modifyFlag = false;
	    });	
	    promise = promise.then(function(rtnVal) {
 			util.winTopHideModal();
		});
		
		return promise;
	};
	
	//**********************************************************
	//유효값 체크 밸리데이션 체크
	//**********************************************************
	scwin.lfn_ValidationCheck = function(fGubunFlag) {
	    var validFlag = false;
	    //변경여부 초기화
	    modifyFlag = false;
	    if (!fGubunFlag) fGubunFlag = false;
	
	    /*사망수익자지정안내*/
	    for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	        if (Ds_Pibo.getCellData(i, "sPftbpInrpsRelnCd") == "99" || 
	            Ds_Pibo.getCellData(i, "sPftbpInrpsRelnCd") == "" || 
	            Ds_Pibo.getCellData(i, "sPftbpInrpsRelnCd") == null) {
	            wprom.alert("본 청약은 사망보험금의 수익자가 지정되지 않았거나 법정상속인으로 지정되어 피보험자 " + "사망 시 보험수익자인 법정상속인간 보험금의 지급에 관한 분쟁이 발생할 수 있다는 " + "사실과 보험수익자 지정 및 변경방법 등을 반드시 안내하시기 바랍니다.\n" + " 예) 양육에 기여하지 않은 부모가 보험금에 대한 지분을 요구");
	        }
	    }
	
	    //계약자 밸리데이션체크
	    validFlag = scwin.lfn_LTIDA03_ValidationCheck(Ds_LTIDA03, fGubunFlag);
	
	    //trace("validFlag1:" + validFlag);
	    //피보험자 밸리데이션체크
	    if (!validFlag) {
	        validFlag = scwin.lfn_Pibo_ValidationCheck(Ds_Pibo);
	    }
	
	
	    //trace("validFlag2:" + validFlag);
	    //피보험목적물 추가사항 밸리데이션체크
	    if (!validFlag) {
	        validFlag = scwin.lfn_Prprt_ValidationCheck(Ds_Prprt);
	    }
	
	    //trace("validFlag3:" + validFlag);
	    //목적물소재지 밸리데이션체크
	    if (!validFlag) {
	        validFlag = scwin.lfn_ObjLctn_ValidationCheck(Ds_ObjLctn);
	    }
		
	    //대면계약의 경우 필수값 체크 
	    if (parent.Ds_LTIDA00.getCellData(0, "sScanObjtYn") == "Y") {
	        if (wconv.length(cmb_CmmcMeanCnclYn.getValue()) < 1) {
	            validFlag = true;
	            wprom.alert("통신수단해지동의 여부를 확인하세요");
	            cmb_CmmcMeanCnclYn.focus();
	        }
	    }
			
	    //수익자 동의 여부 필수값 체크 
	    if (wconv.length(cmb_AsmtYn.getValue()) < 1) {
	        validFlag = true;
	        wprom.alert("수익자 약정 여부를 확인하세요");
	        cmb_AsmtYn.focus();
	    }
	
	
	    //대상고객 필수값 체크 
	    if (wconv.length(cmb_CrPrtrRole.getValue()) < 1 && cmb_CrPrtrRole.getDisabled() == false) {
	        validFlag = true;
	        wprom.alert("대상고객 값이 없습니다.");
	        cmb_CrPrtrRole.focus();
	    }
	
	    //취득경로 필수값 체크 
	    if (wconv.length(cmb_AqamtChnlCd.getValue()) < 1 && cmb_AqamtChnlCd.getDisabled() == false) {
	        validFlag = true;
	        wprom.alert("취득경로 값이 없습니다.");
	        cmb_AqamtChnlCd.focus();
	    }
	    return validFlag;
	};
	
	//**********************************************************
	//계약자 밸리데이션체크
	//**********************************************************
	scwin.lfn_LTIDA03_ValidationCheck = function(obj, fGubunFlag) {
		var sCrtorCd = medt_sCrtorCd.getValue();
		if (parent.sAgncYn == "Y") {
	        //계약자코드 바인딩
	        Ds_LTIDA03.setCellData(0, "sCrtorCd", Ds_CrtorCd.getCellData(0, "sCrtorCd"));
	    } 
	    else {
	        //계약자코드 바인딩
	        Ds_LTIDA03.setCellData(0, "sCrtorCd", sCrtorCd);
	    }
	    
	    if (parent.sAgncYn != "Y") {
	        medt_sCrtorCd.setRef("data:Ds_LTIDA03.sCrtorCd");
	    }
	
	    //설계번호
	    if (wconv.length(parent.medt_PlanNo.getValue()) == 0 && fGubunFlag) {
	        wprom.alert("설계번호가 없습니다.");
	        return true;
	    }
	
	
	    //계약자구분코드
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorFlgcd")) && fGubunFlag) {
	        medt_sCrtorCd.setRef("");
	        wprom.alert("계약자구분코드가 없습니다.");
	        return true;
	    }
	    
	    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorFlgcd");
	    //계약자코드
	    if (fGubunFlag) {
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorCd"))) {
	            wprom.alert("계약자코드가 없습니다.");
	            return true;
	        } else {
	            //사업자체크
	            if (wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) == 10) {
	                if (!isBizRegNo(Ds_LTIDA03.getCellData(0, "sCrtorCd"))) {
	                    wprom.alert("사업자번호를 정확히 입력하세요.");
	                    medt_sCrtorCd.focus();
	                    return true;
	                }
	            } else {}
	        }
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorCd");
	
	    //계약자명
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorName")) && fGubunFlag) {
	        wprom.alert("계약자명이 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sCrtorName");
	
	    //사업자는 체크 안함.
	    if (wconv.length(Ds_LTIDA03.getCellData(0, "sCrtorCd")) > 10) {
	        //계약자연령
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nCrtorAge")) && fGubunFlag) {
	            wprom.alert("계약자연령이 없습니다.");
	            return true;
	        }
	        scwin.lfn_CompChangeCheck(obj, 0, "nCrtorAge");
	        //계약자성별구분
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCrtorSexFlag")) && fGubunFlag) {
	            wprom.alert("계약자성별구분이 없습니다.");
	            return true;
	        }
	        scwin.lfn_CompChangeCheck(obj, 0, "sCrtorSexFlag");
	    }
	
	
	    //고객구분코드
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sCstFlgcd")) && fGubunFlag) {
	        wprom.alert("고객구분코드가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sCstFlgcd");
	
	    //주소구분코드
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAddrFlgcd")) && fGubunFlag) {
	        wprom.alert("주소구분코드가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sAddrFlgcd");
	
	    //주소변경회차
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nAddrChngSeq")) && fGubunFlag) {
	        wprom.alert("주소변경회차가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "nAddrChngSeq");
	
	    //전화번호변경회차
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nTelnoChngSeq")) && fGubunFlag) {
	        wprom.alert("전화번호변경회차가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "nTelnoChngSeq");
	
	    //우편물수령처주소구분코드
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sMailRvadAddrFlagCd")) && fGubunFlag) {
	        wprom.alert("우편물수령처주소구분코드가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sMailRvadAddrFlagCd");
	
	    //우편물수령처변경회차
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "nMailRvadChngSeq")) && fGubunFlag) {
	        wprom.alert("우편물수령처변경회차가 없습니다.");
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "nMailRvadChngSeq");
	
	    //우편번호
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sZip1")) && fGubunFlag) {
	        wprom.alert("우편번호가 없습니다.");
	        edt_sZip1.focus();
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sZip1");
	
	    //우편번호
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sZip2")) && fGubunFlag) {
	        wprom.alert("우편번호가 없습니다.");
	        edt_sZip2.focus();
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sZip2");
	
	    //자택주소
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAdrs1")) && fGubunFlag) {
	        wprom.alert("자택주소가 없습니다.");
	        edt_sAdrs1.focus();
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sAdrs1");
	
	    //자택주소
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAdrsAdd")) && fGubunFlag) {
	        wprom.alert("자택주소가 없습니다.");
	        edt_sAdrsAdd.focus();
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sAdrsAdd");
	    var checkTelNo = false;
	
	    //자택전화번호
	    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel1");
	    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel2");
	    scwin.lfn_CompChangeCheck(obj, 0, "sHomeTel3");
	    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone1");
	    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone2");
	    scwin.lfn_CompChangeCheck(obj, 0, "sCellPhone3");
	    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel1");
	    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel2");
	    scwin.lfn_CompChangeCheck(obj, 0, "sOfficeTel3");
	
	    //우편물수령처
	    if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "RvadAddr")) && fGubunFlag) {
	        wprom.alert("우편물수령처가 없습니다.");
	        edt_RvadAddr.focus();
	        return true;
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "RvadAddr");
	
	    //만기시수익자가 선택된경우
	    var sEnntmPftbpFlagCd = Ds_LTIDA03.getCellData(0, "sEnntmPftbpFlagCd");
	    if(wconv.length(sEnntmPftbpFlagCd) > 0 && sEnntmPftbpFlagCd != "99"){
	        //만기시수익자구분코드
	        if (mfn_IsEmpty(sEnntmPftbpFlagCd)) {
	            wprom.alert("만기시수익자가 없습니다.");
	            return true;
	        }
	
	        //만기수익자관계코드
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd"))) {
	            wprom.alert("만기수익자관계코드가 없습니다.");
	            return true;
	        }
	
	        //만기수익자코드
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpCd"))) {
	            wprom.alert("만기수익자코드가 없습니다.");
	            return true;
	        }
	
	        //만기수익자명
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpName"))) {
	            wprom.alert("만기수익자명이 없습니다.");
	            return true;
	        }
	
	        //만기수익자연락처
	        if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sEndPftbpCntad"))) {
	            wprom.alert("만기수익자연락처가 없습니다.");
	            return true;
	        }
	    }
	    
	    scwin.lfn_CompChangeCheck(obj, 0, "sEnntmPftbpFlagCd");
	    //지정대리인이 선택된경우
	    var sAsmtAgntFlagCd = Ds_LTIDA03.getCellData(0, "sAsmtAgntFlagCd");
	    if (wconv.length(sAsmtAgntFlagCd) > 0) {
	        //지정대리인구분코드
	        if (mfn_IsEmpty(sAsmtAgntFlagCd)) {
	            wprom.alert("지정대리인구분코드가 없습니다.");
	            return true;
	        }
	
	        //지정대리인관계코드
	        var sAsmtAgntRelnCd = Ds_LTIDA03.getCellData(0, "sAsmtAgntRelnCd");
	        if (mfn_IsEmpty(sAsmtAgntRelnCd)) {
	            wprom.alert("지정대리인관계코드가 없습니다.");
	            return true;
	        }
	        if (sAsmtAgntRelnCd != "99") {
	            //지정대리인코드
	            if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntCd"))) {
	                wprom.alert("지정대리인코드가 없습니다.");
	                return true;
	            }
	
	            //지정대리인명
	            if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"))) {
	                wprom.alert("지정대리인명이 없습니다.");
	                return true;
	            }
	
	            //지정대리인연락처
	            if (mfn_IsEmpty(Ds_LTIDA03.getCellData(0, "sAsmtAgntCntad"))) {
	                wprom.alert("지정대리인연락처가 없습니다.");
	                return true;
	            }
	        }
	    }
	    scwin.lfn_CompChangeCheck(obj, 0, "sAsmtAgntFlagCd");
	    //2015.10.01(N1510-00004)
	    if (cmb_sTaxPrfrYn.getValue() == "") {
	        wprom.alert("세금우대여부를 선택하세요.");
	        return true;
	    }
	};
	
	//**********************************************************
	// 계약자 필수값 입력 여부 체크
	//**********************************************************
	scwin.lfn_CompChangeCheck = function(obj, i, colID) {
	    //변경여부체크
	    if (obj.getCellData(i, colID) != obj.getOriginalCellData(i, colID)) {
	        modifyFlag = true; 
	    } else if (wconv.length(obj.getCellData(i, colID)) != wconv.length(obj.getOriginalCellData(i, colID))) {
	        modifyFlag = true; 
	    }
	};
	
	//**********************************************************
	// 피보험자 밸리데이션체크
	//**********************************************************
	scwin.lfn_Pibo_ValidationCheck = function(obj) {
		//계약자 피보험자 상이여부 체크
	    var sameCrtorInrps = scwin.lfn_sameCrtorInrps();
	
	    //trace("피보험자 필수값 입력 여부 체크  :" + obj.SaveXML());
	    //trace("lfn_Pibo_ValidationCheck 계피상이여부  :" + sameCrtorInrps);
	    var validFlag = false;
	    if (obj.getRowCount() > 0) {
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            if (validFlag) {
	                break;
	            }
	            for (var j = 0; j < obj.getTotalCol(); j++) {
	                //colID = obj.GetColID(obj.GetColIDXbyorder(j));
					var colID = obj.getColumnID(j);
	                //수익자피보험자관계코드
	                if (colID == "sPftbpInrpsRelnCd") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자코드
	                } else if (colID == "sGroupInrpsName") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자명
	                } else if (colID == "sPftbpName") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //수익자전화번호
	                } else if (colID == "sPftbpTelno") {
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //고지사항입력여부
	                } else if (colID == "sRqstYn") {
	                    console.log("### 고지사항입력여부 체크 1 ###" + sameCrtorInrps);
	
	                    //if(sameCrtorInrps){
	                    console.log("### 고지사항입력여부 체크 2 ###" + obj.getCellData(i, colID));
	                    if (obj.getCellData(i, colID) != "Y") {
	                        wprom.alert("고지사항미입력 계약입니다.");
	                        validFlag = true;
	                    }
	
	                    //}
	                    scwin.lfn_CompChangeCheck(obj, i, colID); //계약자와의 관계s
	                } else if (colID == "sCrtorRelnCd") {
						if (obj.getCellData(i, colID) == "10"){
	                        if (obj.getCellData(i, "sInrpsCd") != Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
	                            wprom.alert("계약자관계를 확인하십시요.");
	                            validFlag = true;
	                        }
	                    } else {
	                        if (obj.getCellData(i, "sInrpsCd") == Ds_LTIDA03.getCellData(0, "sCrtorCd")) {
	                            wprom.alert("계약자관계를 확인하십시요.");
	                            validFlag = true;
	                        }
	                    }
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                } else if (colID == "sOthrInsurCnt") {
	                    //타보험료사항건수
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                } else if (colID == "sSubCvrgeYn") {
	                    //부담보입력여부
	                    scwin.lfn_CompChangeCheck(obj, i, colID);
	                }
	            }
	        }
	    }
	    return validFlag;
	};
	
	//**********************************************************
	// 계약자 피보험자 동일여부 체크
	//**********************************************************
	scwin.lfn_sameCrtorInrps = function() {
	    var sCrtorCd = medt_sCrtorCd.getValue();
	    if (parent.sAgncYn == "Y") {
	        sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
	    }
	    console.log("계약자 : " + sCrtorCd);
	
	    //계약자 피보험자 동일여부 
	    var sameCrtorInrps = true;
	
	    //피보험자 여러명은 무조건 계피상이건
	    if (Ds_Pibo.getRowCount() > 1) {
	        sameCrtorInrps = false;
	    } 
	    else {
	        if (Ds_Pibo.getCellData(0, "sInrpsCd") == sCrtorCd) {
	            console.log("계피동일함");
	            sameCrtorInrps = true;
	        } else {
	            sameCrtorInrps = false;
	        }
	    }
	    console.log("계피상이여부" + sameCrtorInrps);
	    return sameCrtorInrps;
	};
	
	//**********************************************************
	// 피보험목적물 추가사항 필수값 입력 여부 체크
	//**********************************************************	
	scwin.lfn_Prprt_ValidationCheck = function(obj) {	
		if (obj.getRowCount() > 0) {
	        var prprtSeq = 0;
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            prprtSeq = i + 1;
	
	            // 소유자번호 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sOwnrDscrNo"))) {
	                wprom.alert("건물" + prprtSeq + " 의 소유자를 입력하세요.");
	                medt_sOwnrDscrNo.focus();
	                return true;
	            }
	
	            // 소유자명 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sOwnrNm"))) {
	                wprom.alert("건물" + prprtSeq + " 의 소유자를 입력하세요.");
	                edt_sOwnrNm.focus();
	                return true;
	            }
	
	            // 소유자관계 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sCrtorReln"))) {
	                wprom.alert("건물" + prprtSeq + " 의 계약자관계구분을 입력하세요.");
	                cmb_sCrtorReln.focus();
	                return true;
	            }
	
	            // 수용장소 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sAccptPlac"))) {
	                wprom.alert("건물" + prprtSeq + " 의 수용장소를 입력하세요");
	                edt_sAccptPlac.focus();
	                return true;
	            }
	        }
	    }
	    return false;
	};
	
	//**********************************************************
	// 목적물소재지 필수값 입력 여부 체크
	//**********************************************************		
	scwin.lfn_ObjLctn_ValidationCheck = function(obj) {
		console.log("lfn_ObjLctn_ValidationCheck");
	    console.log("lfn_ObjLctn_ValidationCheck ==>" + obj.getRowCount());
	    if (obj.getRowCount() > 0) {
	        var prprtSeq = 0;
	        for (var i = 0; i < obj.getRowCount(); i++) {
	            prprtSeq = i + 1;
	
	            // 우편번호1 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sLctnPost1")) || 
	                wconv.length(obj.getCellData(i, "sLctnPost1")) < 3) {
	                wprom.alert("건물" + prprtSeq + " 의 소재지 우편번호를 입력하세요.");
	                edt_zip1.focus();
	                return true;
	            }
		
	            // 우편번호2 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sLctnPost2")) || 
	                wconv.length(obj.getCellData(i, "sLctnPost2")) < 2) {
	                wprom.alert("건물" + prprtSeq + " 의 소재지 우편번호를 입력하세요.");
	                edt_zip2.focus();
	                return true;
	            }	
	
	            // 우편번호 주소 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sLctnPostAddr"))) {
	                wprom.alert("건물" + prprtSeq + " 의 우편번호 주소를 입력하세요.");
	                edt_sLctnPostAddr.focus();
	                return true;
	            }
	
	            // 상세주소 체크
	            if (mfn_IsEmpty(obj.getCellData(i, "sLctnDtalAddr")) || 
	                wconv.length(edt_sLctnDtalAddr.getValue()) < 1) {
	                wprom.alert("건물" + prprtSeq + " 의 상세주소를 입력하세요.");
	                edt_sLctnDtalAddr.focus();
	                return true;
	            }
	        }
	    }
	    return false;
	};
	
	//**********************************************************
	// 승환계약 비교안내 대상 체크 
	//**********************************************************	
	scwin.lfn_LapsCnclCrSearch = function(sInrpsCd) {
	    //피보험자가 없는 경우 승환계약 비교안함.(재물보험)
	    if (parent.Ds_Pibo.getRowCount() < 1) {
	        return 0;
	    }
	    wconv.clear(DsWs_LapsCnclCrCnt);
	    wconv.clear(DsWs_LapsCnclCrList);
	    wconv.clear(DsWs_CmprCrNotc);	    
	    wconv.clear(DsWs_Warning);
	    
		var MethodObj = new callService("com.inswave.longterm.psv.ens.task.EAD071Task", "selLapsCnclCrList", 0, 0);
		MethodObj.setId("selLapsCnclCrList");
		MethodObj.setUrl("/contract/CBSC094MController.do");

		MethodObj.setParam("sInrpsCd", sInrpsCd);
		MethodObj.setParam("sSsrtScrnYn", "Y");
		MethodObj.setParam("sPlanNo", parent.Ds_Pibo.getCellData(0, "sPlanNo")); //설계번호
		MethodObj.setParam("sGdTypeFlagCd", parent.DsWs_PrdAttr.getCellData(0, "GdTypeFlagCd"));
		
	    MethodObj.setXPath("//hashtable/data[@hashkey='LapsCnclCrCnt']/LTIEA00Cnt");
		MethodObj.addXPath("//*/LTIEA00");
		MethodObj.addXPath("//hashtable/data[@hashkey='CmprCrNotc']/CmprCrNotc");
		MethodObj.addXPath("//WARNING");
		MethodObj.setXPathDs();
		MethodObj.sync();
		MethodObj.send(); 
	
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), DsWs_Warning);
		if (DsWs_Warning.getRowCount() != 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} 
		else {
	    	util.interfaceKey(_tranSync.result.serviceDs);
			DsWs_LapsCnclCrCnt.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='LapsCnclCrCnt']/LTIEA00Cnt"));
			DsWs_LapsCnclCrList.setJSON(_tranSync.getDsJson("//*/LTIEA00"));
			DsWs_CmprCrNotc.setJSON(_tranSync.getDsJson("//hashtable/data[@hashkey='CmprCrNotc']/CmprCrNotc"));
		}
	    
	    if (DsWs_LapsCnclCrList.getCellData(0, "sGdNamePast") == "") {
	        return 0;
	    } else {
			var MethodObj = new callService("com.inswave.longterm.psv.ens.task.EAD071Task", "InsertRdchCrYn", 0, 0);
			MethodObj.setId("InsertRdchCrYn");
			MethodObj.setUrl("/contract/CBSC094MController.do");
	
			MethodObj.setParam("sPlanNo", parent.Ds_Pibo.getCellData(0, "sPlanNo")); //설계번호
			MethodObj.setXPath("//*/WARNING");
			MethodObj.sync();
			MethodObj.send(); 
		
			util.jSonDsCreate(_tranSync.getDsJson("WARNING"), warning_Insert);
			if(warning_Insert.getRowCount() != 0){
				alert(warning_Insert.getCellData(0, "msg"));
				return 0;
			}else{
				return DsWs_LapsCnclCrList.getRowCount();
			}
	    }
	};
	
	//**********************************************************
	// dataset 변경여부 체크
	//**********************************************************
	scwin.lfn_DataChangeCheck = function(obj, newObj, chk) {
	    wconv.clear(newObj);
	    
	    obj = util.insertColumn(obj, [["execFlag", "execFlag", "text"]]);
	   	util.setCompBindRefresh(obj.getID());
	    obj.setRowPosition(0, false);
	    newObj = util.insertColumn(newObj, [["execFlag", "execFlag", "text"]]);
	    util.setCompBindRefresh(newObj.getID());
	    
	    var execFlag = "";
	    var cnt = 0;
	    var changeFlag = false;
	
	    //cbs - 초기상태:"R", 갱신:"U", 삽입:"C", 삭제:"D", 삽입 후 삭제:"V"
	    //그리드에서 insert,update구분
	    for (var i = 0; i < obj.getRowCount(); i++) {
	        //trace(obj.GetRowType(i));
	        execFlag = "";
	        if (obj.getRowStatus(i) == "C") {
	            execFlag = "I";
	        } else if (obj.getRowStatus(i) == "U") {
	            execFlag = "U";
	        }
	        if (execFlag != "") {
	            obj.setCellData(i, "execFlag", execFlag);
	            newObj.insertRow(cnt);
	            newObj.setRowJSON(cnt, obj.getRowJSON(i));
	            cnt++;
	        }
	    }
	    
	    //그리드에서 delete 구분
	    for (var i = 0; i < obj.getDeletedData(); i++) {
	        //trace(obj.GetRowType(i)+"=="+i+"="+obj.GetTotalRowType(i)+"==cnt="+cnt);
	        newObj.insertRow(cnt);
	        for (var j = 0; j < obj.getTotalCol(); j++) {
	            if (obj.getColumnID(j) == "execFlag") {
	                newObj.setCellData(cnt, obj.getColumnID(j), "D");
	            } else {
	                newObj.setCellData(cnt, obj.getColumnID(j), obj.getCellData(i, obj.getColumnID(j)));
	            }
	        }
	        cnt++;
	    }
	    
	    if (newObj.getTotalCol() > 0) {
	        changeFlag = true;
	    }

	    return changeFlag;
    };
	    
	//**********************************************************
	//  계약자 정보를 저장한다.
	//**********************************************************	    
	scwin.lfn_save = function() {
//		DsWs_LTIDA00.removeAll();
		wconv.clear(DsWs_LTIDA00);
	    wconv.clear(DsWs_LTIDA03);
	    wconv.clear(DsWs_LTIDA15);
	    wconv.clear(DsWs_Warning);
	    
	    parent.Ds_LTIDA00.setCellData(0, "gUserID", gUserID);
	    parent.Ds_LTIDA00.setCellData(0, "gUserIP", gUserIP);
	    parent.Ds_LTIDA00.setCellData(0, "sDoer", util.getGdsValue("gDoer")); //gds.gDoer); //취급자	
	    //계약정보에서 담음
	    util.insertColumn(Ds_LTIDA03, [ ["nRealPaymTerm", "nRealPaymTerm", "text"], //실납입기간
	        							["sPaymCyclCd", "sPaymCyclCd", "text"], 	//납입주기
	        							["nApplPrem", "nApplPrem", "text"] ]); 		//적용보험료
		util.setCompBindRefresh(Ds_LTIDA03.getID());
		Ds_LTIDA03.setRowPosition(0, false);
		
	    Ds_LTIDA03.setCellData(0, "nRealPaymTerm", parent.Ds_LTIDA00.getCellData(0, "nRealPaymTerm"));
	    Ds_LTIDA03.setCellData(0, "sPaymCyclCd", parent.Ds_LTIDA00.getCellData(0, "sPaymCyclCd"));
	    Ds_LTIDA03.setCellData(0, "nApplPrem", parent.Ds_LTIDA00.getCellData(0, "nApplPrem"));
	  
	  	var MethodObj = new callService("com.inswave.longterm.ssr.pln.task.DBB030Task", "setChungSave", 0, 0);
		MethodObj.setId("setChungSave");
		MethodObj.setUrl("/contract/CBSC094MController.do");
		MethodObj.setHashTable();   // 저장할 때
		
		util.dataListCloneCopy(parent.Ds_LTIDA00, "pDs_LTIDA00", "0");
  		MethodObj.addSingleData("LTIDA00", "LTIDA00", pDs_LTIDA00.getID()+":A"); // 계약정보
  		MethodObj.addSingleData("CrtorData", "CrtorData", Ds_LTIDA03.getID()+":A"); // 계약자정보
	    MethodObj.addSingleData("LTIDA51", "LTIDA51", Ds_LTIDA51.getID()+":A"); // 비과세 정보
	    
	    MethodObj.addVectorData("vLTIDA01", "LTIDA01", Ds_Pibo.getID()+":A"); 	//피보험자정보가 있으면 담음 
	    MethodObj.addVectorData("vLTIDA60", "LTIDA60", Ds_Prprt.getID()+":A"); 	//피보험목적물정보가 있으면 담음 
	    MethodObj.addVectorData("vLTIDA61", "LTIDA61", Ds_ObjLctn.getID()+":A"); //목적물소재지정보가 있으면 담음 
	    MethodObj.addVectorData("vLTIDA02", "LTIDA02", Ds_Trty.getID()+":A");
  
		wconv.clear(Ds_PiboBackup);
		util.copyM(Ds_PiboBackup, Ds_Pibo.getAllJSON());
		
		MethodObj.setXPath("//hashtable/data[@hashkey='CrtorDoc']/CrtorData");
		MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA00']/LTIDA00");
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA15List']/vector/data/LTIDA15");
		MethodObj.addXPath("//hashtable/data[@hashkey='LTIDA51']/LTIDA51");
		MethodObj.addXPath("//hashtable/data[@hashkey='lTIDA27List']/vector/data/LTIDA27");
		MethodObj.addXPath("//*/WARNING");
		MethodObj.sync();
		MethodObj.send(); 

		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_Warning");		
	    if (DsWs_Warning.getRowCount() != 0) {
			wprom.alert(DsWs_Warning.getCellData(0, "msg"));
			return;
		} else {
			util.jSonDsCreate(_tranSync.getDsJson("CrtorData"), "DsWs_LTIDA03");
			util.jSonDsCreate(_tranSync.getDsJson("LTIDA00"), "DsWs_LTIDA00");
			util.jSonDsCreate(_tranSync.getDsJson("LTIDA15"), "DsWs_LTIDA15");
			util.jSonDsCreate(_tranSync.getDsJson("LTIDA51"), "DsWs_LTIDA51");
			util.jSonDsCreate(_tranSync.getDsJson("LTIDA27"), "DsWs_LTIDA27");
			
	        //trace("할인보험료 : [" + DsWs_LTIDA00.GetColumn(0, "nDcPrem")  + "]");
	        if (DsWs_LTIDA00.getCellData(0, "nDcPrem") != 0) {
	            if (DsWs_LTIDA00.getCellData(0, "nDcPrem") != parent.Ds_LTIDA00.getCellData(0, "nDcPrem")) {
	                var sAlertMsg = "";
	                var nTotDcrt = 0;
	                for (var k = 0; k < DsWs_LTIDA27.getRowCount(); k++) {
	                    if (DsWs_LTIDA27.getCellData(k, "nDcrt") > 0) {
	                        if (sAlertMsg == "") {
	                            sAlertMsg = DsWs_LTIDA27.getCellData(k, "sDcKindName");
	                        } else {
	                            sAlertMsg = sAlertMsg + ", " + DsWs_LTIDA27.getCellData(k, "sDcKindName");
	                        }
	                        nTotDcrt = nTotDcrt + eval(DsWs_LTIDA27.getCellData(k, "nDcrt"));
	                    }
	                }
	                wprom.alert(sAlertMsg + " 적용되어 " + (nTotDcrt * 100) + "%로 할인율이 조정되었습니다."); //alert("본 계약자는 당사 기가입고객으로 보험료 1% 추가할인됩니다.");
	            }
	        }
	
	        parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", DsWs_LTIDA00.getCellData(0, "sPlanProgRankCd")); //설계진행단계코드
	        parent.Ds_LTIDA00.setCellData(0, "sPlanProgTbNo", DsWs_LTIDA00.getCellData(0, "sPlanProgTbNo")); //설계진행탭번호
	        parent.Ds_LTIDA00.setCellData(0, "sTaxPrfrYn", DsWs_LTIDA00.getCellData(0, "sTaxPrfrYn")); //세금우대여부
	        parent.Ds_LTIDA00.setCellData(0, "nDcPrem", DsWs_LTIDA00.getCellData(0, "nDcPrem")); //할인보험료
	        parent.Ds_LTIDA00.setCellData(0, "nApplPrem", DsWs_LTIDA00.getCellData(0, "nApplPrem")); //적용보험료

	        //피보험자 그리드로 옮긴다.
	        Ds_Pibo.setJSON(Ds_PiboBackup.getAllJSON());
	        util.copyM(parent.Ds_Pibo, Ds_PiboBackup.getAllJSON());

	        //계약자 복사
			util.copyM(Ds_LTIDA03, DsWs_LTIDA03.getAllJSON());
			util.setCompBindRefresh(Ds_LTIDA03.getID());
			Ds_LTIDA03.setRowPosition(0, false);
			edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName")); //만기수익자명

	        //전산심사
			util.copyM(Ds_LTIDA15, DsWs_LTIDA15.getAllJSON());
			util.copyM(parent.Ds_LTIDA15, DsWs_LTIDA15.getAllJSON());
	        
	        //초기화
	        Ds_LTIDA03.setCellData(0, "execFlag", "");
	        for (var i = 0; i < Ds_Pibo.getRowCount(); i++) {
	            Ds_Pibo.setCellData(i, "execFlag", "");
	        }
	        
	        var flag = parent.scwin.lfn_TabChanging(1, 2);
	        if (flag) {
	            parent.scwin.lfn_Tab_Focus(2); //다음으로이동
	        } 
	        else {
	            //인수요청버튼 활성화
	            btn_Insu.setDisabled(false);
	            btn_Simsa.setDisabled(false);
	            btn_Image.setDisabled(false);
	            sOnlySrarch    = "";
	            btn_Insu.changeClass(btn_Insu.getUserData("currClass"), "btn_nml red");
            	btn_Insu.setUserData("currClass", "btn_nml red");
	
	            //인수제한건 출력	
	            edt_UdrtkLmitCnt.setValue(Ds_LTIDA15.getRowCount());
	            if (parent.Ds_LTIDA00.getCellData(0, "sPlanProgRankCd") == "51") {
	                //인수심사상태 출력
	                edt_insu.setValue("심사대상");
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankName", "심사대상");
	                if (wconv.findRow(Ds_LTIDA15, "sJugmGradCd", "P") >= 0) {
	                    wprom.alert("인수금지 대상입니다. 인수제한사유를 확인하세요");
	                    //2015.06.02(N1506-00025) : 인수심사 완료후에도 인수심사요청 버튼 활성화
	                    btn_Simsa.setDisabled(false);
	                    sOnlySrarch = "1";
	                    //END
	                    btn_Image.setDisabled(true);
	                }
	            }
	        }	
	        //개인정보 조회 이력 쌓기
	        gfn_LogCreditInfoVt(Ds_LTIDA03, "", "I", "sCrtorCd");	        
	    }   
		
	};
	
	//**********************************************************
	//  대면고객정보 버튼 클릭이벤트
	//**********************************************************	    
	scwin.btn_SearchCust_onclick = function() {
		var promise = Promise.resolve();
		var indata = {"sUserID" : gUserID};
		// CBSO009P 대면채널조회 구종식 
		promise = promise.then(function(rtnVal) {
			var popInfo = {
				"width"     : 635,
				"height"    : 390, 
	            "indata"    : indata,
				"title"     : "대면채널조회"
			};
	        return wprom.popupOpen("/ui/cbso/CBSO009P.xml", popInfo);	
        });
        /*
        args = split(result,"^",true) ;	
		if(Bound(args) > 2){
			medt_sCrtorCd.value = trim(args[2]);
		}  	
		*/
	    promise = promise.then(function(result) {
	        /*wprom.popupOpen(가이드참조)*/
	        if (wconv.length(result) != 0) {
	            var rqstRetArr = wconv.split(result, "^", true);
	            medt_sCrtorCd.setValue(wconv.trim(rqstRetArr[2]));
	        }
	    });
	};
	
	//**********************************************************
	// 성별을 체크한다.
	//**********************************************************
	scwin.lfn_getSex = function(val) {
	    if ("1|3|5|7".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "1";
	    } else if ("2|4|6|8".indexOf(wconv.substr(val, 6, 1)) >= 0) {
	        return "2";
	    } else {
	        return "";
	    }
	};
	
	//**********************************************************
	// 계약자번호onKillFocus시 처리
	//**********************************************************	
	scwin.medt_sCrtorCd_onblur = function(e) {
		scwin.medt_sCrtorCd_onviewchange();
	    var sCrtorCd = medt_sCrtorCd.getValue();
	    if (parent.sAgncYn == "Y") {
	        sCrtorCd = Ds_CrtorCd.getCellData(0, "sCrtorCd");
	    }
	    if (sCrtorCd_Backup != " " && sCrtorCd_Backup != sCrtorCd) {
	        wconv.clear(Ds_LTIDA03);
	        Ds_LTIDA03.insertRow(0);
	        Ds_LTIDA03.setRowPosition(0 , false);
	        //		Ds_LTIDA03.SetColumn(0, "sCrtorCd", medt_sCrtorCd.Value);
	        sCrtorCd_Backup = sCrtorCd;
	        //cbs set추가
	        medt_sCrtorCd.setValue(sCrtorCd);
	    }	
	};
	
	//**********************************************************
	// 계약자번호onFocus시 처리
	//**********************************************************	
	scwin.medt_sCrtorCd_onfocus = function(e) {
		if (parent.sAgncYn != "Y") {
        	medt_sCrtorCd.setDisplayFormat("######-#######");
    	}	
	};
	
	//**********************************************************
	// 수익자 팝업에서 해당 함수 호출하여 값 세팅
	//**********************************************************	
	scwin.lfn_B110_CallBack = function(rtnValue) {
		edt_sB110PopValue.setValue(rtnValue.edt_sB110PopValue);
	    fAgntFlag.setValue(rtnValue.fAgntFlag);
	    fAgntFlagIdx.setValue(rtnValue.fAgntFlagIdx);
	
	    switch (fAgntFlag.getValue()) {
	        case "ed_Mangi":
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                if (wconv.length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", ""); //만기시수익자구분코드 
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", ""); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", ""); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", ""); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", ""); //만기수익자연락처			
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", ""); //만기수익자주소구분값
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", ""); //만기수익자주소
	                    edt_sEnntmPftbpYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (resultArr[3].length == 10) {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "2"); //만기시수익자구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sEnntmPftbpFlagCd", "1"); //만기시수익자구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpRelnCd", resultArr[0]); //만기수익자관계코드       
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCd", resultArr[3]); //만기수익자코드           
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpName", resultArr[4]); //만기수익자명             
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpCntad", resultArr[2]); //만기수익자연락처 
	
	                    util.insertColumn(Ds_LTIDA03, [	["sEndPftbpAddr","sEndPftbpAddr","text"],
	                    								["sEndPftbpMailAddFlag","sEndPftbpMailAddFlag","text"],
	                    								["nEndPftbpMailChngSeq","nEndPftbpMailChngSeq","text"]]);
						util.setCompBindRefresh(Ds_LTIDA03.getID());
						Ds_LTIDA03.setRowPosition(0 , false);
	                    
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddr", resultArr[5]);
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpAddrFlag", resultArr[6]);
	                    console.log("edmangi : "+Ds_LTIDA03.getCellData(0, "sEndPftbpRelnCd") + "/"+Ds_LTIDA03.getCellData(0, "sEndPftbpCd")+"/"+
	                    			Ds_LTIDA03.getCellData(0, "sEndPftbpName")+"/"+Ds_LTIDA03.getCellData(0, "sEndPftbpCntad")+"/"+
	                    			Ds_LTIDA03.getCellData(0, "sEndPftbpAddr"));
	                    Ds_LTIDA03.setCellData(0, "sEndPftbpMailAddFlag", resultArr[7]); //만기수익자주소
	                    Ds_LTIDA03.setCellData(0, "nEndPftbpMailChngSeq", resultArr[8]); //만기수익자주소구분값
	                    edt_sEnntmPftbpYn.setValue(Ds_LTIDA03.getCellData(0, "sEndPftbpName"));
	                    console.log("ed_mangi 78 " +resultArr[7] +"/"+resultArr[8]);
	                }
	            }
	            break;
	        case "ed_Proxy":
	            if (Ds_LTIDA03.getCellData(0, "sCrtorCd") != Ds_Pibo.getCellData(0, "sInrpsCd")) {
	                wprom.alert("계약자와 피보험자가 상이한경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (Ds_Pibo.getRowCount() > 1) {
	                wprom.alert("다수피보험자의 경우 지정대리인은 선택할수 없습니다.");
	                return false;
	            }
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                if (wconv.length(resultArr[0]) == 0) {
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", ""); //지정대리인구분코드 
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", ""); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", ""); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", ""); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", ""); //지정대리인연락처
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", ""); //지정대리인주소
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", ""); //지정대리인주소값
	                    edt_sAsmtAgntYn.setValue("선택안됨");
	                } else {
	                    //사업자일경우
	                    if (resultArr[3].length == 10) {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "2"); //지정대리인구분코드 
	                        //내국인
	                    } else {
	                        Ds_LTIDA03.setCellData(0, "sAsmtAgntFlagCd", "1"); //지정대리인구분코드 
	                    }
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntRelnCd", resultArr[0]); //지정대리인관계코드       
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCd", resultArr[3]); //지정대리인코드           
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntName", resultArr[4]); //지정대리인명             
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntCntad", resultArr[2]); //지정대리인연락처
	                    util.insertColumn(Ds_LTIDA03, [	["sAsmtAgntMailAddFlag","sAsmtAgntMailAddFlag","text"],
	                        							["nAsmtAgntMailChngSeq","nAsmtAgntMailChngSeq","text"],
	                        							["sAsmtAgntAddr","sAsmtAgntAddr","text"]]);
	                    util.setCompBindRefresh(Ds_LTIDA03.getID());
						Ds_LTIDA03.setRowPosition(0 , false);
						
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntMailAddFlag", resultArr[7]);
	                    Ds_LTIDA03.setCellData(0, "nAsmtAgntMailChngSeq", resultArr[8]);
	                    sAsmtAgntAddrPop = resultArr[5];
	                    sAsmtAgntAddFlagPop = resultArr[6];
	                    Ds_LTIDA03.setCellData(0, "sAsmtAgntAddr", resultArr[5]);
	                    console.log(resultArr[7] +"/"+resultArr[8]);
	                    edt_sAsmtAgntYn.setValue(Ds_LTIDA03.getCellData(0, "sAsmtAgntName"));
	                    console.log(Ds_LTIDA03.getCellData(0, "sAsmtAgntMailAddFlag")+"/"+Ds_LTIDA03.getCellData(0, "nAsmtAgntMailChngSeq"));
	                }
	            }
	            break;
	        case "ed_Dead":
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpTelno", resultArr[2]); //수익자연락처
	                util.insertColumn(Ds_Pibo, [["sPftbpMailAddFlag","sPftbpMailAddFlag","text"],
	                    						["nPftbpMailChngSeq","nPftbpMailChngSeq","text"],
	                    						["sPftbpAddr","sPftbpAddr","text"]]);
	                util.setCompBindRefresh(Ds_Pibo.getID());
					Ds_Pibo.setRowPosition(fAgntFlagIdx.getValue() , false);
					
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq", resultArr[8]);
	
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpAddr", resultArr[5]);
	                //wconv.trace(Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpAddr"));
	                sPftbpAddFlagPop = resultArr[6];
	                /*trace(sPftbpAddrPop);
	                    trace(sPftbpAddFlagPop);
	                    trace(resultArr[5]);
	                    trace(resultArr[6]);
	                    */
	                //				alert("resultArr[3] ==> " + resultArr[3]);
	                /*trace(resultArr[5]);
	                    Edit0.Text = Ds_Pibo.GetColumn(0, "sPftbpInrpsRelnName");
	                    trace(fAgntFlagIdx.Text);*/
	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sPftbpFlagCd", "1"); //법정상속인
	                }
	                console.log(resultArr[7]+"/"+resultArr[8]);
	                console.log(Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag")+"/"+Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq"));
	                btn_Insu.setDisabled(true);
	                btn_Simsa.setDisabled(true);
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	            break;
	        case "ed_Xcpt":
	            if (wconv.length(edt_sB110PopValue.getValue()) != 0) {
	                var resultArr = wconv.split(edt_sB110PopValue.getValue(), "^", true);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnCd", resultArr[0]); //수익자관계코드       
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpInrpsRelnName", resultArr[1]); //수익자관계코드명
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpCd", resultArr[3]); //수익자코드           
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpName", resultArr[4]); //수익자명             
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpTelno", resultArr[2]); //수익자연락처
	                util.insertColumn(Ds_Pibo, [["sXcptPftbpMailAddFlag","sXcptPftbpMailAddFlag","text"],
	                    						["nXcptPftbpMailChngSeq","nXcptPftbpMailChngSeq","text"],
	                    						["sXcptPftbpAddr","sXcptPftbpAddr","text"]]);
	                util.setCompBindRefresh(Ds_Pibo.getID());
					Ds_Pibo.setRowPosition(fAgntFlagIdx.getValue() , false);
					
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpMailAddFlag", resultArr[7]);
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "nXcptPftbpMailChngSeq", resultArr[8]);
	                //				alert("resultArr[3] ==> " + resultArr[3]);    
	                //sXcptPftbpAddrPop = resultArr[5];
	                sXcptPftbpAddFlagPop = resultArr[6];
	                Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpAddr", resultArr[5]);
	                console.log(resultArr[7]+"/"+resultArr[8]);
	                console.log(Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "sPftbpMailAddFlag")+"/"+Ds_Pibo.getCellData(fAgntFlagIdx.getValue(), "nPftbpMailChngSeq"));
	                if (!mfn_IsEmpty(resultArr[3])) {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "2"); //기명수익자
	                } else {
	                    Ds_Pibo.setCellData(fAgntFlagIdx.getValue(), "sXcptPftbpFlagCd", "1"); //법정상속인
	                }
	                btn_Insu.setDisabled(true);
	                btn_Simsa.setDisabled(true);
	                parent.Ds_LTIDA00.setCellData(0, "sPlanProgRankCd", "20");
	            }
	            break;
	    }
	};
	
	//**********************************************************
	// 특약정보 그리드 가입금액 표시
	//**********************************************************	
	scwin.lfn_changeCompTypeDisplay = function(sTrtyCd) {
		/*var rtnCompType = "combo";
		Ds_InsAmt.Clear();
		Ds_InsAmt.Copy("Dsws_InsAmt");
		Ds_InsAmt.Filter("sTrtyCd== '" + sTrtyCd+ "'");
		Ds_InsAmt_Tmp.CopyF(Ds_InsAmt);
		if(Ds_InsAmt_Tmp.GetCount() < 1){
			rtnCompType = "number";
		}
	 
		return rtnCompType;*/
	};
	]]></script>
	</head>
	<body>

		<!-- group:s -->
		<!-- group:e -->

		<!-- group:s -->

		<xf:group id="" style="" class="section">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="계약자"
					style="">
				</w2:textbox>
				<xf:group class=" fl" id="" style="">
					<w2:anchor class="btn_nml"
						ev:onclick="scwin.btn_SearchCust_onclick" id="btn_SearchCust"
						outerDiv="true">
						<xf:label><![CDATA[대면고객정보]]></xf:label>
					</w2:anchor>
				</xf:group>
				<xf:group class="fr" id="" style="">
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="" id="cmb_RvMatt1"
						optionOrder="" ref="" style="width:50px" submenuSize=""
						renderType="native" class="hide">
						<xf:choices>
							<xf:itemset
								nodeset="DsWs_RlnmCnfmInfoRvMatt1">
								<xf:label ref="sHnglCdName"></xf:label>
								<xf:value ref="sCd"></xf:value>
							</xf:itemset>
						</xf:choices>
					</xf:select1>
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="" id="cmb_RvMatt2"
						optionOrder="" ref="" style="width:50px" submenuSize=""
						renderType="native" class="hide">
						<xf:choices>
							<xf:itemset
								nodeset="DsWs_RlnmCnfmInfoRvMatt2">
								<xf:label ref="sHnglCdName"></xf:label>
								<xf:value ref="sCd"></xf:value>
							</xf:itemset>
						</xf:choices>
					</xf:select1>
					<xf:select1 allOption="" appearance="minimal"
						chooseOption="" direction="auto" disabled="" disabledClass=""
						displayMode="label" ev:onviewchange="" id="cmb_Reln"
						optionOrder="" ref="" style="width:50px" submenuSize=""
						renderType="native" class="hide">
						<xf:choices>
							<xf:itemset nodeset="DsWs_Reln">
								<xf:label ref="sHnglCdName"></xf:label>
								<xf:value ref="sCd"></xf:value>
							</xf:itemset>
						</xf:choices>
					</xf:select1>
				</xf:group>
			</xf:group>
			<xf:group id="" style="" class="w2tb tb" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:85.00px;" tagname="col"></xf:group>
					<xf:group style="width:145px;" tagname="col"></xf:group>
					<xf:group style="width:70.00px;" tagname="col"></xf:group>
					<xf:group style="width:145.00px;" tagname="col"></xf:group>
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="width:70.00px;" tagname="col"></xf:group>
					<xf:group style="width:75.00px;" tagname="col"></xf:group>
					<xf:group style="width:80.00px;" tagname="col"></xf:group>
					<xf:group style="width:70.00px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						계약자코드
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">
						<xf:group class="input_btn icon prot"	style="width:110px;">
						<xf:input disabled="" id="medt_sCrtorCd"
							ref="" style="width:110px;"
							ev:onviewchange="scwin.medt_sCrtorCd_onviewchange" maxlength="13"
							ev:onblur="scwin.medt_sCrtorCd_onblur"
							ev:onfocus="scwin.medt_sCrtorCd_onfocus">
						</xf:input>
						<w2:anchor disabled=""
							ev:onclick="scwin.lfn_searchCust" id="btn_Crtor" outerDiv=""
							style="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th" id="">
						계약자명
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<!-- group:s -->
						<!-- group:e -->
						<xf:input disabled="true" id="edt_sCrtorName"
							style="" ref="data:Ds_LTIDA03.sCrtorName">
						</xf:input>
					</xf:group>
					<xf:group style="" class="w2tb_th" tagname="th"
						id="th_CmmcMeanCncl">
						통신수단해지동의
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td"
						id="td_CmmcMeanCncl">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.cmb_CmmcMeanCnclYn_onviewchange"
							id="cmb_CmmcMeanCnclYn" optionOrder="" ref="" style=""
							submenuSize="" renderType="native" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[Y]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[N]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						대상고객
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.cmb_CrPrtrRole_onviewchange"
							id="cmb_CrPrtrRole" optionOrder="" ref="" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[계약자]]></xf:label>
									<xf:value><![CDATA[10]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[피보험자]]></xf:label>
									<xf:value><![CDATA[20]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						취득경로
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.cmb_AqamtChnlCd_onviewchange"
							id="cmb_AqamtChnlCd" optionOrder=""
							ref="" renderType="native" style=""
							submenuSize="" chooseOptionLabel="">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AqamtChnlCd">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
					</xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group style="" class="w2tb_th" tagname="th">
						자택주소
					</xf:group>
					<xf:group style="" class="w2tb_td" tagname="td">





						<w2:attributes>
							<w2:colspan>9</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:group class="input_btn icon prot"
							style="">


						</xf:group>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sZip1"
								ref="data:Ds_LTIDA03.sZip1" style="width:30px">
							</xf:input>
							<xf:input disabled="true" id="edt_sZip2"
								ref="data:Ds_LTIDA03.sZip2" style="width:30px" class="ml5">
							</xf:input>
							<xf:input disabled="true" id="edt_sAdrs1"
								style="width:300px;" ref="data:Ds_LTIDA03.sAdrs1">
							</xf:input>
							<xf:input disabled="true" id="edt_sAdrsAdd"
								style="width:400px;" ref="data:Ds_LTIDA03.sAdrsAdd" class="">
							</xf:input>
						</xf:group>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						자택
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sHomeTel1"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel1">
							</xf:input>
							<xf:input disabled="true" id="edt_sHomeTel2"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel2">
							</xf:input>
							<xf:input disabled="true" id="edt_sHomeTel3"
								style="width:40px" ref="data:Ds_LTIDA03.sHomeTel3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						직장
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true"
								id="edt_sOfficeTel1" style="width:40px"
								ref="data:Ds_LTIDA03.sOfficeTel1">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sOfficeTel2" style="width:40px"
								ref="data:Ds_LTIDA03.sOfficeTel2">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sOfficeTel3" style="width:40px"
								ref="data:Ds_LTIDA03.sOfficeTel3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						휴대폰
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true"
								id="edt_sCellPhone1" style="width:40px"
								ref="data:Ds_LTIDA03.sCellPhone1">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sCellPhone2" style="width:40px"
								ref="data:Ds_LTIDA03.sCellPhone2">
							</xf:input>
							<xf:input disabled="true"
								id="edt_sCellPhone3" style="width:40px"
								ref="data:Ds_LTIDA03.sCellPhone3">
							</xf:input>
						</xf:group>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						만기수익자
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<w2:textbox id="edt_sEnntmPftbpYn" label="선택안됨"
							ref=""
							style="position: relative;width:100%;height: 20px;cursor: pointer;display:inline;border-bottom: 1px solid #333;"
							ev:onclick="scwin.edt_sEnntmPftbpYn_onclick">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">FAX<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes></xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:group class="" id="" style="">
							<xf:input disabled="true" id="edt_sFax1"
								style="width:40px" ref="data:Ds_LTIDA03.sFax1">
							</xf:input>
							<xf:input disabled="true" id="edt_sFax2"
								style="width:40px" ref="data:Ds_LTIDA03.sFax2">
							</xf:input>
							<xf:input disabled="true" id="edt_sFax3"
								style="width:40px" ref="data:Ds_LTIDA03.sFax3">
							</xf:input>
						</xf:group>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						E-Mail
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_sEmail1"
							style="" ref="data:Ds_LTIDA03.sEmail1">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						수익자약정
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="" disabledClass=""
							displayMode="label"
							ev:onviewchange="scwin.cmb_AsmtYn_onviewchange" id="cmb_AsmtYn"
							optionOrder="" ref="" renderType="native" style="" submenuSize=""
							chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[Y]]></xf:label>
									<xf:value><![CDATA[Y]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[N]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						지정대리인
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<w2:textbox id="edt_sAsmtAgntYn" label="선택안됨"
							ref=""
							style="position: relative;width:100%;height: 20px;cursor: pointer;display:inline;border-bottom: 1px solid #333;"
							ev:onclick="scwin.edt_sAsmtAgntYn_onclick">
						</w2:textbox>
					</xf:group>
				</xf:group>
				<xf:group tagname="tr" style="">
					<xf:group class="w2tb_th" tagname="th">
						우편수령처
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>3</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_RvadAddr"
							style="" ref="data:Ds_LTIDA03.RvadAddr">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						수령처구분
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes>
							<w2:scope>row</w2:scope>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 allOption="" appearance="minimal"
							chooseOption="true" direction="auto" disabled="true"
							disabledClass="" displayMode="label" ev:onviewchange=""
							id="cmb_sMailRvadAddrFlagCd" optionOrder=""
							ref="data:Ds_LTIDA03.sMailRvadAddrFlagCd" renderType="native"
							style="" submenuSize="" chooseOptionLabel="-선택-">
							<xf:choices>
								<xf:itemset
									nodeset="data:DsWs_AddrFlag">
									<xf:label ref="sHnglCdName"></xf:label>
									<xf:value ref="sCd"></xf:value>
								</xf:itemset>
							</xf:choices>
						</xf:select1>
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						세금우대
						<w2:attributes></w2:attributes>
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes>
							<w2:scope>row</w2:scope>
							<w2:colspan>2</w2:colspan>
							<w2:rowspan>1</w2:rowspan>
						</w2:attributes>
						<w2:attributes></w2:attributes>
						<xf:select1 disabledClass="" renderType="native"
							appearance="minimal" direction="auto" chooseOption=""
							displayMode="label" optionOrder=""
							ev:onviewchange="scwin.cmb_sTaxPrfrYn_onviewchange"
							id="cmb_sTaxPrfrYn" ref="" style="width:80px;" allOption=""
							submenuSize="" disabled="">
							<xf:choices>
								<xf:item>
									<xf:label><![CDATA[비과세]]></xf:label>
									<xf:value><![CDATA[B]]></xf:value>
								</xf:item>
								<xf:item>
									<xf:label><![CDATA[미가입]]></xf:label>
									<xf:value><![CDATA[N]]></xf:value>
								</xf:item>
							</xf:choices>
						</xf:select1>
						<w2:anchor id="btn_TaxSearch" style=""
							ev:onclick="scwin.btn_TaxSearch_onclick" class="btn_icon sch"
							disabled="" outerDiv="">
							<xf:label><![CDATA[저장]]></xf:label>
						</w2:anchor>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<xf:group id="" style="" class="layout_4_6 mt10">
			<xf:group id="" style="" class="leftarea">
				<!-- group:s -->
				<xf:group id="" style="" class="section">
					<w2:gridView autoFit="allColumn" class="cm_grid"
						dataList="Ds_Prprt" ev:onafteredit=""
						ev:oncellclick="scwin.grd_Prprt_oncellclick"
						ev:onrowindexchange="" ev:onviewchange="" fixedColumnWithHidden=""
						id="grd_Prprt" ignoreCellClick="false" rowNumVisible=""
						rowNumWidth="10" rowStatusHeaderValue="상태" rowStatusVisible=""
						rowStatusWidth="20" scrollByColumn="false" style="height:100px;"
						useShiftKey="true" visibleRowNum="" wheelRows="" hideHeader="true"
						autoFitMinWidth="100" focusMode="row">
						<w2:header id="header1" style="">
							<w2:row id="row2" style="">
								<w2:column blockSelect="false"
									displayMode="label" id="column1" inputType="text"
									style="height:20px;" width="30">
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="column2" inputType="text"
									style="height:20px;" width="80">
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="column3" inputType="text"
									style="height:20px;" width="60">
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="column4" inputType="text"
									style="height:20px;" width="200">
								</w2:column>
							</w2:row>
						</w2:header>
						<w2:gBody id="gBody4" style="">
							<w2:row id="row5" style="">
								<w2:column blockSelect="false"
									displayMode="label" id="sel1" inputType="checkbox"
									style="height:24px;" width="30" rowSpan="2">
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="id2" style="height:20px;" width="80"
									value="가입업종" readOnly="true">
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="sInsBntpObjtFlagCd" inputType="select"
									style="height:20px;" width="60" readOnly="true">
									<w2:choices>
										<w2:itemset
											nodeset="data:DsWs_BntpLargClsfCd">
											<w2:label
												ref="sHnglCdName">
											</w2:label>
											<w2:value ref="sCd"></w2:value>
										</w2:itemset>
									</w2:choices>
								</w2:column>
								<w2:column blockSelect="false"
									displayMode="label" id="sInsBntpCd" inputType="select"
									style="height:20px;" width="200" textAlign="left"
									readOnly="true">
									<w2:choices>
										<w2:itemset
											nodeset="data:DsWs_BntpCd">
											<w2:label
												ref="sHnglCdName">
											</w2:label>
											<w2:value ref="sCd"></w2:value>
										</w2:itemset>
									</w2:choices>
								</w2:column>
							</w2:row>
							<w2:row id="row6" style="">
								<w2:column blockSelect="false"
									id="column7" style="height:20px;" width="80" inputType="text"
									displayMode="label" value="요율업종" readOnly="true">
								</w2:column>
								<w2:column blockSelect="false"
									id="sRatoBntpObjtFlagCd" style="height:20px;" width="60"
									inputType="select" displayMode="label" readOnly="true">
									<w2:choices>
										<w2:itemset
											nodeset="data:DsWs_BntpLargClsfCd">
											<w2:label
												ref="sHnglCdName">
											</w2:label>
											<w2:value ref="sCd"></w2:value>
										</w2:itemset>
									</w2:choices>
								</w2:column>
								<w2:column blockSelect="false"
									id="sRatoBntpCd" style="height:20px;" width="200"
									inputType="select" displayMode="label" textAlign="left"
									readOnly="true">
									<w2:choices>
										<w2:itemset
											nodeset="data:DsWs_BntpCd">
											<w2:label
												ref="sHnglCdName">
											</w2:label>
											<w2:value ref="sCd"></w2:value>
										</w2:itemset>
									</w2:choices>
								</w2:column>
							</w2:row>
						</w2:gBody>
					</w2:gridView>
				</xf:group>

				<!-- group:e -->
			</xf:group>
			<xf:group id="" style="" class="rightarea">
				<!-- group:s -->
				<xf:group id="" style="" class="section">
					<xf:group id="" style="" class="w2tb tb"
						tagname="table">
						<w2:attributes>
							<w2:summary></w2:summary>
						</w2:attributes>
						<xf:group tagname="colgroup">
							<xf:group style="width:90px;"
								tagname="col">
							</xf:group>
							<xf:group style="width:280px;"
								tagname="col">
							</xf:group>
							<xf:group style="width:70px;"
								tagname="col">
							</xf:group>
							<xf:group style="" tagname="col"></xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group style="" class="w2tb_th"
								tagname="th">
								소유(임차)자
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<xf:input disabled=""
									id="medt_sOwnrDscrNo" ref="data:Ds_Prprt.sOwnrDscrNo"
									style="width:110px;" displayFormat="######-#######">
								</xf:input>
								<w2:anchor class="btn_icon prot"
									disabled="" ev:onclick="scwin.lfn_searchCust"
									id="btn_OwnrDscrNo" outerDiv="" style="">
									<xf:label><![CDATA[저장]]></xf:label>
								</w2:anchor>
								<xf:input disabled="true" displayFormat=""
									id="edt_sOwnrNm" ref="data:Ds_Prprt.sOwnrNm"
									style="width:100px" readOnly="true">
								</xf:input>
							</xf:group>
							<xf:group class="w2tb_th" tagname="th">
								관계
								<w2:attributes></w2:attributes>
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes></w2:attributes>
								<xf:select1 allOption=""
									appearance="minimal" chooseOption="true" direction="auto"
									disabled="" disabledClass="" displayMode="label"
									ev:onviewchange="scwin.cmb_sCrtorReln_onviewchange"
									id="cmb_sCrtorReln" optionOrder=""
									ref="data:Ds_Prprt.sCrtorReln" renderType="native" style=""
									submenuSize="" chooseOptionLabel="">
									<xf:choices>
										<xf:itemset
											nodeset="data:Ds_OwnrReln">
											<xf:label ref="text"></xf:label>
											<xf:value ref="value"></xf:value>
										</xf:itemset>
									</xf:choices>
								</xf:select1>
							</xf:group>
						</xf:group>
						<xf:group style="" tagname="tr">
							<xf:group style="" class="w2tb_th"
								tagname="th">
								소재지
							</xf:group>
							<xf:group style="" class="w2tb_td"
								tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<w2:attributes></w2:attributes>
								<xf:group class="input_btn icon sch dib"
									style="width:64px">
									<xf:input disabled="true"
										id="edt_zip1" ref="data:Ds_ObjLctn.sLctnPost1"
										style="width:30px" readOnly="true">
									</xf:input>
									<xf:input disabled="true"
										id="edt_zip2" ref="data:Ds_ObjLctn.sLctnPost2"
										style="width:30px" readOnly="true">
									</xf:input>
									<w2:anchor class="" disabled=""
										ev:onclick="scwin.Btn_AddrSearch_onclick" id="Btn_AddrSearch"
										outerDiv="" style="">
										<xf:label><![CDATA[저장]]></xf:label>
									</w2:anchor>
								</xf:group>
								<xf:input disabled="true"
									id="edt_sLctnPostAddr" style="width:330px;"
									ref="data:Ds_ObjLctn.sLctnPostAddr" readOnly="true">
								</xf:input>
								<xf:group class="mt1" id="" style="">
									<xf:input disabled=""
										id="edt_sLctnDtalAddr" style="width:310px;"
										ref="data:Ds_ObjLctn.sLctnDtalAddr">
									</xf:input>
									<xf:input disabled=""
										id="edt_sLctnStno" style="width:53px;"
										ref="data:Ds_ObjLctn.sLctnStno">
									</xf:input>
									<xf:input disabled=""
										id="edt_sLctnHouse" style="width:53px;"
										ref="data:Ds_ObjLctn.sLctnHouse">
									</xf:input>
								</xf:group>
							</xf:group>
						</xf:group>
						<xf:group tagname="tr" style="">
							<xf:group class="w2tb_th" tagname="th">
								수용장소
								<w2:attributes>
									<w2:scope>row</w2:scope>
								</w2:attributes>
							</xf:group>
							<xf:group class="w2tb_td" tagname="td">
								<w2:attributes>
									<w2:colspan>3</w2:colspan>
									<w2:rowspan>1</w2:rowspan>
								</w2:attributes>
								<w2:attributes></w2:attributes>
								<w2:attributes></w2:attributes>
								<xf:group class="input_btn t4"
									style="">
									<xf:input id="edt_sAccptPlac"
										style="" ref="data:Ds_Prprt.sAccptPlac">
									</xf:input>
									<w2:anchor class="btn_nml1"
										ev:onclick="scwin.btn_SwHsHldGds_onclick" id="btn_SwHsHldGds"
										outerDiv="true">
										<xf:label><![CDATA[명기물건]]></xf:label>
									</w2:anchor>
								</xf:group>
							</xf:group>
						</xf:group>
					</xf:group>

				</xf:group>
				<!-- group:e -->
			</xf:group>
		</xf:group>
		<!-- group:s -->
		<xf:group id="" style="" class="section mt10">

			<w2:gridView ignoreCellClick="false" ev:onrowindexchange=""
				autoFit="allColumn" rowStatusWidth="20" visibleRowNum=""
				class="cm_grid" wheelRows="" ev:onviewchange=""
				fixedColumnWithHidden="" dataList="Ds_Pibo" id="grd_Pibo"
				style="height:72px;" scrollByColumn="false" useShiftKey="true"
				rowStatusVisible="" ev:onafteredit="" rowStatusHeaderValue="상태"
				ev:oncellclick="scwin.grd_Pibo_oncellclick" rowNumVisible=""
				rowNumWidth="10" editModeEvent="onclick">
				<w2:header id="header1" style="">
					<w2:row id="row2" style="">
						<w2:column id="column1" blockSelect="false"
							style="height:20px;" width="40" inputType="text" value="구분"
							displayMode="label">
						</w2:column>
						<w2:column id="column2" blockSelect="false"
							style="height:20px;" width="130" inputType="text" value="주민번호"
							displayMode="label">
						</w2:column>
						<w2:column id="column3" blockSelect="false"
							style="height:20px;" width="90" inputType="text" value="성명"
							displayMode="label">
						</w2:column>
						<w2:column id="column4" blockSelect="false"
							style="height:20px;" width="40" inputType="text" value="나이"
							displayMode="label">
						</w2:column>
						<w2:column id="column5" blockSelect="false"
							style="height:20px;" width="120" inputType="text" value="직업"
							displayMode="label">
						</w2:column>
						<w2:column id="column6" blockSelect="false"
							style="height:20px;" width="50" inputType="text" value="급수"
							displayMode="label">
						</w2:column>
						<w2:column id="column7" blockSelect="false"
							style="height:20px;" width="90" inputType="text" value="보장보험료"
							displayMode="label">
						</w2:column>
						<w2:column id="column8" blockSelect="false"
							style="height:20px;" width="80" inputType="text" value="계약자관계"
							displayMode="label">
						</w2:column>
						<w2:column id="column9" blockSelect="false"
							style="height:20px;" width="90" inputType="text" value="고지사항"
							displayMode="label">
						</w2:column>
						<w2:column id="column10" blockSelect="false"
							style="height:20px;" width="70" inputType="text" value="타보험"
							displayMode="label">
						</w2:column>
						<w2:column blockSelect="false" id="column17"
							style="height:20px;" inputType="text" width="90"
							displayMode="label" value="사망수익자">
						</w2:column>
						<w2:column blockSelect="false" id="column15"
							style="height:20px;" inputType="text" width="70"
							displayMode="label" value="사망외">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody4" style="">
					<w2:row id="row5" style="">
						<w2:column id="sel" blockSelect="false"
							width="40" inputType="checkbox" displayMode="label">
						</w2:column>
						<w2:column id="sInrpsCd" blockSelect="false"
							width="130" displayMode="label" readOnly="true"
							displayFormat="######-#######" inputType="link">
						</w2:column>
						<w2:column id="sInrpsName" blockSelect="false"
							width="90" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="nInrpsAge" blockSelect="false"
							width="40" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="sJobName" blockSelect="false"
							width="120" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="sJobGradCd" blockSelect="false"
							width="50" displayMode="label" readOnly="true">
						</w2:column>
						<w2:column id="nGrntPrem" blockSelect="false"
							width="90" displayMode="label" readOnly="true"
							displayFormat="###,###,###,###">
						</w2:column>
						<w2:column id="sCrtorRelnCd" blockSelect="false"
							width="80" inputType="select" displayMode="label">
							<w2:choices>
								<w2:itemset nodeset="data:DsWs_Reln">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column id="sRqstYnName" blockSelect="false"
							width="90" displayMode="label" readOnly="true"
							inputType="link">
						</w2:column>
						<w2:column id="sOthrInsurCntName"
							blockSelect="false" width="70" displayMode="label"
							readOnly="true" inputType="link">
						</w2:column>
						<w2:column blockSelect="false" id="sPftbpName"
							style="height:20px" inputType="link" width="90"
							displayMode="label" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							id="sXcptPftbpName" style="height:20px" inputType="link"
							width="70" displayMode="label" readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>

		<xf:group class="section mt10" id="" style="">
			<w2:gridView autoFit="allColumn" class="cm_grid"
				dataList="Ds_Trty" ev:onafteredit="" ev:oncellclick=""
				ev:onrowindexchange="" ev:onviewchange="" fixedColumnWithHidden=""
				id="grd_sTrty" ignoreCellClick="false" rowNumVisible=""
				rowNumWidth="10" rowStatusHeaderValue="상태" rowStatusVisible=""
				rowStatusWidth="20" scrollByColumn="false" style="height:96px;"
				useShiftKey="true" visibleRowNum="" wheelRows="">
				<w2:header id="header1" style="">
					<w2:row id="row2" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="column1" inputType="text"
							style="height:20px;" value="성명" width="80">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column2" inputType="text"
							style="height:20px;" value="특약" width="300">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column3" inputType="text"
							style="height:20px;" value="보험기간" width="120">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column4" inputType="text"
							style="height:20px;" value="납입기간" width="120">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column5" inputType="text"
							style="height:20px;" value="가입금액" width="150">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="column6" inputType="text"
							style="height:20px;" value="보장보험료" width="150">
						</w2:column>
					</w2:row>
				</w2:header>
				<w2:gBody id="gBody4" style="">
					<w2:row id="row5" style="">
						<w2:column blockSelect="false"
							displayMode="label" id="sInrpsName" width="80" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="TrtyHnglAbbName" width="300"
							textAlign="left" readOnly="true">
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sInsurTermCd" inputType="select"
							width="120" readOnly="true" selectedData="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_InsurTerm">
									<w2:label ref="sInsurTermName"></w2:label>
									<w2:value ref="sInsurTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="sPaymTermCd" inputType="select"
							width="120" readOnly="true" selectedData="false">
							<w2:choices>
								<w2:itemset
									nodeset="data:DsWs_PaymTerm">
									<w2:label ref="sPaymTermName"></w2:label>
									<w2:value ref="sPaymTermCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nTrtyInsAmt" inputType="select"
							width="150" readOnly="true" selectedData="false"
							textAlign="right">
							<w2:choices>
								<w2:itemset
									nodeset="data:Dsws_InsAmt">
									<w2:label ref="sHnglCdName"></w2:label>
									<w2:value ref="sCd"></w2:value>
								</w2:itemset>
							</w2:choices>
						</w2:column>
						<w2:column blockSelect="false"
							displayMode="label" id="nGrntPrem" width="150"
							displayFormat="###,###,###,###" textAlign="right"
							readOnly="true">
						</w2:column>
					</w2:row>
				</w2:gBody>
			</w2:gridView>
		</xf:group>
		<xf:group class="section mt10" id="" style="">
			<xf:group class="defaultbox" id="" style="">
				<w2:textbox class="df_tt fl" id="" label="인수심사결과"
					style="">
				</w2:textbox>
				<xf:group class="fr" id="" style="display : none;">
					<xf:input disabled="true" id="edt_sB110PopValue"
						style="width : 10px">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlag"
						style="width:10px">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlagIdx"
						style="width : 10px">
					</xf:input>
					<xf:input disabled="true" id="edt_sB110PopValue1"
						style="width:10px">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlag1"
						style="width : 10px">
					</xf:input>
					<xf:input disabled="true" id="fAgntFlagIdx1"
						style="width:10px">
					</xf:input>
				</xf:group>
			</xf:group>
			<xf:group class="w2tb tb" id="" style="" tagname="table">
				<w2:attributes>
					<w2:summary></w2:summary>
				</w2:attributes>
				<xf:group tagname="colgroup">
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="width:350px;" tagname="col"></xf:group>
					<xf:group style="width:100px;" tagname="col"></xf:group>
					<xf:group style="" tagname="col"></xf:group>
				</xf:group>
				<xf:group style="" tagname="tr">
					<xf:group class="w2tb_th" style="" tagname="th">
						인수심사상태
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<w2:attributes></w2:attributes>
						<xf:input disabled="true" id="edt_insu"
							style="">
						</xf:input>
					</xf:group>
					<xf:group class="w2tb_th" tagname="th">
						제한항목건수
					</xf:group>
					<xf:group class="w2tb_td" tagname="td">
						<xf:input disabled="true" id="edt_UdrtkLmitCnt"
							style="">
						</xf:input>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

		<!-- group:s -->
		<xf:group id="" style="" class="section">
			<xf:group id="" style="" class="defaultbox last">
				<xf:group id="" style="" class="fl">
					<w2:anchor id="btn_RiskInfo"
						ev:onclick="scwin.btn_RiskInfo_onclick" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[즉시고위험고객]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_Image"
						ev:onclick="scwin.btn_Image_onclick" class="btn_nml"
						outerDiv="true" style="display : none;">
						<xf:label><![CDATA[이미지등록]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_Insu"
						ev:onclick="scwin.btn_Insu_onclick" class="btn_nml"
						outerDiv="true" disabled="">
						<xf:label><![CDATA[인수제한사항]]></xf:label>
					</w2:anchor>
					<w2:anchor id="btn_Simsa"
						ev:onclick="scwin.btn_Simsa_onclick" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[인수심사요청]]></xf:label>
					</w2:anchor>
				</xf:group>
				<xf:group id="" style="" class="fr">
					<w2:anchor id="btn_Next"
						ev:onclick="scwin.btn_Next_onclick" class="btn_nml"
						outerDiv="true">
						<xf:label><![CDATA[다음]]></xf:label>
					</w2:anchor>
				</xf:group>
			</xf:group>
		</xf:group>
		<!-- group:e -->

	</body>
</html>