<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/convert.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
            <xf:instance>
                <data/>
            </xf:instance>
            <w2:dataCollection>
            	<w2:dataList baseNode="list" id="Ds_OutBankCode"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="CODE"
            				name="CODE" />
            			<w2:column dataType="text" id="TEXT"
            				name="TEXT" />
            		</w2:columnInfo>
            		<w2:data use="true">
            			<w2:row>
            				<CODE />
            				<TEXT><![CDATA[선택]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[004]]></CODE>
            				<TEXT><![CDATA[국민]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[011]]></CODE>
            				<TEXT><![CDATA[농협]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[026]]></CODE>
            				<TEXT><![CDATA[신한]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[020]]></CODE>
            				<TEXT><![CDATA[우리]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[005]]></CODE>
            				<TEXT><![CDATA[외환]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[032]]></CODE>
            				<TEXT><![CDATA[부산]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[081]]></CODE>
            				<TEXT><![CDATA[KEB하나]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[031]]></CODE>
            				<TEXT><![CDATA[대구]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[034]]></CODE>
            				<TEXT><![CDATA[광주]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[037]]></CODE>
            				<TEXT><![CDATA[전북]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[021]]></CODE>
            				<TEXT><![CDATA[조흥]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[003]]></CODE>
            				<TEXT><![CDATA[기업]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[023]]></CODE>
            				<TEXT><![CDATA[스탠다드차타드(구 제일)]]></TEXT>
            			</w2:row>
            		</w2:data>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCZA31"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="number" id="nMsgNo"
            				name="nMsgNo" />
            			<w2:column dataType="text" id="sMainDealType"
            				name="sMainDealType" />
            			<w2:column dataType="text" id="sSubDealType"
            				name="sSubDealType" />
            			<w2:column dataType="text" id="sInputTime"
            				name="sInputTime" />
            			<w2:column dataType="text" id="sUserID"
            				name="sUserID" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_BANK005"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="number" id="packetLength"
            				name="packetLength" />
            			<w2:column dataType="text" id="sBankJoinNo"
            				name="sBankJoinNo" />
            			<w2:column dataType="text" id="sBankCode_old"
            				name="sBankCode_old" />
            			<w2:column dataType="text" id="sJunmunCode"
            				name="sJunmunCode" />
            			<w2:column dataType="number" id="sDealType"
            				name="sDealType" />
            			<w2:column dataType="number" id="sJunmunNo"
            				name="sJunmunNo" />
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sSendTime"
            				name="sSendTime" />
            			<w2:column dataType="text" id="sBankRspCode"
            				name="sBankRspCode" />
            			<w2:column dataType="text" id="sDealDate"
            				name="sDealDate" />
            			<w2:column dataType="text"
            				id="sDealBankCode_old" name="sDealBankCode_old" />
            			<w2:column dataType="text" id="sDealAcctNo"
            				name="sDealAcctNo" />
            			<w2:column dataType="text" id="sAcctNo"
            				name="sAcctNo" />
            			<w2:column dataType="text" id="sAcctName"
            				name="sAcctName" />
            			<w2:column dataType="text" id="sBankOwnerID"
            				name="sBankOwnerID" />
            			<w2:column dataType="text" id="sSender"
            				name="sSender" />
            			<w2:column dataType="text" id="sReceiver"
            				name="sReceiver" />
            			<w2:column dataType="text" id="sFundUnityYN"
            				name="sFundUnityYN" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sDealBankCode"
            				name="sDealBankCode" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCAE01"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sApplyType"
            				name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM"
            				name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer"
            				name="sApplySer" />
            			<w2:column dataType="text" id="sOutBankCode"
            				name="sOutBankCode" />
            			<w2:column dataType="text" id="sOutAcctNo"
            				name="sOutAcctNo" />
            			<w2:column dataType="text" id="sDepositorID"
            				name="sDepositorID" />
            			<w2:column dataType="text" id="sDepositorName"
            				name="sDepositorName" />
            			<w2:column dataType="text" id="nOutAmt"
            				name="nOutAmt" />
            			<w2:column dataType="text" id="sDealDate"
            				name="sDealDate" />
            			<w2:column dataType="text" id="sInputTime"
            				name="sInputTime" />
            			<w2:column dataType="text" id="sUserID"
            				name="sUserID" />
            			<w2:column dataType="text" id="sFirstAgnt"
            				name="sFirstAgnt" />
            			<w2:column dataType="text" id="sLastAgnt"
            				name="sLastAgnt" />
            			<w2:column dataType="text" id="sMatchCode"
            				name="sMatchCode" />
            			<w2:column dataType="text" id="sPayerNo"
            				name="sPayerNo" />
            			<w2:column dataType="text" id="sOutAgreeApplyYN"
            				name="sOutAgreeApplyYN" />
            			<w2:column dataType="text" id="sDoerUser"
            				name="sDoerUser" />
            			<w2:column dataType="text" id="sLoanNo"
            				name="sLoanNo" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCZA31_1"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sInputTime"
            				name="sInputTime" />
            			<w2:column dataType="text" id="sUserID"
            				name="sUserID" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sWorkType"
            				name="sWorkType" />
            			<w2:column dataType="text" id="sMainDealType"
            				name="sMainDealType" />
            			<w2:column dataType="text" id="sSubDealType"
            				name="sSubDealType" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_BANK003"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="packetLength"
            				name="packetLength" />
            			<w2:column dataType="text" id="sBankJoinNo"
            				name="sBankJoinNo" />
            			<w2:column dataType="text" id="sBankCode_old"
            				name="sBankCode_old" />
            			<w2:column dataType="text" id="sJunmunCode"
            				name="sJunmunCode" />
            			<w2:column dataType="text" id="sDealType"
            				name="sDealType" />
            			<w2:column dataType="text" id="sJunmunNo"
            				name="sJunmunNo" />
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sSendTime"
            				name="sSendTime" />
            			<w2:column dataType="text" id="sBankRspCode"
            				name="sBankRspCode" />
            			<w2:column dataType="text" id="sOutAcctNo"
            				name="sOutAcctNo" />
            			<w2:column dataType="text" id="nOutAmount"
            				name="nOutAmount" />
            			<w2:column dataType="text" id="sOutBalAmount"
            				name="sOutBalAmount" />
            			<w2:column dataType="text" id="sInBankCode_old"
            				name="sInBankCode_old" />
            			<w2:column dataType="text" id="sInAcctNo"
            				name="sInAcctNo" />
            			<w2:column dataType="text" id="sBankOwnerName"
            				name="sBankOwnerName" />
            			<w2:column dataType="text" id="sPassword"
            				name="sPassword" />
            			<w2:column dataType="text" id="sSender"
            				name="sSender" />
            			<w2:column dataType="text" id="sReceiver"
            				name="sReceiver" />
            			<w2:column dataType="text" id="sAgainSign"
            				name="sAgainSign" />
            			<w2:column dataType="text" id="sDealKindCode"
            				name="sDealKindCode" />
            			<w2:column dataType="text"
            				id="nNoTransFeeAmount" name="nNoTransFeeAmount" />
            			<w2:column dataType="text" id="nNoTransAmount"
            				name="nNoTransAmount" />
            			<w2:column dataType="text" id="sCmsCode"
            				name="sCmsCode" />
            			<w2:column dataType="text" id="sServiceType"
            				name="sServiceType" />
            			<w2:column dataType="text" id="sFundUnityYN"
            				name="sFundUnityYN" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sInBankCode"
            				name="sInBankCode" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_BANK109"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="packetLength"
            				name="packetLength" />
            			<w2:column dataType="text" id="sBankJoinNo"
            				name="sBankJoinNo" />
            			<w2:column dataType="text" id="sBankCode_old"
            				name="sBankCode_old" />
            			<w2:column dataType="text" id="sJunmunCode"
            				name="sJunmunCode" />
            			<w2:column dataType="text" id="sDealType"
            				name="sDealType" />
            			<w2:column dataType="text" id="sJunmunNo"
            				name="sJunmunNo" />
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sSendTime"
            				name="sSendTime" />
            			<w2:column dataType="text" id="sBankRspCode"
            				name="sBankRspCode" />
            			<w2:column dataType="text" id="sOutAcctNo"
            				name="sOutAcctNo" />
            			<w2:column dataType="text" id="nOutAmount"
            				name="nOutAmount" />
            			<w2:column dataType="text" id="sOutBalAmount"
            				name="sOutBalAmount" />
            			<w2:column dataType="text" id="sInBankCode_old"
            				name="sInBankCode_old" />
            			<w2:column dataType="text" id="sInAcctNo"
            				name="sInAcctNo" />
            			<w2:column dataType="text" id="sBankOwnerName"
            				name="sBankOwnerName" />
            			<w2:column dataType="text" id="sPassword"
            				name="sPassword" />
            			<w2:column dataType="text" id="sSender"
            				name="sSender" />
            			<w2:column dataType="text" id="sReceiver"
            				name="sReceiver" />
            			<w2:column dataType="text" id="sAgainSign"
            				name="sAgainSign" />
            			<w2:column dataType="text" id="sDealKindCode"
            				name="sDealKindCode" />
            			<w2:column dataType="text" id="sCmsCode"
            				name="sCmsCode" />
            			<w2:column dataType="text" id="sServiceType"
            				name="sServiceType" />
            			<w2:column dataType="text" id="sRealNameNo"
            				name="sRealNameNo" />
            			<w2:column dataType="text" id="sPayerNo"
            				name="sPayerNo" />
            			<w2:column dataType="text" id="sFundUnityYN"
            				name="sFundUnityYN" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sInBankCode"
            				name="sInBankCode" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCZA21"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sBankIDType"
            				name="sBankIDType" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_BANK016"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="packetLength"
            				name="packetLength" />
            			<w2:column dataType="text" id="sBankJoinNo"
            				name="sBankJoinNo" />
            			<w2:column dataType="text" id="sBankCode_old"
            				name="sBankCode_old" />
            			<w2:column dataType="text" id="sJunmunCode"
            				name="sJunmunCode" />
            			<w2:column dataType="text" id="sDealType"
            				name="sDealType" />
            			<w2:column dataType="text" id="sJunmunNo"
            				name="sJunmunNo" />
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sSendTime"
            				name="sSendTime" />
            			<w2:column dataType="text" id="nOutReqSeq"
            				name="nOutReqSeq" />
            			<w2:column dataType="text"
            				id="sStandBankCode_old" name="sStandBankCode_old" />
            			<w2:column dataType="text" id="sOutAcctNo"
            				name="sOutAcctNo" />
            			<w2:column dataType="text" id="sOutReqType"
            				name="sOutReqType" />
            			<w2:column dataType="text" id="sAutoPayDD"
            				name="sAutoPayDD" />
            			<w2:column dataType="text" id="sBankDetCode_old"
            				name="sBankDetCode_old" />
            			<w2:column dataType="text" id="sOutReqDate"
            				name="sOutReqDate" />
            			<w2:column dataType="text" id="sBankProcessYN"
            				name="sBankProcessYN" />
            			<w2:column dataType="text" id="sNoBankRspCode"
            				name="sNoBankRspCode" />
            			<w2:column dataType="text"
            				id="sDepositorIDChkYN" name="sDepositorIDChkYN" />
            			<w2:column dataType="text" id="sDepositorID"
            				name="sDepositorID" />
            			<w2:column dataType="text" id="sPayerNo"
            				name="sPayerNo" />
            			<w2:column dataType="text" id="sCustUseFiller"
            				name="sCustUseFiller" />
            			<w2:column dataType="text" id="sCompanyCode"
            				name="sCompanyCode" />
            			<w2:column dataType="text" id="sSender"
            				name="sSender" />
            			<w2:column dataType="text" id="sReceiver"
            				name="sReceiver" />
            			<w2:column dataType="text" id="sFundUnityYN"
            				name="sFundUnityYN" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sStandBankCode"
            				name="sStandBankCode" />
            			<w2:column dataType="text" id="sBankDetCode"
            				name="sBankDetCode" />
            			<w2:column dataType="text" id="sAgmInfoType"
            				name="sAgmInfoType" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCAE03"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sPayerNoGubun"
            				name="sPayerNoGubun" />
            			<w2:column dataType="text" id="sOutBankCode"
            				name="sOutBankCode" />
            			<w2:column dataType="text" id="sOutAcctNo"
            				name="sOutAcctNo" />
            			<w2:column dataType="text" id="sDepositorID"
            				name="sDepositorID" />
            			<w2:column dataType="text" id="sDepositorName"
            				name="sDepositorName" />
            			<w2:column dataType="text" id="sOutReqType"
            				name="sOutReqType" />
            			<w2:column dataType="text" id="sOutAgreeReqDate"
            				name="sOutAgreeReqDate" />
            			<w2:column dataType="text" id="sUserID"
            				name="sUserID" />
            			<w2:column dataType="text" id="sBankDelStat"
            				name="sBankDelStat" />
            			<w2:column dataType="text" id="sAgmInfoType"
            				name="sAgmInfoType" />
            			<w2:column dataType="text" id="sApplyType"
            				name="sApplyType" />
            			<w2:column dataType="text" id="sApplyYM"
            				name="sApplyYM" />
            			<w2:column dataType="text" id="sApplySer"
            				name="sApplySer" />
            			<w2:column dataType="text" id="sRecStartDate"
            				name="sRecStartDate" />
            			<w2:column dataType="text" id="sRecStartTime"
            				name="sRecStartTime" />
            			<w2:column dataType="text" id="sRecEndDate"
            				name="sRecEndDate" />
            			<w2:column dataType="text" id="sRecEndTime"
            				name="sRecEndTime" />
            			<w2:column dataType="text" id="nCallSerial"
            				name="nCallSerial" />
            			<w2:column dataType="text" id="sAcctFlag"
            				name="sAcctFlag" />
            			<w2:column dataType="text" id="sPolicyNo"
            				name="sPolicyNo" />
            			<w2:column dataType="text" id="sAgmCheckInfo"
            				name="sAgmCheckInfo" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_AgmInfoType"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="CODE"
            				name="CODE" />
            			<w2:column dataType="text" id="TEXT"
            				name="TEXT" />
            		</w2:columnInfo>
            		<w2:data use="true">
            			<w2:row>
            				<CODE />
            				<TEXT><![CDATA[선택]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[1]]></CODE>
            				<TEXT><![CDATA[서면]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[4]]></CODE>
            				<TEXT><![CDATA[녹취]]></TEXT>
            			</w2:row>
            		</w2:data>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="DsWs_DepoName"
            		repeatNode="map" userData2="//*/DACM005" />
            	<w2:dataList baseNode="list" id="DsWs_PayerNo"
            		repeatNode="map" userData2="//*/ACCAE03" />
            	<w2:dataList baseNode="list" id="DsWs_ApplyYN"
            		repeatNode="map" userData2="//*/ACCZA21" />
            	<w2:dataList baseNode="list" id="DsWs_CollTrans"
            		repeatNode="map" userData2="//*/ACCZA12" />
            	<w2:dataList baseNode="list" id="DsWs_RePayerNo"
            		repeatNode="map" userData2="//*/ACCAE03" />
            	<w2:dataList baseNode="list" id="DsWs_OutAgreeConfirm"
            		repeatNode="map" userData2="//*/ACCZA12" />
            	<w2:dataList baseNode="list" id="DsWs_CollTransWarning"
            		repeatNode="map" userData2="//*/WARNING" />
            	<w2:dataList baseNode="list" repeatNode="map"
            		id="WARNING" saveRemovedData="true">
            		<w2:columnInfo>
            			<w2:column id="msg" name="name1"
            				dataType="text">
            			</w2:column>
            			<w2:column id="level" name="name2"
            				dataType="text">
            			</w2:column>
            			<w2:column id="detail" name="name3"
            				dataType="text">
            			</w2:column>
            			<w2:column id="timestamp" name="name4"
            				dataType="text">
            			</w2:column>
            		</w2:columnInfo>
            	</w2:dataList>
            </w2:dataCollection>
            <w2:workflowCollection/>
        </xf:model>
 <script src="/cm/js/common.js"/>
 <script src="/cm/js/val_lib.js"/>
 <script src="/cm/js/util.js"/>
 <script src="/cm/js/transSub.js"/>
 <script src="/cm/js/callService.js"/>
 <script src="/cm/js/gds.js"/>
 <script src="/cm/js/wconv.js"/>
 <script src="/cm/js/wprom.js"/>
 <script src="/cm/js/convertJs/Global_Script.js"/>
 <script src="/cm/js/convertJs/LongTerm_Script.js"/>
 <script src="/cm/js/convertJs/comm_Webservice.js"/>        
 <script><![CDATA[
/*
 *===================================File description================================================
 * Create Date : 2008/06/25
 * Creater     : 서영지
 * Description : 수납이체요청 화면
 *====================================================================================================
 */

var gsSendDate;
var gsSendTime;
var gsAgnt;
var gsMatchCode;
var gsDoerUser;
//2011-08-22 서영지 추가
//2016-06-10 이재정, 출금동의 증빙자료 추가
//2016-11-22 증빙자료구분 화면 선택 추가로 미사용
//var gsAgmInfoType = "";	//증빙자료유형(서면:1, 공인인증:2, 일반인증:3, 녹취:4, ARS:5)
var gsAcctFlag = "";//계좌구분
var gsPolicyNo = "";//계약번호
var gsAgmCheckInfo = "";//동의검증정보
var gsLoanNo = "";//대출번호(장기대출 원리금 수납이체 시 필수입력)
var sStartBtnClk = false;
var bIsPopup = true;
var sToday = "";//당일자
var sysDate = "";//서버 시간
var sStrtDate = "";//서버 날짜
var sStrtTime = "";//서버 시분초.
var sEndDate = "";//서버 날짜
var sEndTime = "";//서버 시분초.
var ACCOUNT_NAME_MAIN = "0600";
var ACCOUNT_NAME_SUB = "600";
var SELF_SEND_MAIN = "0100";
var SELF_SEND_SUB = "100";
var fv_args;
var parentWin;
var pObj;
scwin.init = function() {
	//pObj 리스트
	//ds_AccTransReq
	
	var indata = $w.getParameter("param");//
	try {
		fv_args = JSON.parse(indata);
		pObj = wprom.getParamObject();

		parentWin = wprom.getParamObject(); 
	} catch(e) {}
	
    //-----서버 시간 받기
    //transaction("getServerTime", "NewGen::getServerTime.jsp", "", "gDs_ServerTime=output", "", "tr_callback");
    gfn_getServerTime();
    scwin.tr_callback("getServerTime","0","");
};

//**************************************************************************************************
// CallBack
//**************************************************************************************************
scwin.tr_callback = function(ServiceId, errorCd, errorMsg) {
    if (ServiceId == "getServerTime") {
        if (errorCd != 0) {
            wprom.alert("errorCd:::[" + errorCd + "] errorMsg:::[" + errorMsg + "]");
        } else {
            gsSendDate = gds.gDs_ServerTime.getCellData(0, "sToday").substr(0, 8);
            gsSendTime = gds.gDs_ServerTime.getCellData(0, "sToday").substr(8, 6);

            //파라미터 세팅
            scwin.setPopUpParamSetting(); 
        }
    }
};

//**************************************************************************************************
// Parameter로 받은 값들을 화면에 보여준다.
//**************************************************************************************************
scwin.setPopUpParamSetting = function() {

	//var parentWin = wprom.getParent();
    sApplyType.setValue(pObj.ds_AccTransReq.getCellData(0, "sApplyType")); //청약번호구분
    sApplyYM.setValue(pObj.ds_AccTransReq.getCellData(0, "sApplyYM")); //청약번호년도
    sApplySer.setValue(pObj.ds_AccTransReq.getCellData(0, "sApplySer")); //청약번호SEQ
    sOutBankCode.setValue(pObj.ds_AccTransReq.getCellData(0, "sOutBankCode")); //은행번호
    sOutAcctNo.setValue(pObj.ds_AccTransReq.getCellData(0, "sOutAcctNo")); //출금계좌번호
    sDepoOwnerID.setValue(pObj.ds_AccTransReq.getCellData(0, "sDepoOwnerID")); //예금주코드	
    sDepoOwnerID1.setValue(pObj.ds_AccTransReq.getCellData(0, "sDepoOwnerID")); //계약자코드
    sDepoName1.setValue(pObj.ds_AccTransReq.getCellData(0, "sDepoName")); //계약자명	
    nOutAmt.setValue(pObj.ds_AccTransReq.getCellData(0, "nRectPrem")); //출금금액
    gsDoerUser = pObj.ds_AccTransReq.getCellData(0, "sDoerUser"); //2011-08-22 서영지. TM대리점수납관련 사용인 추가
   
    gsAgnt = pObj.ds_AccTransReq.getCellData(0, "sAgnt"); //취급자
    if (gsAgnt == "" || gsAgnt == null) {
        gsAgnt = util.getGdsValue("gUserID");
    }
    //2011-08-22 서영지 추가.
    gsMatchCode = pObj.ds_AccTransReq.getCellData(0, "sMatchCode"); //입금안내번호.은행전문통해서 받음
    //2016-06-10 이재정, 출금동의 증빙자료 추가
    //gsAgmInfoType = parentWin.ds_AccTransReq.GetColumn(0, "sAgmInfoType");
    cmbAgmInfoType.setValue(pObj.ds_AccTransReq.getCellData(0, "sAgmInfoType"));
    gsAcctFlag = pObj.ds_AccTransReq.getCellData(0, "sAcctFlag");
    gsPolicyNo = pObj.ds_AccTransReq.getCellData(0, "sPolicyNo");
    gsAgmCheckInfo = pObj.ds_AccTransReq.getCellData(0, "sAgmCheckInfo");
    gsLoanNo = pObj.ds_AccTransReq.getCellData(0, "sLoanNo");
    //2011-03-03 서영지 추가. 테스트 계좌(16자리)인 경우 기본값 세팅
    if (sOutAcctNo.getValue() == "1111111111111111") {
        scwin.setTestData();
    } else {
        //이체요청, 출금동의 버튼 비활성화
        Btn_Req.setDisabled(true);
        Btn_Confirm.setDisabled(true);

        //2009-05-13 서영지 추가. 팝업이 아니면 청약번호,계좌번호등 ENABLE
        if (sApplyType.getValue() == "" && sApplyYM.getValue() == "" && sApplySer.getValue() == "") {
            sApplyType.setDisabled(false);
            sApplyYM.setDisabled(false);
            sApplySer.setDisabled(false);
            sOutBankCode.setDisabled(false);
            sOutAcctNo.setDisabled(false);
            sDepoOwnerID.setDisabled(false);
            nOutAmt.setDisabled(false);
            sOutBankCode.setValue("");
            //2016-06-10 이재정, 출금동의 증빙자료 추가
            //팝업이 아닌경우(관리자화면) 증빙자료유형 서면(1)으로 셋팅
            bIsPopup = false;
            //gsAgmInfoType = "1";
            cmbAgmInfoType.setValue("1");
            sApplyType.setValue("T");
        }
    }



    //2016-06-10 이재정, 출금동의 증빙자료 추가
    //증빙자료 유형이 콜(녹취)이 아니면 녹취시작 버튼 비활성화
    if (cmbAgmInfoType.getValue() != "4") {
        bRecStart.setDisabled(true);
        Static26.setValue(":: 계좌확인->출금동의->이체요청 순으로 작업하세요");
    }
};

//**************************************************************************************************
// 예금주명을 조회한다.
//**************************************************************************************************
scwin.getDepoName = function() {
    if (!scwin.checkAvailAcctNo()) {
        return;
    }
    //2011-03-03 서영지 추가.
    //입력값 체크
    if (!scwin.checkValue()) {
        return;
    }


    //2009-02-16 서영지 추가. 농협 계좌번호 유효성 체크
    //2009-05-13 서영지 막음. 농협,단위농협 둘다 사용하기 위함.
    //if ( !checkAcctNoCommon(sOutBankCode.value, sOutAcctNo.value) ) {
    //	return;
    //}
    // 1. 전문번호 채번을 위한 Document.
    wconv.clear(Ds_ACCZA31);
    var insRow = util.appendRow(Ds_ACCZA31);
    Ds_ACCZA31.setCellData(0, "sSendDate", gsSendDate);
    Ds_ACCZA31.setCellData(0, "sBankCode", sOutBankCode.getValue());
    Ds_ACCZA31.setCellData(0, "sMainDealType", ACCOUNT_NAME_MAIN);
    Ds_ACCZA31.setCellData(0, "sSubDealType", ACCOUNT_NAME_SUB);
    Ds_ACCZA31.setCellData(0, "sInputTime", gsSendTime);
    Ds_ACCZA31.setCellData(0, "sUserID", util.getGdsValue("gUserID"));

    // 2. 은행 예금주 조회를 위한 Document 선언.
    wconv.clear(Ds_BANK005);
    var insRow = util.appendRow(Ds_BANK005);
    Ds_BANK005.setCellData(0, "packetLength", 149);
    Ds_BANK005.setCellData(0, "sBankCode", sOutBankCode.getValue());
    Ds_BANK005.setCellData(0, "sJunmunCode", ACCOUNT_NAME_MAIN);
    Ds_BANK005.setCellData(0, "sDealType", ACCOUNT_NAME_SUB);
    Ds_BANK005.setCellData(0, "sSendDate", gsSendDate);
    Ds_BANK005.setCellData(0, "sSendTime", gsSendTime);
    Ds_BANK005.setCellData(0, "sDealDate", gsSendDate);
    Ds_BANK005.setCellData(0, "sDealBankCode", sOutBankCode.getValue());
    Ds_BANK005.setCellData(0, "sBankOwnerID", sDepoOwnerID.getValue());
    Ds_BANK005.setCellData(0, "sDealAcctNo", sOutAcctNo.getValue());
    wconv.clear(DsWs_DepoName);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = SOBJ_Accounting.CreateMethodObj("perform");
    setHeader("hashtable", "AccountingBankTask", "BANK005");
    addSingleData("ACCZA31", "ACCZA31", Ds_ACCZA31); //전문번호 채번
    addSingleData("BANK005", "BANK005", Ds_BANK005); //예금주 조회
    setTail("hashtable");
    SOBJ_Accounting.CreateObj("in0");
    MethodObj.in0 = insertStr;

    //trace(replace(insertStr, "><", ">\n  <"));		
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_DepoName, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingBankTask", "BANK005");
	MethodObj.setId("BANK005");
    MethodObj.addSingleData("ACCZA31", "ACCZA31", "Ds_ACCZA31"); //전문번호 채번
    MethodObj.addSingleData("BANK005", "BANK005", "Ds_BANK005"); //예금주 조회
	MethodObj.setUrl("/common/CBSO016PController.do");  	// 서버단 호출 URL (수납 확정)    
	MethodObj.setXPath("//*/DACM005");	// XPath
	MethodObj.addXPath("//WARNING");	// XPath
	MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
	MethodObj.sync();					// 동기 처리[기본(async:비동기)]
	MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>
	
	DsWs_DepoName.setJSON( _tranSync.getDsJson("DACM005"));    
	WARNING.setJSON( _tranSync.getDsJson("WARNING"));    
    //trace(DOBJ_DepoName.Contents);
    //trace(DsWs_DepoName.savexml());
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다.");
        return;
    }
    if (DsWs_DepoName.getCellData(0, "sBankRspCode") == "0000") {
        //2010-05-06 유연재 추가(고객신용관련 로그)
        gfn_LogCreditInfo("", "", "S", sDepoOwnerID.getValue());
        sDepoName.setValue(DsWs_DepoName.getCellData(0, "sBankOwnerName"));

        //납부자번호 조회. 2008-01-02 서영지 추가
        //getPayerNo();
        //2016-06-10 이재정, 출금동의 증빙자료 추가
        //예금주명 조회 되었을때 이체요청 및 출금동의 버튼 활성화
        Btn_Req.setDisabled(false); //이체요청 버튼 활성화	
        Btn_Confirm.setDisabled(false);
        wprom.alert("예금주가 조회되었습니다");
    } else {
        wprom.alert(DsWs_DepoName.getCellData(0, "sBankRspMsg"));
    }
};

//**************************************************************************************************
// 납부자번호를 조회한다.
//**************************************************************************************************
scwin.getPayerNo = function() {
    wconv.clear(DsWs_PayerNo);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCollTask", "selectPayerNo", "", "");
    gfn_SetParam(MethodObj, "sOutBankCode", sOutBankCode.getValue());
    gfn_SetParam(MethodObj, "sOutAcctNo", sOutAcctNo.getValue());
    gfn_SetParam(MethodObj, "sDepositorID", sDepoOwnerID.getValue());
    gfn_SetParam(MethodObj, "sOutReqType", "1"); //출금신청구분(1:신규 2:해지)
    gfn_SetParam(MethodObj, "sBankCode", sOutBankCode.getValue());

    //은행ID구분 (1:일반계좌, 2:가상계좌, 3:수납이체)
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (sOutBankCode.getValue() == "11" || sOutBankCode.getValue() == "011") {
        //농협
        gfn_SetParam(MethodObj, "sBankIDType", "3");
    } else {
        gfn_SetParam(MethodObj, "sBankIDType", "1");
    }
    gfn_SetParam(MethodObj, "sUserID", util.getGdsValue("gUserID"));
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_PayerNo, MethodObj);
    */
	var MethodObj = new callService("AccountingCollTask", "selectPayerNo");
	MethodObj.setId("getAgentList");
	MethodObj.setParam("sAgentCode", gUserID);
	MethodObj.setUrl("/common/CBSO016PController.do");
	MethodObj.setXPath("//*/ADMAC03");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.interfaceKey(_tranSync.result.serviceDs);
	DsWs_PayerNo.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
    
    //trace(DOBJ_PayerNo.Contents);
    //trace(DsWs_PayerNo.SaveXML());
    if (result == false) {
        wprom.alert("웹서비스 이상입니다.");
        return;
    }
    sPayerNo.setValue(DsWs_PayerNo.getCellData(0, "sPayerNo"));
    Btn_Req.setDisabled(false); //이체요청 버튼 활성화
    //출금동의 버튼 활성/비활성화
    if (sPayerNo.getValue() == "") {
        Btn_Confirm.setDisabled(false);
    } else {
        Btn_Confirm.setDisabled(true);
    }
};

//**************************************************************************************************
// 입력값을 체크한다.
//**************************************************************************************************
scwin.checkValue = function(myForm) {
    if (sOutBankCode.getValue() == "") {
        wprom.alert("'은행'을 선택해주십시오.");
        sOutBankCode.focus();
        return false;
    }
    if (sOutAcctNo.getValue() == "") {
        wprom.alert("'출금계좌번호'를 선택해주십시오.");
        sOutAcctNo.focus();
        return false;
    }
    if (sDepoOwnerID.getValue() == "") {
        wprom.alert("'예금주코드'를 선택해주십시오.");
        sDepoOwnerID.focus();
        return false;
    }
    if (wconv.Length(sDepoOwnerID.getValue()) != 10 && wconv.Length(sDepoOwnerID.getValue()) != 13) {
        wprom.alert("예금주ID는 주민등록번호(13) 또는 사업자등록번호(10)중 하나를 등록하셔야 합니다. 확인하십시오.");
        sDepoOwnerID.focus();
        return false;
    }
    return true;
};

//**************************************************************************************************
// 은행변경시 출금계좌번호 및 예금주코드, 예금주명 reset
//**************************************************************************************************
scwin.sOutBankCode_OnChanged = function(info) {
    sOutAcctNo.setValue("");
    sDepoOwnerID.setValue("");
    sDepoName.setValue("");

    //2008-01-02 서영지 추가. 은행변경시 납부자번호 Clear, 출금동의 버튼 활성화
    sPayerNo.setValue("");
    Btn_Confirm.setDisabled(false);
};

//**************************************************************************************************
// 출금계좌번호및 예금주 id 변경시 예금주명 reset, 이체요청버튼 비활성화
//**************************************************************************************************
scwin.sOutAcctNo_OnChanged = function() {
    //2011-03-03. 테스트 계좌(16자리)이면 성명조회, 출금동의하지 않고, 자동으로 값 세팅
    if (sOutAcctNo.getValue() == "1111111111111111") {
        scwin.setTestData();
    } else {
        sDepoName.setValue("");
        Btn_Req.setDisabled(true);

        //2008-01-02 서영지 추가. 은행변경시 납부자번호 Clear, 출금동의 버튼 활성화
        sPayerNo.setValue("");
        Btn_Confirm.setDisabled(false);
    }
};

//**************************************************************************************************
// 은행 출금동의적용여부를 조회한다.
//**************************************************************************************************
scwin.getOutAgreeApplyYN = function() {
    if (!scwin.checkAvailAcctNo()) {
        return;
    }
    //2011-03-03 서영지 추가.
    wconv.clear(DsWs_ApplyYN);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCollTask", "selectBankInfo", "", "");
    */
    var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "selectBankInfo");
	MethodObj.setId("selectBankInfo");
    MethodObj.setParam( "sBankCode", sOutBankCode.getValue());
    //은행ID구분 (1:일반계좌, 2:가상계좌, 3:수납이체)
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (sOutBankCode.getValue() == "11" || sOutBankCode.getValue() == "011") {
        //농협
        MethodObj.setParam( "sBankIDType", "3");
    } else {
        MethodObj.setParam( "sBankIDType", "1");
    }
    //var result = gfn_CallService(SOBJ_Accounting, DOBJ_ApplyYN, MethodObj);

	MethodObj.setUrl("/common/CBSO016PController.do");
	MethodObj.setXPath("//*/ACCZA21");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	util.jSonDsCreate(_tranSync.getDsJson("ACCZA21"), "DsWs_ApplyYN");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");

    //trace(DOBJ_ApplyYN.Contents);
    //trace(DsWs_ApplyYN.SaveXML());	
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다. [AccountingCollTask.selectBankInfo]");
        return;
    }

    //이체요청
    scwin.getCollTransReceipt(DsWs_ApplyYN.getCellData(0, "sOutAgreeApplyYN"));
};

//**************************************************************************************************
// 수납이체를 요청한다.
//**************************************************************************************************
scwin.getCollTransReceipt = function(sOutAgreeApplyYN) {
    //입력값 확인
    if (sApplyType.getValue() == "") {
        wprom.alert("'청약번호'를 입력하십시오.");
        sApplyType.focus();
        return;
    }
    if (sApplyYM.getValue() == "") {
        wprom.alert("'청약번호'를 입력하십시오.");
        sApplyYM.focus();
        return;
    }
    if (sApplySer.getValue() == "") {
        wprom.alert("'청약번호'를 입력하십시오.");
        sApplySer.focus();
        return;
    }
    if (nOutAmt.getValue() == "" || nOutAmt.getValue() == "0") {
        wprom.alert("'출금액'을 입력하십시오.");
        nOutAmt.focus();
        return;
    }

    //출금액이 700보다 커야 함.
    if (wconv.toNumber(nOutAmt.getValue()) < 700) {
        wprom.alert("출금액의 최소금액은 700으로 입력하셔야 합니다. 확인하십시오");
        return;
    }

    //1. 예금주명 확인 
    if (sDepoName.getValue() == "") {
        wprom.alert("출금계좌의 예금주명이 확인이 되지 않았습니다. 계좌확인버튼으로 확인하십시오...");
        Btn_Depo.focus();
        return;
    }

    //출금동의 확인. 2008-01-02 서영지 추가
    if (sPayerNo.getValue() == "") {
        wprom.alert("출금계좌의 출금동의 확인이 되지 않았습니다. '출금동의'버튼으로 확인하십시오...");
        Btn_Confirm.focus();
        return;
    }

    //이체동의 확인 메세지
    var msg = "고객님이 지정하신 출금계좌로부터 더케이손해보험 명의의 입금계좌로 보험료 " + nOutAmt.getValue() + "원이 실시간 자동이체됩니다. 고객님의 출금계좌에서 여러 건(카드대금결제, 어음수표대금결제, 타자동이체 등)을 출금해야 할 경우 예금잔액을 확인하시기 바라며 보험료 이체 후 예금잔액부족으로 인한 손해는 그 귀책사유가 고객님에게 있습니다.";
    if (!confirm("\"" + msg  + "\"" + "\n\n위 사항에 동의하십니까?")) {
        return;
    }

    //2. 수납이체 처리를 위한 Document 선언.
    wconv.clear(Ds_ACCAE01);
    Ds_ACCAE01.insertRow(0);
    Ds_ACCAE01.setCellData(0, "sApplyType", sApplyType.getValue()); //청약번호구분
    Ds_ACCAE01.setCellData(0, "sApplyYM", sApplyYM.getValue()); //청약번호년월
    Ds_ACCAE01.setCellData(0, "sApplySer", sApplySer.getValue()); //청약번호Ser
    Ds_ACCAE01.setCellData(0, "sOutBankCode", sOutBankCode.getValue()); //출금은행코드
    Ds_ACCAE01.setCellData(0, "sOutAcctNo", sOutAcctNo.getValue()); //출금계좌번호
    Ds_ACCAE01.setCellData(0, "sDepositorID", sDepoOwnerID.getValue()); //예금주코드
    Ds_ACCAE01.setCellData(0, "sDepositorName", sDepoName.getValue()); //예금주명
    Ds_ACCAE01.setCellData(0, "nOutAmt", nOutAmt.getValue()); //출금금액
    Ds_ACCAE01.setCellData(0, "sDealDate", gsSendDate); //거래일자
    Ds_ACCAE01.setCellData(0, "sInputTime", gsSendTime); //입력시간
    Ds_ACCAE01.setCellData(0, "sUserID", util.getGdsValue("gUserID")); //사용자id
    Ds_ACCAE01.setCellData(0, "sFirstAgnt", gsAgnt); //최초취급자
    Ds_ACCAE01.setCellData(0, "sLastAgnt", gsAgnt); //최종취급자
    Ds_ACCAE01.setCellData(0, "sMatchCode", gsMatchCode); //입금안내번호
    Ds_ACCAE01.setCellData(0, "sPayerNo", sPayerNo.getValue()); //납부자번호. 2008-01-02 서영지 추가
    Ds_ACCAE01.setCellData(0, "sOutAgreeApplyYN", sOutAgreeApplyYN);
    Ds_ACCAE01.setCellData(0, "sDoerUser", gsDoerUser); //2011-08-22 서영지. TM대리점수납관련 사용인 추가
    Ds_ACCAE01.setCellData(0, "sLoanNo", gsLoanNo);

    //3. 수납이체 처리 시 전문번호를 채번하기 위한 Document 선언.
    wconv.clear(Ds_ACCZA31_1);
    Ds_ACCZA31_1.insertRow(0);
    Ds_ACCZA31_1.setCellData(0, "sSendDate", gsSendDate);
    Ds_ACCZA31_1.setCellData(0, "sInputTime", gsSendTime);
    Ds_ACCZA31_1.setCellData(0, "sUserID", util.getGdsValue("gUserID"));
    Ds_ACCZA31_1.setCellData(0, "sBankCode", sOutBankCode.getValue()); //출금은행코드
    Ds_ACCZA31_1.setCellData(0, "sWorkType", "4"); //처리유형[수납이체]
    //4. 당행송금과 타행송금을 구분한다.
    //2008-01-02 서영지 수정. 출금동의적용여부='Y'이면 0109/100(전금법시행전문), 아니면 0100/100(전금법이전전문)
    if (sOutAgreeApplyYN == "Y") {
        Ds_ACCZA31_1.setCellData(0, "sMainDealType", "0109");
        Ds_ACCZA31_1.setCellData(0, "sSubDealType", "100");

        //수납이체 처리를 위한 은행 전문 Document 선언.
        wconv.clear(Ds_BANK003);
        wconv.clear(Ds_BANK109);
        Ds_BANK109.insertRow(0);
        Ds_BANK109.setCellData(0, "packetLength", "245");
        Ds_BANK109.setCellData(0, "sSendDate", gsSendDate);
        Ds_BANK109.setCellData(0, "sSendTime", gsSendTime);
        Ds_BANK109.setCellData(0, "sBankCode", sOutBankCode.getValue()); //출금은행코드
        Ds_BANK109.setCellData(0, "sOutAcctNo", sOutAcctNo.getValue()); //출금계좌번호
        Ds_BANK109.setCellData(0, "nOutAmount", nOutAmt.getValue()); //출금금액	
        Ds_BANK109.setCellData(0, "sRealNameNo", sDepoOwnerID.getValue()); //실명번호
        Ds_BANK109.setCellData(0, "sPayerNo", sPayerNo.getValue()); //납부자번호
        Ds_BANK109.setCellData(0, "sCmsCode", "9999999"); //cms code
        Ds_BANK109.setCellData(0, "sJunmunCode", Ds_ACCZA31_1.getCellData(0, "sMainDealType"));
        Ds_BANK109.setCellData(0, "sDealType", Ds_ACCZA31_1.getCellData(0, "sSubDealType"));
        Ds_BANK109.setCellData(0, "sDealKindCode", "20"); //거래구분[수납출금]
        //Ds_BANK109.SetColumn(0, "sBankOwnerName", "교원에듀카");//2004-07-26. 서영지 수정. 백과장님 요청. 통장적요변경
        Ds_BANK109.setCellData(0, "sBankOwnerName", "더케이손해보험"); //2008-10-30. 서영지 수정. CI변경 
        Ds_BANK109.setCellData(0, "sServiceType", "DY2");
    } else {
        Ds_ACCZA31_1.setCellData(0, "sMainDealType", SELF_SEND_MAIN); //당행송금
        Ds_ACCZA31_1.setCellData(0, "sSubDealType", SELF_SEND_SUB);

        //수납이체 처리를 위한 은행 전문 Document 선언.
        wconv.clear(Ds_BANK109);
        wconv.clear(Ds_BANK003);
        Ds_BANK003.insertRow(0);
        Ds_BANK003.setCellData(0, "packetLength", "194");
        Ds_BANK003.setCellData(0, "sSendDate", gsSendDate);
        Ds_BANK003.setCellData(0, "sSendTime", gsSendTime);
        Ds_BANK003.setCellData(0, "sBankCode", sOutBankCode.getValue()); //출금은행코드
        Ds_BANK003.setCellData(0, "sOutAcctNo", sOutAcctNo.getValue()); //출금계좌번호
        Ds_BANK003.setCellData(0, "nOutAmount", nOutAmt.getValue()); //출금금액
        Ds_BANK003.setCellData(0, "sCmsCode", "9999999"); //cms code
        Ds_BANK003.setCellData(0, "sJunmunCode", Ds_ACCZA31_1.getCellData(0, "sMainDealType"));
        Ds_BANK003.setCellData(0, "sDealType", Ds_ACCZA31_1.getCellData(0, "sSubDealType"));
        Ds_BANK003.setCellData(0, "sDealKindCode", "20"); //거래구분[수납출금]
        //Ds_BANK003.SetColumn(0, "sBankOwnerName", "교원에듀카");//2004-07-26. 서영지 수정. 백과장님 요청. 통장적요변경
        Ds_BANK003.setCellData(0, "sBankOwnerName", "더케이손해보험"); //2008-10-30. 서영지 수정. CI변경
        Ds_BANK003.setCellData(0, "sServiceType", "DY2");
    }


    //6. 수납이체 처리를 위한 Parameter 생성.
    wconv.clear(DsWs_CollTrans);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = SOBJ_Accounting.CreateMethodObj("perform");
    setHeader("hashtable", "AccountingCollTask", "sendCollTransReceipt");
    addSingleData("ACCAE01", "ACCAE01", Ds_ACCAE01);
    addSingleData("ACCZA31", "ACCZA31", Ds_ACCZA31_1);
    addSingleData("BANK003", "BANK003", Ds_BANK003);
    addSingleData("BANK109", "BANK109", Ds_BANK109);
    setTail("hashtable");
    SOBJ_Accounting.CreateObj("in0");
    MethodObj.in0 = insertStr;

    //trace(replace(insertStr, "><", ">\n  <"));		
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_CollTrans, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "sendCollTransReceipt");
	MethodObj.setId("sendCollTransReceipt");
    MethodObj.addSingleData("ACCAE01", "ACCAE01", "Ds_ACCAE01:A");
    MethodObj.addSingleData("ACCZA31", "ACCZA31", "Ds_ACCZA31_1:A");
    MethodObj.addSingleData("BANK003", "BANK003", "Ds_BANK003:A");
    MethodObj.addSingleData("BANK109", "BANK109", "Ds_BANK109:A");
	MethodObj.setUrl("/common/CBSO016PController.do");  	// 서버단 호출 URL (수납 확정)    
	MethodObj.setXPath("//*/ACCZA12");	// XPath
	MethodObj.addXPath("//WARNING");	// XPath
	MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
	MethodObj.sync();					// 동기 처리[기본(async:비동기)]
	MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>
	util.jSonDsCreate(_tranSync.getDsJson("ACCZA12"), "DsWs_CollTrans");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "DsWs_CollTransWarning");
    
    //trace(DOBJ_CollTrans.Contents);
    //trace(DsWs_CollTrans.savexml());
//    if (result == false) {
//        wprom.alert("웹서비스 이상입니다.");
//        return;
//    }
    if (DsWs_CollTransWarning.getRowCount() != 0) {
        wprom.alert(DsWs_CollTransWarning.getCellData(0, "msg"));
        return;
    } else {
        var sRspCode = DsWs_CollTrans.getCellData(0, "sBankRspCode");
        var sRspText = DsWs_CollTrans.getCellData(0, "sBankRspMsg");

        //응답코드가 '0000'이 아닌 경우에는 에러코드를 보여준다.
        if (sRspCode == "0000") {
            //2010-05-06 유연재 추가(고객신용관련 로그)
            gfn_LogCreditInfo("", "", "S", sDepoOwnerID.getValue());
            wprom.alert("수납이체 처리가 완료되었습니다.");
            scwin.closePop("Y");
        } else {
            wprom.alert("에러코드 : " + sRspCode + "\n에러메시지 : " + sRspText + " ");
            //scwin.closePop("E");
        }
    }
};

//**************************************************************************************************
// 결과를 리턴하고 닫기
//**************************************************************************************************
scwin.closePop = function(sTransStat) {
	//var parentWin = wprom.getParent();
    //if (ds_AccTransReq.id == "ds_AccTransReq") {
        //parentWin.setTransStat(sTransStat);
        wprom.close(sTransStat);
    //}
};

//**************************************************************************************************
// 납부자번호를 조회한다.
//**************************************************************************************************
scwin.regetPayerNo = function() {
    if (!scwin.checkAvailAcctNo()) {
        return;
    }
    //2011-03-03 서영지 추가.
    wconv.clear(DsWs_RePayerNo);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingCollTask", "selectPayerNo", "", "");
    gfn_SetParam(MethodObj, "sOutBankCode", sOutBankCode.getValue());
    gfn_SetParam(MethodObj, "sOutAcctNo", sOutAcctNo.getValue());
    gfn_SetParam(MethodObj, "sDepositorID", sDepoOwnerID.getValue());
    gfn_SetParam(MethodObj, "sOutReqType", "1"); //출금신청구분(1:신규 2:해지)
    gfn_SetParam(MethodObj, "sBankCode", sOutBankCode.getValue());

    //은행ID구분 (1:일반계좌, 2:가상계좌, 3:수납이체)
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (sOutBankCode.getValue() == "11" || sOutBankCode.getValue() == "011") {
        //농협
        gfn_SetParam(MethodObj, "sBankIDType", "3");
    } else {
        gfn_SetParam(MethodObj, "sBankIDType", "1");
    }
    gfn_SetParam(MethodObj, "sUserID", util.getGdsValue("gUserID"));
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_RePayerNo, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "selectPayerNo");
	MethodObj.setId("selectPayerNo");
	//MethodObj.setParam("sAgentCode", gUserID);
    MethodObj.setParam( "sOutBankCode", sOutBankCode.getValue());
    MethodObj.setParam( "sOutAcctNo", sOutAcctNo.getValue());
    MethodObj.setParam( "sDepositorID", sDepoOwnerID.getValue());
    MethodObj.setParam( "sOutReqType", "1"); //출금신청구분(1:신규 2:해지)
    MethodObj.setParam( "sBankCode", sOutBankCode.getValue());

    //은행ID구분 (1:일반계좌, 2:가상계좌, 3:수납이체)
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (sOutBankCode.getValue() == "11" || sOutBankCode.getValue() == "011") {
        //농협
        MethodObj.setParam( "sBankIDType", "3");
    } else {
        MethodObj.setParam( "sBankIDType", "1");
    }
    MethodObj.setParam( "sUserID", util.getGdsValue("gUserID"));
	MethodObj.setUrl("/contract/CBSC016PSController.do");
	MethodObj.setXPath("//*/ACCAE03");
	MethodObj.addXPath("//WARNING");
	MethodObj.sync();
	MethodObj.send();
	//util.interfaceKey(_tranSync.result.serviceDs);
	//DsWs_Team.setJSON (_tranSync.getDsJson("ADMAC03")); // dataset 데이터 
	util.jSonDsCreate(_tranSync.getDsJson("ACCAE03"), "DsWs_RePayerNo");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
	util.setCompBindRefresh("DsWs_RePayerNo");
	util.setRowPosition(DsWs_RePayerNo, 0);
    
    //trace(DOBJ_RePayerNo.Contents);
    //trace(DsWs_RePayerNo.SaveXML());
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다.");
        return;
    }
    sPayerNo.setValue(DsWs_PayerNo.getCellData(0, "sPayerNo"));

    //DB에 납부자번호가 없으면 은행에 출금동의요청을 한다.
    if (sPayerNo.getValue() == "") {
        scwin.sendOutAgreeConfirm();
    }
};

//**************************************************************************************************
// 녹취시작 버튼
//**************************************************************************************************
scwin.RecStart = function() {
    // 녹취시작
    sStartBtnClk = true;
    // 서버시간 조회
    //getServerTime();
    gfn_getServerTime();
    sysDate = gds.gDs_ServerTime.getCellData(0, "sToday");
    sStrtDate = wconv.mid(sysDate, 0, 8);
    sStrtTime = wconv.mid(sysDate, 8, 6);
};

//**************************************************************************************************
// 녹취종료(출금동의저장) 버튼
//**************************************************************************************************
scwin.RecEnd = function() {
    // 녹취종료
    if (!scwin.InsertDataCheck()) {
        return;
    }


    // 서버시간 조회
    gfn_getServerTime();
    sysDate = gds.gDs_ServerTime.getCellData(0, "sToday"); // 서버시간	
    sEndDate = wconv.mid(sysDate, 0, 8);
    sEndTime = wconv.mid(sysDate, 8, 6);

    //출금동의저장
    scwin.sendOutAgreeConfirm();
};

//**************************************************************************************************
// 출금동의 증빙자료관련 유효성 검사
//**************************************************************************************************
scwin.InsertDataCheck = function() {
    //증빙자료유형(서면:1, 공인인증:2, 일반인증:3, 녹취:4, ARS:5) 확인
    if (cmbAgmInfoType.getValue() == "") {
        wprom.alert("'증빙자료유형' 정보가 없습니다.");
        return false;
    }


    //증빙자료유형 녹취(4)
    if (cmbAgmInfoType.getValue() == "4") {
        if (!sStartBtnClk) {
            wprom.alert("'녹취 시작'을 먼저 눌러주세요.");
            return false;
        }
    } else if (cmbAgmInfoType.getValue() == "1") {
        //청약번호 확인
        if (sApplyType.getValue() == "" || sApplyYM.getValue() == "" || sApplySer.getValue() == "") {
            wprom.alert("청약번호 정보가 없습니다.");
            return false;
        }
    }
    return true;
};

//**************************************************************************************************
// 은행에 출금동의요청을 한다.
//**************************************************************************************************
scwin.sendOutAgreeConfirm = function() {
    if (sPayerNo.getValue() != "") {
        wprom.alert("납부자번호가 있습니다.");
        return;
    }
    if (!scwin.checkValue()) {
        return;
    }
    if (sDepoName.getValue() == "") {
        wprom.alert("'계좌확인'을 먼저 해주십시오");
        Btn_Depo.focus();
        return;
    }


    //이체동의 확인 
    //if ( !confirm("전자금융거래법 시행령 제 10조에 의거하여 고객님 계좌에서 출금시 동의가 필요합니다. \n해당계좌로 출금하는데 동의하시겠습니까?") ) { return; }
    //2016-06-10 이재정, 출금동의 증빙자료 추가
    var sDepositerBirth = "";
    var sDID = sDepoOwnerID.getValue();
    var sBirthYY = sDID.substr(0, 2);
    var sBirthMM = sDID.substr(2, 2);
    var sBirthDD = sDID.substr(4, 2);
    var sCurrDay = gsSendDate;
    var curr_yy = sCurrDay.substr(0, 4);
    if (wconv.toNumber(sBirthYY) >= wconv.toNumber(curr_yy.substr(2, 2))) {
        sBirthYY = "19" + sBirthYY;
    } else if (wconv.toNumber(sBirthYY) < wconv.toNumber(curr_yy.substr(2, 2))) {
        sBirthYY = "20" + sBirthYY;
    }
    if (sDID.length == 13) {
        sDepositerBirth = sBirthYY + "년" + sBirthMM + "월" + sBirthDD + "일";
    }


    // [N1611-00023] 출금동의 동의 문구 변경요청. 2017.01.18. 여경수
    var sAgreeConfirmMsg = "<전자금융거래법 제15조 및 동법 시행령 제10조에 따른 출금동의>\n\n";
    sAgreeConfirmMsg = sAgreeConfirmMsg + "예금주이신 [ " + sDepoName.getValue() + " ] 님의\n";
    if (sDID.length == 13) {
        sAgreeConfirmMsg = sAgreeConfirmMsg + "생년월일은 [ " + sDepositerBirth + " ] 이라 하셨고,\n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "전화받으시는 분이 본인이라고 하셨습니다.\n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "맞으십니까? (대답 확인 必)\n";
    } else if (sDID.length == 10) {
        sAgreeConfirmMsg = sAgreeConfirmMsg + "사업자번호는 [ " + sDID.substr(0, 3) + "-" + sDID.substr(3, 2) + "-" + sDID.substr(5, 10) + " ] 이라 하셨고,\n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "전화받으시는 분의 성함과 예금주와의 관계가 \n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "어떻게 되십니까? (대답 확인 必)\n";
    } else {
        sAgreeConfirmMsg = sAgreeConfirmMsg + "사업자번호는 [ " + sDID + " ] 이라 하셨고,\n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "전화받으시는 분의 성함과 예금주와의 관계가 \n";
        sAgreeConfirmMsg = sAgreeConfirmMsg + "어떻게 되십니까? (대답 확인 必)\n";
    }
    sAgreeConfirmMsg = sAgreeConfirmMsg + "또한, [ " + sOutBankCode.getValue() + " ] 은행, 계좌번호 [ " + sOutAcctNo.getValue() + " ] 에서\n";
    sAgreeConfirmMsg = sAgreeConfirmMsg + "즉시출금 되는 부분에 동의하시겠습니까? (대답 확인 必)\n";
    if (!wprom.confirm(sAgreeConfirmMsg)) {
        return; /*return wprom.confirm(가이드참조)*/
    }


    //출금동의 등록을 위한 Document
    wconv.clear(Ds_ACCAE03);
    var insRow = util.appendRow(Ds_ACCAE03);
    Ds_ACCAE03.setCellData(0, "sPayerNoGubun", gsSendDate + sOutBankCode.getValue()); //납부자번호구성 : 일자(8) + 은행(2) + 일련번호(7)
    Ds_ACCAE03.setCellData(0, "sOutBankCode", sOutBankCode.getValue()); //출금은행코드
    Ds_ACCAE03.setCellData(0, "sOutAcctNo", sOutAcctNo.getValue()); //출금계좌번호
    Ds_ACCAE03.setCellData(0, "sDepositorID", sDepoOwnerID.getValue()); //예금주코드
    Ds_ACCAE03.setCellData(0, "sDepositorName", sDepoName.getValue()); //예금주명
    Ds_ACCAE03.setCellData(0, "sOutReqType", "1"); //출금신청구분	
    Ds_ACCAE03.setCellData(0, "sOutAgreeReqDate", gsSendDate); //출금동의신청일자
    Ds_ACCAE03.setCellData(0, "sUserID", util.getGdsValue("gUserID")); //사용자ID  
    Ds_ACCAE03.setCellData(0, "sBankDelStat", "N"); //은행삭제상태
    //2016-06-10 이재정, 출금동의 증빙자료 추가
    //Ds_ACCAE03.SetColumn(0, "sAgmInfoType", gsAgmInfoType);
    Ds_ACCAE03.setCellData(0, "sAgmInfoType", cmbAgmInfoType.getValue());
    Ds_ACCAE03.setCellData(0, "sApplyType", sApplyType.getValue());
    Ds_ACCAE03.setCellData(0, "sApplyYM", sApplyYM.getValue());
    Ds_ACCAE03.setCellData(0, "sApplySer", sApplySer.getValue());
    Ds_ACCAE03.setCellData(0, "sRecStartDate", sStrtDate);
    Ds_ACCAE03.setCellData(0, "sRecStartTime", sStrtTime);
    Ds_ACCAE03.setCellData(0, "sRecEndDate", sEndDate);
    Ds_ACCAE03.setCellData(0, "sRecEndTime", sEndTime);
    Ds_ACCAE03.setCellData(0, "nCallSerial", gds.gCallSerial);
    Ds_ACCAE03.setCellData(0, "sAcctFlag", gsAcctFlag);
    Ds_ACCAE03.setCellData(0, "sPolicyNo", gsPolicyNo);
    Ds_ACCAE03.setCellData(0, "sAgmCheckInfo", gsAgmCheckInfo);

    //전문번호 채번을 위한 Document	
    wconv.clear(Ds_ACCZA31);
    var insRow = util.appendRow(Ds_ACCZA31);
    Ds_ACCZA31.setCellData(0, "sSendDate", gsSendDate);
    Ds_ACCZA31.setCellData(0, "sBankCode", sOutBankCode.getValue());
    Ds_ACCZA31.setCellData(0, "sMainDealType", "0600");
    Ds_ACCZA31.setCellData(0, "sSubDealType", "501");
    Ds_ACCZA31.setCellData(0, "sInputTime", gsSendTime);
    Ds_ACCZA31.setCellData(0, "sUserID", util.getGdsValue("gUserID"));

    //은행 출금동의를 위한 Document
    wconv.clear(Ds_BANK016);
    var insRow = util.appendRow(Ds_BANK016);
    Ds_BANK016.setCellData(0, "packetLength", "183");
    Ds_BANK016.setCellData(0, "sBankCode", sOutBankCode.getValue());
    Ds_BANK016.setCellData(0, "sJunmunCode", "0600");
    Ds_BANK016.setCellData(0, "sDealType", "501");
    Ds_BANK016.setCellData(0, "sSendDate", gsSendDate);
    Ds_BANK016.setCellData(0, "sSendTime", gsSendTime);
    Ds_BANK016.setCellData(0, "sStandBankCode", sOutBankCode.getValue());
    Ds_BANK016.setCellData(0, "sOutAcctNo", sOutAcctNo.getValue());
    Ds_BANK016.setCellData(0, "sOutReqType", "1"); //1:신규 2:해지
    Ds_BANK016.setCellData(0, "sBankDetCode", sOutBankCode.getValue() + "0000");
    Ds_BANK016.setCellData(0, "sDepositorIDChkYN", "Y");
    Ds_BANK016.setCellData(0, "sDepositorID", sDepoOwnerID.getValue());
    Ds_BANK016.setCellData(0, "sOutReqDate", gsSendDate);
    //2016-06-10 이재정, 출금동의 증빙자료 추가
    //Ds_BANK016.SetColumn(0, "sAgmInfoType"     ,   gsAgmInfoType);
    Ds_BANK016.setCellData(0, "sAgmInfoType", cmbAgmInfoType.getValue());

    //은행 ID 조회를 위한 Document
    wconv.clear(Ds_ACCZA21);
    var insRow = util.appendRow(Ds_ACCZA21);
    Ds_ACCZA21.setCellData(0, "sBankCode", sOutBankCode.getValue());
    //은행ID구분 (1:일반계좌, 2:가상계좌, 3:수납이체)
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (sOutBankCode.getValue() == "11" || sOutBankCode.getValue() == "011") {
        //농협
        Ds_ACCZA21.setCellData(0, "sBankIDType", "3");
    } else {
        Ds_ACCZA21.setCellData(0, "sBankIDType", "1");
    }
    wconv.clear(DsWs_OutAgreeConfirm);
    /*
    SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
    var MethodObj = SOBJ_Accounting.CreateMethodObj("perform");
    setHeader("hashtable", "AccountingCollTask", "sendOutAgreeConfirm");
    addSingleData("ACCAE03", "ACCAE03", Ds_ACCAE03);
    addSingleData("ACCZA31", "ACCZA31", Ds_ACCZA31);
    addSingleData("BANK016", "BANK016", Ds_BANK016);
    addSingleData("ACCZA21", "ACCZA21", Ds_ACCZA21);
    setTail("hashtable");
    SOBJ_Accounting.CreateObj("in0");
    MethodObj.in0 = insertStr;

    //trace(replace(insertStr, "><", ">\n  <"));		
    var result = gfn_CallService(SOBJ_Accounting, DOBJ_OutAgreeConfirm, MethodObj);
    */
	var MethodObj = new callService("com.inswave.accounting.task.AccountingCollTask", "sendOutAgreeConfirm");
	MethodObj.setId("sendOutAgreeConfirm");
	
    MethodObj.addSingleData("ACCAE03", "ACCAE03", "Ds_ACCAE03");
    MethodObj.addSingleData("ACCZA31", "ACCZA31", "Ds_ACCZA31");
    MethodObj.addSingleData("BANK016", "BANK016", "Ds_BANK016");
    MethodObj.addSingleData("ACCZA21", "ACCZA21", "Ds_ACCZA21");

	MethodObj.setUrl("/common/CBSO016PController.do");  	// 서버단 호출 URL (수납 확정)    
	MethodObj.setXPath("//*/ACCZA12");	// XPath
	MethodObj.addXPath("//WARNING");	// XPath
	MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
	MethodObj.sync();					// 동기 처리[기본(async:비동기)]
	MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>
	util.jSonDsCreate(_tranSync.getDsJson("ACCZA12"), "DsWs_OutAgreeConfirm");
	util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
    
    //trace(DOBJ_OutAgreeConfirm.Contents);
    //trace(DsWs_OutAgreeConfirm.savexml());
    if (WARNING.getRowCount() != 0) {
        wprom.alert("웹서비스 이상입니다. [AccountingCollTask.sendOutAgreeConfirm]");
        return;
    }
    var sRspCode = DsWs_OutAgreeConfirm.getCellData(0, "sBankRspCode"); //공통부 응답코드
    var sRspText = DsWs_OutAgreeConfirm.getCellData(0, "sBankRspMsg");
    var sNoBankRspCode = DsWs_OutAgreeConfirm.getCellData(0, "sNoBankRspCode"); //불능코드
    var sBankProcessYN = DsWs_OutAgreeConfirm.getCellData(0, "sBankProcessYN"); //처리여부
    if (sRspCode == "0000" && sNoBankRspCode == "0000" && sBankProcessYN == "Y") {
        //2010-05-06 유연재 추가(고객신용관련 로그)
        gfn_LogCreditInfo("", "", "S", sDepoOwnerID.getValue());
        wprom.alert("출금동의요청이 완료되었습니다.");
        sPayerNo.setValue(DsWs_OutAgreeConfirm.getCellData(0, "sPayerNo"));
        Btn_Confirm.setDisabled(true); //출금동의 버튼 비활성화.
        bRecStart.setDisabled(true); //녹취시작 버튼 비활성화.
        cmbAgmInfoType.setDisabled(true); //증빙자료구분 선택 비활성화. 2016.11.22
    } else {
        wprom.alert("에러코드 : " + sRspCode + "\n에러메시지 : " + sRspText + " ");
        Btn_Confirm.setDisabled(false); //출금동의 버튼 활성화. 
    }
};

//**************************************************************************************************
// 테스트 계좌 체크. 2011-03-03 서영지 추가.
//**************************************************************************************************
scwin.checkAvailAcctNo = function() {
//    wprom.alert(gSvrType.indexOf( "midprod"));
//    if (gSvrType.indexOf( "midprod") > -1 && gSvrType.indexOf( "scm_dev") > -1 && 
//       (sOutAcctNo.getValue() == "1111111111111111")) {
//        wprom.alert("잘못된 카드번호입니다.");
//    }


    //'111111111111111(16자리) 계좌번호는 테스트계에서만 사용가능하다. 
    //	if ( (substr(gAccountingUrl,7,10) != "10.1.1.129" && substr(gAccountingUrl,7,10) != "10.1.1.131") && 	     
    //	     (sOutAcctNo.value == '1111111111111111') ) {
    //		alert("잘못된 계좌번호입니다.");
    //		return false;
    //	} 
    return true;
};

//**************************************************************************************************
// 테스트 계좌 값 세팅. 2011-03-03 서영지 추가.
//**************************************************************************************************
scwin.setTestData = function() {
    Btn_Depo.setDisabled(true); //성명조회 버튼 비활성화
    Btn_Confirm.setDisabled(true); //출금동의 버튼 비활성화
    sDepoName.setValue("테스트"); //예금주명
    sPayerNo.setValue("20110303299999999"); //납부자번호
    sOutBankCode.setValue("004"); //출금은행코드
};

//**************************************************************************************************
// 닫기
//**************************************************************************************************
scwin.Btn_Close_OnClick = function(e) {
    wprom.close();
};

/*******************************************/
//  원래 newclaim/svcxml/Script/Accounting_Script.js 에 있는 소스.
//  2011.09.02  장현. 
// 개인정보 별표 처리
//  sGb(주민번호:"1",카드번호:"2",계좌번호:"3") 
//  sPrivateNo - 실제 개인정보번호
/*******************************************/
scwin.convertPriInfo = function(sGb, sPrivateNo) {
    var sConvertNo = sPrivateNo;
    //주민번호
    if (sGb == "1") {
        sConvertNo = wconv.substr(sPrivateNo, 0, 6) + "-" + wconv.substr(sPrivateNo, 6, 1) + scwin.convertStar(wconv.substr(sPrivateNo, 7));
    } else if (sGb == "2") {
        sConvertNo = wconv.substr(sPrivateNo, 0, 12) + scwin.convertStar(wconv.substr(sPrivateNo, 12));
    } else if (sGb == "3") {
        sConvertNo = wconv.substr(sPrivateNo, 0, 5) + scwin.convertStar(wconv.substr(sPrivateNo, 5));
    }
    return sConvertNo;
};

/*******************************************/
//  원래 newclaim/svcxml/Script/Accounting_Script.js 에 있는 소스.
//  2011.09.02  장현
// 문자길이 만큼 * 로 치환하여 리턴
/*******************************************/
scwin.convertStar = function(sValue) {
    var sStar;
    for (var i = 0; i < sValue.length; i++) {
        sStar += "*";
    }
    return sStar;
};

//**************************************************************************************************
// 서버시간 조회
//**************************************************************************************************
scwin.getServerTime = function() {
//    global_http.Sync = true;
//    global_https.Sync = true;
//    gds.gDs_ServerTime.removeAll();
//    transaction("getServerTime", "NewGen::getServerTime.jsp", "", "gDs_ServerTime=output", "", "global_callback");
//    global_http.Sync = false;
//    global_https.Sync = false;
};

//**************************************************************************************************
// 증빙자료구분 화면 선택 추가 2016.11.22 이재정
//**************************************************************************************************
scwin.cmbAgmInfoType_OnChanged = function(info) {
    //증빙자료 유형이 콜(녹취)이 아니면 녹취시작 버튼 비활성화
    if (cmbAgmInfoType.getValue() != "4") {
        bRecStart.setDisabled(true);
        Static26.setValue(":: 계좌확인->출금동의->이체요청 순으로 작업하세요");
    } else {
        bRecStart.setDisabled(false);
        Static26.setValue(":: 계좌확인->녹취시작->출금동의->이체요청 순으로 작업하세요");
    }
};
]]></script>
    </head>
    <body>
        <xf:group class="cont_wrap layer" id="9991" style="position:absolute; WorkArea:true;  Ver:1.0;  PidAttrib:7;" userData1="수납이체요청"
        	userData2=" OnLoadCompleted:scwin.OnLoadCompleted; ">
        	<DataObjects>
        		<DataObject />
        		<DataObject />
        		<DataObject />
        		<DataObject />
        		<DataObject />
        		<DataObject />
        	</DataObjects>
        	<ServiceObjects>
        		<ServiceObject />
        	</ServiceObjects>
        	<xf:group arcsize="8" class="sty_area_form" id="" style="position:absolute;bottom:337px;height:136px;top:30px;left:0px;width:700px;" userData3="RoundRect">
        		<xf:group class="form_w_line" id="" style="top:26px;"></xf:group>
        		<xf:group class="form_w_line" id="" style="top:53px;"></xf:group>
        		<xf:group class="form_w_line" id="" style="top:80px;left:0px;"></xf:group>
        		<xf:group class="form_w_line" id="" style="top:107px;left:0px;"></xf:group>
        	</xf:group><w2:textbox id="Static5" label="수납이체요청" style="position:absolute; VAlign:Middle;  height:22px; left:0px; top:0px; width:86px;" tagname="" class="sub_pop_title01" />
        	<xf:group arcsize="6" class="" id="Shape1" style="position:absolute;height:138px;left:0px;top:21px;width:677px;" userData3="RoundRect" />
        	<w2:textbox class="sty_lb_Basic" id="Static24" label="출금액" style="position:absolute;width:75px;left:0px;VAlign:Middle;top:138px;" tagname="" />
        	<xf:input class="sty_ipt_form" dataType="number" disabled="true" displayFormat="#,###,###,###,##0" id="nOutAmt" maxlength="20" placeholder="0"
        		style="position:absolute; text-align:right;  NullValue:0;  border-style:solid;height:20px;left:108px;top:142px;width:174px;" tabIndex="13" />
        	<xf:input class="sty_ipt_form" disabled="true" id="sDepoName1" maxlength="20"
        		style="position:absolute; ImeMode:native;  border-style:solid;  AutoSkip:TRUE;  height:20px;left:404px;top:60px; width:183px;" tabIndex="8" />
        	<w2:textbox class="sty_lb_Basic" id="Static14" label="계약자명" style="position:absolute;width:75px;left:296px;VAlign:Middle;top:57px;" tagname="" />
        	<w2:textbox class="sty_lb_Basic" id="Static25" label="출금계좌번호" style="position:absolute;width:75px;left:296px;VAlign:Middle;top:84px;" tagname="" />
        	<xf:input class="sty_ipt_form" disabled="true" ev:onchange="scwin.sOutAcctNo_OnChanged" id="sOutAcctNo" maxlength="20"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:404px;top:87px; width:183px;" tabIndex="10" />
        	<w2:textbox class="sty_lb_Basic" id="Static11" label="청약번호" style="position:absolute;width:75px;left:0px;VAlign:Middle;top:30px;" tagname="" />
        	<w2:textbox class="sty_lb_Basic" id="Static13" label="계약자코드" style="position:absolute;width:75px;left:0px;VAlign:Middle;top:57px;" tagname="" />
        	<w2:textbox class="sty_lb_Basic" id="Static23" label="은행선택" style="position:absolute;width:75px;left:0px;VAlign:Middle;top:84px;" tagname="" />
        	<xf:select1 appearance="minimal" class="sty_ipt_search" disabled="true" emptyItem="true" ev:onchange="" id="sOutBankCode"
        		style="position:absolute; INDEX:0;  border-color:user10;  border-style:solid;  height:20px;left:108px;top:88px; width:170px;" tabIndex="9" renderType="native" ev:onviewchange="scwin.sOutBankCode_OnChanged">
        		<xf:choices>
        			<xf:itemset nodeset="data:Ds_OutBankCode">
        				<xf:label ref="TEXT" />
        				<xf:value ref="CODE" />
        			</xf:itemset>
        		</xf:choices>
        	</xf:select1>
        	<xf:input class="sty_ipt_form" disabled="true" id="sDepoOwnerID1" maxlength="13"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:108px;top:60px; width:165px;" tabIndex="7" />
        	<xf:input class="sty_ipt_search" disabled="true" id="sApplyYM" maxlength="4"
        		style="position:absolute; UseIME:FALSE;  border-color:user10;  border-style:solid;  AutoSkip:TRUE;  height:20px;left:129px;top:35px; width:36px;" tabIndex="5" />
        	<xf:input class="sty_ipt_search" disabled="true" id="sApplyType" maxlength="1"
        		style="position:absolute; UseIME:FALSE;  text-transform:uppercase;  border-color:user10;  border-style:solid;  AutoSkip:TRUE;  height:20px;left:108px;top:35px; width:18px;" tabIndex="4" />
        	<xf:input class="sty_ipt_search" disabled="true" id="sApplySer" maxlength="7"
        		style="position:absolute; UseIME:FALSE;  border-color:user10;  border-style:solid;  AutoSkip:TRUE;  height:20px;left:168px;top:35px; width:60px;" tabIndex="6" />
        	<w2:textbox class="sty_lb_Basic" id="Static17" label="예금주코드" style="position:absolute;width:75px;left:0px;VAlign:Middle;top:111px;" tagname="" />
        	<xf:input class="sty_ipt_form" disabled="true" ev:onchange="scwin.sOutAcctNo_OnChanged" id="sDepoOwnerID" maxlength="13"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:108px;top:115px; width:98px;" tabIndex="11" />
        	<w2:textbox class="sty_lb_Basic" id="Static18" label="예금주명" style="position:absolute;width:75px;left:296px;VAlign:Middle;top:111px;" tagname="" />
        	<xf:input class="sty_ipt_form" disabled="true" id="sDepoName" maxlength="20"
        		style="position:absolute; ImeMode:native;  border-style:solid;  AutoSkip:TRUE;  height:20px;left:404px;top:115px; width:182px;" tabIndex="19" />
        	<xf:trigger class="detail_bu02" ev:onclick="scwin.getOutAgreeApplyYN" id="Btn_Req" style="position:absolute; ImageID:btn_Input_03;  height:18px;left:354px;top:175px; width:60px;"
        		tabIndex="22" type="anchor">
        		<xf:label><![CDATA[이체요청]]></xf:label>
        	</xf:trigger>
        	<xf:trigger class="popup_top_btn" ev:onclick="scwin.Btn_Close_OnClick" id="Btn_Close" style="position:absolute; ImageID:btn_Comm_Close;  height:20px;left:651px;top:0px;" tabIndex="23"
        		type="anchor">
        		<xf:label><![CDATA[닫기]]></xf:label>
        	</xf:trigger>
        	<w2:textbox class="sty_lb_Basic" id="Static0" label="납부자번호" style="position:absolute;width:75px;left:296px;VAlign:Middle;top:138px;" tagname="" />
        	<xf:input class="sty_ipt_form" dataType="number" disabled="true" id="sPayerNo" maxlength="13"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:551px;top:141px; width:140px;" tabIndex="25" />
        	<xf:trigger class="detail_bu01" ev:onclick="scwin.RecEnd" id="Btn_Confirm" style="position:absolute;height:18px;ImageID:btn_Input_03;width:48px;left:475px;top:141px;" tabIndex="26" type="anchor">
        		<xf:label><![CDATA[출금동의]]></xf:label>
        	</xf:trigger>
        	<xf:trigger class="detail_bu01" ev:onclick="scwin.getDepoName" id="Btn_Depo" style="position:absolute;height:18px;ImageID:btn_Input_03;width:48px;left:207px;top:115px;" tabIndex="27"
        		type="anchor">
        		<xf:label><![CDATA[계좌확인]]></xf:label>
        	</xf:trigger>
        	<w2:textbox id="Static26" label=":: 계좌확인->녹취시작->출금동의->이체요청 순으로 작업하세요" style="position:absolute; height:16px;left:1px;top:176px; width:350px;" tagname="" class="pointer_txt01"/>
        	<xf:trigger class="detail_bu01" ev:onclick="scwin.RecStart" id="bRecStart" style="position:absolute;height:18px;ImageID:btn_Input_03;width:48px;left:402px;top:141px;" tabIndex="29" type="anchor">
        		<xf:label><![CDATA[녹취시작]]></xf:label>
        	</xf:trigger>
        	<w2:textbox class="sty_lb_Basic" id="Static1" label="증빙자료구분" style="position:absolute;width:75px;left:296px;VAlign:Middle;top:30px;" tagname="" />
        	<xf:select1 appearance="minimal" class="sty_ipt_search" emptyItem="true" ev:onchange="" id="cmbAgmInfoType"
        		style="position:absolute; INDEX:0;  border-color:user23;  border-style:solid;  height:20px;left:403px;top:34px; width:100px;" tabIndex="31" renderType="native" ev:onviewchange="scwin.cmbAgmInfoType_OnChanged">
        		<xf:choices>
        			<xf:itemset nodeset="data:Ds_AgmInfoType">
        				<xf:label ref="TEXT" />
        				<xf:value ref="CODE" />
        			</xf:itemset>
        		</xf:choices>
        	</xf:select1>
        	
        </xf:group>
    </body>
</html>
