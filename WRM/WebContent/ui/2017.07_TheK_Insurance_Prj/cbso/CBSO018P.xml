<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<?xml-stylesheet href="/cm/css/convert.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
            <xf:instance>
                <data/>
            </xf:instance>
            <w2:dataCollection>
            	<w2:dataList baseNode="list" id="Ds_BankCode"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="CODE"
            				name="CODE" />
            			<w2:column dataType="text" id="TEXT"
            				name="TEXT" />
            		</w2:columnInfo>
            		<w2:data use="true">
            			<w2:row>
            				<CODE />
            				<TEXT><![CDATA[-선택-]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[004]]></CODE>
            				<TEXT><![CDATA[국민]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[011]]></CODE>
            				<TEXT><![CDATA[농협중앙회]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[026]]></CODE>
            				<TEXT><![CDATA[신한]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[021]]></CODE>
            				<TEXT><![CDATA[조흥]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[088]]></CODE>
            				<TEXT><![CDATA[통합신한]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[020]]></CODE>
            				<TEXT><![CDATA[우리]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[081]]></CODE>
            				<TEXT><![CDATA[KEB하나]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[005]]></CODE>
            				<TEXT><![CDATA[외환]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[003]]></CODE>
            				<TEXT><![CDATA[기업]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[032]]></CODE>
            				<TEXT><![CDATA[부산]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[023]]></CODE>
            				<TEXT><![CDATA[제일]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[027]]></CODE>
            				<TEXT><![CDATA[한미시티]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[071]]></CODE>
            				<TEXT><![CDATA[우체국]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[007]]></CODE>
            				<TEXT><![CDATA[수협]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[012]]></CODE>
            				<TEXT><![CDATA[단위농.축협]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[050]]></CODE>
            				<TEXT><![CDATA[상호저축은행]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[045]]></CODE>
            				<TEXT><![CDATA[새마을금고연합회]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[048]]></CODE>
            				<TEXT><![CDATA[신용협동조합중앙회]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[039]]></CODE>
            				<TEXT><![CDATA[경남]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[034]]></CODE>
            				<TEXT><![CDATA[광주]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[002]]></CODE>
            				<TEXT><![CDATA[산업]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[031]]></CODE>
            				<TEXT><![CDATA[대구]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[089]]></CODE>
            				<TEXT><![CDATA[K뱅크]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[090]]></CODE>
            				<TEXT><![CDATA[카카오뱅크]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[037]]></CODE>
            				<TEXT><![CDATA[전북]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[035]]></CODE>
            				<TEXT><![CDATA[제주]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[054]]></CODE>
            				<TEXT><![CDATA[HSB]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[055]]></CODE>
            				<TEXT><![CDATA[도이치]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[057]]></CODE>
            				<TEXT><![CDATA[제이피모간]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[064]]></CODE>
            				<TEXT><![CDATA[산림조합]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[209]]></CODE>
            				<TEXT><![CDATA[유안타증권(구 동양종합금융증권)]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[218]]></CODE>
            				<TEXT><![CDATA[현대증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[230]]></CODE>
            				<TEXT><![CDATA[미래에셋증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[238]]></CODE>
            				<TEXT><![CDATA[미래에셋대우]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[240]]></CODE>
            				<TEXT><![CDATA[삼성증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[243]]></CODE>
            				<TEXT><![CDATA[한국투자증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[247]]></CODE>
            				<TEXT><![CDATA[NH투자증권(구 우리투자증권)]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[261]]></CODE>
            				<TEXT><![CDATA[교보증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[262]]></CODE>
            				<TEXT><![CDATA[하이투자증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[263]]></CODE>
            				<TEXT><![CDATA[HMC증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[265]]></CODE>
            				<TEXT><![CDATA[이트레이드증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[266]]></CODE>
            				<TEXT><![CDATA[SK증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[267]]></CODE>
            				<TEXT><![CDATA[대신증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[268]]></CODE>
            				<TEXT><![CDATA[아이엠투자증권(구 솔로몬투자증권)]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[269]]></CODE>
            				<TEXT><![CDATA[한화증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[270]]></CODE>
            				<TEXT><![CDATA[하나대투증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[278]]></CODE>
            				<TEXT><![CDATA[신한금융투자]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[279]]></CODE>
            				<TEXT><![CDATA[동부증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[280]]></CODE>
            				<TEXT><![CDATA[유진투자증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[287]]></CODE>
            				<TEXT><![CDATA[메리츠증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[289]]></CODE>
            				<TEXT><![CDATA[NH투자증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[290]]></CODE>
            				<TEXT><![CDATA[부국증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[291]]></CODE>
            				<TEXT><![CDATA[신영증권]]></TEXT>
            			</w2:row>
            			<w2:row>
            				<CODE><![CDATA[292]]></CODE>
            				<TEXT><![CDATA[LIG투자증권]]></TEXT>
            			</w2:row>
            		</w2:data>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_ACCZA31"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="number" id="nMsgNo"
            				name="nMsgNo" />
            			<w2:column dataType="text" id="sMainDealType"
            				name="sMainDealType" />
            			<w2:column dataType="text" id="sSubDealType"
            				name="sSubDealType" />
            			<w2:column dataType="text" id="sInputTime"
            				name="sInputTime" />
            			<w2:column dataType="text" id="sUserID"
            				name="sUserID" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="Ds_BANK005"
            		repeatNode="map">
            		<w2:columnInfo>
            			<w2:column dataType="number" id="packetLength"
            				name="packetLength" />
            			<w2:column dataType="text" id="sBankJoinNo"
            				name="sBankJoinNo" />
            			<w2:column dataType="text" id="sBankCode_old"
            				name="sBankCode_old" />
            			<w2:column dataType="text" id="sJunmunCode"
            				name="sJunmunCode" />
            			<w2:column dataType="number" id="sDealType"
            				name="sDealType" />
            			<w2:column dataType="number" id="sJunmunNo"
            				name="sJunmunNo" />
            			<w2:column dataType="text" id="sSendDate"
            				name="sSendDate" />
            			<w2:column dataType="text" id="sSendTime"
            				name="sSendTime" />
            			<w2:column dataType="text" id="sBankRspCode"
            				name="sBankRspCode" />
            			<w2:column dataType="text" id="sDealDate"
            				name="sDealDate" />
            			<w2:column dataType="text"
            				id="sDealBankCode_old" name="sDealBankCode_old" />
            			<w2:column dataType="text" id="sDealAcctNo"
            				name="sDealAcctNo" />
            			<w2:column dataType="text" id="sAcctNo"
            				name="sAcctNo" />
            			<w2:column dataType="text" id="sAcctName"
            				name="sAcctName" />
            			<w2:column dataType="text" id="sBankOwnerID"
            				name="sBankOwnerID" />
            			<w2:column dataType="text" id="sSender"
            				name="sSender" />
            			<w2:column dataType="text" id="sReceiver"
            				name="sReceiver" />
            			<w2:column dataType="text" id="sFundUnityYN"
            				name="sFundUnityYN" />
            			<w2:column dataType="text" id="sBankCode"
            				name="sBankCode" />
            			<w2:column dataType="text" id="sDealBankCode"
            				name="sDealBankCode" />
            		</w2:columnInfo>
            	</w2:dataList>
            	<w2:dataList baseNode="list" id="DsWs_CheckBankStat"
            		repeatNode="map" userData2="//*/ACCZA61" />
            	<w2:dataList baseNode="list" id="DsWs_DepoName"
            		repeatNode="map" userData2="//*/DACM005" />
            	<w2:dataList baseNode="list" id="DsWs_CustInfo"
            		repeatNode="map" userData2="//*/CUSBA02" />
            	<w2:dataList baseNode="list" repeatNode="map"
            		id="WARNING" saveRemovedData="true">
            		<w2:columnInfo>
            			<w2:column id="msg" name="name1"
            				dataType="text">
            			</w2:column>
            			<w2:column id="level" name="name2"
            				dataType="text">
            			</w2:column>
            			<w2:column id="detail" name="name3"
            				dataType="text">
            			</w2:column>
            			<w2:column id="timestamp" name="name4"
            				dataType="text">
            			</w2:column>
            		</w2:columnInfo>
            	</w2:dataList>
            </w2:dataCollection>
            <w2:workflowCollection/>
        </xf:model>
 <script src="/cm/js/common.js"/>
 <script src="/cm/js/val_lib.js"/>
 <script src="/cm/js/util.js"/>
 <script src="/cm/js/transSub.js"/>
 <script src="/cm/js/callService.js"/>
 <script src="/cm/js/gds.js"/>
 <script src="/cm/js/wconv.js"/>
 <script src="/cm/js/convertJs/Global_Script.js"/>
 <script src="/cm/js/convertJs/LongTerm_Script.js"/>
 <script src="/cm/js/convertJs/comm_Webservice.js"/>        <script><![CDATA[
/*■■■■■■■■■■■■■■■■■■■■■스크립트 변환 결과■■■■■■■■■■■■■■■■■■■■■
※본 주석은 수작업 변환 참고용입니다. ★개발완료 후에는 필히 삭제해주세요.★
변환시간:  Fri Sep 01 2017 14:10:12 GMT+0900 (대한민국 표준시)
파일ID:  9992.xml

아래의 작업을 먼저 해주세요.


1. scwin.init() 함수에 아래의 글로벌 데이터리스트를 선언합니다.
gds.gDs_ServerTime();

2. 공통.JS 파일을 include해주세요.
</xf:model>
 ***include 위치(하단에 주석처리 되어 있습니다.)***
<script><![CDATA[

예시)
</xf:model>
<script src="/cm/js/convertJs/예시입니다.js"/>
<script src="/cm/js/convertJs/예시입니다.js"/>
<script src="/cm/js/convertJs/예시입니다.js"/>
<script><![CDATA[

3. 표준에 어긋난 코딩인 경우 ✖ 으로 return 되어 있습니다. 검색으로 ✖이 나온다면 ASIS 소스를 확인해주세요.
ex) ASIS if(a = 1 and b = 2) {} ------> TOBE if (✖ = 2) {}

4. dialog함수로 팝업을 호출 할 경우에는 실제 파일이 있는 경로로 변경해주세요
ex) 현재 PROJECT_PATH_TEMP입니다. 

-호출구조-

호출구조는 모든 화면이 아닌 변환대상화면을 기준으로 분석하였습니다.
선언하지 않은 변수를 사용중이라면 caller 에서 넘겼을 가능성이 높습니다.
파일 ID는 소스의 form ID로 가정했습니다. 아래의 결과는 따로 확인해주세요.
9992.xml에서 호출 (callee ID):  
9992.xml을 호출   (caller ID):  F150_Div1,B016_Pop,Q010
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■*/
/*
 *===================================File description================================================
 * Create Date : 2008/07/16
 * Creater     : 서영지
 * Description : 예금주성명조회 화면
 *====================================================================================================
 */

var gsSendDate;
var gsSendTime;
var gsBankRspCode="";
var gsBankRspMsg="";
var gsPopupYN;//팝업여부
var ACCOUNT_NAME_MAIN = "0600";
var ACCOUNT_NAME_SUB = "600";
var fv_args;
var parentWin;

scwin.init = function() {
	//parentObject List
	//Ds_AccDepoName
	//
	
	//promise
	var pro = Promise.resolve();
	window.top.util.winTopShowModalChk = "T";
	util.winTopShowModal();
	pro = pro.then(function(rv) {
		return util.winTopShowModalPromise();
	});
	pro = pro.then(function(rv) {
	//promise
		var indata = $w.getParameter("param");//
		try {
			fv_args = JSON.parse(indata);
			parentWin = wprom.getParamObject();
		} catch(e) {};
	
	    //-----서버 시간 받기
	    //transaction("getServerTime", "NewGen::getServerTime.jsp", "", "gDs_ServerTime=output", "", "tr_callback");
	    gfn_getServerTime();
	    scwin.tr_callback("getServerTime","0","");
    
    	return Promise.reject("오류관련처리");
	});

	pro = pro.then(function(rv) {
	    util.winTopHideModal();
	});
	pro = pro.catch(function(rj) {
	    util.winTopHideModal();
	});	
	return pro;	    
};

//**************************************************************************************************
// CallBack
//**************************************************************************************************
scwin.tr_callback = function(ServiceId, errorCd, errorMsg) {
    if (ServiceId == "getServerTime") {
        if (errorCd != 0) {
            wprom.alert("errorCd:::[" + errorCd + "] errorMsg:::[" + errorMsg + "]");
        } else {
            gsSendDate = gDs_ServerTime.getCellData(0, "sToday").substr(0, 8);
            gsSendTime = gDs_ServerTime.getCellData(0, "sToday").substr(8, 6);

            //파라미터 세팅
            scwin.setPopUpParamSetting();
        }
    }
};

//**************************************************************************************************
// Parameter로 받은 값들을 화면에 보여준다.
//**************************************************************************************************
scwin.setPopUpParamSetting = function() {

	//var parentWin = wprom.getParent().Tab_Req_Step3.getWindow();//.Ds_AccDepoName

//console.log("parentWin===============>"+parentWin);

    sBankCode.setValue(parentWin.Ds_AccDepoName.getCellData(0, "sBankCode")); //은행번호
    sDealAcctNo.setValue(parentWin.Ds_AccDepoName.getCellData(0, "sAcctNo")); //계좌번호
    sDepoOwnerID.setValue(parentWin.Ds_AccDepoName.getCellData(0, "sDepoOwnerID")); //주민등록번호/사업자번호	
 
    if (sBankCode.getValue() == "" && sDealAcctNo.getValue() == "" && sDepoOwnerID.getValue() == "") {
        sBankCode.setValue("");
        sBankCode.setDisabled(false);
        sDealAcctNo.setDisabled(false);
        sDepoOwnerID.setDisabled(false);
        gsPopupYN = "N"; //팝업 오픈이 아님
        Btn_Close.setDisabled(true); //닫기버튼 비활성화
    } else {
        gsPopupYN = "Y"; //팝업 오픈임
        Btn_Close.setDisabled(false); //닫기버튼 활성화
        //2010-02-11 서영지 추가. 농협 계좌번호 유효성 체크
        if (!scwin.checkAcctNoCommon(sBankCode.getValue(), sDealAcctNo.getValue())) {
            wprom.close();
            return;
        }


        //가상계좌인지 체크한다. JEJ 2004.09.08
        scwin.chgEvent();

        //은행장애여부 확인
        scwin.checkImpBankStat();
    }
};

//**************************************************************************************************
// 국민은행 선택시 가상계좌 사용, 나머지은행은 사용불가
// 가상계좌 선택시 예금주명 입력가능, 나머지는 입력불가
//**************************************************************************************************
scwin.chgEvent = function() {
    sVirtualYN.setValue(false);

    //JEJ 2004.09.08
    //국민은행으로 사업자 가상계좌이면 가상계좌체크
    //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
    if (((sBankCode.getValue() == "04" || sBankCode.getValue() == "004")) && 
        (wconv.length(sDepoOwnerID.getValue()) == 10) && 
        (wconv.length(sDealAcctNo.getValue()) == 14) && 
        (wconv.substr(sDealAcctNo.getValue(), 4, 2) == "90")) {
        sVirtualYN.setValue(true);
        sDepoName.setValue("");
    }

    //농협으로 사업자 가상계좌이면 가상계좌체크
	if (((sBankCode.getValue() == "11" || sBankCode.getValue() == "011") || 
	     (sBankCode.getValue() == "12" || sBankCode.getValue() == "012")) && 
	     (wconv.length(sDepoOwnerID.getValue()) == 10) && (wconv.	length(sDealAcctNo.getValue()) == 14) && 
	     (wconv.substr(sDealAcctNo.getValue(),6,2) == "64"	 ||
	      wconv.substr(sDealAcctNo.getValue(),6,2) == "65"	 ||	//2010-09-28 조경현 기간계 소스에 맞춰서 추가함
	      wconv.substr(sDealAcctNo.getValue(),6,2) == "66"	 ||
	      wconv.substr(sDealAcctNo.getValue(),6,2) == "67"	 ||
	      wconv.substr(sDealAcctNo.getValue(),0,3) == "790" ||
	      wconv.substr(sDealAcctNo.getValue(),0,3) == "791" ||
	      wconv.substr(sDealAcctNo.getValue(),0,3) == "792"   )  ) {
	      
         sVirtualYN.setValue(true);
         sDepoName.setValue("");
	}
};


//**************************************************************************************************
// 은행장애여부 확인한다.
//**************************************************************************************************
scwin.checkImpBankStat_async = function(e) {
	util.eventAsyncCall(this,scwin.checkImpBankStat,arguments);	     
};
    scwin.checkImpBankStat = function(e) {
        //2010-02-11 서영지 추가. 농협 계좌번호 유효성 체크
        if (!scwin.checkAcctNoCommon(sBankCode.getValue(), sDealAcctNo.getValue())) {
            return;
        }
        wconv.clear(DsWs_CheckBankStat);
        /*
        SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
        var MethodObj = gfn_CreateMethodObj(SOBJ_Accounting, "AccountingPayTask", "selectImpBankStat", "", "");
        gfn_SetParam(MethodObj, "sImpDate", gsSendDate);
        gfn_SetParam(MethodObj, "sImpBankCode", sBankCode.getValue());
        gfn_SetParam(MethodObj, "sImpTime", gsSendTime);
        var result = gfn_CallService(SOBJ_Accounting, DOBJ_CheckBankStat, MethodObj);
        */
		var MethodObj = new callService("com.inswave.accounting.task.AccountingPayTask", "selectImpBankStat");
		MethodObj.setId("selectImpBankStat");
		MethodObj.setParam("sImpDate", gsSendDate);
		MethodObj.setParam("sImpBankCode",  sBankCode.getValue());
		MethodObj.setParam("sImpTime", gsSendTime);
		MethodObj.setUrl("/common/CBSO018PController.do");
		MethodObj.setXPath("//*/ACCZA61");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();

		util.jSonDsCreate(_tranSync.getDsJson("ACCZA61"), "DsWs_CheckBankStat");
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
        
        //trace(DOBJ_CheckBankStat.Contents);
        //trace(DsWs_CheckBankStat.SaveXML());
        if (WARNING.getRowCount() != 0) {
            wprom.alert("웹서비스 이상입니다. [AccountingPayTask.selectImpBankStat]");
            return;
        }
        if (DsWs_CheckBankStat.getCellData(0, "result") > 0) {
            Btn_DepoName.setDisabled(true);
            wprom.alert(sBankCode.getValue() + "은행은 현재 장애가 발생되어 예금주명 조회가 불가능합니다.");
        } else {
            //예금주명 조회
            scwin.getDepoName();
        }
    };



//**************************************************************************************************
// 예금주명을 조회한다.
//**************************************************************************************************
    scwin.getDepoName = function() {
        // 가상계좌 예금성명조회일때 처리
        if (sVirtualYN.getValue() == true) {
            if (wprom.confirm("가상계좌 성명조회는 시스템지원이 불가능하므로 작업자가 계좌번호를 반드시 확인하셔야 합니다. 사용하시겠습니까?")) {
                gsBankRspCode = "0000"; /*return wprom.confirm(가이드참조)*/
                gsBankRspMsg = "";
            }
            return;
        }


        //입력값 체크
        if (!scwin.checkValue()) {
            return;
        }



        // 1. 전문번호 채번을 위한 Document.
        wconv.clear(Ds_ACCZA31);
        Ds_ACCZA31.insertRow(0);
        Ds_ACCZA31.setCellData(0, "sSendDate", gsSendDate);
        Ds_ACCZA31.setCellData(0, "sBankCode", sBankCode.getValue());
        Ds_ACCZA31.setCellData(0, "sMainDealType", ACCOUNT_NAME_MAIN);
        Ds_ACCZA31.setCellData(0, "sSubDealType", ACCOUNT_NAME_SUB);
        Ds_ACCZA31.setCellData(0, "sInputTime", gsSendTime);
        Ds_ACCZA31.setCellData(0, "sUserID", util.getGdsValue("gUserID"));

        // 2. 은행 예금주 조회를 위한 Document 선언.
        wconv.clear(Ds_BANK005);
        //var insRow = util.insertRow(Ds_BANK005, 0);
        Ds_BANK005.insertRow(0);
        Ds_BANK005.setCellData(0, "packetLength", 149);
        Ds_BANK005.setCellData(0, "sBankCode", sBankCode.getValue());
        Ds_BANK005.setCellData(0, "sJunmunCode", ACCOUNT_NAME_MAIN);
        Ds_BANK005.setCellData(0, "sDealType", ACCOUNT_NAME_SUB);
        Ds_BANK005.setCellData(0, "sSendDate", gsSendDate);
        Ds_BANK005.setCellData(0, "sSendTime", gsSendTime);
        Ds_BANK005.setCellData(0, "sDealDate", gsSendDate);
        Ds_BANK005.setCellData(0, "sDealBankCode", sBankCode.getValue());
        Ds_BANK005.setCellData(0, "sBankOwnerID", sDepoOwnerID.getValue());
        Ds_BANK005.setCellData(0, "sDealAcctNo", sDealAcctNo.getValue());
        wconv.clear(DsWs_DepoName);
        /*
        SOBJ_Accounting.WSDL = gds.gWsdlAccounting;
        var MethodObj = SOBJ_Accounting.CreateMethodObj("perform");
        setHeader("hashtable", "AccountingBankTask", "BANK005");
        addSingleData("ACCZA31", "ACCZA31", Ds_ACCZA31); //전문번호 채번
        addSingleData("BANK005", "BANK005", Ds_BANK005); //예금주 조회
        setTail("hashtable");
        SOBJ_Accounting.CreateObj("in0");
        MethodObj.in0 = insertStr;
        //trace(replace(insertStr, "><", ">\n  <"));		
        var result = gfn_CallService(SOBJ_Accounting, DOBJ_DepoName, MethodObj);
        */
		var MethodObj = new callService("com.inswave.accounting.task.AccountingBankTask", "BANK005");
		MethodObj.setId("BANK005");
        MethodObj.addSingleData("ACCZA31", "ACCZA31", "Ds_ACCZA31");
        MethodObj.addSingleData("BANK005", "BANK005", "Ds_BANK005");
		MethodObj.setUrl("/common/CBSO018PController.do");  	// 서버단 호출 URL (수납 확정)    
		MethodObj.setXPath("//*/DACM005");	// XPath
		MethodObj.addXPath("//WARNING");	// XPath
		MethodObj.setHashTable();   	//  전문의 앞이 hashtable로 보낼 때
		MethodObj.sync();					// 동기 처리[기본(async:비동기)]
		MethodObj.send(); 					// 최종 전송 		// TEST @@@ ===>

		util.jSonDsCreate(_tranSync.getDsJson("DACM005"), "DsWs_DepoName");
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
        
        //trace(DOBJ_DepoName.Contents);
        //trace(DsWs_DepoName.savexml());
        if (WARNING.getRowCount() != 0) {
            wprom.alert("웹서비스 이상입니다. [AccountingBankTask.BANK005]");
            return;
        }
        gsBankRspCode = DsWs_DepoName.getCellData(0, "sBankRspCode");
        gsBankRspMsg = DsWs_DepoName.getCellData(0, "sBankRspMsg");
        var sOption = DsWs_DepoName.getCellData(0, "sOption");
        if (gsBankRspCode == "0000") {
            //2010-05-06 유연재 추가(고객신용관련 로그)
            gfn_LogCreditInfo("", "", "S", sDepoOwnerID.getValue());
            //2014-06-30 유연재 변경(개인정보노출고객 조회 변경)
            //2007-05-01. 서영지 추가.
            //예금주ID가 개인(13자리)인 경우, 개인정보노출자인지 체크한다.
            /*if ( length(DsWs_DepoName.GetColumn(0, "sBankOwnerID")) == 13 ) {
        	isOutflowCust( DsWs_DepoName.GetColumn(0,"sBankOwnerID"), DsWs_DepoName.GetColumn(0,"sBankOwnerName") );			
        }else{
        	sDepoName.value = DsWs_DepoName.GetColumn(0, "sBankOwnerName");
        	alert("예금주가 조회되었습니다");
        }*/
            sDepoName.setValue(DsWs_DepoName.getCellData(0, "sBankOwnerName"));
            wprom.alert("예금주가 조회되었습니다");
        } else {
            //조흥은행 가상계좌의 경우 예금주ID는 체크하지 않고, filler값을 무조건 N으로 세팅하므로
            //filler값이 N이라도 예금주명 조회를 정상적으로 하도록 한다. 2005-11-28. 서영지 추가.
            //2009-09-04 서영지. 자통법 관련 은행코드 3자리 추가.
            if ((DsWs_DepoName.getCellData(0, "sBankCode") == "21" || 
                 DsWs_DepoName.getCellData(0, "sBankCode") == "021") && 
                wconv.substr(DsWs_DepoName.getCellData(0, "sDealAcctNo"), 3, 2) == "81") {
                sDepoName.setValue(DsWs_DepoName.getCellData(0, "sBankOwnerName"));
                //2010-05-06 유연재 추가(고객신용관련 로그)
                gfn_LogCreditInfo("", "", "S", sDepoOwnerID.getValue());
                wprom.alert("예금주가 조회되었습니다");
                return;
            }
            if (sOption == "Y") {
            	var promise = Promise.resolve();
            	promise = promise.then(function(rst){
            		return wprom.confirm("해당계좌는 압류관련계좌이므로 입금만 처리할 수 있습니다.(" + gsBankRspMsg /*return wprom.confirm(가이드참조)*/ + ") 사용하시겠습니까?");
            	});
            	promise = promise.then(function(rst){
            		if(rst == true){
	                    sDepoName.setValue(DsWs_DepoName.getCellData(0, "sBankOwnerName"));
	                    return;
            		};
            	});
                return;
            }
            wprom.alert(gsBankRspMsg);
        }
    };



//**************************************************************************************************
// 개인정보 노출 여부를 조회한다.
//**************************************************************************************************
    scwin.isOutflowCust = function(sCustNo, sName) {
        wconv.clear(DsWs_CustInfo);
        wconv.clear(WARNING);
        /*
        SOBJ_Customer.WSDL = gds.gWsdlCustomer;
        var MethodObj = gfn_CreateMethodObj(SOBJ_Customer, "CustTask", "isOutflowCust", "", "");
        gfn_SetParam(MethodObj, "sCustNo", sCustNo);
        gfn_SetParam(MethodObj, "sName", wconv.trim(sName));
        var result = gfn_CallService(SOBJ_Customer, DOBJ_CustInfo, MethodObj);
        */
		var MethodObj = new callService("com.inswave.customer.task.CustTask", "isOutflowCust");
		MethodObj.setId("isOutflowCust");
		MethodObj.setParam("sCustNo", sCustNo);
		MethodObj.setParam("sName", wconv.trim(sName));
		MethodObj.setUrl("/common/CBSO018PController.do");
		MethodObj.setXPath("//*/CUSBA02");
		MethodObj.addXPath("//WARNING");
		MethodObj.sync();
		MethodObj.send();
		
		util.jSonDsCreate(_tranSync.getDsJson("CUSBA02"), "DsWs_CustInfo");
		util.jSonDsCreate(_tranSync.getDsJson("WARNING"), "WARNING");
        
        //trace(DOBJ_CustInfo.Contents);
        //trace(DsWs_CustInfo.SaveXML());
        if (WARNING.getRowCount() != 0) {
            wprom.alert("웹서비스 이상입니다.");
            return;
        }
        if (DsWs_CustInfo.getCellData(0, "result") > 0) {
            Btn_DepoName.setDisabled(true);
            var sTmpMsg = "개인정보 노출고객 입니다.\n" + "\n이    름 : " + DsWs_CustInfo.getCellData(0, "sName") + "\n등록일자 : " + DsWs_CustInfo.getCellData(0, "sRegiDate") + "\n사고내용 : " + DsWs_CustInfo.getCellData(0, "sAccContent");
            wprom.alert(sTmpMsg);
        } else {
            sDepoName.setValue(sName);
            wprom.alert("예금주가 조회되었습니다");
        }
    };



//**************************************************************************************************
// 입력값을 체크한다.
//**************************************************************************************************
    scwin.checkValue = function() {
        if (sBankCode.getValue() == "") {
            wprom.alert("'은행'을 선택해주십시오.");
            return false;
        }
        if (sDealAcctNo.getValue() == "") {
            wprom.alert("'계좌번호'를 입력해주십시오.");
            return false;
        }
        if (sDepoOwnerID.getValue() == "") {
            wprom.alert("'주민/사업자번호'를 입력해주십시오.");
            return false;
        }
        if (wconv.length(sDepoOwnerID.getValue()) != 10 && wconv.length(sDepoOwnerID.getValue()) != 13) {
            wprom.alert("주민/사업자번호는 주민등록번호(13) 또는 사업자등록번호(10)중 하나를 등록하셔야 합니다. 확인하십시오.");
            return false;
        }
        return true;
    };


//**************************************************************************************************
// 닫기
//**************************************************************************************************
    scwin.Btn_Close_OnClick = function(e) {
		
		//var parentWin = wprom.getParent().Tab_Req_Step3.getWindow();//.Ds_AccDepoName
    	
        parentWin.Ds_AccDepoName.setCellData(0, "sBankCode", sBankCode.getValue());
        parentWin.Ds_AccDepoName.setCellData(0, "sAcctNo", sDealAcctNo.getValue());
        parentWin.Ds_AccDepoName.setCellData(0, "sDepoOwnerID", sDepoOwnerID.getValue());
        parentWin.Ds_AccDepoName.setCellData(0, "sDepoName", sDepoName.getValue());
        parentWin.Ds_AccDepoName.setCellData(0, "sBankRspCode", gsBankRspCode);

        //2010-09-28 조경현 추가 가상계좌여부 
        if (sVirtualYN.getValue() == true) {
            parentWin.Ds_AccDepoName.setCellData(0, "sVirtualYN", "Y");
        } else {
            parentWin.Ds_AccDepoName.setCellData(0, "sVirtualYN", "N");
        }
        //alert("호출하는 화면에서 개발필요.");
        wprom.close();
    };

/*
 작성자 : 서영지 
 계좌번호 자리수를 체크해서 유효한지 확인한다.
 arg1 : 은행코드, arg2 : 계좌번호
*/
    scwin.checkAcctNoCommon	 = function(sBankCode, sAcctNo) {
        var sResult = "error";
        if (sBankCode == "") {
            sResult = "ok";
        }
        if (sAcctNo == "") {
            sResult = "ok";
        }
        var nLength = wconv.length(sAcctNo); //자리수
        var sEndChar = sAcctNo.substr(nLength - 1); //계좌 끝자리
        //농협인 경우,
        if (sBankCode == "11" || sBankCode == "011") {
            //구-보통예금
            if (nLength == 11 || nLength == 12) {
                sResult = "ok";
            } else if (nLength == 14) {
                if (sAcctNo.substr(0, 3) == "790" || sAcctNo.substr(0, 3) == "791") {
                    //신-가상계좌
                    sResult = "ok";
                } else if (sAcctNo.substr(6, 2) == "64" || sAcctNo.substr(6, 2) == "65") {
                    //구-가상계좌
                    sResult = "ok";
                }
            } else if (nLength == 13) {
                if (sEndChar == "1" || sEndChar == "2") {
                    //신-보통예금
                    sResult = "ok";
                } else if (sEndChar == "8") {
                    //신-평생계좌
                    sResult = "입출금이 불가능한 평생계좌입니다";
                }
            } else if (nLength == 10) {
                if (sEndChar == "8") {
                    //신-평생계좌
                    sResult = "입출금이 불가능한 평생계좌입니다";
                }
            }
        } else if (sBankCode == "12" || sBankCode == "012") {
            if (nLength == 14) {
                if (sAcctNo.substr(0, 3) == "792") {
                    //신-가상계좌
                    sResult = "ok";
                } else if (sAcctNo.substr(6, 2) == "66" || sAcctNo.substr(6, 2) == "67") {
                    //구-가상계좌
                    sResult = "ok";
                } else {
                    //구-보통예금
                    sResult = "ok";
                }
            } else if (nLength == 13) {
                if (sEndChar == "3" || sEndChar == "4" || sEndChar == "5") {
                    //신-보통예금
                    sResult = "ok";
                } else if (sEndChar == "9") {
                    //신-평생계좌
                    sResult = "입출금이 불가능한 평생계좌입니다";
                }
            } else if (nLength == 10) {
                if (sEndChar == "9") {
                    //신-평생계좌
                    sResult = "입출금이 불가능한 평생계좌입니다";
                }
            }
        } else {
            sResult = "ok";
        }
        if (sResult == "error") {
            wprom.alert("잘못된 계좌번호입니다. 은행구분(단위농협/농협중앙회) 및 계좌번호를 확인하십시오.");
            return false;
        } else if (sResult == "ok") {
            return true;
        } else {
            wprom.alert(sResult);
            return false;
        }
    };]]></script>
    </head>
    <body>
        <xf:group class="cont_wrap layer" id="9992" style="position:absolute; WorkArea:true;  Ver:1.0;  PidAttrib:7;   left:0px; top:0px;" userData1="예금주성명조회"
        	userData2=" OnLoadCompleted:scwin.OnLoadCompleted; ">
        	<DataObjects>
        		<DataObject />
        		<DataObject />
        		<DataObject />
        	</DataObjects>
        	<ServiceObjects>
        		<ServiceObject />
        		<ServiceObject />
        	</ServiceObjects>
        	<xf:group arcsize="8" class="sty_area_form" id="" style="position:absolute;bottom:337px;height:108px;top:30px;left:0px;width:365px;" userData3="RoundRect">
        		<xf:group class="form_w_line" id="" style="top:26px;"></xf:group>
        		<xf:group class="form_w_line" id="" style="top:53px;"></xf:group>
        		<xf:group class="form_w_line" id="" style="top:79px;left:0px;"></xf:group>
        	</xf:group><w2:textbox id="Static5" label="예금주성명조회" style="position:absolute; VAlign:Middle;  height:22px; left:0px; top:0px; width:110px;" tagname="" class="sub_pop_title01" />
        	<w2:textbox class="sty_lb_Basic_ness" id="Static23" label="은행" style="position:absolute;width:101px;left:0px;VAlign:Middle;top:30px;" tagname="" />
        	<xf:select1 appearance="minimal" class="sty_ipt_search"
        		disabled="true" emptyItem="true" ev:onchange="scwin.chgEvent"
        		id="sBankCode"
        		style="position:absolute; Text:-선택-;  INDEX:0;  border-color:user10;  border-style:solid;  height:20px;left:125px;top:34px; width:160px;"
        		tabIndex="1" renderType="native" allOption=""
        		chooseOption="">
        		<xf:choices>
        			<xf:itemset nodeset="data:Ds_BankCode">
        				<xf:label ref="TEXT" />
        				<xf:value ref="CODE" />
        			</xf:itemset>
        		</xf:choices>
        	</xf:select1>
        	<w2:textbox class="sty_lb_Basic_ness" id="Static17" label="주민/사업자번호" style="position:absolute;width:101px;left:0px;VAlign:Middle;top:83px;" tagname="" />
        	<xf:input class="sty_ipt_form" disabled="true" ev:onchange="scwin.chgEvent" id="sDepoOwnerID" maxlength="13"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:126px;top:87px; width:158px;" tabIndex="3" />
        	<w2:textbox class="sty_lb_Basic_ness" id="Static25" label="계좌번호" style="position:absolute;width:101px;left:0px;VAlign:Middle;top:57px;" tagname="" />
        	<xf:input class="sty_ipt_form" disabled="true" ev:onchange="scwin.chgEvent" id="sDealAcctNo" maxlength="20"
        		style="position:absolute; border-style:solid;  AutoSkip:TRUE;  height:20px;left:126px;top:62px; width:158px;" tabIndex="2" />
        	<xf:input class="sty_ipt_form" id="sDepoName" maxlength="20" readOnly="TRUE"
        		style="position:absolute; ImeMode:native;  border-style:solid;  AutoSkip:TRUE;  background-color:#c8c8c8; height:20px;left:126px;top:114px; width:158px;" tabIndex="10" />
        	<w2:textbox class="sty_lb_Basic" id="Static18" label="예금주명" style="position:absolute;width:101px;left:0px;VAlign:Middle;top:110px;" tagname="" />
        	<xf:trigger class="popup_top_btn" ev:onclick="scwin.Btn_Close_OnClick" id="Btn_Close" style="position:absolute; ImageID:btn_Comm_Close;  height:20px;left:315px;top:2px;" tabIndex="13"
        		type="anchor">
        		<xf:label><![CDATA[닫기]]></xf:label>
        	</xf:trigger>
        	<xf:trigger class="popup_top_btn" ev:onclick="scwin.checkImpBankStat_async" id="Btn_DepoName" style="position:absolute; ImageID:btn_Input_02;  height:20px;left:260px;top:2px;" tabIndex="4"
        		type="anchor">
        		<xf:label><![CDATA[조 회]]></xf:label>
        	</xf:trigger>
        	<xf:select appearance="full" disabled="true" id="sVirtualYN"
        		style="position:absolute; Value:FALSE;  height:20px;left:293px;top:35px; width:70px;"
        		tabIndex="14" falseValue="false" cols="" rows="">
        		<xf:choices>
        			<xf:item>
        				<xf:label><![CDATA[가상계좌]]></xf:label>
        				<xf:value><![CDATA[true]]></xf:value>
        			</xf:item>
        		</xf:choices>
        	</xf:select>

        </xf:group>
    </body>
</html>
