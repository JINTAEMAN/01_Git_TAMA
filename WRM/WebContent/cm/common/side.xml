<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/cm/css/all.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
	<head>
		<w2:type>DEFAULT</w2:type>
		<w2:buildDate />
		<xf:model>
			<xf:instance>
				<data xmlns="" />
			</xf:instance>
			<w2:dataCollection baseNode="map">
				<w2:dataList id="dlt_menu" baseNode="list" saveRemovedData="true" repeatNode="map"
					ev:ondataload="scwin.dlt_menu_ondataload">
					<w2:columnInfo>
						<w2:column id="MENU_CD" name="메뉴코드" dataType="text"></w2:column>
						<w2:column id="MENU_NM" name="메뉴명" dataType="text"></w2:column>
						<w2:column id="IS_USE" name="사용유무" dataType="text"></w2:column>
						<w2:column id="SRC_PATH" name="메뉴경로" dataType="text"></w2:column>
						<w2:column id="PARENT_MENU_CD" name="부모메뉴코드" dataType="text"></w2:column>
						<w2:column id="MENU_LEVEL" name="메뉴레벨" dataType="text"></w2:column>
						<w2:column id="SORT_ORDER" name="정렬순서" dataType="text"></w2:column>
						<w2:column id="PROGRAM_CD" name="프로그램코드" dataType="text"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="dlt_fav" baseNode="list" saveRemovedData="true" repeatNode="map">
					<w2:columnInfo>
						<w2:column id="MENU_NM" name="메뉴명" dataType="text"></w2:column>
						<w2:column id="SRC_PATH" name="메뉴경로" dataType="text"></w2:column>
						<w2:column id="MENU_CD" name="메뉴코드" dataType="text"></w2:column>
						<w2:column id="MENU_LEVEL" name="메뉴레벨" dataType="text" defaultValue="0"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dma_favInfo">
					<w2:keyInfo>
						<w2:key id="STATUS" name="상태" dataType="text" defaultValue="R"></w2:key>
						<w2:key id="MENU_CD" name="메뉴코드" dataType="text"></w2:key>
						<w2:key id="MENU_NM" name="메뉴명" dataType="text"></w2:key>
						<w2:key id="SRC_PATH" name="메뉴경로" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_result">
					<w2:keyInfo>
						<w2:key id="STATUS" name="name1" dataType="text"></w2:key>
						<w2:key id="ICNT" name="name2" dataType="text"></w2:key>
						<w2:key id="UCNT" name="name3" dataType="text"></w2:key>
						<w2:key id="DCNT" name="name4" dataType="text"></w2:key>
						<w2:key id="TYPE" name="name5" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_defInfo">
					<w2:keyInfo>
						<w2:key id="EMP_CD" name="사번" dataType="text"></w2:key>
						<w2:key id="EMP_NM" name="사원명" dataType="text"></w2:key>
						<w2:key id="IS_ADMIN" name="관리자여부" dataType="text"></w2:key>
						<w2:key id="IS_USE_SHORTCUT" name="단축키사용여부" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<w2:dataMap baseNode="map" id="dma_fav">
					<w2:keyInfo>
						<w2:key id="STATUS" name="상태" dataType="text" defaultValue="R"></w2:key>
						<w2:key id="MENU_CD" name="메뉴코드" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_programAuthority" saveRemovedData="true">
					<w2:columnInfo>
						<w2:column id="PROGRAM_CD" name="프로그램코드" dataType="text"></w2:column>
						<w2:column id="IS_AUTH_SELECT" name="조회권한여부" dataType="text"></w2:column>
						<w2:column id="IS_AUTH_SAVE" name="저장권한여부" dataType="text"></w2:column>
						<w2:column id="IS_AUTH_EXCEL" name="엑셀권한여부" dataType="text"></w2:column>
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList baseNode="list" repeatNode="map" id="dlt_shortcutList" saveRemovedData="true">
					<w2:columnInfo>
						<w2:column id="SHORTCUT_SEQ" name="단축키순번" dataType="text"></w2:column>
						<w2:column id="PROGRAM_CD" name="프로그램코드" dataType="text"></w2:column>
						<w2:column id="COMPLEX_KEY" name="복합키" dataType="text"></w2:column>
						<w2:column id="LAST_KEY" name="단축키" dataType="text"></w2:column>
						<w2:column id="EVENT_TYPE" name="이벤트타입" dataType="text"></w2:column>
						<w2:column id="EVENT_TARGET" name="이벤트타겟" dataType="text"></w2:column>
						<w2:column id="EVENT_DETAIL" name="이벤트설명" dataType="text"></w2:column>
						<w2:column id="EVENT_YN" name="사용여부" dataType="text"></w2:column>
						<w2:column id="EVENT_NAME" name="이벤트명" dataType="text"></w2:column>
					</w2:columnInfo>
					<w2:data use="true">
						<w2:row>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
							<COMPLEX_KEY><![CDATA[altkey]]></COMPLEX_KEY>
						</w2:row>
						<w2:row>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
							<COMPLEX_KEY><![CDATA[shiftKey]]></COMPLEX_KEY>
						</w2:row>
						<w2:row>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
							<COMPLEX_KEY><![CDATA[ctrlKey]]></COMPLEX_KEY>
						</w2:row>
						<w2:row>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
							<COMPLEX_KEY><![CDATA[altShiftKey]]></COMPLEX_KEY>
						</w2:row>
						<w2:row>
							<COMPLEX_KEY><![CDATA[ctrlAltKey]]></COMPLEX_KEY>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
						</w2:row>
						<w2:row>
							<COMPLEX_KEY><![CDATA[ctrlShiftKey]]></COMPLEX_KEY>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
						</w2:row>
						<w2:row>
							<COMPLEX_KEY><![CDATA[singleKey]]></COMPLEX_KEY>
							<PROGRAM_CD><![CDATA[TOP]]></PROGRAM_CD>
						</w2:row>
					</w2:data>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dma_shortcut">
					<w2:keyInfo>
						<w2:key id="PROGRAM_CD" name="프로그램명" dataType="text"></w2:key>
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>
			<xf:submission id="sbm_selectFavList" ref='' target='data:json,dlt_fav' action="/main/selectFavList" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg=""
				ev:submit="" ev:submitdone="" ev:submiterror="">
			</xf:submission>
			<xf:submission id="sbm_initSide" ref="" target="" action="" method="post" mediatype="application/json" encoding="UTF-8"
				instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg="" ev:submit="" ev:submitdone=""
				ev:submiterror="">
			</xf:submission>
			<xf:submission id="sbm_updateFav" ref="data:json,dma_fav" target="" action="/main/updateFav" method="post"
				mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous" processMsg=""
				ev:submit="" ev:submitdone="scwin.setupdateFavCallback" ev:submiterror="" abortTrigger="">
			</xf:submission>
		</xf:model>
		<style type="text/css"><![CDATA[
			.menu_search .w2autoComplete_input, .menu_search .w2autoComplete_label{text-indent: 10px;text-align:left;}
			.menu_search .w2autoComplete_input{height:20px;}
			.w2autoComplete .w2autoComplete_col_button{
				width: 18px;
				height: 18px;
				background-image: url(/cm/images/inc/btn_select_arrow.gif);
				background-position: left center;
			}
			
			.box_trv_menu02{}
			/* trv_menu02 */
			.trv_menu02 {overflow-x:hidden;padding-top:10px;}
			.trv_menu02 .w2treeview_group{padding: 4px 4px 4px 10px;width:auto;}
			.trv_menu02 .w2treeview_icon_navi {width:19px; height:19px; background:url(/cm/images/inc/bg_2dep_minus.png) no-repeat center center;}
			
			.trv_menu02 .w2treeview_row_child td {background:#fff;}
			.trv_menu02 .w2treeview_label {font-size:12px; font-weight:bold;color:#3b3b3b;}
			.trv_menu02 .w2treeview_label.w2treeview_select_node {color:#5bbda7;font-weight:bold;}
						
			.btn_collapseAll{border:0px;display:inline-block;width:21px;height:21px;vertical-align:middle;background:url(/cm/images/contents/btn_collapseAll.png) 0 center no-repeat;padding:0px;}
			.btn_expandAll{border:0px;display:inline-block;width:21px;height:21px;vertical-align:middle;background:url(/cm/images/contents/btn_expandAll.png) 0 center no-repeat;padding:0px;}		
		]]></style>
		<script type="text/javascript" lazy="false"><![CDATA[
	
	/**
	 * 화면 초기 로딩시 수행 스크립트
	 */
	scwin.onpageload = function() {
		console.log("[/side.xml] [onpageload()] ==> [TEST_01] [side 화면 로딩...@@@]");
	
	};
	
	scwin.onpageunload = function() {
	
	};
	
	scwin.fn_getInitData = function() {
		console.log("[/side.xml] [fn_getInitData()] ==> [TEST_01]");
		
		var searchCodeGrpOption = { id : "sbm_InitCont", action : "/main/init", 
									target : 'data:json, ["dlt_menu", "dlt_fav", "dma_defInfo", "dlt_programAuthority"]', method : "post",
									mediatype : "application/json", mode : "asynchronous", isShowMeg : false,
									submitDoneHandler : scwin.initDataCallback };
									
		com.executeSubmission_dynamic(searchCodeGrpOption);
	};

	scwin.initDataCallback = function() {
		console.log("[/side.xml] [initDataCallback()] ==> [TEST_01]");
		
		$p.parent().wfm_header.getWindow().txt_empNm.setValue(dma_defInfo.get("EMP_NM"));   	// 사용자명(자식 → 부모 호출)
		
		trv_menu.expandNode(0, true);
		gcm.menuComp = dlt_menu; //전체 공통 영역에 메뉴리스트 데이터 변수 설정.
		gcm.shortcutComp = dlt_shortcutList; //전체 공통 영역에 단축키리스트 데이터 변수 설정.
		dma_shortcut.set("PROGRAM_CD", "TOP");
		
		var isUseShortCut = dma_defInfo.get("IS_USE_SHORTCUT");
		com.isUseShortCut(isUseShortCut);

		scwin.openMenu("메인", "/cm/common/main.xml","MAIN");    // 메인 화면 호출 @@@
	};

	scwin.selectShortcutCallback = function(e) {
		var rsMsg = e.responseJSON.rsMsg;
		if (rsMsg.statusCode === "S") {
			var shortCutList = e.responseJSON.dlt_shortcutList || [];
			dlt_shortcutList.setJSON(shortCutList);
		}
	};
	
	// case 컴포넌트 사용시 case 전환할 경우 autoComplete 의 label이 사라지지 않음.
	scwin.btn_menu_onclick = function() {
		swh_lnbbox.setSelectedID("case1");
		as_tab.removeClass("mymn");
		// autoComplete 의 label이 사라지지 않아 show & hide 처리함.
		acb_search.show("");
	};
	
	// case 컴포넌트 사용시 case 전환할 경우 autoComplete 의 label이 사라지지 않음.
	scwin.btn_myMenu_onclick = function() {
		swh_lnbbox.setSelectedID("case2");
		// autoComplete 의 label이 사라지지 않아 show & hide 처리함.
		as_tab.addClass("mymn");
		acb_search.hide();
	};
	
	// 메뉴 클릭 이벤트 발생 시
	scwin.trv_menu_onclick = function() {
		// treeview 클릭 시 신규 탭 추가closeSettingPopup
		if (trv_menu.isLeaf()) { // 트리뷰에 자식노드가 없으면 실행
			var tLabel = trv_menu.getSelectedLabel(); // 선택된 노드 label값을 가져와서 변수에 담는다.
			var tCode = trv_menu.getSelectedValue(); // 선택된 노드 value값을 가져와서 변수에 담는다.
			var tURL = WebSquare.xml.getValue(trv_menu.getSelectedElement(), "SRC_PATH");
			if (tURL.trim() !== "") {
				scwin.setMenuRelation(tLabel, tURL, tCode, "Tree");
			}
		}
	}
	
	// click 최근 항목  
	scwin.btn_History_onclick = function() {
		var menuInfoStr = this.getUserData("tmpMenuInfo");
		var menuInfoArr = menuInfoStr.split("|");
		scwin.setMenuRelation(this.getValue(), menuInfoArr[1], menuInfoArr[0]);
	};

	/**
	 * 메뉴를 open할 때 관련된 기능들을 경우에 따라 처리해준다.
	 * @lastUpdate 2016.08.28
	 * @param <String> menuNm 메뉴 명
	 * @param <String> menuUrl 메뉴 URL
	 * @param <String> menuCode 메뉴 코드
	 * @param <String> skipType Tree Node 선택 여부 ("Tree" || null) 
	 * @author InswaveSystems
	 * @since 2016.08.28
	 * @example
	 * scwin.setMenuRelation("인사조회", "/tmp/tmp01.xml", "010001");
	 * scwin.setMenuRelation("인사조회", "/tmp/tmp01.xml", "010001", "Tree");
	 */
	scwin.setMenuRelation = function(menuNm, menuUrl, menuCode, skipType) {
		scwin._menuRelation = {
			"menuNm" : menuNm,
			"menuUrl" : menuUrl,
			"menuCode" : menuCode,
			"skipType" : skipType
		};
		var menuList = dlt_menu.getMatchedJSON("MENU_CD", menuCode, true);
		if (menuList && menuList.length > 0) {
			dma_shortcut.set("PROGRAM_CD", menuList[0]["PROGRAM_CD"]);
			var searchCodeGrpOption = { id : "sbm_selectShortcutList", action : "/main/selectShortcutList", 
									target : '', method : "post",
									mediatype : "application/json", mode : "asynchronous", isShowMeg : false,
									submitDoneHandler : function(e) {
										var rsMsg = e.responseJSON.rsMsg;
										if (rsMsg.statusCode == "S") {
											var searchShortcutList = e.responseJSON.dlt_shortcutList;
											for (var i = 0; i < searchShortcutList.length; i++) {
												var isExistRow = com.dataListFilter("dlt_shortcutList", 
																	"PROGRAM_CD == '"+searchShortcutList[i]["PROGRAM_CD"]+"' && COMPLEX_KEY == '"+searchShortcutList[i]["COMPLEX_KEY"]+"' && LAST_KEY == '"+searchShortcutList[i]["LAST_KEY"]+"'", false);
												if (isExistRow && isExistRow.length > 0) {
													dlt_shortcutList.setRowJSON(0, searchShortcutList[i], true);
												} else {
													var idx = dlt_shortcutList.insertRow();
													dlt_shortcutList.setRowJSON(idx, searchShortcutList[i], true);
												}
											}
											dlt_shortcutList.removeColumnFilterAll();
											dlt_shortcutList.reform();
										}

										scwin.openMenu(scwin._menuRelation["menuNm"], scwin._menuRelation["menuUrl"], scwin._menuRelation["menuCode"]);
										scwin.addHistory(scwin._menuRelation["menuNm"], scwin._menuRelation["menuUrl"], scwin._menuRelation["menuCode"]);
										gen_history.removeClass("hide");
										scwin.historyResize();
										
										if ($p.top().scwin.isMobileSize() == true) {
											$p.top().wfm_header.getWindow().scwin.toggleMenu();
										}
										
										//treeview에서 클릭한 경우는 find를 하지 않는다.
										if (!skipType || skipType !== "Tree") {
											trv_menu.findNodeByValue(scwin._menuRelation["menuCode"], true);
										}
										delete scwin._menuRelation;
									}
			};
			com.executeSubmission_dynamic(searchCodeGrpOption, {"dma_shortcut" : dma_shortcut.getJSON()});
		}
	}

	/**
	 * 최근 작업내용을 추가한다.
	 * 
	 * @date 2016.07.19
	 * @param 메뉴 명 
	 * @example
	 * scwin.addHistory(label);
	 */
	scwin.addHistory = function(menuNm, url, menuCode) {
		// 맨 마지막에 열린 화면과 동일한 화면을 다시 오픈하는 경우에는 최근작업목록에 저장하지 않도록 반환한다.
		if (gen_history.getLength() >= 1) {
			var lastMenuCode = gen_history.getChild(0, "btn_History").getUserData("tmpMenuInfo").split("|")[0];
			if (menuCode === lastMenuCode) {
				return;
			}
		}

		gen_history.insertChild(0);
		var curObj = gen_history.getChild(0, "btn_History");

		var tmpHH = $p.getFormattedDate(new Date(), "yyyy-MM-dd HH:mm");
		curObj.setValue(menuNm);
		curObj.setTitle("[" + tmpHH + "] " + menuNm);
		curObj.setUserData("tmpMenuInfo", menuCode + "|" + url);
	};

	scwin.historyResize = function() {
		var listHeight = gen_history.getSize("height");
		var swhInBoxId = swh_lnbbox.getID();
		$("#" + swhInBoxId + " .w2switch_case").animate({ "bottom" : listHeight + 44 }, 700);
		$(".box_history").animate({ "height" : listHeight + 24 }, 700);
	}
		
	/**
	 * 즐겨찾기 등록 업데이트 (추가/삭제)
	 * com.updateFav 함수는 Scope=true가 적용된 WFrame에서는 사용해서는 안됨
	 * 
	 * @date 2017.11.30
	 * @param {Array} menuCode [[메뉴코드]:[F|T]]업데이트하기 위한 페이지 정보로 메뉴코드와 추가/삭제 여부에 대한 key값. (e.g., "030001:F", "030001:T")
	 * @param {String} favStatus 적용시킬 상태 값(T, F)
	 * @memberOf scwin
	 * @author InswaveSystems
	 */
	scwin.updateFav = function(menuCode, favStatus) {
		if (favStatus == "F") {
			favStatus = "I";
		} else if (favStatus == "T") {
			favStatus = "D"
		}
		
		dma_fav.set("MENU_CD", menuCode);
		dma_fav.set("STATUS", favStatus);
		com.executeSubmission(sbm_updateFav);
	}

	scwin.getMenuNavigation = function(menuCode, rsStr) {
		var naviStr;
		if (rsStr) {
			naviStr = rsStr;
		} else {
			naviStr = "";
		}
		var menuJSON = dlt_menu.getMatchedJSON("MENU_CD", menuCode, true)[0];

		naviStr += menuJSON.MENU_NM + "%|%" + menuCode + "%|%";

		if (menuJSON) {
			if (menuJSON.PARENT_MENU_CD != "000000000") {
				return this.getMenuNavigation(menuJSON.PARENT_MENU_CD, naviStr);
			}
		}
		return naviStr;
	};
	
	/**
	 * 즐겨찾기 등록 업데이트 후 callback 함
	 *
	 * @date 2017.11.30
	 * @param {Array} menuCode [[메뉴코드]:[F|T]]업데이트하기 위한 페이지 정보로 메뉴코드와 추가/삭제 여부에 대한 key값. (e.g., "030001:F", "030001:T")
	 * @param {String} favStatus 적용시킬 상태 값(T, F)
	 * @memberOf scwin
	 * @author InswaveSystems
	 */
	scwin.setupdateFavCallback = function(e) {
		var updateResult = e.responseJSON.updateResult || "";
		var updateInfoArr = updateResult.split(":");
		var updateStatus = updateInfoArr[0];
		var updateNum = updateInfoArr[1];
		
		// 업데이트가 0건 이상일 경우 즐겨찾기 리스트 갱신
		if (WebSquare.util.getNumber(updateNum) > 0) {
			com.resultMsg(e.responseJSON.rsMsg);
			com.executeSubmission(sbm_selectFavList);
		}
	};
	
	scwin.btn_historyClear_onclick = function() {
		gen_history.removeAll();
		$p.top().scwin.historyResize();
	};
	
	scwin.historyTitle_onclick = function() {
		gen_history.toggleClass("hide");
		$p.top().scwin.historyResize();
	};
	
	scwin.dispFm_UserName = function(val){
		if(val) {
			val += "님";
		}
		return val;
	};
	
	scwin.dlt_menu_ondataload = function() {
		$p.top().scwin.setHeaderMenu();
	};
	
	//즐겨찾기 메뉴 node 클릭 시 
	scwin.btn_FavMenuNode_onclick = function() {
		var tLabel = this.getSelectedLabel(); // 선택된 노드 label값을 가져와서 변수에 담는다.
		var tCode = this.getSelectedValue(); // 선택된 노드 value값을 가져와서 변수에 담는다.
		var tURL = WebSquare.xml.getValue(this.getSelectedElement(), "SRC_PATH");
	
		$p.top().wfm_side.getWindow().scwin.setMenuRelation(tLabel, tURL, tCode, "Tree");
	};
	
	/**
	 * 메뉴 전체 확장 버튼 클릭 이벤트
	 */
	scwin.btn_menuExpandAll_onclick = function(e) {
		trv_menu.expandNode(0, true);
	};
	
	/**
	 * 메뉴 전체 축소 버튼 클릭 이벤트
	 */
	scwin.btn_menuCollapseAll_onclick = function(e) {
		trv_menu.collapseNode(0, true);
	};

	scwin.acb_search_onviewchange = function(info) {
		var tmpNode = trv_menu.findNodeByValue(info.newValue, true);
		
		if ((typeof tmpNode !== "undefined") && (tmpNode !== null)) {
			trv_menu.spanNode(tmpNode.index, true, false);
			scwin.trv_menu_onclick();
		}
	};

	/**
	 * 파라메터를 참조하여 화면을 연다. 
	 * 메뉴를 최근 작업 항목에 추가하거나 메뉴 트리를 선택하게 하려면 scwin.setMenuRelation를 사용한다.
	 * @lastUpdate 2018.04.10
	 * @param <String> menuNm 메뉴명 - 단위화면에서 해당 값으로 title을 설정한다.
	 * @param <String> url 화면 파일 경로
	 * @param <String> menuCode 메뉴코드 - DB에 저장되어있는 메뉴 코드
	 * @author InswaveSystems
	 * @since 2016.08.28
	 * @example
	 * scwin.openMenu("인사조회","/tmp/tmp01.xml","010001");
	 */
	scwin.openMenu = function(menuNm, url, menuCode, paramObj, menuType) {
		console.log("[/side.xml] [openMenu()] ==> [TEST_01] [메뉴 열기] [menuNm]"+ menuNm +"[url]"+ url +"[menuCode]"+ menuCode +"[paramObj]"+ paramObj +"[menuType]"+ menuType );

		// client에서 url 숨기기 메뉴일 경우에는 새 창으로 띄우기 적용 
		if (url == "/") {
			var url = document.location.href + "/";
			window.open(url, "", "width=1200, height=700, left=450, top=100");
		} else {
			menuCode = menuCode || "";
			var layout = $p.top().scwin.getLayoutId();
			var tmpUrl;
			var menuCodeParm = menuCode;
			var frameMode;	// "wframe", "iframe"
			var favStatus;
			var data;

			if (url.indexOf("/") !== 0) {
				url = "/" + url;
			}
			url = gcm.CONTEXT_PATH + url;

			//즐겨찾기가 추가 여부 확인하여 flag 붙임.
			if (scwin.hasFavCode(menuCode) == 0) {
				favStatus = "F";
			} else {
				favStatus = "T";
			}
			
			if ((typeof paramObj !== "undefined") && (paramObj !== null)) {
				data = paramObj;
			} else {
				data = {};
			}
			
			data.menuNm = menuNm;
			data.menuCode = menuCode;
			data.favStatus = favStatus;
			data.menuType = menuType;
			
			var _closable = true;
			if(url == "/cm/common/main.xml"){
				_closable = false;
			}
			
			var frameMode = "";
			if (layout == "T") {
				var tabObj = { closable : _closable, //main 페이지를 제외하고 탭 닫기 기능 제공
							   openAction : "select", // exist 는 기존 탭을 갱신, new 는 항상 새로, select는 동일 id 가 존재하면 선택, last: 기존 tab을 마지막 tab으로 이동후 선택
							   label : menuNm };
				
				if (com.getFrameMode()  === "wframe") {
					frameMode = "wframePreload";
				} else {
					frameMode = "iframe";
				}
				
				var contObj = {
					frameMode : frameMode,
					scope : true,
					src : url,
					alwaysDraw : false,
					title : menuNm,
					dataObject : {
						type : "json", 
						name : "param", 
						data : data
					}
				};
				var tabComp = $w.getComponentById("mf_tac_layout");
				tabComp.addTab(menuCode, tabObj, contObj);
			
				// tabObj의 openAction의 last값의 동작 특이 사항으로 선택이 되지 않은 경우 선택하는 로직 추가
				if (tabComp.getSelectedTabID() !== menuCode) {
					var tabIndex = tabComp.getTabIndex(menuCode);
					
					if (tabIndex) {
						tabComp.setSelectedTabIndex(tabIndex);
					}
					console.log("[/side.xml] [openMenu()] ==> [TEST_51] [Tab 생성] [menuCode]"+ menuCode +"[tabIndex]"+ tabIndex );
			 	}
			} else if (layout == "M") {
				if (com.getFrameMode() === "wframe") {
					frameMode = "wframe";
				} else {
					frameMode = "iframe";
				}
				
				var options = {
					title : menuNm,
					src : url,
					windowTitle : menuNm,
					windowId : menuCode,
					openAction : "existWindow",
					frameMode : frameMode,
					dataObject : { 
						type : "json", 
						name : "param", 
						data : data
					}
				}
				var wdcComp = $w.getComponentById("mf_wdc_main");
				wdcComp.createWindow(options);
			}
		}
	};

	/**
	 * 즐겨찾기 리스트에서 menuCode가 추가되어있는지 확인후 개수 반환.
	 * 없으면 == 0, 있으면 > 0 
	 * @lastUpdate 2016.08.24
	 * @param <String> menuCode
	 * @returns  <int> 존재 개수
	 * @author InswaveSystems
	 * @since 2016.08.24
	 * @example
	 * case 1. scwin.hasFavCode("030001"); return : 0 <br/>
	 * case 2. scwin.hasFavCode("030001"); return : 1
	 */
	scwin.hasFavCode = function(menuCode) {
		return (dlt_fav.getMatchedIndex("MENU_CD", menuCode, true)).length;
	}
	
	]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload" ev:onpageunload="scwin.onpageunload">
		<xf:group style="" id="subSide" class="sidebox">
			<xf:group class="as_tab" id="as_tab" style="">
				<w2:anchor class="" id="btn_menu" outerDiv="false" ev:onclick="scwin.btn_menu_onclick">
					<xf:label><![CDATA[메뉴]]></xf:label>
				</w2:anchor>
				<w2:anchor class="" id="btn_myMenu" outerDiv="false" ev:onclick="scwin.btn_myMenu_onclick">
					<xf:label><![CDATA[즐겨찾기]]></xf:label>
				</w2:anchor>
			</xf:group>
			<xf:group style="" id="after_as_tab" class="aside_tab">
				<xf:switch caseClass="" style="" id="swh_lnbbox" class="lnb">
					<xf:case style="" id="case1" class="">
						<xf:group id="" style="" class="systemsearch">
							<w2:autoComplete interactionMode="" chooseOptionValue="none" chooseOptionLabel="메뉴를 검색하세요" visibleRowNum="5"
								chooseOption="true" displayMode="label" ev:onviewchange="scwin.acb_search_onviewchange" id="acb_search" useKeywordHighlight="false"
								style="height:21px;" search="contain" allOption="" textAlign="left" submenuSize="auto" editType="select" class="menu_search"
								caseSensitive="false" noResult="first" ref="">
								<w2:choices>
									<w2:itemset nodeset="data:dlt_menu">
										<w2:label ref="MENU_NM"></w2:label>
										<w2:value ref="MENU_CD"></w2:value>
									</w2:itemset>
								</w2:choices>
							</w2:autoComplete>
						</xf:group>
						<xf:group id="" style="" class="tar mt5">
							<xf:trigger class="btn_collapseAll" id="btn_menuCollapseAll" style="" type="button" ev:onclick="scwin.btn_menuCollapseAll_onclick" title="메뉴 전체 축소">
								<xf:label></xf:label>
							</xf:trigger>
							<xf:trigger type="button" id="btn_menuExpandAll" style="" class="btn_expandAll" ev:onclick="scwin.btn_menuExpandAll_onclick" title="메뉴 전체 확장">
								<xf:label><![CDATA[]]></xf:label>
							</xf:trigger>
						</xf:group>
						<w2:treeview lineShow="" id="trv_menu" dataType="listed" tooltipGroupClass="false" style="" useDrag=""
							class="trv_menu" checkboxDisabledTrueValue="" showTreeDepth="0" ev:onlabelclick="" ev:onclick="scwin.trv_menu_onclick"
							toggleEvent="onclick">
							<w2:itemset nodeset="data:dlt_menu">
								<w2:label ref="MENU_NM"></w2:label>
								<w2:value ref="MENU_CD"></w2:value>
								<w2:depth ref="MENU_LEVEL"></w2:depth>
								<w2:folder ref=""></w2:folder>
								<w2:checkbox ref=""></w2:checkbox>
								<w2:checkboxDisabled ref=""></w2:checkboxDisabled>
								<w2:image ref=""></w2:image>
								<w2:iconImage ref=""></w2:iconImage>
								<w2:selectedImage ref=""></w2:selectedImage>
								<w2:expandedImage ref=""></w2:expandedImage>
								<w2:leafImage ref=""></w2:leafImage>
							</w2:itemset>
						</w2:treeview>
					</xf:case>
					<xf:case id="case2" style="" class="">
						<xf:group id="" class="box_trv_menu02">
							<w2:treeview id="trv_favMenu" ev:onlabelclick="" dataType="listed" showTreeDepth="" style="" lineShow="" useDrag="" tooltipGroupClass="false" ev:onclick="scwin.btn_FavMenuNode_onclick"
								toggleEvent="onclick" class="trv_menu02" checkboxDisabledTrueValue="">
								<w2:itemset nodeset="data:dlt_fav">
									<w2:label ref="MENU_NM"></w2:label>
									<w2:value ref="MENU_CD"></w2:value>
									<w2:depth ref="MENU_LEVEL"></w2:depth>
									<w2:folder ref=""></w2:folder>
									<w2:checkbox ref=""></w2:checkbox>
									<w2:checkboxDisabled ref=""></w2:checkboxDisabled>
									<w2:image ref=""></w2:image>
									<w2:iconImage ref=""></w2:iconImage>
									<w2:selectedImage ref=""></w2:selectedImage>
									<w2:expandedImage ref=""></w2:expandedImage>
									<w2:leafImage ref=""></w2:leafImage>
								</w2:itemset>
							</w2:treeview>
						</xf:group>
					</xf:case>
				</xf:switch>
				<xf:group style="" id="" class="box_history">
					<xf:group style="" id="" class="gen_list01">
						<xf:group style="" id="" class="history_titgrp">
							<w2:anchor id="historyTitle" style="" outerDiv="false" class="historyTitle" ev:onclick="scwin.historyTitle_onclick">
								<xf:label><![CDATA[최근작업]]></xf:label>
							</w2:anchor>
							<w2:anchor class="History_clear" id="btn_historyClear" outerDiv="false" style="" ev:onclick="scwin.btn_historyClear_onclick">
								<xf:label><![CDATA[]]>
								</xf:label>
							</w2:anchor>
						</xf:group>
						<w2:generator id="gen_history" style="overflow-y:auto;" class="cont">
							<xf:group style="" id="" class="">
								<w2:anchor id="btn_History" outerDiv="false" style="overflow-x:hidden;" class="link" ev:onclick="scwin.btn_History_onclick">
									<xf:label><![CDATA[]]>
									</xf:label>
								</w2:anchor>
							</xf:group>
						</w2:generator>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
	</body>
</html>